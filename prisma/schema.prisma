generator client {
  provider = "prisma-client-js"
  seed     = "prisma/seed.ts"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String    @id @default(uuid())
  avatar_url String?
  created_at DateTime  @default(now())
  email      String?   @unique
  github_id  Int       @unique
  session    Session[]
  updated_at DateTime  @updatedAt
  username   String?

  roles UserRole[]
}

model Role {
  id        String     @id @default(uuid())
  name      String     @unique
  userRoles UserRole[]
}

model UserRole {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  @@unique([userId, roleId])
  @@index([userId])
  @@index([roleId])
}

model Session {
  id            Int      @id @default(autoincrement())
  user_id       String?
  user          User?    @relation(fields: [user_id], references: [id])
  access_token  String?  @unique
  session_token String   @unique
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  ip            String?
  country       String?

  @@index([user_id])
}

model Guest {
  id      String       @id @default(uuid())
  name    String
  twitter String       @unique
  github  String?      @unique
  social  SocialLink[]
  show    Show?        @relation(fields: [show_id], references: [id])
  show_id String?

  @@index([show_id])
  @@index([name])
}

model SocialLink {
  id       String @id @default(uuid())
  link     String
  guest    Guest  @relation(fields: [guest_id], references: [id])
  guest_id String

  @@index([guest_id])
}

model Show {
  id         String   @id @default(uuid())
  number     Int
  title      String
  date       DateTime
  url        String
  guest      Guest[]
  show_notes String   @db.Text
}
