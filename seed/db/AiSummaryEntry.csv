id,time,text,description,showNote
2,02:38,This podcast is sponsored by Century,Sponsor,2
3,02:47,Asking for thoughts on Bun JS runtime,Bun JS,2
4,11:49,Adding auth header to image requests,Image auth,2
5,17:34,"Differences between tRPC, REST and GraphQL",APIs,2
6,28:15,Opportunities to be a podcast guest,Guests,2
7,32:21,Documenting intricate code and business logic,Documentation,2
8,39:01,Learning Rust as a web developer,Rust,2
9,43:54,Using a home gym equipment consistently,Home gym,2
10,44:49,Troubleshooting 404 response from WordPress API,WordPress API,2
11,00:34,Talking about headings and their usage on webpages,Headings,3
12,01:57,Headings important for accessibility,Accessibility,3
13,02:55,Headings act as landmarks for screen readers and search engine crawlers,SEO,3
14,03:31,Think of headings as outlining website content,Outline,3
15,04:27,Headings should match nested outline structure,Outline order,3
16,05:20,"Don't skip heading levels",No skipping,3
17,06:02,"Don't omit headings just for visual design",No omitting,3
18,08:41,Headings will be read by screen readers,Screen readers,3
19,09:50,Separate structure from visual styles,Separate styles,3
20,11:28,Logo should not be h1,No logo h1,3
21,13:06,Can use ARIA roles for headings,ARIA roles,3
22,13:56,Multiple h1s rare but possible,Multiple h1s,3
23,16:38,Multiple other headings are okay,Multiple headings,3
24,18:39,Use clip path for visually hidden,Clip path,3
25,19:01,Visually hide headings sparingly,Visually hide,3
26,21:21,Headings help screen reader navigation,Navigation,3
27,22:34,Headings map extensions are useful,Extensions,3
28,02:25,Taylor worked as an agency recruiter for 11 years,agency recruiting,4
29,05:01,Agency recruiting focuses on activity over productivity,agency recruiting,4
30,06:27,We are currently in a developer recession after a period of overhiring,developer recession,4
31,09:59,Developers should use social proofing like content creation to stand out,stand out,4
32,15:07,Companies are being extra picky in hiring right now,extra picky hiring,4
33,24:17,"Frame 'tell me about yourself' to relate to the interviewers","'tell me about yourself'",4
34,32:17,"In demand skills include React, Python, JavaScript, AWS",in demand skills,4
35,35:21,LinkedIn is important for being found by recruiters,LinkedIn importance,4
36,44:15,Using AI generated content comes across as inauthentic,no AI content,4
37,53:11,Taylor stays up to date by following top engineers on social media,staying up to date,4
38,00:01,Announcer intro,Intro,5
39,00:21,Introducing the State of CSS survey,CSS survey,5
40,01:21,"Kids' soccer stories",Kids soccer,5
41,02:54,No picking up rule for kids,No picking up,5
42,03:51,"How's CSS been going?",CSS going,5
43,03:59,Sponsor - Sentry,Sponsor,5
44,04:32,Guessing the top 5 CSS features,Top 5 features,5
45,07:32,More guessing top CSS features,More features,5
46,08:20,Aspect ratio usage,Aspect ratio,5
47,10:42,CSS hue rotate demos,Hue rotate,5
48,12:23,Hologram stickers,Hologram stickers,5
49,12:59,Recap of CSS quiz,CSS quiz recap,5
50,13:51,Discussing subgrid support,Subgrid support,5
51,16:33,Samsung browser support,Samsung browser,5
52,17:25,Improving caniuse website,Caniuse,5
53,18:16,Browser usage stats,Browser stats,5
54,18:43,New baseline on web.dev,Web.dev baseline,5
55,20:10,Logical CSS properties usage,Logical properties,5
56,20:54,CSS media range syntax,Media range syntax,5
57,21:14,CSS object viewbox,Object viewbox,5
58,22:53,Using object viewbox for images,Viewbox images,5
59,23:11,Avoiding jQuery with viewbox,Avoid jQuery,5
60,23:22,Anchor positioning usage,Anchor positioning,5
61,25:29,Anchor positioning polyfill issues,Anchor polyfill,5
62,26:12,Anchor positioning example,Anchor example,5
63,27:15,Using anchor positioning on Syntax site,Anchor on Syntax,5
64,28:09,CSS shape and graphics usage,Shapes and graphics,5
65,29:20,Wide gamut color browser support,Wide gamut support,5
66,30:12,Relative color usage,Relative color,5
67,31:45,Excited about CSS relative color,Relative color excited,5
68,32:33,"Safari's color support",Safari color,5
69,33:46,Downloading variable fonts,Variable fonts,5
70,36:23,Using CSS currentColor,currentColor,5
71,37:10,Using CSS scroll-snap,scroll-snap,5
72,37:19,CSS overscroll-behavior,overscroll-behavior,5
73,39:36,touch-action to prevent pinching/zooming,touch-action,5
74,40:15,Using touch-action for maps,touch-action maps,5
75,41:13,Using variable fonts,Using variable fonts,5
76,42:26,Changing variable font settings,Font settings,5
77,43:04,Variable font expression range,Expression range,5
78,43:38,Using variable fonts for text effects,Text effects,5
79,44:55,Painting with variable fonts,Painting fonts,5
80,45:09,Planning part 2 of CSS survey,Part 2 plan,5
81,45:20,Decline in CSS framework usage,Framework decline,5
82,45:26,Decline in JS framework usage,JS decline,5
83,46:05,Dark mode usage increase,Dark mode increase,5
84,46:34,Increase in accessibility features,Accessibility increase,5
85,47:08,Browsers should force colors,Browsers force color,5
86,47:34,Using forced colors media query,Forced colors media,5
87,48:13,Forced colors implementation issues,Forced colors issues,5
88,48:30,Testing accessibility with Polypane,Polypane testing,5
89,49:16,Disbelief in CSS :has() usage,CSS :has skepticism,5
90,50:04,Using @property in CSS,@property,5
91,51:01,CSS property types,Property types,5
92,52:33,Using CSS angle units,Angle units,5
93,53:06,Print CSS usage,Print CSS,5
94,53:15,Printing books with CSS,Print books CSS,5
95,53:36,Print styles for invoices,Print invoices,5
96,53:51,Plan for print CSS episode,Print CSS episode,5
97,54:05,Standardized containers,Standard containers,5
98,55:29,Beba Clip containers,Beba Clip containers,5
99,56:09,Kodiak Cakes protein oatmeal,Kodiak oatmeal,5
100,57:39,Adding protein to oatmeal,Oatmeal protein,5
101,58:25,Speaking at FITC Web Unleashed,FITC conference,5
102,59:15,Discount code for FITC conference,FITC discount,5
103,59:50,FITC talk on AI,FITC AI talk,5
104,01:00:08,Shameless plug for Syntax TikTok,Syntax TikTok,5
105,04:46,"Tori uses OS webviews, Electron bundles Chromium",Webview difference,6
106,05:26,Tori apps smaller since using OS webviews,Tori app size,6
107,06:14,macOS Tori apps use WebKit webview,macOS webview,6
108,06:37,Windows Tori apps use Edge webview,Windows webview,6
109,10:34,OS webviews lack some browser features,Webview limitations,6
110,15:10,"Tori faster, smaller; Electron more info",Tori vs Electron,6
111,16:12,"Tori better dev experience, easier setup",Tori dev experience,6
112,18:17,"Electron more mature, more solutions",Electron maturity,6
113,24:25,Tori easier than Xcode for desktop dev,Tori vs Xcode,6
114,00:00,Intro to podcast and guest,Intro,7
115,02:33,Discussion on anxiety disorders and symptoms,Anxiety disorders,7
116,04:38,Definition and criteria for generalized anxiety disorder,GAD definition,7
117,09:17,Physical symptoms of anxiety,Physical symptoms,7
118,15:08,Genetic and environmental causes of anxiety,Causes,7
119,16:02,Long-term health effects of untreated anxiety,Health effects,7
120,17:32,When does anxiety become a clinical problem,Clinical problem,7
121,21:26,Healthy ways to manage anxiety,Manage anxiety,7
122,30:23,Recognizing personal anxiety triggers,Triggers,7
123,37:57,Dealing with anxiety over changing web development landscape,Career anxiety,7
124,43:50,Making big life decisions with anxiety,Big decisions,7
125,00:02:33,Svelte compiles to vanilla JS,Svelte,8
126,00:03:21,SvelteKit for routing and server-side rendering,SvelteKit,8
127,00:05:23,Svelte is mostly just JavaScript,JS in Svelte,8
128,00:08:49,Svelte templating is like Handlebars,Templating,8
129,00:10:52,Multiple components per file in React is nice,Single file,8
130,00:17:26,Making variables reactive with $,Reactivity,8
131,00:20:17,Load data directly in Loaders,Loaders,8
132,00:23:34,Type inference from server to client,TypeScript,8
133,00:29:14,State management is easy in Svelte,State mgmt,8
134,00:32:42,Global state detached from components,Global state,8
135,00:35:10,Easy form binding with values,Form binding,8
136,00:36:21,Bind to DOM nodes and browser APIs,DOM binding,8
137,00:38:35,Helper methods for JSON responses,JSON responses,8
138,00:40:42,Svelte actions similar to Angular directives,Svelte actions,8
139,00:48:44,Layouts and slots avoid re-rendering,Layouts,8
140,00:51:13,Scoped CSS avoids naming collisions,Scoped CSS,8
141,00:53:24,Pass JS vars to CSS with CSS vars,CSS vars,8
142,00:56:11,"SvelteKit is enjoyable, mostly just JS",Enjoyable,8
143,02:33,Scott has a workout device called Tonal,Tonal workout device,9
144,03:06,Tonal has limited custom workout functionality,Limited Tonal custom workouts,9
145,04:39,Scott proxied Tonal network requests to understand the API,Proxied Tonal requests,9
146,08:47,HTTP requests contain headers with authentication info,HTTP headers contain auth,9
147,13:00,Turning on a proxy can break requests without certs,Proxies break requests without certs,9
148,16:40,Charles proxy app used for traffic inspection,Charles proxy app,9
149,17:02,Browser dev tools have reduced Charles popularity,Dev tools over Charles,9
150,22:51,Some services use cert pinning to prevent proxying,Services prevent proxying,9
151,25:25,Proxyman proxy app detects sending applications,Proxyman detects apps,9
152,32:17,Some apps use cert pinning to prevent interception,Cert pinning prevents proxying,9
153,02:31,Worked in family betting shop business,Betting shop,10
154,03:27,Wanted a job to work remotely after visiting Thailand,Remote job,10
155,04:04,Got into coding after researching ways to make money online,Coding research,10
156,04:31,Has listened to Syntax podcast for 5+ years while working,Syntax listener,10
157,09:06,Quit construction job despite good pay to focus on coding,Quit job,10
158,12:00,Interview process focused on soft skills like time management,Soft skills,10
159,18:10,Felt prepared for interviews after dedicated learning time,Interview prep,10
160,26:29,Portfolio site is stuartblockson.tech,Portfolio,10
161,28:27,Learned by watching tutorials and building own projects,Project based,10
162,38:02,Found time to learn through communication and compromising with family,Family time,10
163,44:36,Advice is to stick with learning coding despite difficulties,Stick with it,10
164,00:52,Scott and Wes discuss doing a hack week at Sentry,hack week,11
165,03:39,Scott built a real-time collaborative markdown editor,"Scott's project",11
166,19:59,Wes built a recording button to control office lighting and devices,"Wes's project",11
167,27:58,Wes used BetterTouchTool to map button presses to actions,"Wes's automation",11
168,31:15,Scott and Wes discuss home automation possibilities,home automation,11
169,35:47,Discussion of other hack week projects like games and tools,other projects,11
170,42:24,Wes and Scott lament having too many hobbies and interests,too many hobbies,11
171,45:54,"Wes's sick pick is the Better Display Mac app","Wes's pick",11
172,46:45,"Scott's sick pick is heavy duty magnets","Scott's pick",11
173,02:31,CSS Nesting overview,Overview,12
174,03:16,Ideal CSS nesting syntax,Syntax,12
175,04:15,How CSS nesting works,How it works,12
176,05:58,When to use CSS nesting,When to use,12
177,08:15,Avoid over-nesting selectors,Avoid over-nesting,12
178,09:21,Ampersand parent selector,Ampersand,12
179,12:28,Breakout selector with ampersand,Breakout,12
180,14:01,"Element selectors don't need ampersand",Elements,12
181,16:48,Sibling selectors with nesting,Siblings,12
182,18:29,Previous sibling selector,Previous sibling,12
183,19:36,:has pseudo selector with nesting,:has,12
184,21:15,Nesting media queries,Media queries,12
185,22:56,Nesting container queries,Container queries,12
186,24:16,Naming grid areas for reusability,Grid areas,12
187,25:59,Browser support via transpiling,Transpiling,12
188,27:23,Benefits over Sass,vs Sass,12
189,29:39,Lightning CSS alternative,Lightning CSS,12
190,00:04,Astro 3.0 launch and new features,Astro 3,13
191,01:22,Astro framework allows any UI framework,Astro framework,13
192,02:35,Fred is first 3-time Syntax guest,3-time guest,13
193,04:38,Overview of Astro framework,Astro overview,13
194,05:30,Astro focused on content sites,Astro content sites,13
195,08:14,Browser view transitions in Astro,View transitions,13
196,10:30,Polyfilling for browser support,Polyfilling support,13
197,18:18,Image optimization and speed improvements in Astro 3,Astro optimizations,13
198,23:25,Astro open source sustainability,Astro sustainability,13
199,26:15,Astro open source funding,Astro funding,13
200,30:27,Astro 3.0 launch week announcements,Launch week,13
201,37:36,Astro release cadence,Astro cadence,13
202,40:11,Astro powered by Vite,Powered by Vite,13
203,43:55,Challenges of open source marketing,Open source marketing,13
204,47:48,Keeping up with browser APIs,Browser APIs,13
205,48:30,Announcing the Vast Stack,Vast Stack,13
206,52:06,Factorio space expansion announcement,Factorio expansion,13
207,00:19,"Rid questions on TypeScript files, directives, and coercion",TypeScript Q&A,14
208,02:36,Scott did a dog DNA test,Dog DNA test,14
209,07:34,Discussion on soft skills for developers,Soft skills,14
210,13:41,Using conventional commits for release notes,Conventional commits,14
211,16:19,Headless CMS use cases and implementations,Headless CMS,14
212,20:48,Debugging web component performance issues,Debugging performance,14
213,23:12,Resources for understanding browser performance,Performance resources,14
214,26:01,Purpose and usage of .d.ts files in TypeScript,.d.ts files,14
215,30:35,Using the inset property for position and layout,inset property,14
216,35:12,Using AI to understand technical documentation,AI for docs,14
217,40:23,ChatGPT plugins for querying codebases,ChatGPT plugins,14
218,41:26,JavaScript type coercion with .includes(),Type coercion,14
219,44:05,"Scott and Wes's code directory organization",Code organization,14
220,49:04,Async vs defer for script loading,Async vs defer,14
221,02:33,Introduction to local scope,local scope,15
222,03:00,Global scope in JS,global scope,15
223,04:40,Local vs global scope,scope types,15
224,06:06,let/const vs var for block scoping,variable types,15
225,07:31,Block scope syntax,block syntax,15
226,11:01,Lexical vs dynamic scoping,lexical scoping,15
227,12:03,Function scope creates closure,function scope,15
228,13:11,Inner functions maintain outer scopes,inner functions,15
229,14:35,Closures allow inner functions to access outer scopes,closures,15
230,16:06,Dynamic scoping is uncommon in modern languages,dynamic scoping,15
231,17:13,Closure for private variables,private variables,15
232,17:55,Closure example with Svelte,Svelte example,15
233,19:15,Modules use closure,module closure,15
234,20:18,Closure for caching,caching,15
235,21:59,Closure for reusable logger,reusable logger,15
236,23:20,Closures used more in functional programming,functional programming,15
237,02:29,Explains how package authors rely on assumptions and guesses when shipping code,Shipping code,16
238,07:17,"Gives a history lesson on JavaScript module formats like AMD, CommonJS, UMD, etc.",Module history,16
239,12:41,Describes how package authors have to build for the lowest common denominator when publishing,Lowest denominator,16
240,16:23,The benefit of ESM is static analysis for things like tree shaking,ESM benefits,16
241,19:26,Ships around 5-10 build artifacts per package to support different environments,Build artifacts,16
242,23:17,Had to make changes for Webpack 4 compatibility since it is still widely used,Webpack 4,16
243,30:22,"Suggests a ""test my package"" service to try publishing in multiple environments",Test service,16
244,35:21,"For full correctness, ESM vs CJS builds need separate type definitions",Type definitions,16
245,43:22,Some people have switched to ESM-only but it causes pain for users not ready,ESM only,16
246,48:19,Getting source maps working properly can be finicky,Source maps,16
247,52:08,"React still doesn't ship with ESM or types after years of requests",React ESM/types,16
248,01:06:45,"Redux Toolkit 2.0 beta is available, requesting user feedback before final release",RTK beta,16
249,00:01,Introducing Syntax podcast,Intro,17
250,00:12,OG images overview,Overview,17
251,00:44,OG image sizes,Sizes,17
252,01:21,Sentry sponsors Syntax,Sponsor,17
253,02:18,Open Graph protocol overview,Open Graph,17
254,03:24,OG images defined in meta tags,Meta tags,17
255,04:21,Open Graph metadata options,Metadata,17
256,05:13,Recommended OG image sizes,Dimensions,17
257,06:11,OG image size discussion,Size debate,17
258,06:52,Testing OG images,Testing,17
259,07:54,Debugging OG images,Debugging,17
260,08:28,Basic OG image setup,Basic setup,17
261,09:41,Dynamic OG images overview,Dynamic images,17
262,11:14,Satori/Vercel for generating OG images,Satori,17
263,13:10,Satori limitations discussed,Satori limits,17
264,14:22,Cloudinary for OG images,Cloudinary,17
265,15:55,Level Up Tutorials OG image approach,Level Up approach,17
266,16:53,HTML to Canvas for OG images,HTML to Canvas,17
267,17:54,Performance of dynamic OG images,Performance,17
268,18:05,Puppeteer for screenshot OG images,Puppeteer,17
269,21:38,"Wes' Puppeteer OG image approach","Wes' approach",17
270,24:45,Caching OG images in memory,Caching images,17
271,25:50,Benefits of Puppeteer discussed,Puppeteer benefits,17
272,26:37,Considering Playwright,Playwright,17
273,28:26,Other OG image techniques,Other techniques,17
274,29:08,Canva API for OG images,Canva API,17
275,29:23,Outro,Outro,17
276,00:30,Scott and Wes discuss joining Sentry and ramping up new Syntax content.,Joined Sentry,18
277,01:48,"Scott went to a Strokes concert at Red Rocks. Wes asks how he's feeling the day after.",Strokes concert,18
278,05:53,Wes and Scott discuss landscaping projects like installing sprinklers and reseeding grass.,Landscaping,18
279,11:37,Wes talks about building a home gym in his basement with equipment imported from China.,Home gym,18
280,17:11,Scott discusses his fitness goals including getting into cardio and tracking calories.,Fitness goals,18
281,19:17,"Wes talks about rewiring an old sewing machine motor for his wife's new office.",Sewing machine,18
282,23:25,Scott considers materials like Teflon to help him learn continuous headspins.,Learning headspins,18
283,24:54,"Wes found an industrial sewing machine at a yard sale to build his wife's office.","Wife's office",18
284,26:42,Wes plans to upgrade the old sewing machine motor with a modern electronic one.,Upgrading sewing machine,18
285,29:13,Scott tries to find the right carpet cleaner for his wool rugs.,Cleaning wool rugs,18
286,31:21,Wes and Scott complain about declining Google search quality.,Declining Google quality,18
287,32:57,Scott sets up an outdoor projector and screen for movie nights.,Outdoor projector,18
288,35:51,Wes considers options like foam instead of concrete for fence posts.,Fence posts,18
289,37:49,Wes used screw piles instead of concrete for his cottage deck.,Cottage deck,18
290,40:49,Wes ran Ethernet to his cottage office and extended WiFi range.,Cottage Ethernet,18
291,43:02,Wes easily dug a shallow trench for Ethernet conduit in sandy soil.,Digging Ethernet trench,18
292,44:21,"Scott's kids enjoyed making their first circuits with an electronics kit.","Kids' electronics kit",18
293,46:24,Wes cautions about the difficulty of quality control at huge YouTube channels.,YouTube quality control,18
294,49:23,Wes rewired a broken kids ATV bought cheap on Facebook Marketplace.,Rewiring ATV,18
295,50:23,"The cheap ATV replacement wiring harness worked, until Wes blew the stator.",ATV stator blew,18
296,51:44,Wes and Scott discuss watching Formula 1 and tennis documentaries.,Documentaries,18
297,56:11,Scott competes with his wife guessing winners on reality competition shows.,Reality shows,18
298,59:50,Wes sick picks a versatile steam cleaner for household cleaning.,Steam cleaner,18
299,01:03:11,Scott sick picks a kids book called The First Cat in Space Ate Pizza.,Kids book,18
300,00:38,Introducing guest Aiden Bai and his Million.js library to make React 70% faster,Guest intro,19
301,01:38,"Aiden explains Million.js replaces React's rendering engine for optimized components",Million.js overview,19
302,02:55,Million.js optimizes the reconciliation process in React,Reconciliation optimization,19
303,03:30,Aiden explains how React rendering currently works with virtual DOM diffing,React rendering,19
304,04:35,Million.js avoids diffing the entire virtual DOM tree,Avoids diffing,19
305,05:56,Million.js follows a component model like React unlike Svelte templates,Component model,19
306,06:39,The Million.js compiler is the key to optimizing components,Compiler key,19
307,08:02,The compiler walks the AST to collect info on components,AST walking,19
308,10:42,Aiden started coding in 5th grade and is now 18 years old,Coding background,19
309,11:51,Aiden interned at Wyze and worked on their WebRTC streaming,Wyze internship,19
310,14:08,Million.js uses the JS Framework Benchmark for testing,JS Framework Benchmark,19
311,15:05,Aiden is motivated by making sites faster for lower-end devices,Motivation,19
312,18:33,Aiden gives an example of slow rendering affecting real world use cases,Slow rendering example,19
313,20:48,Wes and Aiden discuss examples of laggy text editor performance,Text editor examples,19
314,23:04,Aiden explains how VS Code can quickly render large files,VS Code rendering,19
315,25:36,The 70% faster claim is based on a reconcillation benchmark score,70% benchmark,19
316,26:29,Million.js works best for components with lots of DOM diffs like tables,Use cases,19
317,27:41,The Million.js for component optimizes looping,For component optimization,19
318,31:12,Million.js works with any bundler that supports Babel plugins,Bundler support,19
319,33:22,Million.js supports server components,Server component support,19
320,34:59,Possibility of using Sentry data to inform Million.js optimizations,Sentry integration,19
321,36:17,Aiden stays on top of issues by live streaming work sessions,Issue management,19
322,39:07,Aiden cares about developer experience and user experience,Developer and user experience,19
323,40:08,Aiden created his VCR aesthetic website without ever using a VCR,Personal website,19
324,45:41,Aiden recommends beginners build projects they find interesting,Advice for beginners,19
325,47:53,Aiden is excited about the RSC for SolidJS signals proposal,Excited about signals,19
326,00:13,Rust for JS Devs Part 2,Episode intro,20
327,00:53,Audio interface issues in Chromium,Bug discussion,20
328,02:18,Let keyword for immutable variables,Immutable variables,20
329,02:44,Mut keyword for mutable variables,Mutable variables,20
330,03:21,Const variables in Rust,Const variables,20
331,04:41,Debugging Rust apps with Sentry,Sentry ad,20
332,06:11,Signed and unsigned integer types,Integer types,20
333,07:08,Using the as keyword for type conversions,as keyword,20
334,08:33,Const variables in Rust,Const variables,20
335,09:16,Type inference in Rust,Type inference,20
336,10:47,Statically typed and strongly typed,Type system,20
337,11:11,Compile-time type checking,Type checking,20
338,11:43,Ownership and borrowing,Ownership,20
339,12:19,Type inference in Rust,Type inference,20
340,13:38,Memory management in Rust,Memory management,20
341,14:11,Pattern matching with Rust types,Pattern matching,20
342,14:59,Generics in Rust,Generics,20
343,15:53,Zero-cost abstractions,Abstractions,20
344,16:03,Basic types in JavaScript,JS types,20
345,17:09,Signed vs unsigned integers,Signed integers,20
346,18:15,Integer sizes and performance,Integer sizes,20
347,19:04,Unsigned integer range,Unsigned integers,20
348,20:27,Signed integer ranges,Signed integers,20
349,21:33,Choosing integer sizes,Choosing integers,20
350,23:08,Floating point types,Floating points,20
351,23:37,String types,Strings,20
352,24:50,Slice references with &str,&str,20
353,25:07,"Arrays, tuples and vectors",Collections,20
354,26:22,Option and Result types,Option & Result,20
355,27:09,"Structs, enums and hashmaps",Structs & enums,20
356,28:20,Vectors vs arrays,Vectors & arrays,20
357,29:51,Memory overhead of hashmaps,Hashmap perf,20
358,31:19,Benefits of Map in JavaScript,JS Map benefits,20
359,33:10,Signed vs unsigned integers,Signed integers,20
360,35:25,Type inference with generics,Generics,20
361,36:16,The as keyword,as keyword,20
362,37:57,Use cases for &str,&str examples,20
363,40:24,When to use &str vs str,str vs &str,20
364,42:35,for loops with &str,for loop &str,20
365,43:33,Debugging &str issues,Debugging &str,20
366,46:02,Defining structs in Rust,Structs,20
367,47:31,Adding methods to Rust structs,Struct methods,20
368,48:36,HashMap for dynamic structures,HashMaps,20
369,49:20,Sick picks,Picks intro,20
370,00:51,Fetch API tricks,tips,21
371,01:08,Streaming fetch results,stream,21
372,03:33,Piping streams,pipe,21
373,06:04,Download progress,progress,21
374,09:45,Cancelling streams,cancel,21
375,12:00,Testing JSON responses,test,21
376,13:28,Async/await with fetch,async,21
377,14:43,Error handling with fetch,errors,21
378,17:13,Copy as fetch in devtools,devtools,21
379,00:39,Andrew Lizowski from Descript discusses building a video editor with web tech,Descript overview,22
380,01:03,Descript focuses on making AI useful rather than just generating random stuff,Descript AI,22
381,02:36,Andrew always had a passion for building consumer facing apps and side projects,"Andrew's background",22
382,03:16,Andrew wanted to move from platform work to being hands on with products,Andrew joins Descript,22
383,04:22,Descript converts timeline editing to script editing for more natural workflow,Script editing,22
384,05:08,Descript uses Web Codecs and relies heavily on running in the browser,Browser tech stack,22
385,06:30,"Native app is Electron, Web app uses Web Codecs and streams media as needed",Streaming media,22
386,07:48,Canvas is used for video processing with Web Codecs,Canvas usage,22
387,08:28,Web Codecs allows reading video frames without Canvas,Web Codecs benefits,22
388,09:55,Web streams help with fast start up by loading only needed media,Web streams,22
389,11:24,libavjs compiled from FFmpeg handles video processing,libavjs,22
390,13:23,Riverside stores high quality video in IndexedDB,Riverside storage,22
391,14:31,IndexedDB usage is high but varies across browsers,IndexedDB limits,22
392,15:11,Recorder handles failures gracefully with backup of backups,Avoiding data loss,22
393,18:41,"Uses Radix for components like popovers, dropdowns, context menus",Radix components,22
394,19:57,State machines help manage complex components like drag and drop,Using XState,22
395,21:58,State machines prevent bugs by disallowing impossible states,Benefits of XState,22
396,24:36,Uses Tailwind for layout styling and CSS Modules for components,Styling approach,22
397,25:46,"Components don't set width or margin, handled in parent with Tailwind",Tailwind usage,22
398,26:25,"Radix is headless so components can be styled with Tailwind, CSS Modules etc",Radix flexibility,22
399,27:15,Radix helps avoid recreating accessibility functionality from scratch,Radix accessibility,22
400,31:35,"Uses Jest, React, TypeScript, Webpack, and adopted Playwright for testing",Frontend stack,22
401,32:52,Playwright helps create reliable tests by waiting until actions are possible,Playwright benefits,22
402,36:18,Critical to thoroughly test core design system components,Testing priorities,22
403,38:14,Webpack is powerful and flexible though not the most user friendly,Webpack pros/cons,22
404,39:23,"Once you learn something obtuse like Webpack, it becomes a superpower",Obtuse skills,22
405,40:30,Some AI processing had to move backend due to browser constraints,AI backend,22
406,42:17,Descript focuses on making AI enhance creators rather than replace them,AI approach,22
407,43:51,Working on using AI voices to smooth audio edits seamlessly,Audio editing,22
408,45:04,Most AI processing happens in the cloud due to GPU constraints,Cloud processing,22
409,47:18," Andrew's podcast Dev Tools FM features interviews with developer tool makers",Dev Tools FM,22
410,51:58,Uses Iosevka font optimized for horizontal space,Preferred font,22
411,53:55,"GitHub home page shows what's trending among people you follow",Staying updated,22
412,56:34,"Lexical for building text editors, from React's Dominic Gannaway",Lexical,22
413,58:27,Shad CN generates Tailwind styled Radix components,Shad CN,22
414,00:34,Syntax podcast presented by Sentry,Sentry sponsor,23
415,00:39,Sentry overview,Sentry,23
416,01:14,More on Sentry features,Sentry features,23
417,01:37,Promise.withResolvers overview,Promise resolvers,23
418,02:23,Scott back from vacation with vacation brain,Vacation brain,23
419,02:38,Where Scott went on vacation,Vacation spot,23
420,03:12,Driving on the left side of the road,Left side driving,23
421,04:08,Array.at() method overview,Array.at(),23
422,05:40,Status of immutable array methods,Array methods status,23
423,06:11,Benefits of immutable array methods,Immutable benefits,23
424,07:12,Promise.withResolvers use cases,Promise use cases,23
425,08:25,Portability benefit of Promise.withResolvers,Promise portability,23
426,09:44,Array.at() benefits over bracket syntax,Array.at benefits,23
427,11:18,Debate over Array.at() vs bracket syntax,Array.at debate,23
428,12:36,Array.at() integer conversion benefit,Array.at integers,23
429,13:00,Array.at() benefit for random array access,Array.at random,23
430,13:20,Bracket syntax backward compatibility issue,Bracket compatibility,23
431,14:42,"Why negative indexes weren't added to bracket syntax",Negative index reason,23
432,15:56,Type safety of Array.at(),Array.at typing,23
433,16:17,New immutable array methods,New array methods,23
434,17:12,Naming of new array methods,Method naming,23
435,18:11,Use case for Array.splice() immutable method,Splice use case,23
436,19:09,Benefit of immutable methods to avoid copying arrays,Immutable copying benefit,23
437,20:22,Potential for more immutable array methods,More array methods,23
438,21:26,Use Array.at() instead of mutable methods,Use Array.at,23
439,21:51,Array.fromAsync overview,Array.fromAsync,23
440,22:25,Problem Array.fromAsync solves,Array.fromAsync problem,23
441,23:00,Iterable and generator overview,Iterables and generators,23
442,24:16,Array.fromAsync use case example,fromAsync example,23
443,25:28,Benefit of Array.fromAsync over Promise.all(),fromAsync vs Promise.all,23
444,25:46,Use Array.fromAsync when array length is unknown,fromAsync unknown length,23
445,26:23,Should do deep dive on iterables and generators,Iterable generator deep dive,23
446,27:21,Array grouping overview,Array grouping,23
447,28:48,Array grouping reduces boilerplate,Grouping reduces boilerplate,23
448,30:10,Map grouping allows non-string keys,Map grouping keys,23
449,30:37,Hope array grouping makes it to standard,Hope grouping approved,23
450,31:17,Observable events overview,Observable events,23
451,32:06,Benefits of observable events,Observable benefits,23
452,32:30,Like declarative promises for events,Declarative events,23
453,32:56,Observable takeUntil example,takeUntil example,23
454,33:26,Hope observable events get approved,Approve observables,23
455,33:45,Should do observable fundamentals episode,Observable episode,23
456,35:18,Import assertions overview,Import assertions,23
457,36:29,Use import assertions for JSON now,Import JSON,23
458,37:05,Benefit over native import in bundlers,Import benefit,23
459,37:29,Potential future import types,Future imports,23
460,38:25,Question over more complex import values,Complex imports,23
461,39:25,Map.emplace() overview,Map.emplace(),23
462,39:56,Map.emplace() upsert use case,Map upsert,23
463,40:53,Map.emplace() chaining benefit,Map chaining,23
464,41:31,Progress of decorators proposal,Decorator progress,23
465,41:53,Should do decorators fundamentals episode,Decorator episode,23
466,42:43,Error handling and pattern matching proposals,Error proposals,23
467,43:49,Pattern matching overview,Pattern matching,23
468,44:52,Pattern matching similar to Rust match,Rust matching,23
469,45:02,Daniel Rosenwasser championing pattern matching,Rosenwasser champion,23
470,00:33,Overview of decorators in JavaScript,intro,24
471,01:11,"Decorators currently at stage 3, implemented in Firefox but not yet Chromium/Safari",status,24
472,02:21,Difference between TypeScript decorators and spec decorators,typescript,24
473,03:33,Potential for third version of decorators in the future,future,24
474,04:06,Extensions to decorators beyond classes,extensions,24
475,05:01,Decorators wrap/extend class functionality,wrap classes,24
476,05:36,Decorators add functionality to classes/properties/methods,add functionality,24
477,05:48,"Examples of decorator use cases - logging, reactivity",examples,24
478,06:15,Decorators reference a function,reference function,24
479,06:27,"Can decorate class, methods, getters/setters",use cases,24
480,07:01,"Use cases - logging, initialization",more examples,24
481,08:02,"Other use cases - reactivity, event listeners",more use cases,24
482,08:54,Initializing web components with decorators,web components,24
483,09:12,Decorators similar to higher order functions,higher order,24
484,10:23,Wish list: decorators for functions in React,react,24
485,11:09,How decorators are evaluated and called,evaluation,24
486,11:51,Parameters passed to decorator functions,parameters,24
487,12:06,Applying decorators syntax,syntax,24
488,13:02,Defining decorators as normal functions,normal functions,24
489,13:25,Syntax for decorating classes vs properties,class vs prop syntax,24
490,14:04,"Syntax likely required, not just convention",required syntax,24
491,14:31,Auto accessors syntactic sugar for private variables,auto accessors,24
492,15:34,Benefits of auto accessors with decorators,accessor benefits,24
493,16:10,Example of auto accessor decorator,accessor example,24
494,17:04,Benefits of getters/setters to end user,getter/setter benefits,24
495,17:37,Plan to explore classes more due to decorator power,explore classes,24
496,18:29,AngularJS vs Angular version clarification,angular versions,24
497,19:35,npm installs for AngularJS vs Angular packages,npm analytics,24
498,20:14,Many old AngularJS apps not using npm,old angular apps,24
499,21:15,AngularJS 1.2 released 10 years ago,angular history,24
500,01:33,Creator of Blitz JS,Blitz JS,25
501,02:34,Flight control aesthetic with airplane animations,Flight control,25
502,03:09,"Started pilot training at 15, got license at 17",Pilot license,25
503,04:46,Can fly plane to conferences for lunch,Flying planes,25
504,06:15,Flight control brings your own cloud to retain control,BYOC,25
505,07:37,"Reaching scale, companies move from Heroku to own infrastructure",Heroku scale limit,25
506,08:21,Future is bring your own cloud platforms,BYOC future,25
507,10:22,"Amplify fully abstracts AWS, losing control",Amplify abstraction,25
508,11:32,"Let AWS handle primitives, tools fill gaps",AWS philosophy,25
509,13:04,Code build with GitHub Actions or CircleCI,Code building,25
510,14:38,Flight control builds code or use pre-built image,Code building options,25
511,15:00,"Create infrastructure with CDN, load balancer, Fargate",Infrastructure,25
512,15:53,ECS is AWS Kubernetes,ECS,25
513,16:23,"Kubernetes handles containers, scaling, health",Kubernetes,25
514,19:40,Flight control handles preview environments,Preview environments,25
515,21:02,Full backend and database for environments,Full stack environments,25
516,23:45,Adding one-off commands like Heroku,One-off commands,25
517,24:22,Simple cron jobs by running scripts,Cron jobs,25
518,25:31,Temporal is powerful workflow orchestration,Temporal workflows,25
519,26:51,Temporal simplifies complex async processes,Temporal simplifies,25
520,27:48,Change DNS to redirect traffic for no lock-in,No lock-in,25
521,28:36,Make platform composable and pluggable,Composable platform,25
522,29:22,Heroku buildpacks define app dependencies,Buildpacks,25
523,30:27,Nix Packs improves on buildpacks,Nix Packs,25
524,31:21,Nix Packs detects dependencies automatically,Dependency detection,25
525,32:10,Nix Packs optimizes Docker caching,Docker caching,25
526,34:00,Takes time to provision infrastructure,Provisioning time,25
527,34:24,Optimizing caching improves build speeds,Caching speeds,25
528,00:12,Scott and Wes introduce themselves and the podcast episode,Introductions,26
529,00:39,Scott talks about needing a beach vacation next week to refresh his brain,Beach plans,26
530,02:33,Wes says they just had an exciting interview about email that got him excited to get back into work,Exciting email interview,26
531,02:45,"Scott likes to get back into work after vacations, and talks about ways he prepares on Sundays",Back to work routine,26
532,04:16,"Wes says he doesn't get Sunday night anxiety about going back to work since he works for himself",No Sunday anxiety,26
533,05:13,Scott details his Sunday routine to set himself up for a successful work week,Sunday routine,26
534,06:02,Scott reads a question asking if TypeScript is just fancy duct tape,TypeScript question,26
535,11:28,Scott concludes TypeScript is a helpful tool but not a perfect all-knowing system,TypeScript not perfect,26
536,12:34,Wes reads a question asking for tips on programming without back pain,Back pain tips,26
537,14:22,Scott talks about the importance of posture and provides tips for improving posture at a computer,Posture tips,26
538,18:31,Scott suggests dynamic stretching in the morning to help prevent back pain,Dynamic stretching,26
539,20:10,Wes refers back to a previous episode on stretching for more tips,Past stretching tips,26
540,20:40,Wes and Scott discuss pillows and mattresses for proper spinal alignment,Pillows for posture,26
541,23:40,"Scott notes how quickly breakdancing has professionalized now that it's going to be an Olympic sport",Breakdancing professionalization,26
542,24:03,"Scott reads a question asking why cloud services don't automatically shut off when spending limits are reached",Cloud service spending limits,26
543,25:31,Wes suggests a regular server instead of serverless to set hard limits on resource usage,Regular server option,26
544,00:41,Tweet about too many divs on Threads launch went viral,Threads div tweet,27
545,03:10,CSS classes are for scoping styles,CSS scoping,27
546,08:30,Avoids CSS specificity issues,Avoids specificity,27
547,16:14,Too many divs makes CSS targeting difficult,Too many divs,27
548,23:16,Facebook tracks everything you do,Tracks everything,27
549,00:00,Intro banter about food,Intro,28
550,00:48,Ryan Florence joins to discuss Remix,Remix intro,28
551,01:04,Wes describes setting up his new office,Office setup,28
552,01:55,Wes describes breaking his collarbone on a surf simulator,Injury story,28
553,04:10,"How Wes' broken collarbone was surgically repaired",Surgery,28
554,05:45,Scott gets queasy hearing about injuries,Scott queasy,28
555,06:50,Ryan gives an overview of Remix,Remix overview,28
556,08:54,Remix uses standard web APIs for network layer,Web APIs,28
557,11:55,Remix server actions similar to Vercel serverless functions,Server actions,28
558,13:12,Remix form submission and data revalidation,Form revalidation,28
559,15:35,React adopting similar APIs to Remix,React adopting,28
560,15:56,"History of Remix's licensing model",Licensing history,28
561,18:50,Remix licensing revenue,Licensing revenue,28
562,19:58,Venture capital interest during COVID,VC interest,28
563,00:39,Discussion on rid server side JavaScript runtimes,Runtimes,29
564,02:31,"Wes' wife loses her glasses often",Lost glasses,29
565,02:57,Glasses industry is a scam,Glasses scam,29
566,03:11,Scott gets fancy custom glasses,Fancy glasses,29
567,04:15,Overview of various server side JavaScript runtimes,Runtime overview,29
568,23:00,Web streams allow streaming data as it becomes available,Web streams,29
569,24:37,Canceling a fetch request with abort controller,Abort controller,29
570,26:19,Structured clone for deep cloning objects,Structured clone,29
571,31:22,Structured JSON maintains types when stringifying,Structured JSON,29
572,32:35,Would be nice to replace JSON with something that supports more types,Replace JSON?,29
573,38:55,"File system API useful even if some runtimes don't support it",File system API,29
574,02:33,Red Green was a hilarious Canadian TV show about duct taping everything together,Red Green show,30
575,05:13,Found a $700 snare drum for $100 at a pawn shop in Montana,Snare drum find,30
576,10:27,"Rust community seems to have standardized on using Cargo, unlike Python/JS communities",Cargo standard,30
577,14:07,"Rust documentation is very code-heavy and functional, less hand-holdy than JS",Rust docs,30
578,18:17,"Async/await in Rust is single-threaded like JavaScript, not multi-threaded",Async/await,30
579,20:45,Rust error handling via pattern matching is similar to JavaScript promise handlers,Error handling,30
580,23:38,"Wish JS imports worked like Rust's use statements, specifying package first",Use statements,30
581,29:28,"Double colon in Rust is like dot in JS, but for static methods vs instance methods",Double colon,30
582,02:20,Andres Reinman started Node Mailer 13 years ago,Node Mailer history,31
583,03:21,Node Mailer gets 2.7 million npm downloads per week,Node Mailer popularity,31
584,04:51,Email predates the web and was an early system needing to scale,Email history,31
585,05:58,"Email and web evolved separately, hard to change email now",Email vs web,31
586,08:27,IMAP uses complex Lisp syntax unlike JSON in HTTP APIs,IMAP vs HTTP,31
587,09:57,SMTP requires many back-and-forth commands vs HTTP single request,SMTP vs HTTP,31
588,10:30,Email authentication standards like SPF and DKIM emerged over time,Email auth,31
589,15:35,DMARC checks sender address and validates SPF and DKIM,DMARC,31
590,23:04,Limited CSS support in email to prevent breaking client UIs,CSS issues,31
591,27:09,Unlikely email will change much due to backward compatibility needs,Email sticking around,31
592,29:49,"Most email cost is for services/UX, not the sending itself",Email pricing,31
593,33:13,"Big email users go through provider gateways, small users scrutinized",Spam prevention,31
594,35:18,"Use major provider, contact support to resolve deliverability issues",Avoiding spam filters,31
595,36:36,Email Engine provides an API for sending and receiving email,Email Engine,31
596,38:09,Email Engine used by CRMs to sync user mailboxes,Email Engine use cases,31
597,42:23,Ethereal Email started as a way to test Nodemailer,Ethereal Email origin,31
598,45:25,Ethereal Email costs low by deleting messages quickly,Ethereal Email cost,31
599,47:31,Mac Mail useful for debugging with IMAP/SMTP logging,Mac Mail debugging,31
600,49:17,Andres has accounts with most major email providers,"Andres' accounts",31
601,50:05,Asian email providers can be tricky with custom systems,Asian email issues,31
602,00:43,Wes introduces himself and Scott,Intros,32
603,01:02,Scott spent July 4th with family outdoors,July 4th,32
604,02:33,Wes is at his cottage working,Wes at cottage,32
605,03:06,Transpiling converts newer syntax to older syntax,Transpiling,32
606,04:16,Scott explains polyfill vs ponyfill,Polyfills,32
607,05:26,Transpiling converts language to same language - JS to JS,Transpiling JS,32
608,07:08,Transpile JS features with new syntax like arrow functions,Transpile syntax,32
609,08:19,Transpile TypeScript to JavaScript,TypeScript,32
610,09:06,Be careful transpling unapproved features,Transpiling caution,32
611,12:01,Transpile CSS by replacing properties,Transpile CSS,32
612,13:12,Polyfilling CSS is harder than JS polyfilling,CSS polyfills,32
613,15:08,Polyfills add runtime functionality missing in environment,Polyfills,32
614,16:21,Polyfill array methods and promises vs transpile async/await,Polyfill examples,32
615,17:14,Prefer immutability over mutating data,Immutability,32
616,18:23,Scott advocates avoiding mutations,Avoid mutations,32
617,20:26,Polyfilling CSS can impact performance,CSS performance,32
618,21:13,Scott polyfilled popover API on Syntax site,Popover polyfill,32
619,23:22,Polyfills require minimal code,Minimal polyfills,32
620,24:58,HTML needs polyfills for details and picture tags,HTML polyfills,32
621,27:50,"Transpile with Babel, TypeScript, CoffeeScript",Transpilers,32
622,31:14,Civet is advanced alternative to CoffeeScript,Civet,32
623,32:18,JSX Transformer compiles JSX,JSX Transformer,32
624,33:04,Svelte compiles to JS,Svelte,32
625,34:13,Polyfill with Polyfill.io based on user agent,Polyfill.io,32
626,35:00,CoreJS polyfills environment differences,CoreJS,32
627,35:08,"Polyfill promises, transpile async/await",Promise polyfill,32
628,37:10,HTML5 shim was renamed to shiv,HTML5 shim/shiv,32
629,38:40,Monkey patching modifies code without merging,Monkey patching,32
630,39:37,Patch node_modules or overwrite module functions,Patching methods,32
631,41:11,Some dislike monkey patching,Patching dislike,32
632,43:37,Best to fork and modify vs monkey patch,Fork instead,32
633,44:00,Wes added method to Node console,Console patching,32
634,45:15,Patching has risks but can be useful,Patching risks,32
635,46:33,Some consider patching bad practice,Patching warnings,32
636,47:34,MooTools modified native prototypes dangerously,MooTools prototypes,32
637,49:13,Wes recommends a Miro air purifier,Miro purifier,32
638,51:28,Scott advocates cable sleeves for organization,Cable sleeves,32
639,55:13,Get cheap sleeves on AliExpress,Cheap sleeves,32
640,57:26,Wes plugs his courses,Wes courses,32
641,57:41,Scott plugs Sentry,Sentry,32
642,00:36,"Toast, flash and form validation",Feedback,33
643,02:04,WordPress contact form issue,Form feedback,33
644,04:17,"Scott's embarrassing ATM check story",ATM,33
645,05:40,Types of toast messages,Toast types,33
646,07:47,Client vs server side flash messages,Flash messages,33
647,12:20,Using icons in toasts,Toast icons,33
648,14:14,Friendly error messages for users,Error messages,33
649,19:16,Auto closing toast messages,Toast timeouts,33
650,20:27,Stacking / queuing toast messages,Stacked toasts,33
651,26:58,Form validation best practices,Form validation,33
652,29:19,Indicating form errors clearly,Form errors,33
653,31:44,Specifying the error clearly,Error specificity,33
654,34:34,Using HTML5 input validation,HTML validation,33
655,36:40,Custom form validation messages,Custom validation,33
656,00:51,Jake Champion works at Fastly.,Intro,34
657,02:33,Jake helps maintain Polyfill.io.,Jake,34
658,02:54,Polyfill.io serves browser polyfills.,Polyfill.io,34
659,04:15,Polyfill.io serves a lot of traffic.,Traffic,34
660,06:09,Fastly ComputeEdge runs WebAssembly.,ComputeEdge,34
661,07:58,Fastly has official SDKs for languages.,SDKs,34
662,09:50,WASM provides good security guarantees.,Security,34
663,14:08,Edge functions help with IoT latency.,IoT,34
664,21:37,WASI extends what WASM can do.,WASI,34
665,25:04,WebAssembly is well suited for everything.,WASM,34
666,27:54,"Browsers don't implement WASI yet.",Browsers,34
667,31:43,Nothing is inherently bad for WASM in browsers.,Limitations,34
668,37:18,Preferred stack is Fastly + Hono + Worker Tools.,Stack,34
669,40:38,Vite could be run on-demand on edge.,Vite,34
670,42:22,Fastly pre-initializes JS runtimes.,Initialization,34
671,00:20,New feedback and clarifications section,New segment,35
672,00:38,Scott terrorized by man in monster truck,Scott story,35
673,03:27,Feedback on electronics episode,Episode feedback,35
674,04:45,Corrections on CSS initial vs unset,CSS corrections,35
675,15:05,Modifying CSS variables from React,React CSS question,35
676,19:18,JavaScript notebooks,Notebooks,35
677,23:55,"Domain broker wants to buy listener's domain",Domain question,35
678,28:06,Syntax podcast transcription update,Transcriptions,35
679,29:25,Tips for learning web development as a new parent,Learning tips,35
680,36:50,How to determine fair price when selling a domain,Selling domains,35
681,00:35,Famous things not to do when asking for help,Help tips,36
682,02:00,Provide reproduction of the issue,Reproduce bug,36
683,03:28,Reproducing illuminates the problem,Debugging help,36
684,04:08,Post code so others can run it,Share code,36
685,05:21,Have reproduction ready when asking,Have repro ready,36
686,06:18,Online reproduction is most helpful,Online repro best,36
687,07:24,Be responsive in chat for quick help,Respond in chat,36
688,08:11,Where to ask for help on libraries,Where to ask,36
689,09:25,"Don't just +1 an existing issue","Don't just +1",36
690,10:32,Search for similar issues first,Search first,36
691,10:58,Be nice even when frustrated,Be nice,36
692,12:25,"You're borrowing others' code",Borrowing code,36
693,13:34,"Frustration doesn't help anyone",Frustration unhelpful,36
694,14:26,Provide lots of context,Provide context,36
695,15:03,Always be respectful,Be respectful,36
696,00:39,This episode talks Supper Club × val.town with Steve Krause,val.town,37
697,01:27,Introduction of guest Steve Krause and val.town platform,intro,37
698,03:16,Val town is social website to write and run code,val.town,37
699,05:17,val is function that runs when hit,val,37
700,08:00,val town inspired by simplicity of Twitter,twitter,37
701,09:18,val town research into programming languages,research,37
702,12:09,Val town code runs on Deno,deno,37
703,18:27,APIs automatically generated for each val,APIs,37
704,23:28,Data store limitations of val town,data,37
705,26:53,Careful approach to UI in val town,UI,37
706,32:11,Val town runs on Render servers,render,37
707,34:31,Uses Render Postgres database,postgres,37
708,37:36,Common val town use case is IoT and home automation,IoT,37
709,40:19,Pull jobs and webhooks are common use case,webhooks,37
710,44:11,"Recommended books - Seymour Papert, Brett Victor, Dynamic Land",books,37
711,47:41,Teaching kids to code - start with Scratch,teaching,37
712,52:03,Learning coding is personal - customize based on goals,personalized,37
713,57:29,Try out val town and join Discord community,community,37
714,00:20,Scott and Wes use AI to generate interview questions to ask each other,AI interview questions,38
715,02:39,Discussion on the history of Netflix launching DVD rentals before streaming,Netflix history,38
716,03:04,Question on which HTTP status code indicates a resource was not found,HTTP status codes,38
717,05:18,Question on the JavaScript function to delay execution,Delay function,38
718,06:13,Question on who first proposed CSS as a separate style sheet language,CSS history,38
719,09:13,Discussion on event driven programming in Node.js,Node.js events,38
720,10:36,Question on JavaScript memory safety and managing memory,Memory safety,38
721,13:21,Discussion on JavaScript prototype inheritance,JS inheritance,38
722,16:07,Question on closures in JavaScript,JS closures,38
723,18:22,Question on Node.js modules for asynchronous file I/O,Node.js async,38
724,21:37,Discussion on optimization techniques for HTML5 video,HTML5 video tips,38
725,23:12,Question on HTTP/2 and multiplexing,HTTP/2,38
726,31:05,Question on the value of this in arrow functions,Arrow functions,38
727,33:11,Question on JavaScript task execution order,JS task order,38
728,35:13,Discussion on history of ECMAScript versions,JS history,38
729,39:26,Discussion on abandoned ECMAScript 4 proposal,ES4 history,38
730,41:42,Discussion on loose equality and type coercion in JS,JS equality,38
731,43:51,Question on early criticisms of CSS,CSS history,38
732,02:34,AI used for finding equivalent bolts and diagnosing TV issues,AI productivity,39
733,03:02,Using AI to generate SSL certificate for home server,AI certificates,39
734,04:16,CodeAI VSCode extension by Sourcegraph,CodeAI,39
735,05:16,CodeAI optimizes and documents code,CodeAI features,39
736,09:59,Amazon CodeWhisperer VSCode extension,CodeWhisperer,39
737,10:48,GitHub Copilot Labs VSCode extension,Copilot Labs,39
738,14:32,lintrule.com reviews code using AI,lintrule.com,39
739,15:27,lintrule.com is expensive at $1 per 1000 lines changed,lintrule pricing,39
740,18:15,opencommit.com generates Git commit messages with AI,opencommit,39
741,19:36,opencommit uses your OpenAI key for a small monthly cost,opencommit cost,39
742,21:15,"Replit Ghostwriter is Replit's Copilot alternative",Ghostwriter,39
743,22:17,Replit released an open source AI model called Anthropic,Anthropic model,39
744,24:05,Codegeeks is an open source Copilot alternative,Codegeeks,39
745,26:37,Codeum AI is a Copilot alternative with on-premise option,Codeum AI,39
746,27:50,Codeum AI allows avoiding uploading code snippets to third parties,Codeum privacy,39
747,31:12,TabNine focuses on enterprise privacy-compliant AI coding,TabNine,39
748,32:26,ChatGPT can be prompted to provide formatted code and data,ChatGPT prompts,39
749,34:38,"AI coding tools help accomplish tasks but don't write full code",AI limitations,39
750,35:08,Always validate AI-generated code before shipping,Validate AI code,39
751,00:17,Intro to Colby Fayock,Introduction,40
752,01:24,"Colby's background in contracting and teaching",Background,40
753,02:01,Overview of Cloudinary as an image/video platform,Cloudinary,40
754,02:37,"Cloudinary's URL based image transformations",Transformations,40
755,03:50,"Colby's personal brand Space Jellyfish",Space Jellyfish,40
756,05:14,"Cloudinary's AI image filling feature",AI fill,40
757,06:31,Cloudinary using Stable Diffusion for image generation,Stable Diffusion,40
758,08:58,Using AI to create custom video intros and outros,AI video,40
759,10:27,"Cloudinary's stitching API to combine videos",Stitching API,40
760,13:17,"Cloudinary's auto-tagging for media searchability",Auto-tagging,40
761,15:50,Most impressive Cloudinary AI feature is generative fill,Generative fill,40
762,17:10,"Cloudinary's background removal feature",Background removal,40
763,19:52,Generating tweets from images using Cloudinary APIs,Image tweets,40
764,22:32,Creating Spotify Wrapped style yearly recap videos,Recap videos,40
765,26:21,Inconsistencies in AI responses over time,AI inconsistencies,40
766,28:19,Controlling randomness in AI responses,AI randomness,40
767,31:07,The unpick library for standardizing image components,Unpick,40
768,34:36,Keeping examples and documentation up-to-date,Documentation,40
769,36:31,Power of URL-based image transformations,URL transformations,40
770,38:45,"Colby's video creation process and tools",Video process,40
771,41:20,"Colby's video recording setup",Recording setup,40
772,45:12,"Colby's dev environment and staying up to date",Dev environment,40
773,47:18,Advice for new parents on sleep deprivation ,Parenting advice,40
774,47:52,Advice for beginners to keep building projects,Beginner advice,40
775,49:44,Creating evergreen tutorial content,Evergreen content,40
776,51:34,Most popular YouTube videos,Popular videos,40
777,02:33,Wes talks about hailstorm damage in Colorado,Hailstorms,41
778,03:27,Wes discusses the Tailwind Connect conference in Cambridge,Tailwind conference,41
779,05:39,Wes explains the struggle between functionality and customization with built-in browser components,Browser components,41
780,07:41,Wes gives an example of customizing a country dropdown component,Country dropdown,41
781,09:16,Wes demonstrates accessibility features of dropdowns using VoiceOver,Accessibility,41
782,10:49,Wes explains headless components provide accessibility for free,Accessibility,41
783,11:35,Wes introduces Downshift as an example of a headless dropdown component,Downshift,41
784,19:23,Wes mentions Parcel is building headless components,Parcel components,41
785,20:11,"Wes talks about Tanner Linsley's TanStack table and virtualization libraries",TanStack,41
786,22:04,Scott notes the benefit of TanStack being framework-agnostic,Framework-agnostic,41
787,23:00,Wes says Headless UI provides unstyled components,Headless UI,41
788,25:08,"Wes and Scott discuss why headless components aren't built as web components",Web components,41
789,26:32,Wes introduces the Shoelace web component library,Shoelace,41
790,32:31,Wes explains using WordPress headlessly,Headless WordPress,41
791,34:11,Wes talks about running headless Chrome in serverless functions,Serverless headless,41
792,36:18,Scott and Wes joke about ridiculous browser sizes,Browser sizes,41
793,39:02,Scott sick picks the Hacker News Recap podcast,Hacker News podcast,41
794,41:38,"Wes and Scott listen to Spotify's AI-generated playlists",AI DJ,41
795,00:27,Introducing Lightning CSS,Intro,42
796,01:01,Lightning CSS overview,Overview,42
797,01:24,Lightning CSS features,Features,42
798,01:59,Lightning CSS vs Esbuild,Vs Esbuild,42
799,02:36,Why Lightning CSS is useful,Useful,42
800,03:03,Parcel background,Parcel,42
801,03:30,Replacing PostCSS with Lightning CSS,PostCSS,42
802,04:17,Lightning CSS performance,Performance,42
803,04:47,Lightning CSS efficiency,Efficiency,42
804,05:08,Color spaces in Lightning CSS,Color spaces,42
805,06:18,Improved color quality discussion,Color quality,42
806,07:27,CSS nesting in Lightning CSS,Nesting,42
807,07:46,CSS nesting limitations,Nesting limits,42
808,08:05,Future CSS nesting changes,Future nesting,42
809,08:35,Using PostCSS plugins with Lightning CSS,PostCSS plugins,42
810,09:00,Browserlist support,Browserlist,42
811,09:52,Vendor prefix handling,Vendor prefixes,42
812,10:23,Opera prefix discussion,Opera prefixes,42
813,10:40,Vendor prefix requirements,Vendor prefixes,42
814,10:54,Custom media queries,Custom media queries,42
815,11:42,Media query range support,Media query range,42
816,12:16,Media query range browser support,Range support,42
817,12:28,Transpiling frustration,Transpiling,42
818,13:06,Browser support complaints,Complaints,42
819,13:23,Transpilable features value,Transpilable value,42
820,14:36,Excitement about new CSS features,CSS excitement,42
821,15:08,Relative color functions,Relative colors,42
822,15:19,Relative color limitations,Relative color limits,42
823,15:28,Transpiling variables,Transpiling variables,42
824,15:56,CSS modules support,CSS modules,42
825,16:07,CSS modules adoption,CSS modules adoption,42
826,16:17,Single file component styles,SFC styles,42
827,16:48,CSS inlining,CSS inlining,42
828,17:37,CSS imports,CSS imports,42
829,18:02,CSS bundling,CSS bundling,42
830,18:42,Abandoned APIs episode idea,Abandoned APIs,42
831,19:36,Unused browser APIs,Unused APIs,42
832,19:48,Chrome flag usage,Chrome flags,42
833,20:06,Jonathan Neill tweet on attribute CSS,Attribute CSS,42
834,20:26,Conditional imports,Conditional imports,42
835,20:41,Conditional import implementation,Conditional imports implementation,42
836,21:24,Lightning CSS compilation,Compilation,42
837,21:37,Live CSS compilation issues,Live compilation issues,42
838,21:49,CSS layers,CSS layers,42
839,22:27,CSS layers overview,Layers overview,42
840,23:08,CSS layers use cases,Layers use cases,42
841,23:41,CSS specificity issues,Specificity issues,42
842,23:51,CSS selector discussion,CSS selectors,42
843,24:17,Merging CSS rules,Merging rules,42
844,24:58,Future CSS functions,Future functions,42
845,25:02,Text decoration thickness,Text decoration thickness,42
846,25:21,Text decoration tips,Text decoration tips,42
847,25:29,Text decoration browser support,Text decoration support,42
848,26:07,Text decoration units,Text decoration units,42
849,26:21,Text decoration recommendations,Text decoration recommendations,42
850,27:14,Lightning CSS summary,Summary,42
851,27:33,Lightning CSS in Vite,In Vite,42
852,28:50,Devin Abbott guest appearance,Devin Abbott,42
853,02:33,Guest built Flask and other popular Python libraries,Guest background,43
854,04:32,Queues allow postponing work by putting it into a queue to be processed later,Queues intro,43
855,05:18,Queues help distribute work to workers and prevent request handler overload,Queue benefits,43
856,06:15,Queues can run on separate infrastructure but often run on same servers,Queue infrastructure,43
857,07:11,Python Celery runs queued functions as tasks on the same servers,Python queues,43
858,08:41,Kafka queues require planning for scaling while RabbitMQ queues autoscale,Queue scaling,43
859,10:17,Amazon queues transactions to smooth workload,Amazon queues,43
860,13:34,Queues help retry failed external requests and smooth workload,Queue benefits,43
861,18:44,Queue design depends on the specific problem to solve,Queue design,43
862,20:22,Need to add queues when one queue overloads next queue downstream,Add queues,43
863,22:46,Backpressure throttles incoming load to prevent downstream overload,Backpressure,43
864,27:09,"Sentry processes 300,000 requests per second, filtering with SDK backpressure",Sentry scale,43
865,30:34,"Sentry queues route events by type - errors go to Kafka, metrics aggregated",Sentry queues,43
866,36:10,Sentry lacks visibility into complex queues and data flow,Sentry queues,43
867,37:25,"Mobile SDKs are distributed queues outside Sentry's control",Mobile SDKs,43
868,40:13,Sentry lied to SDKs about quota to clear distributed queue backlog,Clear queues,43
869,44:25,Python leads in AI due to existing data science libraries,Python & AI,43
870,47:56,JavaScript ecosystem has high churn increasing SDK maintenance,JS ecosystem,43
871,51:55,Open source motivation follows project adoption more than passion,Open source,43
872,53:55,"Ride hype cycles - master one thing until it's back in favor again",Learning advice,43
873,57:15,Python packaging is fragmented without clear standards,Python packaging,43
874,00:33,Scott went to the dentist early in the morning,dentist appt,44
875,01:57,Wes and Scott dread going to the dentist,hate dentist,44
876,02:43,Scott started tracking his flossing to improve his dental hygiene,floss tracking,44
877,03:04,Wes asks Scott what an ORM (Object Relational Mapper) is,what is orm,44
878,03:20,Scott explains ORM is a translation layer between a database and application code,orm explanation,44
879,04:35,Scott explains he removed Mongoose but ended up rebuilding a mini ORM,mini orm,44
880,05:01,Wes says he often removes packages but ends up rebuilding them,removing packages,44
881,05:28,Scott has a tendency to want to build things himself instead of using existing packages,build vs reuse,44
882,06:08,Wes says ORMs allow writing the same database code across different database types,orm portability,44
883,06:45,Wes guesses the first ORM was developed in 1971 by IBM,first orm,44
884,07:01,Scott says one of the earliest ORMs was in the 1960s by SDC,early orm,44
885,08:15,Wes used to write SQL Server queries but now prefers ORMs,prefer orm,44
886,09:07,"Scott isn't confident writing raw SQL queries without an ORM",avoid raw sql,44
887,09:15,Scott says ORMs provide abstraction and ease of use for databases,orm abstraction,44
888,10:16,Scott had difficulty getting Mongoose schemas to integrate with GraphQL types,mongo graphql,44
889,11:09,"Wes asks if ORM schemas are written in the ORM's language",orm schemas,44
890,11:11,Scott explains models define the data and generate schemas,models to schemas,44
891,12:26,"Scott finds blurred lines between models, schemas, and other ORM concepts",model schema blurred,44
892,12:37,Scott says you model your data to fit the database with an ORM,data modeling,44
893,13:26,Wes explains some ORMs have validation beyond basic types,orm validation,44
894,14:40,"Scott likes Prisma's ability to lint schemas for database compatibility",prisma linting,44
895,15:34,Wes says sharing schema types with GraphQL avoids duplication,shared types,44
896,16:19,Scott warns about creating deeply nested GraphQL schemas without DB understanding,graphql nested schemas,44
897,17:23,Scott ran into issues modeling roles as an iterable primitive in MySQL,mysql iterable primitive,44
898,18:12,"Wes says WordPress doesn't use raw SQL queries",wordpress orm,44
899,18:35,Scott says Laravel has the Eloquent ORM,laravel orm,44
900,18:40,Scott says mature systems tend to have good ORMs,mature orm,44
901,19:24,Wes likes that Prisma generates types from the schema,prisma types,44
902,20:14,"Scott had difficulty sharing types between Mongoose, GraphQL, and UI",sharing types difficulty,44
903,20:45,Scott now shares Prisma types between server and client,sharing prisma types,44
904,22:33,Scott wonders if typing subcomponents differently is ever beneficial,subcomponent types,44
905,24:41,Scott explains Prisma strengths like schema linting and nice docs,prisma strengths,44
906,25:24,"Wes explains Drizzle's PlanetScale implementation",drizzle planetscale,44
907,26:19,Wes says many solutions will suffice for smaller use cases,simpler use cases,44
908,27:15,"Scott clarifies Prisma has type validation, not custom validation",prisma validation,44
909,28:47,"Wes says most databases today are MySQL, Postgres or MongoDB",common databases,44
910,29:17,Wes uses SQLite and Sequelize for quick demos without installations,sqlite demos,44
911,30:36,Wes sometimes uses SQLite instead of JSON for more control,sqlite vs json,44
912,31:29,"Scott hasn't used Sequelize but it's popular and often updated",sequelize popular,44
913,32:30,Scott and Wes joke about unclear pronunciation in tech,pronunciation jokes,44
914,33:40,Wes says non-native English speakers speak better than them,non-native speakers,44
915,34:01,"Scott doesn't like tools that require pronunciation guides",dislikes pronunciation guides,44
916,35:51,"Wes is intrigued by Drizzle's serverless and inferencing capabilities",drizzle intrigued,44
917,37:11,Wes discusses building standards-based instead of Node specific,standards vs node,44
918,37:49,Scott says Figma had massive scale on a single Postgres instance,figma postgres,44
919,38:18,Wes suggests a show on supporting multiple JavaScript environments,javascript environments,44
920,39:27,Scott prefers Mongo aggregations to Mongoose populate,mongo aggregations,44
921,40:41,Wes finds Mongo aggregations very difficult compared to ORMs,mongo difficult,44
922,41:50,Scott regrets not using migrations for database changes,regret no migrations,44
923,43:26,Scott has run into issues debugging vague Prisma errors,prisma debugging,44
924,44:43,"Wes keeps researching Drizzle's capabilities",researching drizzle,44
925,45:53,Scott introduces topic of database schemas,db schemas,44
926,46:50,Wes looks up the difference between schema and model,schema vs model,44
927,47:29,Scott says models define data structure and schemas represent it,models schemas,44
928,48:18,Scott explains migrations keep the database updated over time,db migrations,44
929,49:02,Scott has never looked at how Prisma handles migrations,prisma migrations,44
930,49:18,Wes says Prisma generates SQL migration files,prisma sql migrations,44
931,50:36,Wes has used virtual fields to transition old properties,virtual fields,44
932,51:14,Wes says some ORMs support middleware for hooks and events,orm middleware,44
933,52:03,Scott asks listeners for their preferred ORMs and why,favorite orms,44
934,52:32,Wes mentions new show I Think You Should Leave,new show,44
935,53:49,Scott loves I Think You Should Leave though his wife hates it,loves new show,44
936,54:58,"Wes says show humor is hit or miss if you don't get it",show humor,44
937,55:20,Scott praises brilliance and comedy of I Think You Should Leave,praises show,44
938,55:55,Wes suggests Wise cards for easy travel currency conversion,wise cards,44
939,57:14,Scott jokes about the number of companies with owl logos,owl logos,44
940,57:30,Wes jokes about racing to get a pull request in first,racing prs,44
941,59:02,"Scott says the show's humor is specific and not for everyone",specific humor,44
942,00:33,Google Domains is closing,Registrar closing,45
943,01:03,Discussing domain registrar features,Registrar features,45
944,12:07,Overview of top domain registrars,Registrars overview,45
945,13:18,Namecheap has fast support,Namecheap support,45
946,18:50,GoDaddy has poor UX,GoDaddy UX,45
947,23:19,Hover has phone support,Hover phone support,45
948,24:26,Name.com has old UI,Name.com UI,45
949,27:00,Cloudflare has cheap domains,Cloudflare pricing,45
950,28:13,How to transfer domains,Transfer domains,45
951,33:08,Domain name search tools,Domain search,45
952,38:17,Best registrar recommendations,Registrar recs,45
953,41:29,Overview of top registrars,Top registrars,45
954,01:14,"Dustin introduces himself and talks about leading team at Gatsby, now at Netlify managing Valhalla/Netlify Connect",Dustin intro,46
955,02:18,Dustin has a 4 month old baby,New dad,46
956,02:46,"Valhalla comes directly from Gatsby, not Netlify originally",Valhalla origin,46
957,04:10,"GraphQL useful as unified data layer, especially for large companies",GraphQL benefits,46
958,05:07,Building apps with multiple CMS data sources is very challenging,CMS data challenges,46
959,08:17,Can establish relationships between different data sources,Data relationships,46
960,09:39,"Webhooks used for updating data on changes, encourages teams to use them",Webhook updates,46
961,10:40,User authentication not supported at Valhalla launch,No auth support,46
962,13:40,Valhalla will have paid tiers but plans to open source SDK,Open source SDK,46
963,18:04,"Won't prescribe GraphQL client initially, can use what you want",Any GraphQL client,46
964,26:09,Currently read-only data but want to expand to mutations in future,Future mutations,46
965,31:16,Low-code solutions are the future middle ground between pure dev and no-code,Low code future,46
966,36:32,"React server components feel like a hard fork, upgrade is challenging",React server components,46
967,43:35,"Gatsby focusing on performance, integrating with CMS data sources",Gatsby plans,46
968,50:06,Dustin uses Dracula Pro theme and Dank Mono font in VS Code,Editor setup,46
969,51:12,"For new project, Dustin would use React and the web",New project stack,46
970,54:04,"Dustin's home theater setup uses Ubuntu on old Intel NUC",Home theater setup,46
971,00:11,Potluck of questions,Potluck,47
972,00:20,"Rate limiting, enums, authentication",Questions,47
973,00:29,Edge functions,Edge functions,47
974,01:14,Computer issues,Issues,47
975,01:56,JS Nation conference,Conference,47
976,02:38,Render Atlanta conference,Conference,47
977,04:01,Consuming rate limited APIs,Rate limiting,47
978,04:33,Exceeding rate limits,Rate limits,47
979,04:55,OpenAI API rate limits,API limits,47
980,02:05,AsyncLocalStorage added in Node 13,Node 13,48
981,02:13,Gaining momentum due to Async Context API proposal,Async Context API,48
982,02:38,Allows accessing context down call stack without passing refs,Access context,48
983,03:26,Example of passing context through nested functions,Nested context,48
984,04:06,Current way is passing references down call stack,Passing refs,48
985,04:25,"Why frameworks don't use it yet for middleware",Middleware usage,48
986,05:00,Examples in SvelteKit and React,Examples,48
987,06:30,Use case: populating user from database in middleware,Middleware use case,48
988,07:02,Alternative is passing context object with issues,Context object issues,48
989,08:46,"Not in other runtimes yet, needs JS proposal",JS proposal needed,48
990,10:18,Next.js uses it for cookies and headers,Next.js usage,48
991,10:46,"Use cases: request IDs, user prefs, logging",Use cases,48
992,11:39,Example of logging show numbers without passing refs,Logging example,48
993,12:59,"Can store anything - objects, maps, sets, timers",Store anything,48
994,13:33,Useful for promise chaining instead of passing data,Promise chaining,48
995,14:22,Downside is hard to test code relying on external data,Testing downside,48
996,15:00,Can also cause memory leaks if not cleaned up properly,Memory leaks,48
997,15:55,Useful for browser events instead of passing data around,Browser events,48
998,16:43,Expect best practices to emerge over next year,Emerging practices,48
999,00:26,Intro to Syntax Supper Club podcast,Intro,49
1000,00:50,Guest Nick Hehr talks JavaScript on microcontrollers,Guest intro,49
1001,02:02,Guest is a web developer who got into microcontrollers as a hobby,Guest background,49
1002,04:14,Overview of running JavaScript on devices vs Linux computers,JS environments,49
1003,06:34,"Guest's first microcontroller project was running a Node server on a device",First project,49
1004,08:59,Guest started maintaining open source microcontroller projects,Open source,49
1005,11:54,Challenges of running latest Node.js on constrained devices,Node challenges,49
1006,13:27,Overview of Raspberry Pi Pico microcontroller,Pico intro,49
1007,15:04,Where to buy microcontroller boards,Buying boards,49
1008,16:23,Different versions of ESP32 boards,ESP32 versions,49
1009,18:16,Excess JavaScript engine targets 99% of JS spec,Excess engine,49
1010,20:07,Excess adds web-like APIs like web workers,Excess APIs,49
1011,21:30,Excess provides custom APIs instead of browser APIs,Excess browser APIs,49
1012,22:39,Standard for JS on embedded - ECMA-419,ECMA-419 standard,49
1013,24:03,Networking APIs being added to standard,Networking APIs,49
1014,25:45,Tool to simplify getting started with Excess,Excess CLI tool,49
1015,26:31,Overview of Arduino boards and platform,Arduino intro,49
1016,27:19,Library to simplify hardware APIs,Hardware library,49
1017,28:28,Fetch API implemented for microcontrollers,Fetch API,49
1018,30:16,CLI tool to setup Excess environment,Setup CLI,49
1019,32:13,Challenges around getting started as a beginner,Beginner challenges,49
1020,00:23,Talking about electronics for beginners,Electronics,50
1021,01:31,Scott is interested in learning more about electronics,Scott electronics,50
1022,02:17,Tip for using AirTags to track kids,AirTag kids,50
1023,04:02,Back to electronics discussion,Electronics,50
1024,05:10,"Wes' LED mirror project",LED mirror,50
1025,09:54,"Wes' Bluetooth boombox project",Bluetooth boombox,50
1026,12:04,"Wes' project fixing a broken dryer",Dryer project,50
1027,14:06,"Wes hacked kids' electric cars",Kids cars,50
1028,15:13,Wes converted a massage gun to battery power,Massage gun,50
1029,16:26,Overview of microcontrollers,Microcontrollers,50
1030,20:05,ESP32 microcontroller recommendation,ESP32,50
1031,20:27,Overview of DC and AC voltage,Voltage,50
1032,25:51,Overview of amperage and watts,Amps and watts,50
1033,32:22,Overview of GPIO pins,GPIO,50
1034,36:32,Overview of resistors,Resistors,50
1035,41:01,Overview of sensors,Sensors,50
1036,46:49,Overview of relays,Relays,50
1037,48:37,Coding microcontrollers,Coding,50
1038,50:19,Microcontroller coding resources,Resources,50
1039,51:16,Rust support for microcontrollers,Rust,50
1040,00:40,GitHub Projects overview,Projects,51
1041,02:26,Kids using adult lingo,Kids lingo,51
1042,04:13,GitHub Projects benefits,Projects benefits,51
1043,06:34,GitHub Projects views,Project views,51
1044,08:44,GitHub Projects like Notion,Like Notion,51
1045,10:23,Gantt charts,Gantt,51
1046,12:00,Using GitHub milestones,Milestones,51
1047,14:31,Using GitHub labels,Labels,51
1048,18:58,GitHub discussions,Discussions,51
1049,19:25,GitHub wiki,Wiki,51
1050,20:01,GitHub actions,Actions,51
1051,02:30,"Joined OpenAI 8 months ago, started plugins project",Background,52
1052,03:25,Studied circle packing in math PhD,Math background,52
1053,06:26,Plugins allow adding integrations to ChatGPT,Plugins,52
1054,09:29,Models trained on predicting next word,Model training,52
1055,12:32,"Models don't learn what people like without human feedback",Human feedback,52
1056,16:39,Mostly Python and React for development,Languages used,52
1057,20:05,Team working hard when ChatGPT blew up,ChatGPT launch,52
1058,25:49,Math teaches thinking in abstractions like programming,Math and programming,52
1059,31:30,"Future could be crafts that don't scale like gardening",Future of work,52
1060,37:35,Higher level abstractions still need lower level code,Abstractions,52
1061,41:40,Randomness in outputs is a feature,Output randomness,52
1062,43:13,AGI is AI better than humans at all tasks,AGI definition,52
1063,00:33,Why Svelte moved from TypeScript to JSDoc,Svelte,53
1064,03:00,JSDoc provides full typing like TypeScript,Typing,53
1065,05:40,JSDoc can generate documentation,Docs,53
1066,08:11,JSDoc has no compile step,Compile,53
1067,09:14,JSDoc works in non-TS projects,Non-TS,53
1068,13:21,JSDoc can type thrown errors,Throws,53
1069,17:18,JSDoc supports inline examples,Examples,53
1070,20:16,JSDoc supports more descriptive comments,Comments,53
1071,22:02,JSDoc supports all TS features,TS Features,53
1072,26:08,Wes & Scott will keep using TS,Keep TS,53
1073,31:50,Use JSDoc with TS for more docs,JSDoc on TS,53
1074,03:45,Display none hides element and screen readers,Display none,54
1075,03:52,Visibility hidden hides visually but not screen readers,Visibility hidden,54
1076,04:12,Aria-hidden true hides from screen readers,Aria-hidden,54
1077,04:32,Opacity 0 visually hides like visibility hidden,Opacity 0,54
1078,05:34,Pointer events none prevents mouse interaction,Pointer events,54
1079,05:49,User select none prevents text selection,User select,54
1080,10:56,Font size 0 on parent removes inline element ghost space,Font size 0,54
1081,11:32,None explicitly states no value rather than 0 value,None vs 0,54
1082,18:18,Collapsing margins act as 0 margin,Collapsing margins,54
1083,18:36,0 versus 0 units can break some CSS properties,0 units,54
1084,23:03,"HSLA needs 0% unit, can't take 0",HSLA 0%,54
1085,24:01,"Unset inherits, initial is default browser style",Unset vs initial,54
1086,27:55,"HTML no, none, false attributes need no value",HTML attributes,54
1087,02:39,"GitHub Next started as the Office of the CTO to explore risky, long-term technology bets for GitHub.",GitHub Next origin,55
1088,03:44,"GitHub Next explores technologies that engineering teams avoid due to risk, like AI that can write code.",GitHub Next purpose,55
1089,06:50,Copilot started small but exploded in popularity when released publicly in June 2021.,"Copilot's growth",55
1090,09:04,The team was initially skeptical Copilot would be useful but were convinced after solving problems like reliability and latency.,Solving Copilot issues,55
1091,11:00,Larger AI models enable conversation-like persistence of context and information.,Larger model benefits,55
1092,13:21,"Fast response time was critical for Copilot adoption as people wouldn't wait for suggestions.",Copilot latency,55
1093,18:05,Code structuring like hoisting is done to prompt models effectively.,Prompt crafting tricks,55
1094,21:11,"Prompt crafting is an art with trial and error, not pure deterministic programming.",Prompt crafting challenges,55
1095,23:15,Smaller models can be better for some uses like Copilot where latency is critical.,Small model benefits,55
1096,26:33,The team tries not to take negative feedback personally but sees it as input to improve.,Addressing feedback,55
1097,30:00,New VS Code APIs were needed to enable Copilot features like ghost text.,VS Code API needs,55
1098,33:11,"AI will augment developers, not replace them, by assisting on tedious tasks.","AI's future role",55
1099,37:37,Copilot for pull requests summarizes changes and generates descriptions to help collaboration.,Copilot pull requests,55
1100,39:02,Reliability remains a challenge for more ambitious AI tasks like full PR generation.,AI reliability challenges,55
1101,41:53,Workflow improvements may require rethinking existing software practices in light of new AI capabilities.,Rethinking software practices,55
1102,45:23,GitHub Next establishes trust and delivers value to bring other teams on board with their ideas.,Establishing trust,55
1103,49:31,"They use a variety of keyboards, themes and terminals but value speed and usability.",Preferred tools,55
1104,53:34,They highlighted accessibility improvements and collaborative editing as areas for AI assistance.,AI opportunities,55
1105,57:48,Many are innovating in CLI AI space and sharing ideas openly.,CLI AI innovations,55
1106,00:17,Wes and Scott discuss website infrastructure,Website,56
1107,02:53,Scott switched to light mode,Light mode,56
1108,03:58,Website is built with SvelteKit,SvelteKit,56
1109,08:59,Using Prisma and PlanetScale for the database,Database,56
1110,17:04,Using PostCSS and import glob plugin,PostCSS,56
1111,18:27,Built custom OAuth authentication with GitHub,Auth,56
1112,23:15,Wes explains transcription process,Transcription,56
1113,00:28,JavaScript executables discussion,Executables,57
1114,01:10,What JavaScript executables are,Defining,57
1115,02:48,Use cases for JavaScript executables,Use cases,57
1116,04:40,Running JavaScript on non-JS servers,Non-JS servers,57
1117,05:44,Reaching Node from other languages,Reaching Node,57
1118,08:26,Criticisms and defense of executable size,Size defense,57
1119,10:22,Executable size comparisons to other languages,Size comparisons,57
1120,12:20,Potential for smaller JavaScript executables,Shrinking size,57
1121,13:46,Dino and Bun executables,Other runtimes,57
1122,02:33,Bramus Van Damme works at Google on the CSS team,Bramus intro,58
1123,03:49,The CSS Working Group creates CSS specifications,CSSWG,58
1124,04:13,Flexbox and Grid layout came from ideas in the CSSWG,Flexbox/Grid,58
1125,06:27,CSS Working Group finds issues from conferences and surveys,Finding issues,58
1126,07:57,CSS Nesting is now available in Chrome stable,Nesting,58
1127,12:10,Bramus started blogging in 1997 and has blogged for over 20 years,Bramus blogging,58
1128,14:21,Scroll-linked animations allow animations based on scrolling,Scroll animations,58
1129,15:52,Scroll animations can be done with just CSS,CSS scroll animations,58
1130,23:29,CSS foundations like Flexbox are key for new developers,Learning foundations,58
1131,30:28,Scope styling scopes selectors to components,Scope styling,58
1132,37:20,View transition API allows smooth DOM transitions,View transitions,58
1133,40:04,View transitions may work for multi-page apps soon,MPA transitions,58
1134,41:12,CSS nesting removed need for CSS preprocessors,Nesting benefits,58
1135,44:41,CSS mistakes wiki lists CSS decisions in hindsight,CSS mistakes,58
1136,00:02,Wes and Scott introduce the show,intro,59
1137,00:29,Wes talks about attending Reactathon conference,Reactathon,59
1138,05:12,Answering a question about using SvelteKit with Astro,SvelteKit & Astro,59
1139,07:51,Joke question about phone changing email password,joke question,59
1140,08:20,Answering a question about what can be put in CSS custom properties,CSS custom props,59
1141,16:38,Most exciting and challenging things about teaching programming,teaching programming,59
1142,22:01,Value of certifications for JavaScript developers,certifications,59
1143,26:54,Driving a culture of code quality on a team,code quality,59
1144,30:47,When to add Sentry to a new project,Sentry,59
1145,35:05,Why box-sizing border-box is not the default in CSS,box-sizing,59
1146,37:55,Using Lodash in Next.js applications,Lodash,59
1147,43:55,Converting AJAX requests to fetch API,AJAX to fetch,59
1148,45:18,Working with deprecated dependencies in React Native project,React Native dependencies,59
1149,50:57,Sick picks,sick picks,59
1150,00:21,Node modules folder size,Node modules,60
1151,01:31,"What's in node_modules",Node modules content,60
1152,02:06,Shipping source files,Source files,60
1153,02:28,Syntax podcast transcripts,Transcripts,60
1154,02:35,Gzipping reduces size,Gzipping,60
1155,03:09,Text files are large,Text files,60
1156,04:30,Using DaisyDisk to analyze,DaisyDisk,60
1157,05:07,Publishing ESM vs CJS,Publishing,60
1158,06:24,Keeping source files,Source files,60
1159,08:06,AWS SDK types size,AWS SDK types,60
1160,08:42,TypeScript types for auto-complete,TypeScript types,60
1161,09:38,Polyfills for browser compatibility,Polyfills,60
1162,10:11,core-js polyfill size,core-js,60
1163,13:33,Babel plugins have large types,Babel types,60
1164,14:04,"Shipping CJS, ESM and browser builds",Multiple builds,60
1165,15:08,Markdown files are large,Markdown,60
1166,15:51,Licenses must be included,Licenses,60
1167,15:58,Translation strings take space,Translations,60
1168,16:57,Floppy disk size reference,Floppy disk,60
1169,18:34,Bundling reduces size,Bundling,60
1170,19:42,Actual runtime code is small,Runtime code,60
1171,21:01,Use npm ignore,npm ignore,60
1172,21:44,Mable Preset Env reduces polyfills,Mable Preset Env,60
1173,23:00,npkill finds old unused modules,npkill,60
1174,23:35,Find and remove node_modules,Remove node_modules,60
1175,24:45,npkill UI for removing modules,npkill UI,60
1176,02:33,Introduction of Adam Argyle,Intro,61
1177,03:04,"Discussion of new CSS units like Rex, Rick, and RLH",CSS Units,61
1178,04:53,Using root units for scaling based on user preferences,Root Units,61
1179,06:33,CSS has many relative units now,CSS Units,61
1180,08:25,"Adam's new site gradient.style for designing CSS gradients",gradient.style,61
1181,11:13,Adding grain effects to gradients,Grain Effects,61
1182,12:45,Using HDR colors makes gradients look smooth,HDR Colors,61
1183,14:21,Style queries let you query custom property values,Style Queries,61
1184,15:45,Style queries for theming and component variations,Style Query Uses,61
1185,17:20,Style queries have partial browser support currently,Style Query Support,61
1186,19:09,Using Disney animation principles with CSS trig functions,Trig Functions,61
1187,20:53,"Adam's live-transitions.pages.dev demo",Live Transitions,61
1188,23:49,View transitions for page transition animations,View Transitions,61
1189,26:15,Text wrap balance for harmonious text wrapping,Text Wrap Balance,61
1190,27:44,Text wrap pretty prevents widows and orphans,Text Wrap Pretty,61
1191,28:43,Cascade layers help organize styles,Cascade Layers,61
1192,31:12,Browser competition leads to new features,Browser Competition,61
1193,32:00,CSS pseudo-classes opened up new hook points,CSS Pseudo-classes,61
1194,33:25,CSS mixins being worked on,CSS Mixins,61
1195,35:24,Nesting divs without ampersand coming soon,Nesting Divs,61
1196,37:53,Frustrations with PostCSS configurations,PostCSS Frustrations,61
1197,39:34,Animating discrete properties like display,Animating Properties,61
1198,41:58,Using media query range syntax,Media Query Ranges,61
1199,42:52,No variable support in media query ranges yet,No MQ Variables,61
1200,44:16,Scroll start positions with CSS,Scroll Start,61
1201,45:25,Using custom properties for media queries,Custom MQ Properties,61
1202,47:26,Animation composition with keyframes,Animation Composition,61
1203,49:15,Motion blur with CSS proposal,Motion Blur,61
1204,50:27,New customizable select menu element,Select Menu Element,61
1205,51:53,Select menu will have slots,Select Menu Slots,61
1206,54:05,OneWheel electric skateboards,OneWheel,61
1207,55:11,"Adam's website nerdy.dev",nerdy.dev,61
1208,55:14,Adam on Twitter @argyleink,@argyleink,61
1209,00:38,Hosts Syntax website on various providers and his own misery,Testing providers,62
1210,01:31,"3 types of servers: Serverless, Serverfull, Edge",Server types,62
1211,02:14,Serverless explanation: code dormant until needed,Serverless,62
1212,03:51,Serverfull explanation: long running like local dev,Serverfull,62
1213,04:15,Edge explanation: runs closer to user location,Edge,62
1214,04:38,CICD and CDN explanation,CICD and CDN,62
1215,06:48,Cron jobs run scheduled tasks,Cron jobs,62
1216,07:19,Scaling explanation,Scaling,62
1217,07:58,Deploy previews explanation,Previews,62
1218,08:16,Serverless billing: runtime duration,Serverless billing,62
1219,09:49,Serverfull billing: provisioned resources,Serverfull billing,62
1220,10:08,Bandwidth billing,Bandwidth billing,62
1221,11:13,"Major backend providers: AWS, Azure, GCP",Major providers,62
1222,12:01,FlightControl overview,FlightControl,62
1223,13:05,FlightControl deploys to your AWS account,FlightControl AWS,62
1224,13:39,FlightControl provides Vercel-like interface,FlightControl interface,62
1225,14:43,FlightControl manages AWS resources,FlightControl AWS resources,62
1226,15:31,FlightControl billing based on AWS usage,FlightControl billing,62
1227,16:26,Render good for Node.js apps,Render Node.js,62
1228,17:26,"Render has CI, easy databases, auto-scaling",Render features,62
1229,18:32,Render instance migration caused issues,Render migration,62
1230,19:55,Node version mismatch caused Render crash,Render crash,62
1231,20:52,Multiple Render instances prevented downtime,Render redundancy,62
1232,23:46,Overall happy with Render,Render opinion,62
1233,24:01,Vercel popular for Next.js apps,Vercel Next.js,62
1234,24:53,Vercel has great developer experience,Vercel DX,62
1235,25:49,Vercel has performance optimizations,Vercel performance,62
1236,26:12,Vercel provides usage analytics,Vercel analytics,62
1237,26:35,Vercel billing per seat,Vercel billing,62
1238,27:14,"Begin previously for serverless, now fullstack",Begin pivot,62
1239,27:48,Begin uses Arc standard,Begin Arc,62
1240,28:44,"Heroku early lead, now fallen behind",Heroku outdated,62
1241,29:31,Heroku lacking innovation and reliability,Heroku lackluster,62
1242,30:51,Heroku pioneered auto-scale,Heroku auto-scale,62
1243,31:59,DigitalOcean provides full control VMs,DigitalOcean VMs,62
1244,32:18,DigitalOcean has CLI and UI to control VMs,DigitalOcean control,62
1245,33:13,DigitalOcean App Platform not great,DigitalOcean apps,62
1246,34:01,DigitalOcean has additional services,DigitalOcean services,62
1247,34:46,Some issues with DigitalOcean App Platform,DigitalOcean issues,62
1248,00:29,Introducing signals,Intro,63
1249,01:14,Signals are messages between app parts,Overview,63
1250,02:36,Signals are like browser events,Events,63
1251,04:08,Signals send messages from one app part to another,Messages,63
1252,04:43,Elsewhere a signal is received and does something,Received,63
1253,05:15,Signals are like browser event listeners,Listeners,63
1254,06:19,Signals alert parts of an app of changes,Alerts,63
1255,07:06,"Signals are for alerting, not state management",Not State,63
1256,07:55,Signals allow sharing state more easily,Sharing,63
1257,09:37,Signals vs. Svelte stores,Svelte,63
1258,11:10,New frameworks using signals by default,New Frameworks,63
1259,11:30,Signals help you look outside React bubble,React Bubble,63
1260,12:34,Vanilla JS signals example,Vanilla JS,63
1261,15:59,Signals superpower vanilla JS,Superpower,63
1262,16:31,"Vue and Svelte don't need signals",Vue & Svelte,63
1263,17:18,"Signals don't have to change everything",No Need to Change,63
1264,18:13,Keep using what works for you,Use What Works,63
1265,01:55,Dylan works at Mux building video infrastructure for developers,"Dylan's intro",64
1266,02:45,Mux Video abstracts away video processing complexity for developers,Mux Video,64
1267,03:20,Mux built their own video player as an easier solution for developers,Mux Player,64
1268,05:44,Mux processes videos quickly using just-in-time transcoding,Fast processing,64
1269,06:29,Mux chose web components for cross-framework compatibility,Web components,64
1270,08:16,"Safari natively supports HLS, other browsers require MSE support",HLS support,64
1271,09:21,FFmpeg is used for video processing,FFmpeg,64
1272,13:17,Mux Data monitors video playback quality and metrics,Mux Data,64
1273,14:33,Mux integrates with CDNs for video delivery,CDN integration,64
1274,19:30,HLS streaming is the only good way to deliver video now,HLS streaming,64
1275,21:14,TikTok aggressively preloads video for fast scrolling,TikTok preloading,64
1276,23:40,Mux uses just-in-time transcoding to avoid wasted bandwidth,Just-in-time transcoding,64
1277,26:48,GPU transcoding is not much faster than CPU currently,GPU transcoding,64
1278,28:20,Mux powers video applications built with AI,Mux & AI,64
1279,30:30,"Mux is foundational video infrastructure, hard to disrupt",Foundational service,64
1280,32:56,Mux exploring browser-based video clipping and streaming,Browser capabilities,64
1281,35:00,Mux Web Broadcaster records browser streams,Web Broadcaster,64
1282,37:43,Mux supports all input and optimized HLS output formats,Input/output formats,64
1283,40:22,MediaChrome provides modular web components for video players,MediaChrome,64
1284,43:27,MediaChrome can also be used to build audio players,Audio support,64
1285,45:06,Mux Data monitors video playback metrics and performance,Playback metrics,64
1286,47:40,Ad blockers prevent collecting playback metrics,Ad blockers,64
1287,51:23,Docs migrated to Next.js 13 and Tailwind,Next.js migration,64
1288,55:01,Self-driving taxis are live in San Francisco with Cruise,Self-driving taxis,64
1289,02:18,Wes and Scott discuss enjoying exploring new tech and coding experiments,Exploring new tech,65
1290,03:02,Wes and Scott agree the browser needs more customizable UI primitives,Browser UI primitives,65
1291,04:06,"Wes dislikes the browser's date picker for its lack of flexibility and customization",Date picker issues,65
1292,05:31,Scott dislikes the video and audio elements for their lack of styleability,Video/audio issues,65
1293,08:13,Wes finds native alert/prompt/confirm modals frustrating on mobile when needing data from other apps,Mobile modal issues,65
1294,11:56,Scott found the dialog element pleasant to work with for its JavaScript API,Dialog JS API,65
1295,12:41,Scott finds the progress element simple and easy to add animated progress bars,Progress element,65
1296,14:32,Wes likes the range input for its built-in features like labels and ticks,Range input,65
1297,17:48,Wes discusses usefulness of checkbox/label pairing and :has selector,Checkbox tricks,65
1298,20:15,Scott explains Open UI is a community researching web UI controls and patterns,Open UI intro,65
1299,23:32,Open UI Component Matrix shows naming consistency across frameworks,Component matrix,65
1300,26:45,Wes and Scott discuss most common component names like button and modal,Common components,65
1301,30:42,"Wes contrasts Open UI's collaborative research to browser's unilateral decisions ",Open UI benefits,65
1302,32:11,"Wes examines Open UI's checkbox proposal including new indeterminate attribute",Checkbox proposal,65
1303,33:25,Scott learns of exclusive accordion pattern useful in product customization UIs,Exclusive accordian,65
1304,36:15,Wes demonstrates using CSS :has for accordion selection and deselection,:has for accordions,65
1305,40:53,Scott finds Open UI select menu proposal allows for custom markup and styling,Select menu proposal,65
1306,42:43,"Wes notes Open UI's focus on accessibility through standards instead of retrofitting",Accessibility focus,65
1307,44:39,"Scott appreciates Open UI's design examples for various components",Design examples,65
1308,45:47,Scott wishes for standard switch component given mobile prevalence,Add switch standard,65
1309,46:15,"Scott picks textured skins from FishSkyn for phones, laptops and tablets",FishSkyn skins,65
1310,48:23,Wes picks Flavacol popcorn seasoning and coconut oil for theater taste at home,Flavacol seasoning,65
1311,50:17,Scott likes adding M&Ms to popcorn,Popcorn toppings,65
1312,51:34,Wes now uses a saucepan instead of Whirly Pop for easier popcorn making,Saucepan popcorn,65
1313,03:03,"Summary of other Twitter clones, including Mastadon, Nostr, Notes, Hello, Substack and Damo",Twitter clones,66
1314,03:18,"Twitter clones often don't gain traction","Clones don't gain traction",66
1315,04:00,Blue Sky may not necessarily be the next Twitter,Blue Sky may not be next Twitter,66
1316,04:20,"Elon Musk's takeover of Twitter is controversial","Elon's Twitter takeover",66
1317,05:25,Wes paid for Twitter blue checkmark for features like longer video uploads,Wes paid for blue check,66
1318,06:57,Twitter is now pay to play which is frustrating,Twitter pay to play,66
1319,08:04,Blue Sky app is built with React Native,React Native app,66
1320,08:24,React Native for web is a cool project,React Native web,66
1321,10:02,Blue Sky took off rapidly on Twitter,Blue Sky takes off,66
1322,11:43,"Early Twitter was mostly devs, Blue Sky has similar feel",Blue Sky dev feel,66
1323,13:13,Jack Dorsey is an investor in Blue Sky,Jack Dorsey investor,66
1324,14:10,"Blue Sky built on AT Protocol, an open standard",AT Protocol,66
1325,15:25,AT Protocol is decentralized and distributed,Decentralized protocol,66
1326,18:57,AT Protocol allows custom schemas,Custom schemas,66
1327,19:50,Federated servers possible with AT Protocol,Federated servers,66
1328,20:14,People want a single sign up place but ability to move data,Single sign up wanted,66
1329,22:27,Algorithms can be frustrating but also useful like TikTok,Algorithm pros and cons,66
1330,23:43,Standards struggle when people want custom features,Standards vs features,66
1331,24:05,Federated social media is next evolution,Federated social media,66
1332,27:50,"No media, DMs yet on Blue Sky",No media or DMs,66
1333,28:41,Reporting system already in place on Blue Sky,Reporting system,66
1334,29:55,No blocking yet on Blue Sky,No blocking yet,66
1335,31:30,Blue Sky uses custom XRPC protocol,Custom XRPC,66
1336,32:37,Wes built Blue Sky bots and scrapers,Bots and scrapers,66
1337,34:08,Some users already exploiting following,Exploiting follows,66
1338,35:24,Early Twitter worms,Twitter worms,66
1339,36:18,Blue Sky could disappear or could be future of social,Uncertain future,66
1340,00:00,"Intro to Syntax Supper Club podcast with guest Zach Lloyd, creator of Warp terminal",Intro,67
1341,01:14,"Guest intro - Zach is a software engineer, former Google engineering lead, Warp founder",Guest intro,67
1342,02:30,"Zach has worked at Google, startups, music studio, law school dropout","Zach's background",67
1343,03:31,"Discussion of building Google Docs - client-server architecture, offline support, code sharing",Building Google Docs,67
1344,08:50,Google Docs moved to canvas rendering for performance instead of HTML,Google Docs canvas rendering,67
1345,13:31,Overview of Warp - reinventing terminal to be more intuitive and work better out of the box,Warp overview,67
1346,16:10,"Warp built in Rust for performance instead of Electron, allows control over rendering",Warp in Rust,67
1347,18:16,"Warp uses custom UI framework inspired by Flutter, may open source it",Warp UI framework,67
1348,23:22,"Plan to compile Warp to WebAssembly for web version, challenges around threads and text layout",Warp on the web,67
1349,26:06,"Warp integrates with existing shells using hooks, allows structured output with blocks",Warp shell integration,67
1350,31:25,Discussion of Warp design decisions like mouse support and inline command suggestions,Warp design decisions,67
1351,38:04,Possibility of Warp creating own fully integrated shell environment in the future,Warp custom shell,67
1352,39:38,"Discussion of Warp's context-aware autocomplete and integrations with AI",Warp AI features,67
1353,46:49,Bullish on AI assistants in Warp to help with workflows and tasks,Warp AI assistants,67
1354,51:41,Upcoming Warp features for team collaboration and knowledge sharing,Warp team features,67
1355,52:21,"Guest uses iMac, Microsoft split keyboard, VSCode","Guest's gear",67
1356,54:02,Guest is interested in using AI for music education,"Guest's side project idea",67
1357,57:17,"Guest's sick pick is the Tonal home fitness system","Guest's sick pick",67
1358,58:39,"Guest plugs Warp hiring - designers, engineers, growth","Guest's shameless plug",67
1359,01:11,How codes distributed fairly,Fair code giveaway,68
1360,01:56,Admin features added quickly,Fast iteration,68
1361,02:35,"Couldn't lose data",Reliable data,68
1362,02:40,Unique coupon codes important,Unique codes,68
1363,03:19,Needed to prevent code conflicts,No code conflicts,68
1364,03:39,Considered existing services initially,Existing services,68
1365,05:26,"Success page captured hosts' tone",Personalized tone,68
1366,05:57,Chose new stack to try out,New stack,68
1367,06:01,First time using PlanetScale,PlanetScale,68
1368,06:19,Ported utilities from other projects,Code reuse,68
1369,06:34,Prisma recommended for stack,Prisma recommended,68
1370,06:43,"Hadn't used Prisma in years",New Prisma,68
1371,07:25,New favorite stack,Favorite stack,68
1372,07:32,Everything worked smoothly,Smooth workflow,68
1373,08:13,Schema design considerations,Schema design,68
1374,09:40,"Middleware for auth, database, errors",Helpful middlewares,68
1375,10:05,High serverless usage on Vercel,Vercel usage,68
1376,10:20,Site got heavy traffic,Heavy traffic,68
1377,11:29,Effortless SvelteKit deployment,Easy deploy,68
1378,12:05,Avoided deployment issues,No deploy issues,68
1379,12:39,Quick domain setup,Fast domains,68
1380,13:16,Database schema design,Schema design,68
1381,14:01,Basic auth implementation,Basic auth,68
1382,15:49,Server hooks for auth,Auth hooks,68
1383,16:09,Helpful middlewares,Helpful middlewares,68
1384,16:24,Prisma middleware,Prisma middleware,68
1385,17:09,Client-server communication,Client-server,68
1386,18:12,PlanetScale connection pooling,Connection pooling,68
1387,18:22,PlanetScale eased scaling,Scaling eased,68
1388,18:37,Many concurrent instances,Concurrency,68
1389,19:30,Simple codebase,Simple code,68
1390,20:06,Unique coupon code generation,Unique codes,68
1391,20:27,Code format considerations,Code format,68
1392,20:53,Code status management,Code status,68
1393,21:50,Code distribution tracking,Code tracking,68
1394,22:30,Unpredictable IDs,Unpredictable IDs,68
1395,23:28,Address form improvements,Address form,68
1396,24:17,International order requirements,International orders,68
1397,25:39,Schema flexibility,Flexible schema,68
1398,26:14,Type safety,Type safety,68
1399,26:36,Quick ramp up,Quick ramp up,68
1400,27:47,Redirect handling,Redirects,68
1401,28:25,Built-in type safety,Built-in types,68
1402,29:10,Global state management,Global state,68
1403,29:58,Form submission handling,Form handling,68
1404,31:20,Progressive enhancement,Progressive enhancement,68
1405,31:53,Reusable form logic,Reusable forms,68
1406,32:57,Files kept in sync,Synced files,68
1407,33:28,Database getting hammered,Database load,68
1408,34:33,Blocking invalid requests,Block requests,68
1409,35:00,Small database usage,Low usage,68
1410,36:03,Not actually a heavy load,Moderate load,68
1411,36:29,Code permutation limits,Code permutations,68
1412,37:31,Checking codes against list,Code checklist,68
1413,38:13,Funny error messages,Funny errors,68
1414,38:37,Possible improvements,Possible improvements,68
1415,39:15,Cheap database pricing,Cheap db,68
1416,39:52,Minimal database usage,Low usage,68
1417,40:08,Database sharding,Sharding,68
1418,41:37,Handled unexpected load,Handled load,68
1419,42:03,Quick live updates,Live updates,68
1420,43:01,Botnets used,Botnets,68
1421,43:45,Security improvements,Security,68
1422,44:33,Reliability observations,Reliability,68
1423,45:09,Reasons for delayed open source,Delayed open source,68
1424,45:23,Minimal costs,Low costs,68
1425,45:39,No server costs,No server costs,68
1426,45:50,Free services used,Free services,68
1427,46:07,Framework productivity,Framework productivity,68
1428,00:35,Wes introduces RPC,intro,69
1429,01:56,Wes defines RPC,define,69
1430,02:41,Wes explains client-server RPC,client-server,69
1431,03:12,"Scott clarifies RPC is a concept, not a spec",concept,69
1432,03:57,Wes says there are RPC standards/specs,standards,69
1433,04:59,Scott says RPC is gaining popularity due to React server components,React popularity,69
1434,06:00,"Wes says React doesn't have RPC yet but it's being discussed",React RPC,69
1435,06:27,Wes explains calling server functions from client with RPC,call server,69
1436,07:00,Scott says Meteor used RPC,Meteor RPC,69
1437,08:45,Wes explains directly calling server functions from client,direct functions,69
1438,10:04,Wes mentions Solid JS server functions for RPC,Solid JS,69
1439,11:13,Wes compares RPC to REST,vs REST,69
1440,12:26,Wes gives drone control example,drone example,69
1441,13:27,Scott asks about multiple clients with RPC,multiple clients,69
1442,14:48,Wes explains multiple connections like websockets,multiple connections,69
1443,15:06,Scott asks about third party API access,third party access,69
1444,15:57,Wes talks about authentication options,authentication,69
1445,16:16,Scott explains trpc blurs RPC/REST,trpc,69
1446,17:23,Scott mentions great trpc episode,trpc episode,69
1447,17:46,Wes talks security considerations,security,69
1448,18:24,Scott says he likes RPC developer experience,dev experience,69
1449,00:39,Privacy policies and terms of service are needed for businesses with customers online,Policies needed,70
1450,03:54,"Privacy policy explains how data is collected and used, terms of service sets rules for using a website",Difference in policies,70
1451,07:39,"Terms of service apply when using a website, don't need explicit agreement",Terms of service,70
1452,23:10,Google Analytics 4 may be GDPR compliant but still high risk,GA4 GDPR risk,70
1453,48:31,Fined for using Google Fonts since not needed to display fonts,Google Fonts fined,70
1454,00:47,Wes intro question segment,Intro,71
1455,01:00,Scott has ear infection,Scott update,71
1456,01:31,Scott excited for new audio interface,New gear,71
1457,02:50,Scott getting Neumann MT48 audio interface,MT48,71
1458,03:23,New interface replaces multiple pieces of gear,Replaces gear,71
1459,04:33,Interface has presets and snapshots,Presets,71
1460,04:46,Interface uses Ethernet,Ethernet,71
1461,05:18,Interface is Thunderbolt,Thunderbolt,71
1462,06:22,Future processing with GPUs,GPU processing,71
1463,06:59,Plugins and subscriptions,Plugins,71
1464,07:13,Comparing audio interfaces,Comparisons,71
1465,00:29,CSS color functions,topic,72
1466,00:37,Practical CSS color functions,practical,72
1467,00:49,Excited about CSS color functions,excited,72
1468,01:01,Background on color profiles and specs,background,72
1469,01:42,Dynamic color generation,dynamic,72
1470,02:00,Benefits of dynamic color generation,benefits,72
1471,02:32,Full color systems from variables,systems,72
1472,03:14,Relative color syntax,relative,72
1473,03:30,"Color spaces like RGB, HSL, LCH",spaces,72
1474,03:55,New color spaces reduce banding,banding,72
1475,04:09,"Make colors lighter, darker, add opacity",modify,72
1476,05:15,Dream of dynamic color modification,dream,72
1477,05:41,Complementary and triadic color schemes,schemes,72
1478,06:24,Game changer for dynamic color gen,gamechanger,72
1479,06:51,Ensure text and background contrast,contrast,72
1480,07:15,Color contrast syntax,contrast,72
1481,07:49,Pick highest contrast automatically,highest,72
1482,08:17,Minimum contrast accessibility options,accessibility,72
1483,08:48,Color contrast fully in Safari,safari,72
1484,09:35,Color mix syntax,mix,72
1485,09:57,Color mix coming soon,coming soon,72
1486,11:07,Color level 5 module status,level 5,72
1487,11:36,Theming with new color features,theming,72
1488,11:58,Color space input vs output,input/output,72
1489,12:37,Wrapping color functions,wrapping,72
1490,13:33,Converting between color spaces,converting,72
1491,14:10,Wanting better color spaces automatically,better spaces,72
1492,14:54,Using feature queries,queries,72
1493,15:17,Color space comparison tools,comparison,72
1494,02:02,Nicholas Zakas created ESLint 10 years ago,ESLint history,73
1495,02:33,Zakas has contributed to dozens of JavaScript books over his career,Zakas career,73
1496,03:41,ESLint parses code into an AST and rules inspect the nodes they care about,How ESLint works,73
1497,04:04,"Zakas created ESLint after facing an IE bug JSHint couldn't prevent",ESLint origin story,73
1498,08:41,ESLint was created to parse JS and analyze syntax to avoid bugs,ESLint purpose,73
1499,11:11,ESLint does scope analysis on top of AST traversal to enable some rules,Scope analysis,73
1500,20:48,ESLint config started simple but added features like extends made it complex,Config history,73
1501,26:28,Shareable config issues arose when npm stopped auto-installing peerDeps,Shareable config issues,73
1502,47:43,"After coding skills matter less, soft skills like communication become critical",Soft skills matter,73
1503,52:22,"Senior ICs must learn to communicate and lead, not just write more code",Senior IC skills,73
1504,00:11,Can vanilla CSS replace all Sass features?,Sass vs CSS,74
1505,00:59,Discussion on Easter weekend,Weekend chat,74
1506,02:32,Talking about Easter egg hunts,Egg hunts,74
1507,03:20,Seeing bunnies and other wildlife,Bunnies & wildlife,74
1508,04:13,Starting discussion on Sass features,Sass features,74
1509,09:57,CSS variables are better than Sass variables,Variables,74
1510,14:55,Native CSS nesting is here and good,Nesting,74
1511,23:22,CSS color functions are coming soon,Colors,74
1512,30:17,Looping not really needed nowadays,Looping,74
1513,39:07,Mixins can be replaced in CSS,Mixins,74
1514,44:12,CSS imports cause performance problems,Imports,74
1515,49:26,Lots of math functions now in CSS,Math,74
1516,55:23,No custom functions yet in CSS,Functions,74
1517,57:14,BEM syntax only in Sass for now,BEM syntax,74
1518,02:33,"Intro to modals, popups, popovers",Intro,75
1519,03:43,Modals with own URLs,Modal URLs,75
1520,05:05,Reddit modal usage,Reddit modals,75
1521,07:19,Handling escape key press in modal,Escape handling,75
1522,08:15,Modals as bad UI excuse,Modals as UI excuse,75
1523,11:25,Modal dismiss types,Dismiss types,75
1524,15:25,Inert attribute,Inert,75
1525,17:28,Backdrop pseudo-element,Backdrop,75
1526,23:38,Animating dialog element,Animating dialog,75
1527,00:30,Guest introduces himself and Tomagui,Intro,76
1528,04:11,How styling works in React Native,Styling,76
1529,05:30,What is React Native Web,RN Web,76
1530,08:31,Surface area of Tomagui,Tomagui,76
1531,09:59,How Tomagui optimizes styles,Optimization,76
1532,13:20,CSS classes generated by Tomagui,CSS classes,76
1533,16:56,How the Tomagui docs are built,Docs,76
1534,23:11,How animations work in Tomagui,Animations,76
1535,26:39,Layout in React Native,Layout,76
1536,31:23,React Server Components and React Native,SSR,76
1537,37:29,Building native vs web apps,Native vs Web,76
1538,41:17,How guest stays up to date,Staying updated,76
1539,42:19,Advice for beginners,Advice,76
1540,45:27,Excited about future of web dev,Future,76
1541,00:43,Scott got a penguin tattoo,tattoo,77
1542,01:16,Syntax podcast joining Sentry,Sentry,77
1543,02:33,How the Sentry partnership started,partnership,77
1544,04:22,Wes has used Sentry for a long time,longtime user,77
1545,05:27,"Podcast can now have Scott's full effort",full effort,77
1546,06:48,Podcast will remain free for all,stay free,77
1547,08:10,More video content coming,video coming,77
1548,09:31,Authenticity attracted Sentry to Syntax,authenticity,77
1549,12:00,Similar vibes between Sentry and Syntax,similar vibes,77
1550,16:25,Scott joining Sentry full-time,Scott full-time,77
1551,19:17,Can now think much bigger,think bigger,77
1552,22:26,Syntax vibe not changing,vibe stays,77
1553,24:02,"David's background","David's background",77
1554,27:14,David still codes at Sentry,David codes,77
1555,30:23,"Scott relates to David's passion",shared passion,77
1556,00:30,OAuth explained,OAuth,78
1557,02:02,OAuth allows authentication via another service,Auth,78
1558,05:28,OAuth involves multiple tokens for access,Tokens,78
1559,06:04,GitHub used as OAuth example,GitHub,78
1560,07:52,OAuth gives access to user data,Access,78
1561,11:20,Authorization code exchanged for access token,Exchange,78
1562,11:54,Access token used like API key,API key,78
1563,12:24,Refresh token gets new access token,Refresh,78
1564,13:34,Access token has expiration,Expires,78
1565,19:02,OAuth complex but better than custom auth,Better,78
1566,02:33,WordPress has changed a lot in the past 5 years,WordPress Changes,79
1567,05:27,Windows dev has gotten easier for WordPress,Windows Dev,79
1568,08:19,"Most WordPress sites still use themes, but block editors are changing front-end",Themes vs Blocks,79
1569,10:25,Developers create custom blocks that correspond to editor blocks,Custom Blocks,79
1570,12:19,Theme JSON defines styles and presets for blocks,Theme JSON,79
1571,14:05,"Headless WordPress works for some use cases, but can be limiting editorially",Headless WordPress,79
1572,16:26,Headless WordPress shines when content is reused across platforms,Cross-Platform Content,79
1573,17:43,"WordPress can be used for applications, but may not always be the right tool",WordPress Apps,79
1574,20:05,Standard Git workflows used for most WordPress projects,Git Workflows,79
1575,21:45,"Database migrated down from production, not up from local",Database Workflow,79
1576,23:41,WordPress moving away from jQuery dependence,jQuery Use,79
1577,25:17,Page speed optimizations allow sites to load quickly despite legacy scripts,Page Speed,79
1578,26:05,Webpack and other modern tools used for custom work,Build Tools,79
1579,27:40,Plugins handle their own dependencies and enqueuing,Plugin JavaScript,79
1580,28:30,WordPress can be hosted on most standard PHP hosts,Hosting Options,79
1581,30:06,Block editor provides WYSIWYG-like editing experience,Editing Experience,79
1582,31:40,Full site editing allows customizing all areas with blocks ,Full Site Editing,79
1583,32:08,Collaborative editing coming in next phase of block editor,Collaborative Editing,79
1584,00:51,Discussing how to prime ChatGPT to generate good interview questions,Priming ChatGPT,80
1585,02:33,ChatGPT asks a question on difference between for and while loops in JS,Loops question,80
1586,11:08,ChatGPT asks a question on difference between rem and em in CSS,CSS units,80
1587,13:22,ChatGPT asks a callback vs promise question claimed as expert level,Callback vs Promise,80
1588,15:03,ChatGPT asks a hoisting related function question claimed as expert level,Hoisting functions,80
1589,18:32,ChatGPT asks a GraphQL scalar types question,GraphQL scalars,80
1590,21:40,ChatGPT asks a Deno unstable APIs question,Deno unstable APIs,80
1591,26:50,More priming of ChatGPT for hard and obscure questions,Priming questions,80
1592,28:03,ChatGPT asks an aspect ratio CSS question,Aspect ratio CSS,80
1593,30:29,ChatGPT asks a Svelte beforeUpdate lifecycle hook question,Svelte lifecycle,80
1594,32:34,Asking ChatGPT for a hard TypeScript question,Priming TypeScript,80
1595,33:30,ChatGPT asks about differences between unknown and any in TS,unknown vs any,80
1596,34:46,ChatGPT asks a question on mapped types in TS,Mapped types TS,80
1597,02:17,import maps explained,import maps,81
1598,02:39,aliasing paths,alias paths,81
1599,03:01,aliasing node modules,alias node,81
1600,05:33,defining aliases in JSON,JSON aliases,81
1601,06:03,import maps are like directions,directions,81
1602,06:50,syntax thoughts,syntax,81
1603,07:11,import map syntax details,syntax details,81
1604,08:03,distinguishing local vs external,local vs external,81
1605,09:24,dependency resolution discussion,dependencies,81
1606,10:30,bundlers discussion,bundlers,81
1607,12:11,import maps work with bundlers,work with bundlers,81
1608,12:59,standard across tools is good,standardization,81
1609,14:13,how import maps work in Deno,Deno,81
1610,15:04,import maps and DEPSTAT,DEPSTAT,81
1611,15:51,SemVer in Deno import maps,SemVer,81
1612,16:26,standards over conventions,standards,81
1613,16:35,Node package.json in Deno,Node in Deno,81
1614,17:46,new filesystem API discussion,filesystem API,81
1615,18:31,filesystem API concerns,API concerns,81
1616,19:40,filesystem API use cases,API uses,81
1617,20:13,Node and subpath imports,subpath imports,81
1618,21:10,getting subpath into Node,subpath in Node,81
1619,21:37,Pathaliases in TypeScript,TypeScript,81
1620,22:23,Vite plugin for import maps,Vite plugin,81
1621,22:59,tree shaking concerns,tree shaking,81
1622,23:48,integrity hashes concern,integrity,81
1623,25:22,integrity proposal,integrity proposal,81
1624,25:35,ESLint resolver plugin,ESLint resolver,81
1625,26:09,VSCode auto import issue,VSCode import,81
1626,00:52,Introduction of Justin Fagnani,Intro,82
1627,02:33,Discussion on popularity of React vs web components,React/WC,82
1628,05:03,Explanation of what web components are,WC intro,82
1629,09:34,Were web components intended for direct use or with a layer like Lit,WC intent,82
1630,13:30,Overview of what Lit is,Lit intro,82
1631,18:39,Benefits of using a library with web components,WC lib,82
1632,23:14,"Using web components in frameworks that don't use virtual DOM",WC frameworks,82
1633,24:35,How CSS scoping works in web components,WC CSS,82
1634,00:27,Sponsor: Sentry error tracking,Sponsor,83
1635,01:42,Apologizing for audio quality issues,Audio issues,83
1636,02:07,Should freelancers offer hosting and support?,Freelancing tips,83
1637,05:05,Pros and cons of offering continued support,Client support,83
1638,10:11,Testing animations in components,Testing animations,83
1639,10:39,Strategies for testing animations,Animation testing,83
1640,17:17,Choosing a front-end framework,Frameworks,83
1641,17:32,Criteria for evaluating frameworks,Framework criteria,83
1642,21:12,Using small functions for organization,Small functions,83
1643,21:37,Pros and cons of small vs large functions,Function sizes,83
1644,26:06,Taking notes while learning coding,Learning strategies,83
1645,26:24,Using Markdown files for note taking,Note taking,83
1646,30:20,Using CSS grid and gap properties,CSS grid,83
1647,01:16,Travis has decades of experience as a designer and thought leader,Travis background,84
1648,03:20,Travis worked at Google Search leading UX for crisis response,Travis at Google,84
1649,04:22,Travis discussing his modular synth hobby and YouTube channel,Travis hobbies,84
1650,05:49,Travis previously hosted Google Method podcast on design,Travis podcast,84
1651,06:43,Travis is redesigning the LevelUpTutorials website,Travis project,84
1652,07:53,Discussion on making AI tools feel more human,Humanizing AI,84
1653,11:53,Example of AI hallucinating extra content when transcribing a podcast,AI hallucinations,84
1654,13:00,Travis discusses context as key for quality AI outputs,AI and context,84
1655,14:08,Lowering the technical bar for artistry with AI tools,AI for art,84
1656,16:24,Travis becoming obsolete as developer after years away from coding,Obsolete developers,84
1657,17:22,AI giving Travis engineering skills back through natural language,AI for engineering,84
1658,19:48,Travis using AI in his work at YouTube Music for suggestions,YouTube Music AI,84
1659,23:18,Importance of positive context when working with AI tools,Positivity with AI,84
1660,26:18,Keeping humanity in interfaces as AI enhances capabilities,Humanity in interfaces,84
1661,30:50,Helping users articulate ideas to AI through thoughtful interfaces,Articulating ideas to AI,84
1662,34:06,Building context over time with AI assistants,Context with assistants,84
1663,36:01,Ways to customize AI models and tools to your needs,Customizing AI,84
1664,38:29,Putting your priorities into AI will shape the experience,Shaping AI experience,84
1665,00:37,Sentry for error tracking,Sentry,85
1666,01:38,Daylight savings impact,Daylight savings,85
1667,02:56,Should older developers switch careers?,Career change,85
1668,04:08,Advice for busy parent wanting to learn web dev,Learn web dev,85
1669,05:54,Well-paying but unhappy jobs,Unhappy jobs,85
1670,09:46,Feeling stuck in a high-paying job,Stuck jobs,85
1671,10:30,Write code quickly despite knowing solutions,Write code fast,85
1672,11:39,Typing speed and editor tips for faster coding,Code faster tips,85
1673,14:41,Tips for better web design with no design experience,Better web design,85
1674,19:16,Do you really need a SPA?,Need SPA?,85
1675,02:33,Discussing why you may need HTTPS locally,HTTPS locally,86
1676,05:17,Sentry sponsor ad,Sentry ad,86
1677,07:04,Localhost is a secure context by default,Localhost secure,86
1678,13:56,APIs requiring a secure context,Secure APIs,86
1679,15:02,Tunneling local dev server for outside access,Tunneling,86
1680,20:53,Popular tunneling tools like ngrok,Tunnel tools,86
1681,23:24,Cloudflare Tunnel details,Cloudflare Tunnel,86
1682,26:02,Custom domains with Cloudflare Tunnel,Custom domains,86
1683,02:21,"Wes looking at server costs, eyeing AWS but finding it too complicated",AWS complexity,87
1684,02:45,AWS has many attempts at easier deployments but not in their DNA; focused on infrastructure not developers,AWS focus,87
1685,03:19,"Dax's SST framework makes AWS approachable by handling complexity for users",SST framework,87
1686,04:14,"Wes tweets asking if AWS improved in 12 years he's used it; gets mixed responses",AWS over time,87
1687,04:26,Wes wants to deploy serverless function to AWS but no easy build pipeline,AWS deployments,87
1688,04:51,AWS has many fragmented attempts at simplifying deployments,AWS simplifying,87
1689,05:18,AWS focused on infrastructure not day-to-day developer experience,AWS focus,87
1690,05:26,AWS scope is massive trying to serve every business unlike focused competitors,AWS scope,87
1691,07:06,"Next.js hugely popular React framework, tied to Vercel hosting platform",Next.js overview,87
1692,07:43,Hosting Next.js anywhere but Vercel not always straightforward,Next.js hosting,87
1693,07:59,Open Next.js project enables self-hosting Next.js apps like on AWS,Open Next.js,87
1694,08:39,Fully serverless Next.js deployment has challenges vs. Vercel hosting,Serverless challenges,87
1695,09:09,"Big gap deploying serverless Next.js yourself vs. Vercel's managed service",Self-managed gap,87
1696,09:45,Took lots of work to achieve 1:1 parity self-hosting Next.js,Parity work,87
1697,10:50,"Open Next.js team doesn't actually use Next.js themselves, rely on community",Community reliance,87
1698,11:35,"Next.js build outputs single function bundling all routes, not separate ones",Single function,87
1699,12:33,"Bundling all routes into one function isn't ideal long-term",Bundle drawbacks,87
1700,13:14,"At build time don't think about discrete functions, split later",Delay splitting,87
1701,14:44,"Edge functions run on Cloudflare, not AWS, unlike main Next.js app",Edge locations,87
1702,15:03,To self-host edge must run in AWS with different constraints than Cloudflare,Edge constraints,87
1703,15:34,Vercel uses ideal architecture without constraints of self-hosting,Vercel flexibility,87
1704,16:12,Edge functions have limitations compared to Node.js environments,Edge limitations,87
1705,16:26,Edge functions have fast worldwide locations despite limitations,Edge benefits,87
1706,17:10,"Cloudflare billing only for compute time, not waits like network I/O",Cloudflare billing,87
1707,17:50,Cloudflare billing seems limited at first but works at scale,Billing scale,87
1708,18:25,Cloudflare billing model allows serving multiple customers per second,Billing model,87
1709,19:29,"Serverless pricing unintuitive, shift mindset from monthly to unit costs",Pricing mindset,87
1710,20:21,Serverless pricing very cheap in practice despite appearing expensive,Cheap pricing,87
1711,20:58,"AWS serverless prices tend to go down over time, not up",AWS pricing,87
1712,05:41,Wes and Scott brainstorm ideas for a new Syntax website,Ideas,88
1713,12:44,Discussion on building a great search experience,Search,88
1714,19:29,Adding video components to Syntax,Video,88
1715,26:02,Integrating transcripts with the podcast player,Transcripts,88
1716,34:31,Surfacing good old Syntax content,Old content,88
1717,02:33,Web streams intro,Intro,89
1718,05:13,Web streams working group,WG,89
1719,09:31,Streaming large data,Data,89
1720,11:21,Streaming for performance,Perf,89
1721,15:33,Fetch API and streams,Fetch,89
1722,17:29,Readable streams,Readable,89
1723,18:13,File reader stream,File,89
1724,21:18,Media streams,Media,89
1725,22:07,Readable and writable streams,RW,89
1726,23:09,HTML rewriter API,HTML,89
1727,24:30,Stream locking,Locking,89
1728,27:19,Streams and fluid dynamics,Fluid,89
1729,28:26,Creating writable streams,Creating,89
1730,29:00,Text decoder stream,Text,89
1731,31:27,Awaiting entire stream,Await,89
1732,32:22,Compression stream API,Compression,89
1733,00:26,Introducing the Syntax Supper Club podcast,Intro,90
1734,00:39,Guest Eric Sartorius introduced,Guest intro,90
1735,01:03,Eric and Wes have known each other for a long time,Guest background,90
1736,01:33,Eric and Wes met through dance and have been coding together,Dance and coding,90
1737,01:40,Eric talks about his work and travel history,"Eric's work",90
1738,02:00,Eric started coding 9 years ago to travel,Coding for travel,90
1739,02:10,Eric was a digital nomad for years traveling to 40 countries,Digital nomad,90
1740,02:50,"Eric rarely stays in one place, always traveling",Always traveling,90
1741,03:00,Eric has traveled to 40 countries on all continents except Antarctica,40 countries traveled,90
1742,03:50,Eric wants to climb the highest mountain in Antarctica,Climb Antarctica mountain,90
1743,04:20,"Eric works while traveling, managing time zones and WiFi",Working while traveling,90
1744,04:53,Eric works with team members around the world,Global team,90
1745,05:16,Flexibility is key when working across time zones,Time zone flexibility,90
1746,06:00,"Discussion on Eric's work habits and routines while traveling",Work habits while traveling,90
1747,06:41,"Eric works from cafes, homes, wherever he can find WiFi and space",Finding workspaces,90
1748,07:14,Eric gives example of working in South Korea with good WiFi and cafes,Working in South Korea,90
1749,07:33,Eric was an English teacher overseas before coding and traveling,English teacher abroad,90
1750,07:56,"Eric's work habits depend on the country he's visiting",Country-dependent habits,90
1751,08:17,In Korea Eric worked from different cafes every day,Cafes in Korea,90
1752,08:37,"When Eric first started, he had a shoestring budget",Shoestring budget,90
1753,08:54,"In Japan, cafes often don't have WiFi so Eric worked from home more",Japan work habits,90
1754,09:11,Discussion on how Eric researches places to work and live when traveling,Researching places to work,90
1755,09:37,Pre-pandemic Eric traveled with just a suitcase for years,Minimalist traveling,90
1756,10:14,Eric often booked one-way flights and figured out details after arriving,Booking one-way flights,90
1757,10:32,Now Eric bases in one place but travels 1 month at a time,Current travel habits,90
1758,10:54,"Examples of Eric's spontaneous travel decisions and destinations",Spontaneous travel,90
1759,11:00,"Eric's unpredictable location was surprising but didn't affect productivity",Unpredictable location,90
1760,11:22,Eric created routines not tied to environment for productivity,Routines for productivity,90
1761,12:00,Having a routine helps Eric work anywhere,Routine helps productivity,90
1762,12:20,"Eric is currently based in Phoenix, Arizona",Based in Phoenix,90
1763,12:30,"When Eric was in Denver, he only had basic exercise equipment",Minimalism in Denver,90
1764,13:00,The kettlebell Eric left in Denver is still being used,Leftover kettlebell,90
1765,13:29,Discussion on how Eric handles travel while interviewing for jobs,Interviewing and travel,90
1766,13:38,Some digital nomads hide their location but can get fired,Hiding location,90
1767,14:26,Eric works on contract through his company for more travel flexibility,Contract work,90
1768,14:50,Discussion on costs and budgeting while continually traveling,Budgeting while traveling,90
1769,15:28,Instagram portrayal of luxurious digital nomad life is not always realistic,Instagram vs reality,90
1770,15:44,"When Eric started, he had a very small budget but visited 10+ countries in one year",Small budget,90
1771,16:12,One year Eric spent only $10k while visiting 10+ countries,$10k budget,90
1772,16:43,"It's possible to travel very cheaply and efficiently",Cheap efficient travel,90
1773,17:02,Food and healthcare are cheap in Southeast Asia,SE Asia costs,90
1774,17:12,In US and Europe food and healthcare are more expensive,US/Europe costs,90
1775,17:56,AirBnBs used to be very cheap for long term stays,Cheap AirBnBs,90
1776,00:17,Discussing website performance issues,Performance,91
1777,00:41,"Scott's new split keyboard is causing typing issues",Keyboard,91
1778,01:37,Scott explains benefits of split keyboard,Ergonomics,91
1779,02:29,Custom macros and shortcuts on new keyboard,Macros,91
1780,03:03,Sentry can monitor website performance,Sentry,91
1781,03:43,Sentry performance metrics help identify slow pages,Metrics,91
1782,04:26,Sentry profiling helps debug server performance,Profiling,91
1783,05:23,What causes websites to be slow?,Causes,91
1784,05:42,Large homepage with 700 users causes slowness,Large Page,91
1785,06:16,Identifying the root cause of a slow website,Debugging,91
1786,06:53,Website request flow from client to server,Request Flow,91
1787,07:19,Serverless functions have cold start delays,Cold Start,91
1788,07:52,Server generates HTML and sends it back,HTML Generation,91
1789,08:03,Complexity of loading a modern website,Complexity,91
1790,09:17,Caching database queries can improve speed,Caching,91
1791,09:44,Concurrent database requests speed things up,Concurrency,91
1792,10:43,Using console.time to measure server speed,Console Time,91
1793,12:48,Right server hardware improves performance,Hardware,91
1794,13:06,Upgrading server resources if overloaded,Upgrading,91
1795,13:24,Bigger server equals faster performance,Bigger Server,91
1796,13:51,Large 1.3MB HTML payload before compression,Large Payload,91
1797,28:12,Running Node in browser gives good onboarding experience for full stack frameworks,Onboarding,92
1798,26:25,"2 companies have proven you can run Node in browser, with different approaches",Proof of concept,92
1799,24:58,Limitations due to browser restrictions compared to Node,Limitations,92
1800,23:17,PenPod open source Figma alternative,PenPod,92
1801,20:24,"Notebooks uses newer APIs, works on all browsers",Notebooks implementation,92
1802,17:26,CodeSandbox likely knew Stackblitz was launching,Competition,92
1803,16:39,Critical parts not open source,Not open source,92
1804,15:09,Web containers uses Turbo for npm proxy,Turbo,92
1805,13:40,Mocks Linux APIs in browser,Mocking APIs,92
1806,12:33,Runs via WASM in iframe,WASM in iframe,92
1807,10:36,Avoids security issues of remote VMs,Security,92
1808,08:26,Great for code demos and playgrounds,Use cases,92
1809,06:52,Why run Node in browser?,Why?,92
1810,02:30,"Realized quickly wanted to work on cool tech, not ecommerce",Career pivot,93
1811,02:35,"Ecommerce is marketing driven, not tech driven",Ecommerce challenges,93
1812,03:54,Wanted to give marketing a drag and drop interface on top of framework components,Builder origin,93
1813,04:42,Builder allows configuring UI via JSON that describes components,How Builder works,93
1814,07:27,Marketing can fully compose UIs or just edit sections made with Builder,Builder flexibility,93
1815,08:11,"Builder doesn't host anything, it integrates into your existing site",Builder integration,93
1816,09:43,Some Builder sites are 80% controlled by Builder,Builder adoption,93
1817,13:01,Builder is built in React and uses MobX for state management,Builder tech stack,93
1818,13:42,MobX is great for performance in interactive apps like Builder,MobX benefits,93
1819,15:02,Builder outputs agnostic JSON format that can render UIs on any framework,Framework agnostic,93
1820,18:29,Figma integration allows designing UIs visually then exporting to Builder,Figma integration,93
1821,21:40,"Builder overlays guess component positions, then verifies after interactions",Overlay rendering,93
1822,26:38,"Use reactive state management like MobX, not Redux, for drag and drop",Drag and drop tips,93
1823,00:20,AI encoding overview,AI encoding,94
1824,01:23,"Scott's snowboarding story",Snowboarding,94
1825,02:00,Ad for Sentry error tracker,Sentry ad,94
1826,03:26,AI taking jobs discussion,AI jobs,94
1827,04:15,AI intensity in communities,AI communities,94
1828,06:29,AI as a solution or non-solution,AI nuance,94
1829,07:26,AI use cases discussion,AI use cases,94
1830,08:29,Github Copilot overview,Github Copilot,94
1831,09:48,OpenAI and Github Copilot,OpenAI,94
1832,10:17,Midjourney image generator,Midjourney,94
1833,11:13,AI art ethics issues,AI art ethics,94
1834,11:40,AI marketing copy issues,AI marketing,94
1835,12:27,AI usage attribution issues,AI attribution,94
1836,13:15,AI competitive advantage issues,AI competition,94
1837,13:44,Constantly raising quality bars,Quality bars,94
1838,14:11,AI going off rails examples,AI off rails,94
1839,14:35,Microsoft Bing issues,Bing issues,94
1840,15:06,Google Bard announcement,Google Bard,94
1841,15:17,Many companies doing AI,AI companies,94
1842,15:43,AI model explanations,AI models,94
1843,17:19,How models are trained,Model training,94
1844,18:17,Models as black boxes,Model black boxes,94
1845,18:36,TensorFlow overview,TensorFlow,94
1846,00:33,Talking about clean and sloppy code,Topic,95
1847,01:19,Sentry session replay introduction,Sentry,95
1848,02:16,Wes performance issue on uses.tech,Performance,95
1849,04:23,Definition of sloppy code,Sloppy code,95
1850,05:12,Examples of sloppy code,Examples,95
1851,06:37,Marie Kondo on organization,Organization,95
1852,13:14,Establishing codebase rules,Rules,95
1853,14:38,When to add new packages/configs,Packages,95
1854,15:40,Scaffolding tools for consistency,Scaffolding,95
1855,16:42,Refactoring unrelated code,Refactoring,95
1856,18:27,Branch strategy for clean code,Branching,95
1857,20:39,Code rules with linters/formatters,Linters,95
1858,21:41,Naming conventions,Naming,95
1859,23:03,Commenting code,Comments,95
1860,24:08,Enforcing rules with GitHub Actions,Enforcing,95
1861,25:02,Automating formatting/linting fixes,Automating,95
1862,27:14,Documenting coding standards,Documenting,95
1863,02:29,Astro is a web framework focusing on HTML first with interactive JS islands.,Astro intro,96
1864,04:02,Astro started as a static site generator but now supports full SSR and hybrid rendering.,Astro SSG->SSR,96
1865,05:29,"Astro is best for content-focused sites like blogs, docs, portfolios. Not interactive apps.",Astro use cases,96
1866,06:56,Astro defaults to HTML everywhere with interactive JS islands. Unlike SPAs shipping everything as JS.,Island architecture,96
1867,10:05,Astro uses file-based routing like Next.js with .astro files defining pages.,Routing,96
1868,12:25,Astro 2.0 focuses on markdown authoring with frontmatter type safety.,Markdown,96
1869,13:37,Astro supports MDX for components in markdown but added type safety to frontmatter.,MDX,96
1870,14:56,"Astro builds adapter-based apps to run on Node, Deno, Cloudflare Workers and more.",Edge runtimes,96
1871,18:43,Astro components can directly await data fetching using top-level await.,Data fetching,96
1872,19:58,.astro files run data fetching in component frontmatter before template.,Frontmatter,96
1873,00:24,Warp terminal overview,Warp,97
1874,00:57,Scott is sick,Sick,97
1875,02:13,Not sponsored by Warp,Sponsored,97
1876,02:41,Warp built with Rust,Rust,97
1877,03:24,Evolution of terminals,Evolution,97
1878,04:20,Terminal annoyances,Annoyances,97
1879,05:58,Warp only on Mac currently,Mac only,97
1880,07:00,"Terminals they've used",Used,97
1881,09:16,Builtin Mac terminal,Builtin,97
1882,09:28,Alacriti terminal,Alacriti,97
1883,09:53,Windows terminal,Windows,97
1884,10:25,VS Code terminal,VS Code,97
1885,11:17,Terminal terminology,Terminology,97
1886,12:55,Windows PowerShell,PowerShell,97
1887,00:30,Logging overview and basics,Logging basics,98
1888,01:48,Sentry sponsor ad,Sentry ad,98
1889,02:33,What logging is and basic usage,What is logging,98
1890,03:53,Why log things,Why log,98
1891,04:36,Logging vs error handling,Logging vs errors,98
1892,05:56,What to log in development vs production,Dev vs prod logging,98
1893,08:43,Importance of timestamps in logs,Timestamps,98
1894,09:16,Other useful log metadata,Log metadata,98
1895,10:32,Logging request data,Logging requests,98
1896,13:30,Logging descriptive messages,Descriptive logging,98
1897,13:52,Avoiding logging personal data,No PII logging,98
1898,15:21,Log levels from error to verbose,Log levels,98
1899,16:05,Production vs development logging,Prod vs dev logs,98
1900,17:38,Logging security events,Security logging,98
1901,18:18,Logging bot access attempts,Bot logging,98
1902,18:52,Logging rate limiting,Rate limiting logs,98
1903,20:16,Log storage and retention,Log storage,98
1904,21:18,Third party logging services,Third party logging,98
1905,22:54,Using logging libraries like Winston,Logging libraries,98
1906,24:05,Custom middleware for logging,Middleware logging,98
1907,02:03,Ryan Carniato intro,Intro,99
1908,04:02,First commit for Solid in 2016,History,99
1909,05:00,KnockoutJS history,KnockoutJS,99
1910,06:17,Using React at previous company,React,99
1911,07:33,MarcoJS at eBay,MarcoJS,99
1912,09:14,What is Solid JS?,Solid JS,99
1913,10:20,Reactive primitives in Solid,Reactivity,99
1914,11:47,Solid philosophy on components,Components,99
1915,12:10,Solid JSX compiler,Compiler,99
1916,13:07,Compiles JSX to vanilla JS,Compilation,99
1917,14:53,Solid runtime vs compilation,Runtime,99
1918,15:06,Looking at compiled output,Output,99
1919,15:39,Detecting reactive parts,Detect reactive,99
1920,18:15,Context API in Solid,Context API,99
1921,18:39,Animations in context,Animations,99
1922,19:38,Patterns from React work in Solid,React patterns,99
1923,19:54,Origin of signals name,Signals name,99
1924,20:45,Differentiating signals from RxJS,Vs RxJS,99
1925,21:52,Signals vs PubSub,Signals vs PubSub,99
1926,23:08,Explanation of signals,Signals explained,99
1927,24:29,Derived values and side effects,Derived values,99
1928,25:12,Differences from observables,Observables,99
1929,25:46,Avoiding cascade updates,Cascades,99
1930,27:09,Tracing reactive dependencies,Tracing,99
1931,29:19,Web components support,Web components,99
1932,29:51,Why not using web components,Not using WC,99
1933,31:53,Web components vs frameworks,WC vs frameworks,99
1934,32:31,When to use web components,Use cases,99
1935,32:45,Introducing Solid Start,Solid Start,99
1936,00:30,Talking about the OpenAI and ChatGPT APIs,APIs,100
1937,00:45,Stumbling over saying OpenAI API,Stumbling,100
1938,01:06,Wes excited to talk about coding with the API,Coding,100
1939,01:24,Sentry sponsor,Sponsor,100
1940,03:20,Start talking about the OpenAI API,OpenAI API,100
1941,03:47,Axios used in the API,Axios,100
1942,04:15,Transcripts summarized with OpenAI API,Summarized,100
1943,04:50,Scott playing around with the API,Playing around,100
1944,07:42,Most data sent to OpenAI is text,Text data,100
1945,08:13,1000 tokens is about 750 words,Token count,100
1946,08:44,Costs a fraction of a cent per 1000 tokens,Pricing,100
1947,09:51,Output length affects cost,Output cost,100
1948,10:38,Cheap for one podcast but adds up at scale,Cost at scale,100
1949,11:45,Other companies adding OpenAI APIs,Other APIs,100
1950,13:04,GPT pricing very fluid,Pricing changes,100
1951,15:11,Chunking transcripts to stay under token limit,Chunking,100
1952,16:09,Must send full context each request,Full context,100
1953,19:01,Fine tuning models not possible yet,Fine tuning,100
1954,21:12,Chat completion most popular API,Chat API,100
1955,22:28,Text completion similar to chat completion,Text API,100
1956,22:53,Image generation API,Images API,100
1957,24:37,Speech to text API,Speech API,100
1958,26:17,Embedding API for relatedness,Embedding,100
1959,27:38,Langchain JavaScript library,Langchain,100
1960,29:54,Prompt tuning takes work,Prompt tuning,100
1961,31:22,Anticipating future misinformation,Misinformation,100
1962,32:24,Tip to save responses,Save responses,100
1963,33:33,Curious about training on old tweets,Old tweets,100
1964,00:11,Potluck episode,Potluck,101
1965,00:40,Submit questions,Questions,101
1966,01:02,Sponsor read,Sponsor,101
1967,02:16,Electrical work,Electrical,101
1968,03:03,Installing dimmers,Dimmers,101
1969,04:12,Setting up smart home,Smart home,101
1970,05:00,Wire connectors,Connectors,101
1971,05:58,Wire strippers,Strippers,101
1972,07:30,Installing switches,Switches,101
1973,07:57,Custom podcast browser,Browser,101
1974,09:32,Web component usage,Components,101
1975,10:18,Web components vs frameworks,Frameworks,101
1976,13:10,Web component routing,Routing,101
1977,13:54,Web component SSR,SSR,101
1978,15:15,JavaScript mixins,Mixins,101
1979,01:08,"Config files aren't all related to front end",Config files,102
1980,01:57,Scott went skiing and got a sunburn,Skiing,102
1981,03:12,Electric cars regenerate battery going downhill,Electric cars,102
1982,05:18,Config files describe infrastructure,Infrastructure,102
1983,07:50,JavaScript config files are nice,JavaScript configs,102
1984,11:27,Node has failed on config file standards,Node failure,102
1985,13:55,Some configs are YAML,YAML,102
1986,15:29,Hard to change config locations once working,Config locations,102
1987,16:45,VSCode file nesting hides configs,VSCode nesting,102
1988,18:34,File nesting groups related files,File nesting,102
1989,19:36,Configs are a necessary evil,Necessary evil,102
1990,21:19,Scott will standardize config formats,Standardize configs,102
1991,00:39,Introduction to resumability,Intro,103
1992,01:14,Mishko Hevery creator of Angular and Qwik,Guest intro,103
1993,02:02,Scott summarizes his understanding of resumability,Resumability summary,103
1994,02:48,"Mishko confirms Scott's understanding is correct",Confirm understanding,103
1995,04:03,Mishko explains resumability through virtual machine example,VM example,103
1996,05:15,Qwik compared to React and Next.js,Qwik overview,103
1997,06:18,Qwik uses familiar JSX and Hooks like React,Qwik details,103
1998,07:08,Examples of components to make resumable,Resumable components,103
1999,08:52,Qwik handles optimizations for you,Built-in optimizations,103
2000,09:16,Example of lazy loading components in React vs Qwik,Lazy loading comparison,103
2001,00:39,"Sentry's session replay feature",Sentry,104
2002,02:26,Installing smart switches,Switches,104
2003,03:26,Color coding wires for three-way switches,Wires,104
2004,05:08,Confusion over three-way vs four-way switch wiring,Wiring,104
2005,05:55,Using approved electrical connectors,Connectors,104
2006,08:18,Converting JavaScript to TypeScript,TypeScript,104
2007,09:45,Migrating GraphQL API to SvelteKit,Migrating,104
2008,12:00,Refactoring benefits of TypeScript,Refactoring,104
2009,13:17,Catching edge case bugs,Bugs,104
2010,14:59,Better developer experience,Developer experience,104
2011,00:30,Talking about polish and perf,Topic intro,105
2012,00:34,"Pushed out the thing, now improve UX",Post-launch goals,105
2013,01:08,Performance tuning is key for users,Performance importance,105
2014,02:09,Balance page speed and functionality,Page speed vs features,105
2015,02:53,Use devtools network tab for visibility,Network tab,105
2016,03:51,Removing unnecessary embeds for speed,Embeds,105
2017,05:11,Removing heavy Discord embed for speed,Discord embed,105
2018,05:41,Proxying images to avoid tracking,Image proxy,105
2019,06:58,Lighthouse identifies optimization areas,Lighthouse,105
2020,08:33,Image compression has big impact,Image compression,105
2021,09:33,Caching assets speeds up subsequent loads,Caching,105
2022,10:50,Caching queries can improve server speed,Query caching,105
2023,12:01,Audit network requests to identify large files,Audit requests,105
2024,13:33,Iteratively optimizing page speed over time,Iterative optimization,105
2025,14:18,Faster sites improve user experience,UX,105
2026,15:26,Avoid unnecessary network requests,Unneeded requests,105
2027,16:10,Click around site to catch odd requests,Odd requests,105
2028,16:23,Use tools over guesses for improvements,Use tools,105
2029,17:31,"No specific speed target, improve experience",No target,105
2030,19:01,Faster build times aid development,Build times,105
2031,19:37,Serverless deployment improves edit speed,Serverless deploys,105
2032,02:30,Rust teaches low level computer concepts,Rust education,106
2033,03:43,Rust in Action aims to make Rust more approachable,Approachable book,106
2034,08:04,First learned about Rust in 2012,Rust history,106
2035,13:04,Rust can have a steep learning curve,Steep learning,106
2036,22:02,Good first Rust projects are command line utilities,CLI utilities,106
2037,24:09,Interactive games are a great way to learn Rust,Games to learn,106
2038,25:16,Rust provides performance and efficiency benefits,Performance benefits,106
2039,40:47,"Crates are packages, Cargo is the package manager",Crates and Cargo,106
2040,44:33,WebAssembly allows running Rust code in the browser,WebAssembly,106
2041,00:31,"ECMAScript modules are breaking things if you don't use them",ESM breaking,107
2042,01:06,"Converted app to ESM, deployed, waited for Sentry errors but only 1 minor issue",ESM deploy,107
2043,02:39,ECMAScript modules are now a spec so implemented consistently across platforms,ESM spec,107
2044,03:12,Meteor used import syntax by default which made transition easier,Meteor import,107
2045,05:06,ECMAScript modules have some benefits but also some downsides over CommonJS,ESM pros/cons,107
2046,07:30,CommonJS was good when it was the only option but now we have interop issues,CJS History,107
2047,07:50,ECMAScript modules being a spec means implementations have to follow it,ESM spec,107
2048,10:48,ECMAScript modules enable better tree shaking since dependencies are static,ESM tree shake,107
2049,11:01,ESM allows import syntax natively in the browser,ESM browser,107
2050,12:37,Top level await in ESM modules avoids needing wrappers,TopLevel await,107
2051,13:25,Queues can help manage async side effects from purchases,Queues,107
2052,16:14,Logging is complex - what/where/how long to keep logs,Logging,107
2053,16:27,Eventually ESM will allow imports from URLs without local modules,Remote ESM,107
2054,18:09,Import assertions will allow importing non-JS files like JSON,Import assertions,107
2055,19:38,Currently require JSON in CJS but have to use APIs in ESM,ESM import JSON,107
2056,21:05,Flipping to ESM requires changing package.json type and extensions,Flipping to ESM,107
2057,22:35,.mjs extensions help gradually move existing CJS to ESM,mjs extensions,107
2058,23:01,ESM can import CJS but CJS cannot import ESM without wrappers,CJS import ESM,107
2059,23:45,Some packages going ESM only so forcing switch for consumers,ESM only packages,107
2060,24:05,Used codemod to automatically convert requires to imports,Codemod,107
2061,03:03,Scott wants mixins in CSS,mixins,108
2062,05:20,Wes wants to select CSS grid rows,grid rows,108
2063,06:15,Scott wants a range selector in CSS,range selector,108
2064,09:37,Wes wants first/last column/row selectors,first/last,108
2065,12:17,Scott wants native fit-text in CSS,fit-text,108
2066,13:46,Scott wants overflow scroll and visible,overflow,108
2067,18:19,Scott wants color functions,color funcs,108
2068,20:38,Wes wants native lighten/darken colors,lighten/darken,108
2069,22:40,Wes wants resize handles on divs,resize handles,108
2070,27:14,Wes wants overflow styles,overflow styles,108
2071,00:26,Announcer introduces Syntax supper club podcast,Intro,109
2072,00:47,Caleb Porzio is the guest,Guest intro,109
2073,01:15,"Caleb is from Canada near Buffalo but Canada doesn't have Target or Trader Joe's",Canada,109
2074,02:37,Wes used to work at Target,Wes at Target,109
2075,02:51,Buffalo is very Canadian with Tim Hortons and Labatt Blue,Buffalo Canadian,109
2076,03:37,Michigan is also very Canadian culturally,Michigan Canadian,109
2077,03:52,Underage drinking trips to Canada,Underage drinking,109
2078,04:07,Caleb used to mail stickers from Buffalo for cheaper postage,Sticker mailing,109
2079,05:14,Watching Buffalo TV channels growing up in Canada,Buffalo TV,109
2080,00:31,Overview of State of JS survey,Survey overview,110
2081,01:17,Take survey results with grain of salt,Caution,110
2082,02:41,"Don't judge libraries by survey fluctuation",No judging,110
2083,03:14,Shout out to creator Sasha for great work,Sasha shoutout,110
2084,03:58,Data visualizations are inspiration for devs,Inspiration,110
2085,04:35,Compare survey countries to Syntax countries,Country compare,110
2086,05:20,Survey countries different than Syntax,Countries differ,110
2087,05:38,"India top free, Germany paid listener",India vs Germany,110
2088,07:04,"Most salaries 50k-100k, then 100k-200k",Salary ranges,110
2089,07:48,Cool salary vs experience data explorer,Data explorer,110
2090,08:10,Filter US salary by experience trends,Salary trends,110
2091,00:45,Container queries intro,Intro,111
2092,01:31,Use cases for container queries,Use cases,111
2093,04:00,Reusability with container queries,Reuse,111
2094,05:07,Requested CSS feature,Requested,111
2095,06:08,Containment context,Context,111
2096,07:52,Container perf,Perf,111
2097,08:00,Container type and name,Type/name,111
2098,09:20,Container type normal,Normal,111
2099,10:04,Container style queries,Style queries,111
2100,13:10,Vertical text layout,Vertical,111
2101,14:16,New container query units,Units,111
2102,15:41,Font sizing with container queries,Fonts,111
2103,17:00,Replace JS with CSS,Replace JS,111
2104,17:40,Range media query syntax,Range syntax,111
2105,18:46,Syntax examples,Examples,111
2106,19:26,Border radius example,Radius,111
2107,21:08,Code block width example,Code block,111
2108,21:57,Variables in queries,Variables,111
2109,22:18,Excitement about container queries,Excitement,111
2110,22:37,Browser support,Support,111
2111,23:23,Safari auto updates,Safari updates,111
2112,24:32,Container query polyfill,Polyfill,111
2113,00:26,Intro to Syntax Supper Club podcast with Sanity,Intro,112
2114,00:39,Guests are Espin Hovlandsall and Simonsfell from Sanity,Guest intro,112
2115,01:55,Espin gives a quick intro - works at Sanity. Simons gives a quick intro - CTO and cofounder,Guest intros,112
2116,02:44,"Simons explains Sanity is a customizable, open source content platform",Sanity overview,112
2117,05:52,"Sanity can power websites, apps, signage - unified content",Use cases,112
2118,07:30,Discussion of Sanity Studio 3 - a customizable editing experience,Studio 3 intro,112
2119,08:01,Studio is built in React for customizability,React studio,112
2120,10:41,Example of building Syntax podcast functionality into Sanity Studio,Syntax demo,112
2121,13:13,"Sanity provides content APIs, but you choose how to fetch in your app",Content APIs,112
2122,14:50,"Explanation of Sanity's Grok query language",Grok explained,112
2123,18:32,Grok has been surprisingly popular compared to expectations,Grok popularity,112
2124,19:11,Power and flexibility of Grok for queries,Grok benefits,112
2125,21:09,Discussion about popularity and use cases of GraphQL,GraphQL discussion,112
2126,25:11,GraphQL encourages more holistic data fetching vs REST,GraphQL vs REST,112
2127,00:33,Scott injured his knee slipping on socks,Knee injury,113
2128,01:24,Introduction to first potluck question on HTML tags,HTML question,113
2129,02:37,"HTML tags like article/section are just ""fancy"" divs",HTML tags,113
2130,03:16,"Section groups elements, article for standalone content",Sections vs Articles,113
2131,05:33,Semantic structure important despite fancy divs,HTML semantics,113
2132,06:51,"Sections shouldn't just be styling wrappers",Section usage,113
2133,08:05,Recession impacts most businesses including ours,Recession woes,113
2134,09:31,"Haven't raised prices due to recession despite inflation",No price raises,113
2135,10:32,Always run business conservatively to prepare for downturns,Conservative business,113
2136,12:40,Shocking that someone making $120K buys a $120K car,Expensive cars,113
2137,14:04,"Dave's philosophy on buying cars with cash, not just payments",Cash cars,113
2138,14:50,Pay employees instead of fancy cars for bosses,No boss cars,113
2139,15:47,Question about personal budgeting tools and methods,Budgeting question,113
2140,17:01,Scott uses YNAB currently but trying out Copilot,YNAB and Copilot,113
2141,19:24,"Wes doesn't track detailed budget, just balances",No fancy budget,113
2142,20:54,Question about JS module bundlers/module formats,JS modules question,113
2143,21:36,"AMD/UMD more legacy, ES Modules is modern standard",ES Modules standard,113
2144,23:06,"Don't use old systems like Bower anymore",No Bower,113
2145,02:33,Overview of buy vs build services,Overview,114
2146,03:40,Cost of services vs cost of building,Cost,114
2147,04:05,Financial burden of services,Burden,114
2148,07:12,Evaluate time to build vs use service,Evaluate,114
2149,09:51,"Company's core business vs maintaing service",Business,114
2150,10:03,Escapability from services,Escapability,114
2151,15:17,Hosted APIs pros and cons,APIs,114
2152,19:39,Cron jobs as a service,Cron jobs,114
2153,20:48,Checkout services,Checkout,114
2154,24:30,Hosting services,Hosting,114
2155,26:10,Open graph image services,OG Images,114
2156,27:28,Search services,Search,114
2157,30:32,Custom search vs dedicated service,Custom search,114
2158,33:36,Auth services,Auth,114
2159,36:59,Image services,Images,114
2160,37:53,Video hosting services,Video,114
2161,02:33,"Katherine talked about how she couldn't make a website look right when first learning HTML/CSS",Learning pains,115
2162,08:01,Katherine majored in French literature in college before transitioning to coding,Career change,115
2163,10:24,Katherine recommends coding bootcamps but notes varying quality across programs,Bootcamp recommendation,115
2164,20:50,Katherine got interested in data visualization after using D3 for a simple chart,Discovering data viz,115
2165,27:36,Katherine worked at WeWork during its decline but was insulated from the chaos,WeWork chaos,115
2166,31:26,Katherine notes data visualization is being used for compelling news stories,Data viz journalism,115
2167,35:10,Tangible uses Django on the backend and React on the frontend,Stack overview,115
2168,42:35,"Katherine doesn't know much about sustainable website hosting but suggests Scope3",Sustainable hosting,115
2169,02:33,Puts all his tools in a cold room in the basement called the Cantina,Cold room,116
2170,03:57,Took kids skiing over holidays and had them do indoor ski lessons on treadmills,Indoor skiing,116
2171,07:18,Want to make container queries his default mode of working responsively this year,Container queries,116
2172,09:13,Wants to ship something with Rust this year,Rust app,116
2173,09:38,Has never done any machine learning but wants to ship something using it,Machine learning,116
2174,10:39,Wants to ship his breaking app using Touri this year,Touri app,116
2175,14:52,Wes plans to create a course on container queries,Container course,116
2176,15:27,Wes wants to build a larger production app in Svelte,Svelte app,116
2177,23:48,Wes built a Vite plugin to list directory contents,Vite plugin,116
2178,31:15,Scott is going to focus on cardio training this year,Cardio training,116
2179,33:03,Scott plans to enter dance battles and competitions this year,Dance battles,116
2180,36:07,Wes wants to lose 20 pounds this year,Lose weight,116
2181,37:14,Wes was diagnosed with ADHD and is figuring out medication,ADHD diagnosis,116
2182,42:07,Scott wants to improve his interview skills on the podcast this year,Interview skills,116
2183,02:04,"TypeScript fundamentals and the satisfies and 'as const' techniques",TypeScript,117
2184,04:07,"Explain 'as const' to create read-only frozen objects and infer types","'as const'",117
2185,08:47,"Use of 'as const' for objects, arrays and generating types from data","'as const' examples",117
2186,14:17,"Introducing the new 'satisfies' syntax in TypeScript 4.9","'satisfies'",117
2187,15:36,"Use cases for 'satisfies' with 'record' types and unknown metadata","'satisfies' metadata",117
2188,18:47,"How 'satisfies' allows better type inference and IntelliSense","'satisfies' benefits",117
2189,20:51,"'as const' is only at compile time, need Object.freeze() at runtime","'as const' runtime",117
2190,01:35,Sarah Drasner discusses writing new book Engineering Management for the Rest of Us,Book discussion,118
2191,02:33,Sarah is Director of Engineering at Google working on web infrastructure,"Sarah's job",118
2192,05:00,Transition from engineer to management is difficult,Transition to management,118
2193,07:56,"Manager's job is to help engineers be productive",Manager responsibilities,118
2194,10:12,"Align employee's interests with company needs",Employee alignment,118
2195,13:21,Learn from good and bad managers,Learning from managers,118
2196,16:07,Manager coding depends on company needs,Managers coding,118
2197,21:20,Employees often leave due to poor managers,Why employees leave,118
2198,23:04,Conflict management is an unexpected manager duty,Conflict management,118
2199,26:36,Process should help not hinder productivity,Evaluating process,118
2200,31:29,Sarah wrote book over 2 years using Scrivener,Writing the book,118
2201,35:26,"Published through Egghead's Skills Recordings",Publishing the book,118
2202,37:47,Typed book in Scrivener instead of Word,Book writing tool,118
2203,39:35,Sarah improved writing working with Chris Coyier,Improved writing,118
2204,41:30,Sarah stays motivated by helping others learn,Staying motivated,118
2205,43:36,Align people to the why for motivation,Motivation alignment,118
2206,00:28,Wes and Scott introduce themselves and the podcast episode topic of web development predictions for 2023,Intro,119
2207,01:30,Server side rendering with JavaScript will become more popular,SSR JS,119
2208,02:35,Using core browser features and sticking to web standards will increase,Browser APIs,119
2209,03:38,React will improve form handling,React forms,119
2210,04:42,Other frameworks utilizing browser APIs better than React,Frameworks,119
2211,05:43,"TypeScript 'inferred' types will become more popular",Inferred types,119
2212,08:08,Deno will continue to gain adoption and become more usable,Deno adoption,119
2213,11:04,Node.js will be able to run TypeScript natively,Node TS,119
2214,12:51,"JavaScript runtimes like Node, Deno and Bun will mature",JS runtimes,119
2215,13:43,Bun could become the recommended runtime for many libraries by end of 2023,Bun popular,119
2216,15:02,A new TypeScript bundler written in Rust will emerge,Rust TS bundler,119
2217,19:08,Progress on standardizing JavaScript APIs like Temporal,JS APIs progress,119
2218,23:30,Browsers implementing the page transitions API,Page transitions API,119
2219,24:18,The Winter CG spec for standardizing web backends will gain adoption,Winter CG spec,119
2220,27:47,Alternative JS frameworks like Solid and Quick will gain popularity,Alt frameworks,119
2221,31:29,SvelteKit will see major adoption increases,SvelteKit popular,119
2222,34:25,The Rust programming language will continue to gain popularity,Rust popular,119
2223,37:28,The React beta docs will finally launch after a multi-year dev cycle,React docs,119
2224,38:38,CSS container queries will start being used in production,Container queries,119
2225,03:41,Response types success or failure,Union types,120
2226,04:12,Narrowing from wide to specific type,Type narrowing,120
2227,05:23,querySelector can return undefined or element,Query example,120
2228,06:26,Narrow type from multiple to one option,Narrow options,120
2229,08:20,Type guards do the narrowing,Type guards,120
2230,09:47,typeof checks type,typeof operator,120
2231,10:13,Check if property exists on type,Property check,120
2232,10:43,Truthy falsy checks,Truthy falsy,120
2233,15:20,Custom utility methods for checking type,Utility methods,120
2234,15:43,If/else narrows types,If else narrowing,120
2235,16:22,Predicates explicitly narrow types,Type predicates,120
2236,18:47,Predicates return narrowed type,Predicate return types,120
2237,01:02,Tool for web developers called Polypane,Polypane intro,121
2238,05:43,Started working on Polypane in 2015,Polypane origin,121
2239,08:35,Polypane helped speed up implementing designs by 60%,Polypane benefits,121
2240,09:47,Polypane browser built with Electron and React,Polypane tech stack,121
2241,14:19,Polypane URL bar and other browser features are custom built,Custom browser features,121
2242,15:30,Polypane dev tools are custom built for multi-pane experience,Custom dev tools,121
2243,16:44,Polypane dev tools allow custom overlays like accessibility alt text,Dev tool overlays,121
2244,21:37,Polypane has visual outline mode showing tab order,Tab order outline,121
2245,23:33,Polypane tools are focused on accessibility testing,Accessibility tools,121
2246,26:56,"Polypane written in JavaScript, not much native code",JavaScript focused,121
2247,30:24,"Rulers, guides, and overlays inspired by Sketch",Sketch inspiration,121
2248,32:10,Hover and focus syncing across panes speeds up workflow,Hover sync,121
2249,35:23,"One-click tools to disable CSS, JS, images for testing",One-click testing,121
2250,36:31,Simulators for various disabilities built-in,Disability simulators,121
2251,43:05,Hover effects sync across panes automatically,Hover sync,121
2252,44:40,Polypane available for free and paid plans,Pricing,121
2253,00:01,Reviewing 2022 predictions,predictions review,122
2254,01:50,Reviewing prediction that Svelte and SvelteKit would gain popularity,svelte prediction,122
2255,02:26,SvelteKit 1.0 released recently showing prediction was right,sveltekit released,122
2256,04:59,"Next.js didn't release data layer but got nested routing",nextjs prediction,122
2257,05:10,Web components like OpenUI got more popular,web components,122
2258,06:19,Rust language continued gaining popularity,rust popular,122
2259,07:01,"Rome tools didn't take off as predicted",rome tools,122
2260,08:32,Deno exploded in popularity this year,deno popular,122
2261,09:12,TypeScript definitively became the winner,typescript won,122
2262,10:01,Serverless and cloud functions grew in popularity,serverless popular,122
2263,10:58,Tailwind CSS doubled its installs,tailwind popular,122
2264,11:25,"Open props didn't take off yet",open props,122
2265,13:40,Debate around Tailwind remains divisive,tailwind debate,122
2266,15:51,GraphQL remained steady without much change,graphql steady,122
2267,18:13,Next gen dev tools like GitHub Copilot emerged,dev tools emerged,122
2268,19:12,Big year for dev tools like those for Rust,dev tools big year,122
2269,20:33,CSS container queries shipped,container queries shipped,122
2270,21:48,"GraphQL didn't see big changes",graphql not changed,122
2271,26:27,Deno exploded in popularity as predicted,deno exploded,122
2272,32:38,TypeScript has become dominant,typescript dominant,122
2273,35:13,Server-side development regained popularity,server-side popular again,122
2274,36:25,Payment processors remained mostly the same,payment processors unchanged,122
2275,37:46,Alternative platforms like Lemon Squeezy emerging,alternative payment platforms,122
2276,43:56,Auth0 powered ChatGPT signups successfully,auth0 handled chatgpt traffic,122
2277,46:37,Temporal API not shipped yet but progress made,temporal api progress,122
2278,47:08,Remote dev through GitHub features became popular,remote github dev popular,122
2279,04:04,Discussing building desktop applications,Desktop apps,123
2280,04:16,"Scott's experience building Electron desktop apps",Scott Electron,123
2281,05:30,"Scott's interest in Tori for desktop apps",Scott Tori,123
2282,06:34,Wes building a desktop app with Electron,Wes Electron,123
2283,08:14,The process of building the Electron app,Building Electron,123
2284,10:17,What Electron is and how it works,Electron overview,123
2285,11:05,Overview of Tori and how it differs from Electron,Tori overview,123
2286,15:43,Tori uses browser APIs instead of separate processes,Tori APIs,123
2287,17:58,How Electron uses separate processes,Electron processes,123
2288,18:33,Communication between processes in Electron,Electron IPC,123
2289,19:04,Tori runs everything in the client,Tori client,123
2290,20:05,Drawback is less docs/community for Tori,Tori drawbacks,123
2291,21:27,Challenges of shipping desktop apps to stores,Shipping apps,123
2292,23:42,Tooling to get started with Electron,Electron tooling,123
2293,25:15,"Scott's experience with Electron tooling",Scott tooling,123
2294,02:33,Started working in aerospace as machinists,Aerospace machinists,124
2295,03:11,Bought a home at 23 in Orange County,Early homeowner,124
2296,03:51,Started learning web development on the side,Self-taught web dev,124
2297,04:34,Led team managing marketing and ecommerce,Marketing leader,124
2298,05:29,Built Shopify theme from scratch while doing ERP implementation,Shopify developer,124
2299,06:36,Realized coding was true passion after building Shopify theme,Passion for coding,124
2300,08:23,COVID shutdowns changed plans in March 2020,COVID shutdowns,124
2301,10:14,Had to rebuild team after COVID shutdowns,Rebuilding team,124
2302,11:08,Took second full-time job at ResortPass while burnt out,Second full-time job,124
2303,13:01,Offered to train replacement but company wanted him to stay,Company wanted to keep,124
2304,14:23,"Works mornings for ResortPass, afternoons for pomade company",Two full-time jobs,124
2305,00:26,David East introduces himself and talks about working on Firebase for 10 years,Introduction,125
2306,05:20,IDX allows you to create new projects and makes development environment setup easier,IDX overview,125
2307,08:00,Teaching workshops is difficult when participants have trouble with environment setup,Workshop challenges,125
2308,14:25,IDX uses Nix for package management instead of Docker,Nix package manager,125
2309,17:23,Many companies use cloud-based development environments instead of local setups,Cloud dev environments,125
2310,23:04,Performance and speed are critical for IDX to provide a local-like experience,Importance of performance,125
2311,26:48,Closing browser tabs closes IDX workspace which can be confusing,Browser tab closing,125
2312,31:09,Mesh networks are difficult to setup properly,Mesh network troubles,125
2313,35:11,IDX could use less memory than local VS Code since background tasks run remotely,Memory usage,125
2314,44:33,iPhone and Android emulator support allows testing mobile apps,Mobile emulators,125
2315,50:31,David has worked at Google on Firebase for 8 years,Product longevity,125
2316,00:31,Potluck Q&A questions,Q&A,126
2317,01:50,Website feedback and improvements,Website,126
2318,02:48,LevelUp Tutorials redesign rationale,Redesign,126
2319,05:18,Rewriting systems and APIs,Rewrites,126
2320,06:57,Transitioning LevelUp to new tech stacks,Transitions,126
2321,08:17,Evolving subscription model,Subscriptions,126
2322,10:16,Intentional tech decisions over time,Decisions,126
2323,11:45,Incremental TypeScript adoption,TypeScript,126
2324,19:36,Improving site performance,Performance,126
2325,20:10,Value of Twitter community,Twitter,126
2326,23:24,Thoughts on Twitter Blue subscription,Twitter Blue,126
2327,25:29,Future of social media communities,Social media,126
2328,26:41,Mastodon as a Twitter alternative,Mastodon,126
2329,31:30,Benefits of standalone course model,Courses,126
2330,32:53,Challenges of standalone course model,Challenges,126
2331,38:52,Transitioning to freelancing,Freelancing,126
2332,41:08,Traits of senior developers,Senior devs,126
2333,43:30,Gaining confidence as a senior dev,Confidence,126
2334,44:38,Notification management strategies,Notifications,126
2335,47:06,Scheduling focused work time,Focus time,126
2336,48:27,Hazel for automated file management,Hazel,126
2337,49:57,Dealing with HEIC image formats,HEIC images,126
2338,51:27,Label makers for organization,Label makers,126
2339,54:29,Freshbooks cloud accounting,Freshbooks,126
2340,55:12,Popular JS testing frameworks,Testing,126
2341,56:28,Vitest for faster testing,Vitest,126
2342,57:19,Tanstack router overview,Tanstack,126
2343,59:49,Preferred frameworks and routers,Frameworks,126
2344,01:00:15,Tanstack Query overview,Tanstack Query,126
2345,01:01:12,"Scott's label maker sick pick",Label maker,126
2346,01:01:20,"Scott's thermostat automation",Thermostat,126
2347,01:03:22,"Wes's WeCrashed show pick",WeCrashed,126
2348,01:05:33,"Scott's LevelUp plug",LevelUp,126
2349,01:06:09,"Wes's course plug",Courses,126
2350,00:30,Talking about serverless databases,serverless databases,127
2351,01:46,Overview of Prismic as a headless CMS,Prismic CMS,127
2352,02:39,Examples and demos on the Prismic website,Prismic demos,127
2353,02:49,Redirecting traffic from wrong domain names,domain redirect,127
2354,03:27,Benefits of serverless computing,serverless benefits,127
2355,05:13,Server rendered website with Deno and PlanetScale,Deno server render,127
2356,06:39,Using a Node package with Deno for MySQL access,Deno MySQL,127
2357,08:05,Fast deployment times with Deno Deploy,Deno Deploy,127
2358,10:45,PlanetScale handles MySQL connection pooling,PlanetScale pooling,127
2359,11:58,Stateless databases for serverless,stateless databases,127
2360,12:36,Edge database replication is tricky,edge database,127
2361,13:48,PlanetScale focuses on scaling and performance,PlanetScale perf,127
2362,15:03,Stress testing serverless database setup,stress test,127
2363,17:40,Serverless database options,database options,127
2364,18:23,Benefits of open standard databases,open databases,127
2365,19:06,Overview of Fauna serverless database,Fauna database,127
2366,20:47,Other proprietary and open source options,more options,127
2367,24:18,MongoDB Atlas serverless offering,MongoDB serverless,127
2368,25:19,Challenges converting existing apps,conversion challenges,127
2369,26:50,Preferred solutions for new serverless projects,preferred solutions,127
2370,00:36,Making videos programmatically with React,Remotion intro,128
2371,01:23,Johnny excited to be on Syntax podcast,Excited guest,128
2372,02:18,Johnny created Remotion 18 months ago,Remotion origin,128
2373,04:05,Johnny motivated to make videos in code instead of After Effects,After Effects motivation,128
2374,07:00,Successful products often come from solving dev problems,Solving dev problems,128
2375,08:35,Remotion used for marathon finish videos,Marathon videos,128
2376,12:10,Remotion uses Puppeteer and FFmpeg to render React components,Stack overview,128
2377,15:07,"Remotion has no constraints, anything that works in browser can be used",No constraints,128
2378,16:40,Each frame must be idempotent for parallel rendering,Idempotent frames,128
2379,19:46,Video is a function from time to image,Video as function,128
2380,21:45,Helper packages add functionality beyond core Remotion,Helper packages,128
2381,00:26,Overview of JavaScript results from Web Almanac,Overview,129
2382,02:33,Michigan beat Ohio State in football,Football,129
2383,03:48,Wes recovering from bad flu,Sick,129
2384,04:09,Web Almanac JS is just chapter 2 of 23,Web Almanac,129
2385,05:15,Median JS payload is 509kb on desktop,JS payload,129
2386,00:29,Discussion on different rendering methods from State of JS survey,Rendering methods,130
2387,00:45,Overview of list of rendering methods,List overview,130
2388,02:26,Single Page Application (SPA),SPA,130
2389,07:36,Multi-Page Application (MPA),MPA,130
2390,08:38,Static Site Generation (SSG),SSG,130
2391,11:42,Server-side Rendering (SSR),SSR,130
2392,13:08,Partial Hydration,Partial Hydration,130
2393,14:24,Progressive Hydration,Progressive Hydration,130
2394,15:56,Island Architecture,Island Architecture,130
2395,16:35,Progressive Enhancement,Progressive Enhancement,130
2396,18:31,Incremental Static Generation (ISG),ISG,130
2397,19:51,Streaming SSR,Streaming SSR,130
2398,19:56,Resumability,Resumability,130
2399,22:05,Edge Rendering,Edge Rendering,130
2400,02:33,Vu Le works at Disney building internal CMS and tools,Internal Tools,131
2401,03:33,Vu transitioned from marketing to coding via online resources and projects,Career Change,131
2402,05:13,Vu was recruited by Disney for a contract role initially,Recruited by Disney,131
2403,07:52,Vu works on tools for direct to consumer products like Disney Plus,Consumer Products,131
2404,09:02,Vu builds CMS tools on legacy systems using modern stacks,Legacy Systems,131
2405,12:33,They use federated GraphQL APIs,GraphQL APIs,131
2406,15:22,UX focused on usability for complex workflows,UX Focused,131
2407,19:02,Frontend built in React with component library,React Stack,131
2408,24:12,Focus on testing for reliability,Reliability Testing,131
2409,31:01,Distributed team working remotely,Remote Team,131
2410,33:41,Flexible work policies up to teams and managers,Flexible Work,131
2411,35:15,Employees get Disney Plus bundle,Disney Perks,131
2412,38:35,Vu uses MacBook Pro and custom mechanical keyboard,Hardware Setup,131
2413,00:11,Discussing petty preferences and readable code,Preferences,132
2414,00:54,"Sponsored by Linode, LogRocket and FreshBooks",Sponsors,132
2415,01:06,Scott launching a site this week,Site launch,132
2416,02:13,Getting feedback before launch vs after,Feedback,132
2417,02:23,Feeling exhausted from prepping for launch,Exhausted,132
2418,02:33,Function definitions vs arrow functions,Functions,132
2419,03:10,Prefer named functions over arrow in variables,Named functions,132
2420,03:35,TypeScript makes arrow functions convenient,TypeScript,132
2421,00:01,GitHub Next projects,GitHub upcoming projects,133
2422,02:15,Firefox enables container queries,Firefox container queries,133
2423,05:34,Sponsors: Linode and LogRocket,Sponsors,133
2424,07:56,GitHub Next website overview,GitHub Next,133
2425,09:03,GitHub Copilot CLI,Copilot CLI,133
2426,13:53,GitHub voice coding,Voice coding,133
2427,16:57,GitHub Blocks,GitHub Blocks,133
2428,18:57,GitHub code search,Code search,133
2429,22:03,GitHub collaborative workspaces,Collaborative workspaces,133
2430,24:01,GitHub Copilot for own codebase,Copilot own code,133
2431,25:13,GitHub Copilot Radar,Copilot Radar,133
2432,26:48,GitHub Copilot Labs,Copilot Labs,133
2433,29:25,GitHub AI for pull requests,AI pull requests,133
2434,02:33,Bun is faster than Node,Bun vs Node,134
2435,04:10,Bun has a plugin system like Esbuild,Bun plugins,134
2436,05:25,Safari team optimizes JavaScriptCore engine,JavaScriptCore,134
2437,08:51,"Bun name comes from creator's friend's bunny",Bun name,134
2438,12:12,No immediate plans for linting in Bun,No linting,134
2439,15:45,Bun optimized WebStreams API,Fast streams,134
2440,18:41,Bun has custom JSX transform,JSX transform,134
2441,21:14,Recreating VS Code takes massive effort,VS Code effort,134
2442,25:15,"Creator learned Ruby, Objective-C, JavaScript",Creator background,134
2443,29:18,Bun architecture works for embedded systems,Embedded systems,134
2444,30:14,Package.json is like an import map,Package.json,134
2445,31:45,Hard to make existing projects much faster,Legacy speed,134
2446,33:23,Bun testing library 40x faster than Jest,Fast testing,134
2447,00:11,"Potluck questions on Twitter usage, CRUD vs WebSockets, if CRUD is amateur, Playwright testing",Topics,135
2448,00:33,"Sponsors: Prismic, Sanity, LogRocket",Sponsors,135
2449,01:02,Scott launching Level Up Tutorials site soon,Scott update,135
2450,01:55,Wes recording TypeScript course and making TikToks,Wes update,135
2451,02:23,Finding creativity through making short-form content,Short-form content,135
2452,02:51,How to use Twitter to stay updated in web dev,Using Twitter,135
2453,03:52,"Curate who you follow, check blog post authors",Curate follows,135
2454,04:30,Follow then unfollow if bad content,Unfollow,135
2455,04:55,Avoid using Twitter topics and suggestions,Avoid topics,135
2456,05:13,"Use mute liberally on people, topics, keywords",Use mute,135
2457,05:34,Use TweetDeck for viewing tweets,TweetDeck,135
2458,05:52,"Concerns about TweetDeck's future",TweetDeck future,135
2459,06:41,Twitter turmoil may change landscape,Twitter turmoil,135
2460,08:22,Canadian block (block then unblock) to unfollow,Canadian block,135
2461,09:02,"Follow people posting demos, not influencers",Follow demos,135
2462,10:32,"Look at replies to Wes and Scott's questions for experts",Reply experts,135
2463,10:48,Future episode on amazing Twitter follows,Twitter follows episode,135
2464,12:12,"CRUD is request/response, real-time is constant connection",CRUD vs real-time,135
2465,12:59,WebSockets allow real-time data push and listen,WebSockets,135
2466,15:07,"Humorous breakdown of Google's messaging history",Google messaging,135
2467,00:30,Discussing limitations of serverless functions,Serverless limits,136
2468,00:46,Function size limits,Size limits,136
2469,01:03,Sponsor - Sentry error monitoring,Sentry ad,136
2470,02:05,Sponsor - Magic Bell notifications,Magic Bell ad,136
2471,03:24,Serverless use cases and tradeoffs,Tradeoffs,136
2472,04:26,Serverless constraints vs traditional servers,Constraints,136
2473,04:45,Function code size limits,Code size,136
2474,05:14,Node module sizes add up quickly,Node modules,136
2475,05:32,Puppeteer hits size limit,Puppeteer,136
2476,06:30,Chromium is too big for functions now,Chromium size,136
2477,07:30,Layers can workaround size limits,Layers,136
2478,08:54,Limited Node support in Cloudflare Workers,Node support,136
2479,09:51,Database access not straightforward,Database access,136
2480,10:31,Not all providers support cron jobs,Cron jobs,136
2481,11:23,Local dev environments differ,Local dev,136
2482,11:48,Sharing code can be difficult,Sharing code,136
2483,12:51,"Bundling doesn't always optimize",Bundling,136
2484,13:31,Environment variable size limits,Env vars,136
2485,14:39,Execution timeouts are short,Timeouts,136
2486,15:49,Additional services add up in cost,Costs,136
2487,16:14,Need to know AWS well,Learn AWS,136
2488,17:01,Account costs even before usage,Account costs,136
2489,17:58,Infrastructure as code is crucial,Infra as code,136
2490,18:35,Cold start issues can happen,Cold starts,136
2491,19:18,Search offerings not ideal,Search issues,136
2492,19:49,Algolia is expensive at scale,Algolia cost,136
2493,00:00,Intro to Syntax Supper Club,Intro,137
2494,00:37,Welcome from Scott,Welcome,137
2495,00:52,Talking about non-coding topics,Non-coding,137
2496,02:08,Sponsor spots,Sponsors,137
2497,02:52,Holiday plans discussion,Holidays,137
2498,03:23,Wes family plans for holidays,Wes plans,137
2499,04:25,Discussion of Saskatoon berries,Berries,137
2500,05:00,Reality TV draft game explanation,Draft game,137
2501,06:15,Strategy for reality TV draft picks,Draft strategy,137
2502,07:16,Amazing Race Canada discussion,Amazing Race,137
2503,08:02,Discussion of movie Rat Race,Rat Race,137
2504,08:16,Other reality shows watched,Other shows,137
2505,09:00,Discussion of home reno shows,Home reno,137
2506,09:31,Behind the scenes of reality shows,Behind scenes,137
2507,10:33,"Friend's experience on dance show","Friend's experience",137
2508,11:13,Asked to be on HGTV show,Asked for show,137
2509,00:11,Responsive design techniques,Topic,138
2510,00:23,Sponsors,Ads,138
2511,00:42,Introduction,Intro,138
2512,00:50,Cleaning house,Chitchat,138
2513,02:21,Vacuum talk,Chitchat,138
2514,04:00,Responsive design talk,Topic,138
2515,05:04,Basic responsive technique,Responsive,138
2516,05:12,Definition of responsive design,Responsive,138
2517,05:21,Responsive on devices,Responsive,138
2518,05:33,Older adaptive techniques,History,138
2519,00:35,Introducing React Use hook for handling promises,React Use,139
2520,01:41,Sentry sponsor,Sentry,139
2521,02:45,Auth0 sponsor,Auth0,139
2522,05:29,Basics of React Use hook,Basics,139
2523,07:20,React Suspense and server components,Suspense,139
2524,08:26,Examples in Next.js 13,Next.js,139
2525,09:07,Footguns like checking for null data,Footguns,139
2526,10:11,Handling data on server side,Server side,139
2527,11:05,Similarities to React Query,React Query,139
2528,11:45,Why do we want React Use hook,Why Use,139
2529,13:00,Client vs server component APIs differences,API differences,139
2530,14:09,Concerns around hook exceptions,Hook exceptions,139
2531,15:00,Modifying built-ins like fetch and promises,Modifying built-ins,139
2532,16:24,MooTools and Smooshgate,Smooshgate,139
2533,18:08,Infinite loop footgun,Infinite loop,139
2534,19:08,Svelte compiler makes APIs nicer,Svelte compiler,139
2535,20:16,Fragmentation in React ecosystem,Fragmentation,139
2536,00:00,Introduction,Intro,140
2537,00:37,Wes introduces the podcast with Ryan Dahl,Intros,140
2538,01:05,"Wes and Ryan talk about Node's early days",Node history,140
2539,02:37,Ryan discusses why he still believes in JavaScript,JS future,140
2540,03:05,Ryan talks about the uncertain future of web in 2012,Web uncertainty,140
2541,04:06,Ryan says JavaScript will still be here in 5-20 years,JS longevity,140
2542,04:39,Ryan calls JS the default programming language,JS default,140
2543,05:38,Wes asks Ryan why he made Deno,Why Deno?,140
2544,05:49,Ryan talks about handing off Node to Linux Foundation,Node handoff,140
2545,06:03,"Ryan discusses Node's outdated C++ codebase",Node outdated,140
2546,06:40,Ryan says Rust has replaced C++,Rust replaces C++,140
2547,06:54,Wes agrees on Rust hype,Rust hype,140
2548,07:02,Ryan clarifies Rust no faster than C++,Rust vs C++,140
2549,07:13,"Ryan praises Rust's architecture",Rust architecture,140
2550,07:28,Ryan wanted to improve JS security,JS security,140
2551,07:48,Ryan regrets lack of security in Node,Node security,140
2552,08:06,Deno started as Node 2.0 experiment,Deno experiment,140
2553,08:16,Goals of Deno,Deno goals,140
2554,08:39,"Scott asks about Deno's bet on TypeScript",Deno and TS,140
2555,08:48,Scott says TS is how we write JS now,TS popularity,140
2556,09:16,"Wes asks Ryan's thoughts on TypeScript",Thoughts on TS,140
2557,09:25,Ryan sees TS as JS 2.0,TS as JS 2.0,140
2558,09:41,Ryan praises conservative design of TS,TS design,140
2559,09:54,Ryan discusses adding types to JS spec,Types in JS,140
2560,10:49,Wes jokes about CoffeeScript revival,CoffeeScript,140
2561,10:52,Ryan dislikes CoffeeScript syntax,CoffeeScript syntax,140
2562,11:02,Wes asks if TS will be added to browsers,TS in browsers,140
2563,11:18,"Ryan doesn't think browsers will do type checking",No type checking,140
2564,11:27,Ryan thinks browsers will support TS comments,TS comments,140
2565,11:52,Wes asks how Deno is made,Making Deno,140
2566,11:59,Ryan explains using V8 and Rust,V8 and Rust,140
2567,12:22,"Ryan talks about Deno's async runtime",Deno async,140
2568,12:31,Deno uses Tokio instead of libuv,Tokio not libuv,140
2569,12:41,Ryan optimized binding JS to native code,Binding optimizations,140
2570,12:52,Ryan says Deno supports NPM modules,NPM support,140
2571,13:14,Ryan talks about benchmarking Deno vs Node,Benchmarking,140
2572,00:21,CSS trends from HTTP archive that show actual web usage,CSS trends,141
2573,01:33,Installing smart light switches and dealing with unlabeled breaker boxes,Breakers,141
2574,03:57,Box sizing border box usage and techniques,Box Model,141
2575,05:41,CSS columns have specific use cases and are increasing in usage,Columns,141
2576,09:25,Aspect ratio usagestats and browser support issues,Aspect Ratio,141
2577,09:57,Transition property usage and best practices,Transitions,141
2578,13:04,Using individual transform properties like translate and rotate,Transforms,141
2579,15:14,Long transition durations and keyframe amounts,Animation Stats,141
2580,16:04,CSS sprite techniques with steps timing function,Sprites,141
2581,18:40,Use cases and options for CSS blend modes,Blend Modes,141
2582,23:59,Responsive design trends and anticipating container queries,Responsive Design,141
2583,00:28,Talking about short form content,Intro,142
2584,01:44,Century sponsors web development podcasts,Century ad,142
2585,02:50,Freshbooks provides good customer support,Freshbooks ad,142
2586,04:09,Popularity of short form video content,Short form,142
2587,05:15,Repurposing existing content for short videos,Repurposing,142
2588,06:42,Creating custom short videos from scratch,Custom videos,142
2589,08:08,TikTok algorithm surfaces varied content,TikTok algorithm,142
2590,09:31,Avoid manipulating algorithms with low quality content,Avoid manipulation,142
2591,12:10,Fake content performs well on platforms like Facebook,Fake content,142
2592,14:06,Share genuinely useful tips and explanations,Useful tips,142
2593,17:18,Discussion on repurposing vs custom content,Repurposing vs custom,142
2594,21:37,"Get right into the content, no intro",No intro,142
2595,22:20,Use on-screen text for thumbnails,On-screen text,142
2596,23:14,Avoid unnecessary music,No music,142
2597,24:38,Challenges of vertical video for code,Vertical video,142
2598,25:52,Strategies for showing code on small screens,Showing code,142
2599,26:48,Difficulty explaining details in 1 minute,1 minute limit,142
2600,28:16,YouTube Shorts limited to 60 seconds,YouTube limit,142
2601,31:55,Moving to text-based video editor Descript,Descript editor,142
2602,00:31,Wes and Scott introduce live stream,Intro,143
2603,01:16,Encouraging audience participation,Participate,143
2604,01:32,"Scott working on site redesign, fixing bugs",Redesign,143
2605,02:06,Safari aspect ratio bug crashing site,Bug,143
2606,03:22,Flexbox causing navigation wrapping bug,Bug,143
2607,04:04,Asking for audience questions,Questions,143
2608,04:30,Discussing Vercel announcements,Vercel,143
2609,05:06,"Vercel's new TurboPack bundler",TurboPack,143
2610,05:29,Entering post-Webpack era,Webpack,143
2611,05:51,Less plugin reliance in Vercel,Plugins,143
2612,06:10,TurboPackfaster than Vite,TurboPack,143
2613,06:43,"Possibility of switching Vite's engine",Vite,143
2614,00:01,Podcast intro,Intro,144
2615,00:01,Announcer introduces Syntax podcast,Announcer,144
2616,00:28,Introducing Zod schema validation,Zod intro,145
2617,01:15,What is Zod and why use it?,Zod overview,145
2618,01:37,Sponsor spots,Sponsors,145
2619,02:52,LogRocket can help debug Zod errors,LogRocket,145
2620,04:00,Linode sponsor spot,Linode,145
2621,04:05,Thanking Linode for sponsoring,Thanks Linode,145
2622,04:17,Running Minecraft server on Linode,Minecraft on Linode,145
2623,07:18,Back to Zod topic,Zod again,145
2624,07:33,Zod provides schema validation and type inference,Zod features,145
2625,08:59,Zod defines data shape,Zod data shape,145
2626,09:30,Zod generates types from validation,Zod type inference,145
2627,10:09,Zod validates data before generating types,Zod validate first,145
2628,10:21,Zod can validate strings and numbers,Zod validations,145
2629,11:45,Zod types are required by default,Zod default required,145
2630,12:10,Zod type inference is very useful,Zod inference useful,145
2631,13:45,Using Zod for DB and API validation,Zod for DB and API,145
2632,14:28,Zod as single source of truth,Zod single source,145
2633,14:44,Can export Zod to MongoDB JSON schema,Zod to MongoDB,145
2634,15:38,Adapting Zod to MongoDB JSON schema,Adapting Zod to MongoDB,145
2635,16:16,Zod plugins for APIs and integrations,Zod plugins,145
2636,16:27,Zod integrates across app,Zod integrates app,145
2637,17:29,Zod as single source of truth,Zod single source,145
2638,17:48,Zod provides runtime validation,Zod runtime validation,145
2639,18:35,Zod has useful helpers,Zod helpers,145
2640,19:00,Zod is fully featured,Zod full featured,145
2641,19:49,Comparing Zod to Joi,Zod vs Joi,145
2642,20:10,Comparing Zod to Yup,Zod vs Yup,145
2643,20:44,Comparing Zod to io-ts,Zod vs io-ts,145
2644,21:11,Zod is small but full featured,Zod small full featured,145
2645,21:41,Zod download stats,Zod downloads,145
2646,22:39,Zod has async validation,Zod async validation,145
2647,23:02,Where to learn more about Zod,Learn Zod,145
2648,23:34,Conclusion and recommendation,Conclusion,145
2649,02:27,Dr. Courtney Talinski introduces herself,Intro,146
2650,03:12,Many programmers seem to have ADHD,ADHD programmers,146
2651,04:51,Difference between ADHD and just being energetic or distracted,ADHD vs energetic,146
2652,09:29,ADHD symptoms need to significantly interrupt everyday life,ADHD criteria,146
2653,11:45,ADHD symptoms in adults working in offices,Adult ADHD,146
2654,15:31,Trouble with planning and staying on track,Planning struggles,146
2655,17:22,Tips for structuring your day with ADHD,Structuring tips,146
2656,00:20,First spooky story about using profane placeholder text,Bad text,147
2657,02:45,Story about enabling compression and crashing site,Site crash,147
2658,05:15,Sending same email hundreds of times to one user,Email flood,147
2659,13:00,Using deprecated framework and lack of documentation,Old code,147
2660,19:55,Changing GitHub username brought down Docker and more,Mass outage,147
2661,22:05,Deleting Mongo records on user delete,Data loss,147
2662,29:15,Deleting production database accidentally,DB deleted,147
2663,30:10,Accidentally streaming .env variables on Twitch,Stream leak,147
2664,04:07,Discussing buzzwords,buzzwords,148
2665,04:21,Defining schema,schema,148
2666,05:31,Schema in JS vs JSON,schema types,148
2667,06:43,Other schema languages,schema languages,148
2668,07:30,Explaining promises,promises,148
2669,08:57,Asynchronous vs synchronous,async vs sync,148
2670,12:24,Concurrent vs parallel,concurrent vs parallel,148
2671,13:18,DOM vs Shadow DOM vs HTML,DOM,148
2672,16:20,Methods vs functions,methods vs functions,148
2673,18:20,What are props?,props,148
2674,21:19,HTTP requests are stateless,stateless requests,148
2675,01:00,Sky uses GraphQL as aggregation and filtering layer for existing APIs,GraphQL Usage,149
2676,02:18,"Philippe works at Sky UK, supports products like Sky Showtime, Peacock",Guest Intro,149
2677,03:31,GraphQL abstracts calling multiple APIs into one response,GraphQL Benefits,149
2678,04:11,Frontend only sees one GraphQL API instead of multiple REST APIs,Frontend View,149
2679,06:39,"Sky has one central GraphQL team, other teams can optionally federate",Central GraphQL,149
2680,07:05,Frontend only interacts with the central GraphQL API,Single API,149
2681,11:13,GraphQL servers co-located with databases for fast network calls,Co-located Servers,149
2682,11:41,Frontend is standard React/Redux app,Frontend Stack,149
2683,13:28,Apollo client handles frontend GraphQL caching,Frontend Caching,149
2684,18:50,Built Apple TV and Desktop apps with React Native and Electron,Client Apps,149
2685,19:59,"Desktop app uses Electron, React and proprietary video player",Desktop Stack,149
2686,21:43,"Video stored in S3, distributed via CDNs like Akamai",Video Infrastructure,149
2687,25:01,Support live events by monitoring and reporting metrics,Live Event Support,149
2688,27:33,Auto-scale GraphQL functions to handle demand spikes,Auto Scaling,149
2689,30:27,GraphQL API written in TypeScript,TypeScript API,149
2690,00:36,Discussion of cringey web dev stories,Cringey stories,150
2691,01:04,Mention of Scott taking last episode solo,Last episode,150
2692,02:49,"Sponsorships from Sentry, Prismic, and Freshbooks",Sponsors,150
2693,03:11,First story about accidentally deleting exam questions,Exam questions,150
2694,04:42,Using global state caused performance issues,Global state,150
2695,06:18,Exams with too many questions overloaded the app,Overloaded app,150
2696,08:14,Suggestion to use React Virtualized for large lists,Virtualized lists,150
2697,09:23,Story about 404 alerts flooding phone with notifications,404 alerts,150
2698,13:12,Story about deleting orders instead of fixing them,Deleting orders,150
2699,14:27,Tiny database field caused form errors,Tiny database field,150
2700,16:54,Manager may have hid cost of tiny database mistake,Hid database mistake,150
2701,18:48,Story about lack of testing and code review at company,No testing or review,150
2702,20:53,"Accidentally moved form button, costing $1 million in sales",$1 million mistake,150
2703,01:14,Quick uses React patterns,Quick React,151
2704,02:05,Sentry helps track bugs,Sentry bugs,151
2705,02:53,Sanity is a content lake,Sanity content,151
2706,05:19,Quick created by Angular inventor,Quick Angular,151
2707,05:59,Quick uses JSX,Quick JSX,151
2708,06:36,JSX popular in frameworks,JSX popular,151
2709,06:49,"Scott doesn't like JSX",Scott no JSX,151
2710,08:29,SSR means server-side rendering,SSR,151
2711,09:15,Quick uses Vite,Quick Vite,151
2712,09:33,Quick eliminates hydration,No hydration,151
2713,12:11,Hydration is slow,Slow hydration,151
2714,12:43,Quick serializes state to HTML,Serialized state,151
2715,13:45,Quick ships HTML and JS,HTML and JS,151
2716,15:07,More logic on server,Server logic,151
2717,15:37,Lazy loading built-in,Lazy loading,151
2718,15:55,Selective re-rendering,Selective rendering,151
2719,16:35,Quick Optimizer tool,Optimizer tool,151
2720,17:21,No need to memoize,No memoization,151
2721,18:23,Adapter middleware model,Middleware model,151
2722,19:51,"Quick City adds routing, data",Quick City,151
2723,21:24,Using browser fundamentals,Browser fundamentals,151
2724,00:00,Intro,Intro,152
2725,00:37,Overview of tRPC,Overview,152
2726,02:52,tRPC functions call endpoints,Endpoints,152
2727,04:13,Caching similar to REST,Caching,152
2728,04:57,Configurable communication,Communication,152
2729,06:16,Has subscription support,Subscriptions,152
2730,06:33,Calling functions without requests,Functions,152
2731,07:28,Avoiding GraphQL spec generation,GraphQL,152
2732,09:15,Editor awareness across project,Editor,152
2733,09:39,No runtime info sent to client,Runtime,152
2734,10:39,Sponsor break - Polypane,Sponsor,152
2735,13:35,Role of Zod validation library,Zod,152
2736,14:40,Zod not required for tRPC,Not required,152
2737,15:00,Zod maps to TypeScript types,TypeScript,152
2738,16:16,Found Zod 2 years ago,Found Zod,152
2739,16:55,Required by default,Required,152
2740,00:12,Web Almanac provides web usage stats,Web stats,153
2741,00:41,Difference between developer survey stats and actual web usage stats,Usage stats,153
2742,01:27,"Sponsors: Prismic, LogRocket, FreshBooks",Sponsors,153
2743,02:18,Cleaning office on Fridays sets you up for success,Office cleaning,153
2744,02:47,Deep cleaning a vintage wolf stove,Cleaning stove,153
2745,03:58,"Barkeeper's Friend for cleaning pans and sinks",Cleaning tips,153
2746,04:36,Web Almanac methodology - scraping tons of websites,Methodology,153
2747,05:19,More mobile websites in dataset than desktop,Mobile vs desktop,153
2748,05:34,Surprised by high mobile usage compared to desktop,Mobile usage,153
2749,06:09,Many people never use computers anymore,No computer usage,153
2750,06:21,How do iPad coders use dev tools?,iPad coding,153
2751,02:33,Bookmarklets are JavaScript run on page click,Bookmarklets,154
2752,02:51,Store JavaScript snippets as browser bookmarks,Definition,154
2753,03:59,"Can select elements, loop, apply styles with bookmarklets",Use cases,154
2754,04:34,"Examples: find duplicate IDs, show hidden fields",Examples,154
2755,04:51,Use immediately invoked function expressions (IIFEs),IIFEs,154
2756,05:23,"Used for printing, removing header/footer, etc",Print CSS,154
2757,06:14,"More transparent than extensions, just JavaScript",Vs extensions,154
2758,07:19,Bookmarks toolbar not as popular anymore,Drawbacks,154
2759,07:42,Bookmarklet maker tool to generate code,Bookmarklet maker,154
2760,08:09,Can take user input with prompt() too,User input,154
2761,08:34,Forgotten technique but very useful,Forgotten but useful,154
2762,09:08,CSS Tricks - 6 useful bookmarklets,CSS Tricks post,154
2763,09:55,Like userscripts e.g. Greasemonkey,Greasemonkey,154
2764,00:57,Sponsored by 3 companies,Sponsors,155
2765,01:25,Guest is Dutch and from Michigan,Guest intro,155
2766,03:45,Difference between Vim and Neovim,Vim vs Neovim,155
2767,06:15,Why Neovim added Lua integration,Lua integration,155
2768,09:27,Benefits of Lua for non-web devs,Lua benefits,155
2769,11:55,Lua simplicity compared to JavaScript,Lua simplicity,155
2770,13:38,Neovim goal of adaptive UIs,Adaptive UIs,155
2771,17:56,Discussion of LunarVim Neovim distribution,LunarVim,155
2772,00:02,Welcome to Syntax podcast,Intro,156
2773,00:12,Using browser APIs instead of frameworks,Topic,156
2774,00:28,"Sponsors: Prismic, Sanity, LogRocket",Sponsors,156
2775,01:05,"Scott's been socializing with parents at kid's school",Scott update,156
2776,03:13,Wes ran popcorn machine at school event,Wes update,156
2777,04:29,Using browser APIs instead of frameworks,Topic,156
2778,05:26,Build with browser basics instead of frameworks,Browser basics,156
2779,06:54,URLSearchParams for query strings,URLSearchParams,156
2780,08:22,URLSearchParams has useful methods,URLSearchParams methods,156
2781,10:20,History API and pushState,History API,156
2782,11:41,Client-side routing uses History API,Client routing,156
2783,12:56,Hashbang URLs workaround before History API,Hashbang,156
2784,14:14,Internationalization API for formatting,Intl API,156
2785,15:15,Intl for formatting lists,Intl lists,156
2786,15:51,Intl useful even with one language,Intl,156
2787,17:19,FormData API gets form values,FormData API,156
2788,18:04,FormData turns form into data object,FormData object,156
2789,18:25,FormData frustrations with TypeScript,FormData TypeScript,156
2790,20:45,Sponsor: Prismic,Sponsor,156
2791,21:43,DOM API for elements on page,DOM API,156
2792,22:48,DOM better than jQuery,DOM > jQuery,156
2793,24:11,DOM great for vanilla JS,DOM vanilla JS,156
2794,24:42,Firing custom DOM events,Custom DOM events,156
2795,03:00,Everything is object in JS,Objects,157
2796,04:51,Syntactic sugar explained,Sugar,157
2797,06:33,Pros and cons of syntactic sugar,Sugar debate,157
2798,09:10,Functions as first class citizens,Functions,157
2799,10:08,Object literals explained,Objects,157
2800,11:29,Declarative vs imperative code,Declarative,157
2801,02:29,Graphcool became popular for quick GraphQL prototyping,Graphcool,158
2802,03:41,Nicholas has worked at Prisma for 6 years,Prisma History,158
2803,05:25,Prisma is no longer tightly coupled to GraphQL,Prisma Today,158
2804,07:01,Graph.cool was an amazing domain name,Graph.cool Domain,158
2805,08:29,Graphcool users would leave the service as apps grew,Graphcool Limitations,158
2806,10:45,Prisma 1 provided a GraphQL database proxy,Prisma 1,158
2807,14:02,Prisma 1 was confusing compared to other ORMs,Prisma 1 Confusing,158
2808,14:27,Prisma today competes directly with ORMs,Prisma Today,158
2809,00:11,Welcome to Syntax podcast,Intro,159
2810,00:41,"Sponsored by Linode, LogRocket, Sanity",Sponsors,159
2811,01:16,Wes introduces himself,Wes intro,159
2812,01:18,Scott introduces himself,Scott intro,159
2813,02:13,Wes knows football is not hockey,Sports talk,159
2814,03:06,Wes wants to attend a Bills game,Bills game,159
2815,03:53,"Scott's neighbor was talking to Ciara without knowing",Neighbor story,159
2816,04:05,Moving on to first question,First question,159
2817,04:29,Question about using emojis for CSS grid areas,Emoji CSS,159
2818,06:28,"Scott's take on emoji CSS areas","Scott's take",159
2819,08:34,Next question about project timelines,Project timelines,159
2820,01:28,Tips for getting past project blahs,tips,160
2821,02:13,Linode sponsor,sponsor,160
2822,03:02,LogRocket sponsor,sponsor,160
2823,03:55,Last 10% of project is hard,hard,160
2824,04:24,"Ready for next project, need to finish current one",finish,160
2825,05:23,Break tasks into smaller pieces,breakdown,160
2826,06:49,Do easy tasks first for motivation,motivation,160
2827,07:36,Prioritize and estimate tasks,prioritize,160
2828,08:13,Just start working,start,160
2829,08:43,Give yourself rewards,rewards,160
2830,09:58,Wes likes slushies as rewards,slushies,160
2831,11:34,Good and launched better than perfect,launched,160
2832,12:45,Ask if bugs will matter in 2 weeks,bugs,160
2833,13:10,Features should be good enough,good enough,160
2834,14:21,Keep end goal in sight,end goal,160
2835,15:49,Do tasks quick-a-minute,quick,160
2836,16:38,Do a downtown job quick-a-minute,downtown,160
2837,19:14,Make a todo list,todo,160
2838,20:36,Incline metaphor,incline,160
2839,00:26,"Intro to Syntax supper club episode with guests Scott, Wes, and Brian Douglas aka B Dougie",Intro,161
2840,00:57,Brian talking about meeting Scott and Wes at Jamstack Conf and his background in engineering and open source,Guest intro,161
2841,02:33,Brian started Open Sauce to help people learn to contribute to open source,Open Sauce origin,161
2842,05:43,Brian has been live streaming development on Open Sauce to build a community,Live streaming,161
2843,08:16,Open Sauce aims to provide tools for open source project maintainers,Open Sauce goals,161
2844,11:48,GitHub GraphQL API is stagnant due to teams moving around,GitHub API,161
2845,14:44,"Brian is trying out tRPC, Tailwind, TypeScript, Next.js stack for new projects",New stack,161
2846,18:42,Goal of Open Sauce is to make open source more approachable and diverse,Open Sauce end goal,161
2847,20:26,Brian live streams Open Sauce development and has built a community,Live streaming setup,161
2848,00:48,Prismic sponsors podcast,Sponsors,162
2849,00:56,LogRocket and FreshBooks sponsor podcast,Sponsors,162
2850,01:13,Scott built office himself,Office build,162
2851,02:18,Feed speakers through ceiling,Office setup,162
2852,03:03,Chose basement for new office,Office location,162
2853,03:49,Teens destroy drop ceilings,Teenagers,162
2854,04:07,Framed out basement office,Office setup,162
2855,04:25,Did work himself for soundproofing,DIY reasoning,162
2856,05:13,Experts helped with soundproofing,Soundproofing help,162
2857,05:28,Contractors avoid small jobs,Contractor availability,162
2858,06:00,Mistakes ruin soundproofing,Soundproofing importance,162
2859,06:17,Did it himself to understand,DIY reasoning,162
2860,06:36,Soundproofing needs isolation,Soundproofing basics,162
2861,06:58,Old office had noise issues,Previous office,162
2862,07:45,Lost ceiling height for soundproofing,Soundproofing sacrifice,162
2863,09:45,Goals for dream office,Office goals,162
2864,00:30,New HTML framework called Enhance JS,Enhance JS,163
2865,01:06,"Enhance JS is web standards based, provides lightweight components",Lightweight,163
2866,02:11,Sanity.io sponsors segment,Sanity sponsor,163
2867,03:39,Enhance JS overview,Overview,163
2868,04:49,File based routing with HTML pages,Routing,163
2869,06:36,Write components in pure functions,Pure functions,163
2870,07:06,No built-in state management,No state,163
2871,08:03,HTML tag template literals for components,Tag templates,163
2872,09:35,"No templating language, just HTML",No templates,163
2873,11:09,Enhanced store for complex state,Enhanced store,163
2874,11:49,Server data via JSON into store,Server data,163
2875,13:12,Deployable serverless functions,Serverless deploy,163
2876,13:48,"Provides SSR, easier components, routing",Features,163
2877,15:27,Using web standards,Web standards,163
2878,02:33,Started a company called Branch,Branch,164
2879,03:10,Saw a trend of productivity software taking a product lens,Productivity trend,164
2880,04:09,"Realized browsers hadn't changed much from a UX perspective",Browser UX,164
2881,04:49,"Other browsers like Chrome and Firefox haven't innovated UI much",Lack of browser UI innovation,164
2882,05:35,Focused on interactions and details in Arc browser,Arc interactions,164
2883,06:50,Iterated quickly on prototypes to refine Arc browser,Fast iteration,164
2884,07:14,"Solved tab overload by improving product, not technology",Tab overload,164
2885,08:11,"Auto-archiving gets rid of old tabs users won't miss",Auto-archiving,164
2886,09:13,Arc takes responsibility for helping users manage information overload,Managing overload,164
2887,10:56,Building a browser is incredibly complex,Browser complexity,164
2888,13:03,Arc UI is built in Swift instead of JavaScript,Swift UI,164
2889,14:32,Design and interactions were a huge focus for Arc,Design focus,164
2890,16:25,"Arc's command T opens a command palette",Command T,164
2891,18:08,Arc command palette good for discovering features,Command palette,164
2892,19:56,Shortcut system was challenging with websites using shortcuts,Shortcut challenges,164
2893,24:27,Plan to make money without compromising user experience,Revenue plan,164
2894,25:30,Revenue model likely a subscription,Subscription model,164
2895,26:54,Browser company benefits from Google payments to browsers,Google payments,164
2896,28:14,No plans currently to customize user agent string,User agent string,164
2897,29:49,Considering Arc mobile as app vs mobile browser,Mobile strategy,164
2898,31:11,Feedback driven development,Feedback driven,164
2899,32:41,Team dogfooding and feedback are key,Dogfooding,164
2900,34:54,"Fun, customizable theme options",Themes,164
2901,37:55,Flat keyboards ideal to avoid RSI,Keyboards and RSI,164
2902,38:46,Using Warp terminal,Warp terminal,164
2903,39:20,Would learn JavaScript first if starting today,Learn JavaScript,164
2904,40:10,Hacker News and newsletters for learning,Learning resources,164
2905,40:46,Excited about potential of WebAssembly,WebAssembly potential,164
2906,42:07,Follow Arc at @ArcInternet on Twitter,@ArcInternet,164
2907,00:51,Scott improving office lighting,Office lights,165
2908,01:17,"Facebook shuts down Scott's account for selling shelf",Facebook shutdown,165
2909,02:05,Scott nearly done setting up his office,Office setup,165
2910,02:19,Wes will do office tour podcast once done,Office podcast,165
2911,02:36,"Wes suggests naming his office ""The Boss House""",Boss House,165
2912,02:43,Starting tips for being productive,Productivity tips,165
2913,03:06,"Scott's productive day is checking off important tasks",Checking tasks,165
2914,04:02,"Wes's productive day is completing 2-3 big things",Completing big tasks,165
2915,04:49,"Scott's unproductive day involves wasted time",Wasted time,165
2916,05:57,"Wes's frustrating day is wasted time down rabbit holes",Rabbit holes,165
2917,07:18,Moving into productivity techniques and tips,Techniques,165
2918,07:33,Wes uses Getting Things Done system,GTD system,165
2919,08:01,GTD involves capturing everything to organize and do,GTD capture,165
2920,09:32,GTD helps Wes stay focused on next task,GTD focus,165
2921,10:31,Scott uses system to know what to pick up next,"Scott's system",165
2922,11:46,Scott logs fleeting ideas to possibly revisit later,Logging ideas,165
2923,13:10,GTD and Eat That Frog are great productivity books,Productivity books,165
2924,13:41,Still make time for creative exploration,Creative time,165
2925,14:25,Schedule unstructured time to explore ideas,Unstructured time,165
2926,14:50,Have lists of things to explore when needing inspiration,Exploration lists,165
2927,15:01,Scott assigns points and due dates to prioritize tasks,Task points,165
2928,15:53,"Sprint methodology influences Scott's point system",Sprint points,165
2929,16:26,Scott sorts tasks by urgency and difficulty with points,Sorting tasks,165
2930,17:27,Wes should consider implementing point system,Wes points,165
2931,17:58,Hardest part is initial system setup,System setup,165
2932,18:30,Introducing Pomodoro technique,Pomodoro intro,165
2933,18:54,Pomodoro involves 25 minute work cycles,25 minutes,165
2934,19:02,"Short breaks between Pomodoros, longer after several",Pomodoro breaks,165
2935,00:30,Discussing AI coding tools,AI coding,166
2936,03:20,Overview of GitHub Copilot,Copilot overview,166
2937,06:00,Ethical concerns of Copilot,Ethics,166
2938,08:00,Security concerns of Copilot,Security,166
2939,10:00,Will AI take coding jobs?,Jobs,166
2940,12:30,Pricing concerns of Copilot,Pricing,166
2941,16:00,Copilot worth the cost?,Worth it?,166
2942,18:00,Does Copilot make you a worse coder?,Makes worse?,166
2943,20:40,Alternatives to GitHub Copilot,Alternatives,166
2944,02:33,"Introduction of Raycast as an app launcher, calculator, converter, etc",Intro to Raycast,167
2945,05:21,"Raycast uses Apple's Spotlight index for file search instead of building its own",File search,167
2946,07:12,Raycast provides an end-to-end solution with store for extensions similar to app stores,Extensions,167
2947,10:35,Raycast is built with native Apple technologies like Swift instead of web technologies,Native app,167
2948,13:26,"The Raycast extension API is built with React, Node.js and TypeScript for developer experience",Extension API,167
2949,18:27,A custom React reconciler was built for Raycast to render UI natively instead of HTML/CSS,React reconciler,167
2950,22:06,"Inspiration for Raycast features comes from developer's own problems they want to solve",Feature inspiration,167
2951,26:21,"Raycast uses SQLite database for local storage of snippets, clipboard, etc",SQLite DB,167
2952,00:11,How to build an API,API overview,168
2953,02:33,What is an API and why you need one,API intro,168
2954,06:22,"Types of APIs - REST, GraphQL, gRPC, TRPC",API types,168
2955,20:46,Database layer of API,Database,168
2956,26:56,Server layer of API,Server,168
2957,34:53,Authentication layer of API,Auth,168
2958,43:51,Caching layer of API,Caching,168
2959,47:55,Client layer of API,Client,168
2960,00:27,Intro about postcss,Postcss intro,169
2961,02:56,Sponsor 1: Prismic,Sponsor,169
2962,03:34,Sponsor 2: Sentry event,Sponsor,169
2963,03:54,Using postcss,Postcss usage,169
2964,07:18,Postcss imports vs native imports,Imports,169
2965,10:13,Postcss nesting plugins,Nesting,169
2966,17:25,Postcss custom media queries,Media queries,169
2967,19:07,Postcss env vars,Env vars,169
2968,20:18,Postcss color functions,Color functions,169
2969,22:51,List of postcss plugins,Plugin list,169
2970,23:46,Browser support and new CSS features,Browser support,169
2971,02:24,Primogen chose his name from video game Turok 2,Primogen name origin,170
2972,03:57,Everyone played Tony Hawk Pro Skater growing up,Tony Hawk popularity,170
2973,04:22,Skateboarding was not always mainstream culture,Skateboarding subculture,170
2974,05:47,Scott recently dropped in on a skateboard for the first time in years,Scott drops in,170
2975,06:00,Primogen works at Netflix which he says is the most boring thing he does,Works at Netflix,170
2976,07:19,There are different styles of coding streamers,Streamer styles,170
2977,08:46,Different stream watchers come for education or entertainment,Why watch streams,170
2978,09:44,"Primogen's streams are educational but mostly memes","Primogen's style",170
2979,10:05,This episode sponsored by Hasura for auto-generating GraphQL APIs,Hasura sponsor,170
2980,00:18,"Potluck episode with questions on objects, testing, and more",Intro,171
2981,00:51,"Sponsors: Linode, LogRocket, Auth0",Sponsors,171
2982,01:13,Discussion on standing desks,Standing desks,171
2983,02:39,Measuring performance of objects with JSPerf,JSPerf,171
2984,05:09,Only optimize when needed,Optimizing,171
2985,05:38,Using dev tools to measure memory usage,Memory profiling,171
2986,06:46,Idea for JSPerf mistakes episode,Episode idea,171
2987,07:40,Why VSCode sometimes only shows type names on hover,VSCode types,171
2988,08:36,TS Quick Fixes extension to scaffold types,TS extension,171
2989,02:33,LogRocket lets you see how errors happen with video replays,LogRocket,172
2990,04:38,"Node.js, Deno, and Bun are JavaScript runtimes that can run JS outside the browser",JS runtimes,172
2991,05:43,"We may eventually be able to hot swap between JS runtimes like Node, Deno, and Bun",Hot swappable JS,172
2992,07:19,"Before this, Deno imported code directly from URLs instead of using NPM",Imported from URLs,172
2993,09:30,Using NPM packages makes these JS runtimes interchangeable,Interchangeable runtimes,172
2994,11:00,In the future we may have tools to easily swap between runtimes,Swap tooling,172
2995,12:52,Deno allows importing NPM packages without installing them,Import NPM no install,172
2996,13:11,"Deno doesn't mention competitor Bun in their blog post",No Bun mention,172
2997,14:11,Deno has the fastest JS web server ever built,Fastest web server,172
2998,15:50,Node seems behind Deno and Bun in supporting TypeScript and speed,Node falling behind,172
2999,17:15,"A year ago Bun was just getting started, now it's a real competitor",Bun competing,172
3000,17:59,Deno will support up to 80-90% of NPM packages,NPM package support,172
3001,18:25,Maybe Node could improve TypeScript support to stay competitive,Node TS support,172
3002,19:32,Next year Node may be the least compelling option compared to Deno and Bun,Node least compelling,172
3003,20:15,"Tools like Vite could have runtimes for Deno, Bun, etc",Vite runtimes,172
3004,20:59,SvelteKit can output to Deno or Bun which could be the future,SvelteKit runtimes,172
3005,22:24,Deno now supports enterprise features businesses want,Enterprise support,172
3006,22:35,Deno allows searching documentation of all Deno third party code,Deno code search,172
3007,03:27,"Steve's journey from designer to developer via prototyping and open source projects","Steve's background",173
3008,04:56,Introducing TLDraw - an impressive React and SVG drawing canvas,TLDraw intro,173
3009,05:30,Steve was inspired by variable width ink algorithms and previous canvas interactions,TLDraw inspiration,173
3010,10:02,"Steve built TLDraw in a few months and open sourced it, gaining contributors and integrations",TLDraw timeline,173
3011,11:13,TLDraw uses DOM and SVG instead of Canvas for easier custom components,TLDraw tech,173
3012,13:32,"Canvas is painful for overlays and animations - TLDraw's approach is better",Canvas vs TLDraw,173
3013,00:11,Reviewing portfolios,Portfolios,174
3014,01:08,First day of kindergarten,Kindergarten,174
3015,01:52,"Wes' new echoey office",Office,174
3016,02:14,Plans for office sound treatment,Soundproofing,174
3017,03:50,"Scott's sound panels",Panels,174
3018,04:50,"More on Scott's panels",Panels,174
3019,05:48,Construction of panels,Construction,174
3020,06:11,Transition to portfolio review,Transition,174
3021,00:28,Talking about margins and CSS layout techniques,margins,175
3022,01:40,Sentry sponsor,sponsor,175
3023,02:52,Auth0 sponsor,sponsor,175
3024,04:33,Issues with collapsing margins,margins,175
3025,05:02,Nonbreaking spaces in WYSIWYG editors,WYSIWYG,175
3026,07:24,Issues with overriding margins,margins,175
3027,08:15,Using padding instead of margins,padding,175
3028,09:01,Only using padding in components,padding,175
3029,09:29,Downsides of padding only,padding,175
3030,11:06,Putting margin/padding only on bottom,bottom,175
3031,12:51,Issues with flexbox for layout,flexbox,175
3032,13:21,Using CSS grid for layout,grid,175
3033,14:28,Issues with grid layout,grid,175
3034,14:45,Using spacer divs,spacer,175
3035,15:46,Benefits of spacer divs,spacer,175
3036,16:30,Making spacer divs a component,spacer,175
3037,18:06,Why a component instead of CSS class,component,175
3038,19:46,"No best solution, combo conversation",margins,175
3039,02:31,AppRight is a open source back end as a service,AppRight overview,176
3040,03:19,"AppRight provides APIs for database, authentication, storage, functions",AppRight features,176
3041,06:11,Hasura provides GraphQL APIs on top of Postgres like AppRight,Hasura comparison,176
3042,10:11,AppRight SDKs for client and server side development,AppRight SDKs,176
3043,15:39,LightStep Incident Response for DevOps,LightStep ad,176
3044,20:17,AppRight offers realtime APIs via WebSockets,Realtime APIs,176
3045,23:16,AppRight Cloud Functions for serverless code,Cloud Functions,176
3046,27:51,AppRight popular for web and Flutter developers,AppRight users,176
3047,35:14,Hasura provides instant GraphQL APIs for Postgres,Hasura ad,176
3048,00:11,Discussing Landon getting into preferred public school,School,177
3049,02:00,Choosing schools in Denver,Schools,177
3050,03:18,Private vs public school,Schools,177
3051,04:33,Threads in programming,Threads,177
3052,05:30,JavaScript is single threaded,Threads,177
3053,06:36,Concurrency vs parallelism,Threads,177
3054,07:28,Blocking the main thread,Threads,177
3055,08:40,Async/await and main thread,Threads,177
3056,09:18,Web frameworks and main thread,Threads,177
3057,09:59,Green screen example,Example,177
3058,12:08,Highway analogy for threads,Threads,177
3059,00:03,Opening jingle,jingle,178
3060,00:29,Welcome to 500th episode,intro,178
3061,00:35,Scott introduces himself and Wes,intros,178
3062,00:52,Wes excited for 500 episodes,milestone,178
3063,01:32,Sentry sponsor,sponsor,178
3064,03:29,PaymentsHub sponsor,sponsor,178
3065,04:37,20 million downloads milestone,milestone,178
3066,05:47,Discuss podcast recording process,process,178
3067,09:17,Top 10 most popular episodes,top episodes,178
3068,18:02,Favorite episodes,faves,178
3069,22:13,Favorite guests,fave guests,178
3070,23:15,Audience questions,questions,178
3071,32:03,Thanks and sign off,outro,178
3072,02:33,Rich Harrison intro,intro,179
3073,03:10,Svelte 101 explanation,svelte intro,179
3074,04:02,Svelte improves developer experience,dev experience,179
3075,05:39,"Svelte doesn't compromise user experience",user experience,179
3076,06:42,Svelte templating language background,templating,179
3077,09:23,Handlebars influence on Svelte templating,handlebars,179
3078,10:47,Using const in Svelte templates,const,179
3079,12:14,Immutability in Svelte vs React,immutability,179
3080,15:03,What Svelte compilation means,compilation,179
3081,17:29,Compiled size benefits,size,179
3082,18:14,"Rich's thoughts on web components",web components,179
3083,20:43,Authoring web components is difficult,authoring,179
3084,22:14,"Svelte doesn't need a virtual DOM",virtual dom,179
3085,25:50,Svelte avoids React render overhead,render overhead,179
3086,26:37,Computers should handle performance,performance,179
3087,29:09,"Rich's favorite Svelte feature",favorite feature,179
3088,31:12,Constraints lead to creativity,constraints,179
3089,00:11,Intro,Intro,180
3090,00:35,Sponsors,Ads,180
3091,00:53,Check-in,Update,180
3092,01:47,Agency Work,Agency,180
3093,02:28,Agency Overview,Agency,180
3094,02:59,Agency Experience,Experience,180
3095,03:44,Agency Sizes,Sizes,180
3096,04:19,Large Agencies,Large,180
3097,04:41,Agency Examples,Examples,180
3098,00:16,CSS proposals,proposals,181
3099,00:32,CSS at win and at else,at win/else,181
3100,00:53,CSS Grid 3 masonry,masonry,181
3101,09:06,CSS caret,caret,181
3102,10:40,CSS nesting,nesting,181
3103,13:18,CSS env variables,env vars,181
3104,14:00,CSS media queries,media queries,181
3105,02:19,Josh talks about working on the new Hydrogen project at Shopify,Hydrogen,182
3106,04:44,"Hydrogen is not a static site generator, it renders on the server",SSR,182
3107,09:51,Hydrogen started with a component library but found it was too rigid,Components,182
3108,10:42,Hydrogen allows adding ecommerce to an existing React app,React,182
3109,11:24,"Online store still best for most merchants, Hydrogen lowers penalty of going headless",Headless,182
3110,13:48,"Hydrogen + Oxygen provides a headless experience like using Shopify's Liquid",Liquid,182
3111,15:28,Building with React components provides better reusability,Reusability,182
3112,19:17,Hydrogen started in April 2021 using experimental React tech like Server Components,Server Components,182
3113,23:58,"Hydrogen's server component bet will benefit the ecosystem of reusable components",Ecosystem,182
3114,25:42,Most of Hydrogen is tied to React but they may support Vue/Svelte in the future,Frameworks,182
3115,27:18,Being on the JS standards committee allows Hydrogen to run anywhere,Standards,182
3116,31:06,Using API adapters allows Hydrogen to run on different JS environments,Adapters,182
3117,00:33,Caching API data,API caching,183
3118,00:41,Generating PDFs,PDF generation,183
3119,00:48,Stripe vs PayPal,Payment,183
3120,03:01,Caching slow API requests,API caching,183
3121,03:40,Caching strategies,Caching,183
3122,06:59,Learning SvelteKit before v1,SvelteKit,183
3123,10:31,Generating PDFs from HTML,PDF generation,183
3124,15:48,Sponsor spot - Prismic,Sponsor,183
3125,04:39,Browser engines,Chromium Blink Gecko,184
3126,07:01,Opera engine history,Own engine,184
3127,08:11,New browser Arc,Reinvented browser,184
3128,11:31,Browser engine clarifications,JavaScript engines,184
3129,13:21,Chromium vs Blink,Interchangeable,184
3130,13:34,iOS browsers,WebKit based,184
3131,15:37,Android browsers,Choice available,184
3132,18:48,Samsung Internet,Chromium based,184
3133,19:29,Tor browser,Chromium based,184
3134,20:46,Opera Mini,Proxy browser,184
3135,22:57,UC Browser,Popular in China,184
3136,23:39,Baidu browser,Discontinued,184
3137,24:59,KaiOS browser,Linux phones,184
3138,25:27,Browser history,Feature phones,184
3139,02:32,Syntax site built on Next.js years ago,Syntax site,185
3140,03:28,Syntax site used to load show notes for all episodes,Perf issue,185
3141,04:09,What is React Suspense?,React Suspense,185
3142,05:43,Selective hydration unlocks perf possibilities,Selective hydration,185
3143,07:34,Next.js makes hydration easy compared to custom React,Next.js hydration,185
3144,08:57,Deferring JavaScript with Suspense improves interactivity,Deferring JavaScript,185
3145,10:58,Rogers website loads fast if you hide initial loader,Rogers website,185
3146,13:15,Sponsor: LightStep Incident Response,Sponsor,185
3147,00:19,Web dev wish list / ugh just do it for me,Topic,186
3148,01:01,Complaining in crime,Joke,186
3149,02:00,Understand reasons for things not working,Preface,186
3150,02:30,Want things different despite reasons,Point,186
3151,03:33,Date input translates to JS date,HTML,186
3152,05:46,Better date picker input,HTML,186
3153,06:55,Smooth animated drag and drop,HTML,186
3154,08:40,TypeScript interfaces faster than types,JS,186
3155,10:09,One type system construct,JS,186
3156,10:59,Browser handle animations,JS,186
3157,13:29,Native data binding,JS,186
3158,13:59,Built-in auth,JS,186
3159,18:06,One React effect hook,React,186
3160,19:52,No dependency array,React,186
3161,02:33,Talks about sponsored projects like Linode and LogRocket,sponsors,187
3162,04:29,Introduces topic of getting excited about coding,topic intro,187
3163,05:07,Having fun learning code is more important than end product,fun learning,187
3164,09:46,Finding a tech you want to learn or an itch to scratch gets you excited,finding ideas,187
3165,10:43,Wes scraped store clearance pages - fun project to learn web scraping,"Wes' project",187
3166,11:40,Fart app idea - silly but could teach audio manipulation,fart app,187
3167,02:33,"Sayeed's software used by over 20 million websites",Software reach,188
3168,04:08,Blogging for over a decade leads to thriving business,Longevity,188
3169,06:18,WordPress keeps evolving with new features to write about,WordPress growth,188
3170,08:27,Each AwesomeMotive brand has content team producing tutorials,Content teams,188
3171,10:29,"Products built to solve Sayeed's own business problems",Internal solutions,188
3172,11:43,Products acquired to fill portfolio gaps based on user surveys,Acquisitions,188
3173,13:21,"No business background, focused on marketing and monetization",Marketing skills,188
3174,16:37,"Each brand uses GitHub, some share code and APIs",Code sharing,188
3175,18:50,"274,000 YouTube subscribers for WPBeginner channel",YouTube following,188
3176,19:51,Viral YouTube channel with over 1M subscribers in the past,Viral content,188
3177,22:55,"YouTube great for discovery, but need your own site to own users",User ownership,188
3178,25:54,"Functionality and solving user needs most important, not code",User focus,188
3179,00:21,"Sponsored by Prismic, Sentry, FreshBooks",Sponsors,189
3180,02:38,Resolving NPM errors in old projects,NPM errors,189
3181,03:58,Reinstall dependencies and node modules,Reinstall,189
3182,04:10,Deleting package-lock.json,Package lock,189
3183,05:02,Node version compatibility,Node version,189
3184,05:08,Old projects working on new Node versions,Backwards compatibility,189
3185,05:27,Gatsby and Node version issues,Gatsby issues,189
3186,06:37,Specifying Node version in package.json,Node version spec,189
3187,07:23,"Setting 'engineStrict' in .npmrc",engineStrict flag,189
3188,00:27,Introducing Bun,Intro,190
3189,01:08,Sponsors,Ads,190
3190,03:32,What is Bun?,Overview,190
3191,04:22,Comparing Bun to Node and Deno,Compare,190
3192,05:34,Bun focuses on performance,Perf,190
3193,06:04,Bun has batteries included,Batteries,190
3194,06:47,Bun implements common APIs,APIs,190
3195,08:17,Bun builds on Zig language,Zig,190
3196,09:36,Bun supports web server out of the box,Web Server,190
3197,10:58,Bun supports async code,Async,190
3198,15:13,APIs not yet implemented in Bun,Missing APIs,190
3199,17:10,Bun uses TOML for config,TOML,190
3200,18:27,Bun has a public roadmap,Roadmap,190
3201,20:23,Why do we need another JS runtime?,Why Bun?,190
3202,23:06,Conclusion and call to try Bun,Conclusion,190
3203,02:33,Adam Cowley has worked with Neo4j for 5 years,Work history,191
3204,02:57,Adam Cowley used Netscape browser in school to be different,Browser history,191
3205,05:05,Graph databases use nodes and relationships instead of tables and rows,Graph databases,191
3206,07:41,Nodes are like documents that can contain any data,Nodes,191
3207,09:04,Schema is optional but key entities need to be defined upfront,Schema,191
3208,10:32,Graph databases are good for real-time recommendations,Use cases,191
3209,13:18,"Neo4j is the underlying technology, AuraDB is the database service",Neo4j vs AuraDB,191
3210,14:22,"There are official drivers for Java, JavaScript, Python, Go and .NET",Drivers,191
3211,15:39,Learning Cypher querying is a paradigm shift but intuitive,Cypher,191
3212,19:00,GraphQL and Neo4j work well together with custom GraphQL library,GraphQL,191
3213,22:58,Neo4j GraphQL library translates GraphQL to Cypher queries,Neo4j GraphQL,191
3214,23:46,Data can be synced between MongoDB and Neo4j,Syncing data,191
3215,00:01,Announcer introduces Syntax podcast,Intro,192
3216,00:11,"Wes announces today's show on coding styles",Announce,192
3217,00:54,"Wes asks Scott how he's doing",Chit chat,192
3218,01:04,"Scott says he's good and has nothing to report",Good,192
3219,01:16,"Wes says they're recording ahead before he moves",Recording,192
3220,01:29,"Scott is pumped for Wes' new space",New space,192
3221,01:38,Wes talks about work needed on his new office,Office work,192
3222,01:52,Wes suggests starting with JS styles then CSS,JS then CSS,192
3223,02:01,Scott talks about functional vs object oriented JS,Functional vs OO,192
3224,02:30,Scott likes functional for easier testing,Functional testing,192
3225,02:45,Wes also mainly uses functional programming,Wes functional,192
3226,02:51,Wes uses OO for tutorials occasionally,OO tutorials,192
3227,03:13,Wes gives timer class example for OO,Timer class,192
3228,03:23,"Timer class has start, stop, pause methods",Timer methods,192
3229,03:39,"Wes leans functional, frameworks are functional",Functional frameworks,192
3230,03:44,Scott asks about TypeScript interfaces vs types,TS interfaces,192
3231,03:52,Scott now uses interfaces over types,Scott interfaces,192
3232,04:18,Wes has gone back and forth between interfaces and types,Wes on interfaces,192
3233,04:36,Wes shows both in TypeScript course,Both in course,192
3234,04:50,Wes less confident on interface first recommendation,Less confident,192
3235,05:10,Wes heard interfaces compile faster,Faster compile,192
3236,05:17,But compile speed not a reason to choose,Not a reason,192
3237,05:27,"Wes says it doesn't really matter","Doesn't matter",192
3238,05:29,"Scott agrees it likely doesn't matter much","Doesn't matter",192
3239,05:33,Scott says it feels like the grass is greener,Grass greener,192
3240,06:04,Wes explains tabs as one character displayed by editor,Tabs explanation,192
3241,06:11,Tab width is an editor setting,Tab width,192
3242,06:24,"Wes says that's a good argument for tabs",Tabs argument,192
3243,06:24,Spaces argument is consistent indentation,Spaces argument,192
3244,07:05,Scott is passionate against semicolons,No semicolons,192
3245,07:06,Scott sees no need for semicolons ever,No need,192
3246,07:36,Wes says linters now fix semicolon issues,Linters fix,192
3247,07:46,Wes uses semicolons and likes them,Wes pro semicolon,192
3248,07:51,Scott strongly dislikes semicolons,Scott anti semicolon,192
3249,08:09,Scott asks about let vs const,Let vs const,192
3250,08:13,Scott uses const unless reassignment needed,Scott const default,192
3251,08:35,Wes uses const and rarely needs let,Wes const default,192
3252,08:48,Const allows changing object properties,Const flexibility,192
3253,09:03,Wes likes block scoping of let and const,Block scoping,192
3254,09:16,Scott explains var function vs block scope,Var scoping,192
3255,09:36,Scott asks about explicit vs inferred types in TS,Explicit types,192
3256,09:43,Wes started with inferred but now explicit types,Wes explicit types,192
3257,10:12,"Wes says explicit types for exports, inferred internally",Explicit exports,192
3258,11:02,Scott finds explicit catches more bugs,Catches bugs,192
3259,11:36,Scott asks about naming conventions,Naming conventions,192
3260,11:50,"Wes uses camelCase in JS, kebab-case in CSS",Wes conventions,192
3261,12:05,Wes likes kebab-case in HTML,Kebab HTML,192
3262,12:08,Wes uses snake_case by convention like GraphQL,Snake convention,192
3263,12:20,Screaming snake case seems standard for GraphQL,GraphQL snake case,192
3264,12:49,Scott explains screaming case for constants,Screaming constants,192
3265,13:00,Scott saw study on faster snake case reading,Snake case study,192
3266,13:14,Scott now uses snake case for everything,Scott snake case,192
3267,13:36,Except upper camel case for components,Camel components,192
3268,13:44,Wes jokes Scott should get a snake case tattoo,Snake tattoo,192
3269,13:46,Scott likes the snake case name,Likes name,192
3270,13:55,Wes mentions Wikipedia naming conventions page,Wikipedia conventions,192
3271,14:08,Wes lists alternate names like dromedaryCase,Alternate names,192
3272,14:19,Dromedary case is camelCase,Dromedary,192
3273,14:31,Flat case is all lowercase,Flat case,192
3274,14:36,PascalCase,PascalCase,192
3275,14:39,underscore_case,underscore,192
3276,14:41,kebab-case,kebab-case,192
3277,14:49,Train-Case,Train-Case,192
3278,14:54,HTTP-Header-Case,HTTP-Header-Case,192
3279,15:02,"Wes says it's fun to look at naming cases",Fun names,192
3280,15:14,"Scott agrees it's fun",Fun,192
3281,15:16,Scott asks about looping styles,Looping styles,192
3282,15:53,Scott uses array methods instead of for loops,Array methods,192
3283,16:12,Wes defaults to array methods like forEach,Wes array methods,192
3284,16:17,Wes likes for-in loops,for-in loops,192
3285,16:26,for-in allows async/await,Async await,192
3286,16:32,for-in pauses for await,Await pause,192
3287,16:37,for-in works on objects and iterables,Objects & iterables,192
3288,16:43,for-in allows continue and break,Loop control,192
3289,16:54,Wes uses for-in instead of array methods sometimes,for-in vs methods,192
3290,17:09,Scott uses for-in for that control flow,Scott for-in control,192
3291,17:12,Scott rarely needs for loops now,Rare for,192
3292,17:19,Wes shows object.entries with for-in example,object.entries,192
3293,17:53,Destructuring is nicer than index access,Destructuring,192
3294,17:55,Scott reminisces of past for loop pain,Loop pain,192
3295,18:01,Scott agrees for loops were a pain,Painful for,192
3296,00:28,Playing a game of Stumped interview questions,Stumped game,193
3297,01:28,Sponsored by Sentry and LightStep,Sponsors,193
3298,04:07,Question: What is a higher order component?,HOC question,193
3299,05:14,"Answer: Component that runs at higher level, passes info to lower level component",HOC answer,193
3300,05:45,Question: What is functional programming?,FP question,193
3301,07:45,"Answer: Using pure functions instead of classes, no side effects",FP answer,193
3302,09:00,"Question: What's cache busting and how to achieve it?",Cache busting,193
3303,10:33,"Answer: Force new resource download, add query params or random strings",Cache busting answer,193
3304,10:39,Question: What is short circuit evaluation in JS?,Short circuiting,193
3305,13:19,Answer: Optional chaining,Short circuit answer,193
3306,13:20,Question: What is a closure?,Closure question,193
3307,15:18,Answer: Function scope maintaining state,Closure answer,193
3308,15:47,Question: Purpose of immediately invoked function expression?,IIFE question,193
3309,17:29,"Answer: Creates closure, runs immediately",IIFE answer,193
3310,17:42,Question: How does CSS specificity work?,Specificity,193
3311,18:44,"Answer: Inline, ID, Class, Tag - add up points",Specificity answer,193
3312,20:19,Question: How does prototypal inheritance work?,Prototype question,193
3313,23:08,"Answer: Chain of prototypes, shared methods",Prototype answer,193
3314,23:57,Question: Difference between parameter and argument?,Params vs args,193
3315,24:55,"Answer: Parameters are placeholders, arguments are values",Params vs args answer,193
3316,02:33,Liberty Mutual has 5000 developers,large team,194
3317,03:38,Christy is a principal software engineer and AWS Serverless Hero at Liberty Mutual,"Christy's role",194
3318,04:57,Liberty Mutual has 5000 developers working on a variety of projects,dev team size,194
3319,06:13,Liberty Mutual builds customer-facing apps like insurance quotes as well as internal tools,app types,194
3320,07:05,Liberty Mutual previously used mainframes and on-prem servers before adopting serverless,on-prem history,194
3321,09:11,"Serverless aligns with Liberty Mutual's 'only pay for what you need' motto",cost savings,194
3322,10:04,Serverless auto-scaling handles fluctuating traffic levels,auto scaling,194
3323,13:01,Liberty Mutual allows developers to use their preferred languages like TypeScript and Python,language flexibility,194
3324,18:33,Infrastructure is defined based on system requirements like uptime needs,infra considerations,194
3325,23:02,Christy recommends AWS CDK for local serverless development,CDK recommendation,194
3326,25:10,Christy has a computer engineering degree and built an autonomous vehicle in college,"Christy's background",194
3327,00:59,Wes Bos introduces himself,Wes intro,195
3328,01:01,Scott introduces himself,Scott intro,195
3329,01:23,Scott talks about issues with his NAS drive,NAS issues,195
3330,02:31,Scott configured PPPoE to get NAS working externally,PPPoE config,195
3331,03:19,Wes talks about dealing with ISP provided routers,ISP routers,195
3332,04:51,Scott got Home Assistant running on a Raspberry Pi,Home Assistant,195
3333,05:53,Discussion on updating the look and feel of Home Assistant,Updating UI,195
3334,07:59,Question from listener on peer dependencies,Peer deps question,195
3335,08:50,Explanation of peer dependencies in npm packages,Peer deps explained,195
3336,11:36,Discussion on issues with peer dependencies and version conflicts,Peer deps issues,195
3337,12:33,More discussion on pros/cons and edge cases of peer dependencies,Peer deps pros/cons,195
3338,13:14,Mention of escape hatch config to ignore peer dependency errors,Escape hatch config,195
3339,14:13,Clarifying transpilation setup when using Vite and Vitest,Transpilation questions,195
3340,00:51,Clamping and interpolating numbers,Topics,196
3341,03:51,Animating elements horizontally when scrolling,Example,196
3342,05:45,"Clamp returns the number if within min and max, else returns min or max",Clamp,196
3343,08:36,Clamp function available on npm,Clamp lib,196
3344,09:08,Interpolation infers data within a range,Interpolate,196
3345,10:34,"d3-interpolate library for interpolating numbers, colors, dates, etc.",d3 library,196
3346,12:45,Interpolating to split a range into even steps,Use case,196
3347,14:38,d3.quantize splits a range into a specified number of even steps,Quantize,196
3348,18:08,These functions are useful but may be unknown,Takeaway,196
3349,00:36,Wes introduces guest Pokey Rule,Intro,197
3350,01:20,Scott asks Pokey about background,Background,197
3351,02:15,Pokey talks about coding history and RSI,RSI,197
3352,03:13,"Emily Shea's voice coding video inspiration",Video,197
3353,03:47,Pokey quit job to start company in 2020,Quit job,197
3354,05:03,Wes asks how voice coding works,How it works,197
3355,06:44,Pokey explains Talon and community grammar,Talon,197
3356,07:47,Scott asks about creating grammars,Grammars,197
3357,09:51,Accidental voice command triggers,Misrecognitions,197
3358,12:35,Pokey demonstrates voice coding,Demo,197
3359,00:31,10 year anniversary of webcam demo,anniversary,198
3360,00:50,Wes has been speaking for 10 years,10 years speaking,198
3361,01:01,Scott has been speaking for 4 years,Scott 4 years,198
3362,01:17,Scott did lots of YouTube videos,YouTube,198
3363,02:38,Exciting for Avalanche to win Stanley Cup,Avalanche win,198
3364,04:13,Speaking provides legitimacy,legitimacy,198
3365,05:21,Speaking helps you become a better speaker,better speaking,198
3366,05:52,Speaking events allow you to meet the right people,meet people,198
3367,07:15,Speaking can get you well-paying jobs,jobs,198
3368,07:48,Meeting people leads to connections and referrals,connections,198
3369,09:39,Speaking allows you to travel for free,free travel,198
3370,12:56,Major benefits to speaking besides money,non-money benefits,198
3371,15:57,Submit talk proposals to conference CFPs,submit proposals,198
3372,14:51,Que reacts API design philosophy is about parsimony - keeping it simple but not too simple,React API design,200
3373,06:50,Developer experience bridges the gap between code and humans,Defining DX,200
3374,08:29,Internal DX improves productivity of your own devs. External DX improves dev tools for external devs.,Internal vs external DX,200
3375,17:05,DX is about enhancing creativity through better productivity,DX goals,200
3376,23:51,"For sites Svelte, for apps React. Svelte avoids some React DX issues.",Svelte vs React DX,200
3377,33:00,DevRel roles becoming more influential by working directly on docs and product,Evolving DevRel roles,200
3378,00:17,"Communication tips for email, meetings, code reviews",Tips,201
3379,00:49,"Sponsors: Sentry, Sanity, Auth0",Sponsors,201
3380,01:09,Scott recently rewired furnace for ecobee thermostat,Furnace,201
3381,05:54,Email tip: Number your asks,Email tips,201
3382,07:33,Email tip: Bold important parts,Bold,201
3383,10:34,Email tip: Use paragraphs ,Paragraphs,201
3384,15:14,"Recognize when you're making a big ask",Big ask,201
3385,00:28,Introducing new browser page transitions API,New API,202
3386,02:33,Prismic sponsor ad read,Ad read,202
3387,02:53,LogRocket sponsor ad read,Ad read,202
3388,05:11,Explaining native app transitions vs web transitions,App transitions,202
3389,06:32,Overview of use cases for new API,Use cases,202
3390,08:26,Benefits of shared element transitions,Shared elements,202
3391,12:54,Overview of JS API and callbacks,JS API,202
3392,14:04,Expecting wrappers and libraries on top of API,Wrappers,202
3393,15:14,History of proprietary transitions API in Edge,Edge history,202
3394,17:28,Can try API in Chrome flags today,Chrome flags,202
3395,18:35,Speculating on timeline for implementation,Timeline,202
3396,03:54,Tim built a weather extension in 2015 which kickstarted his interest in browser extensions,Weather extension start,203
3397,06:02,The weather extension uses the Dark Sky API which Tim had to get a paid plan for due to the number of users,Dark Sky API,203
3398,07:24,Tim has had people try to hack and take over the account that controls his extensions,Account hacking,203
3399,08:19,The weather extension grew from a few hundred to 10000 users after getting shared on Lifehacker,Lifehacker share,203
3400,14:38,Tim built a URL shortener extension after Google shut down theirs which allowed him to gain users,URL shortener extension,203
3401,16:49,Tim purchased the t.ly domain from a domain reseller for around $50k,t.ly purchase,203
3402,18:14,The t.ly URL shortener service offers paid plans for advanced features like custom domains,t.ly paid plans,203
3403,23:48,The t.ly URL shortener service was abused by malicious actors when it first launched,Malicious abuse,203
3404,26:01,Tim built a tool called link unshortener to help detect malicious URLs,Link unshortener,203
3405,29:30,"Tim's first successful monetization was from Amazon affiliate links on a Raspberry Pi blog post",Affiliate links,203
3406,43:00,"Tim stays up to date by listening to podcasts, YouTube, blogs",Staying current,203
3407,45:22,Tim recommends a coffee maker called Chibo for cold brew,Chibo coffee,203
3408,47:27,Check out t.ly for URL shortening,t.ly plug,203
3409,00:16,Look ahead at home automation,Home automation,204
3410,02:48,"Overview of home automation protocols: Zigbee, Zwave, WiFi",Protocols,204
3411,06:17,Phillips Hue uses Zigbee protocol with hub and WiFi,Hue lights,204
3412,07:00,New standard Matter aims to unify protocols,Matter standard,204
3413,07:37,Developers like to customize and tweak systems,Tweak systems,204
3414,08:01,How automation leads to increased family buy-in,Family buy-in,204
3415,09:32,Smart home automation improves analog problems,Improvements,204
3416,11:31,Homebridge enables connecting devices and exposing to HomeKit,Homebridge,204
3417,00:28,New viewport units solve problems with old ones,new units,205
3418,05:03,Main problem is dynamic UI in iOS hides/shows URL bar,iOS URL bar,205
3419,06:47,"Introduces new units: lvw/lh, svw/lh, dvw/lh",new units,205
3420,09:43,Dynamic units likely most useful in most cases,dynamic best,205
3421,12:44,Keyboard not accounted for in new units,no keyboard,205
3422,17:32,Units well supported now except IE and some Chrome,good support,205
3423,18:55,Can use vh for fallback after lh,vh fallback,205
3424,00:02:33,Introducing Eduardo Bocas from Netlify,Guest intro,206
3425,00:04:24,Serverless functions allow adding functionality without servers,Serverless functions,206
3426,00:07:19,Edge functions run closer to users for lower latency,Edge functions,206
3427,00:13:05,Edge functions can modify requests and responses,Middleware pattern,206
3428,00:20:21,WPSMTP sponsor ad,Sponsor,206
3429,00:22:44,Deno overview,Deno,206
3430,00:25:38,Differences in Node and Deno package ecosystem,Node vs Deno packages,206
3431,00:33:05,Postlight podcast sponsor ad,Sponsor,206
3432,00:38:13,Languages used to build Netlify Edge,Languages at Netlify,206
3433,00:43:20,Importance of open standards,Open standards,206
3434,00:47:16,Using Warp terminal,Terminal,206
3435,00:51:24,Closing thoughts on being kind,Kindness,206
3436,00:52:23,Podcast pick - S-Town,Podcast pick,206
3437,00:02,Intro and overview of potluck questions,Intro,207
3438,00:50,"Sponsors: Sentry, Sanity, .tech",Sponsors,207
3439,01:09,Update on house projects and yardwork,Yardwork,207
3440,02:33,Having battery powered pole saw makes trimming trees easier,Pole saw,207
3441,03:41,Question on hosting database on same server as code,Database hosting,207
3442,09:30,"Don't like regex, won't do regex course",Regex,207
3443,20:07,"Wes' health and fitness is poor currently",Wes fitness,207
3444,26:08,Wes did not know who Gendo Ikari is,Gendo Ikari,207
3445,27:40,Gendo Ikari is a villain from Neon Genesis Evangelion anime,Evangelion,207
3446,30:13,Learning new languages expands perspectives but not required,New languages,207
3447,40:20,Listener got web dev interview after confidence from show,Listener interview,207
3448,42:11,Advice for developer building large scale React app,React app advice,207
3449,50:41,Firefox proposal for CSS environment variables,CSS variables,207
3450,00:27,"New CSS selectors: has, where and is",CSS,208
3451,01:03,Excited for has selector,has,208
3452,01:13,Sponsors: Magic Bell and LogRocket,Sponsors,208
3453,02:33,Magic Bell for app notifications,Magic Bell,208
3454,02:39,LogRocket for debugging web apps,LogRocket,208
3455,03:40,Kids saying funny words,Kids,208
3456,04:49,Wanting parent selectors in CSS,Parent CSS,208
3457,05:37,Use cases for parent selectors,Use cases,208
3458,06:12,Has is a pseudo class,Has,208
3459,06:31,What selectors are in CSS,CSS selectors,208
3460,07:14,Has checks child elements,Has checks,208
3461,08:12,Power of has selector,Has power,208
3462,08:47,Complex has examples,Has examples,208
3463,10:30,More complex has examples,More has,208
3464,11:02,Code examples available,Code examples,208
3465,12:45,More use cases for has(),More uses,208
3466,13:28,Using has() for navigation,Nav example,208
3467,13:54,Has poor browser support currently,Support,208
3468,15:12,Safari and Chrome support under flags,Browser support,208
3469,15:55,Excited to use has() when supported,Excited for has,208
3470,16:08,Introducing where selector,Where intro,208
3471,17:14,Where reduces repeated selectors,Where reduces repeats,208
3472,17:49,Where examples provided,Where examples,208
3473,18:32,Where useful for input selectors,Input use case,208
3474,18:55,Where simplifies and improves readability,Where readability,208
3475,19:06,Where slight functionality increase,Where functionality,208
3476,19:59,Where usage with browser support,Where support,208
3477,20:20,Where well supported,Where support,208
3478,20:38,Introducing is selector,Is intro,208
3479,20:43,Is same as where syntactically,Is vs where,208
3480,21:05,Hosts struggle to say specificity,Specificity,208
3481,22:06,Is counts towards specificity,Is specificity,208
3482,22:19,Where has no specificity,Where specificity,208
3483,22:49,Prefer where for lower specificity,Prefer where,208
3484,23:41,Use where as default over is,Default to where,208
3485,24:08,Is has same browser support as where,Is support,208
3486,02:33,Connor introduces no code as software designed for non-coders to build simple things like websites,no code intro,209
3487,04:53,Wes asks if no code will replace developers,no code replacing devs,209
3488,09:43,Sometimes custom JavaScript is needed to go beyond the limits of no code tools,custom JS,209
3489,16:04,"Popular no code tools: Webflow, Airtable, Zapier, Make, Bubble",popular tools,209
3490,24:50,"Resources for learning no code: Makerpad, YouTube, building projects",learning resources,209
3491,27:07,SeedProd allows building WP sites without code,SeedProd,209
3492,40:16,Strapi is a JS/TS headless CMS,Strapi,209
3493,45:01,"For beginners, start with Webflow, Zapier, Airtable",beginner advice,209
3494,00:36,"Podcast sponsored by Century, FreshBooks, PaymentsHub",Sponsors,210
3495,01:20,Hasty Treat podcast on Mondays,Podcast,210
3496,01:31,New Supper Club podcast releasing,Podcast,210
3497,02:40,Live podcast overview,Podcast,210
3498,05:05,Debate on putting imports at top of files,Imports,210
3499,06:04,Debate on enforcing semicolons,Semicolons,210
3500,07:06,Debate on usefulness of for loops,For loops,210
3501,08:16,Debate on adding types to JavaScript,Types,210
3502,09:35,Ad for Sentry error tracking,Sentry ad,210
3503,11:18,Debate on using platform primitives vs transpiling,Primitives,210
3504,11:40,Debate on usefulness of TypeScript,TypeScript,210
3505,12:18,Kicking It Old School segment,Old code,210
3506,25:04,PaymentsHub sponsor ad,PaymentsHub ad,210
3507,26:39,Syntax Error segment,Syntax errors,210
3508,32:24,JS or NAS audience participation,JS or NAS,210
3509,39:07,FreshBooks sponsor ad,FreshBooks ad,210
3510,39:37,Audience Q&A,Q&A,210
3511,00:32,Stopping malicious actors,Topic,211
3512,03:22,Malicious actions people can take,Actions,211
3513,06:31,Ways to stop malicious actors,Solutions,211
3514,07:01,Rate limiting requests,Solution,211
3515,09:41,Shadow banning bad users,Solution,211
3516,10:22,Limiting requests over time,Solution,211
3517,11:48,How Reddit handles shadow bans,Example,211
3518,12:24,Using tokens to limit access,Solution,211
3519,14:17,CSRF tokens for security,Solution,211
3520,14:53,Using CAPTCHA for humans,Solution,211
3521,15:31,Concerns with reCAPTCHA,Issue,211
3522,16:34,Easier CAPTCHAs get broken faster,Issue,211
3523,17:14,DDoS protection services,Solution,211
3524,18:52,Banning abusive IP ranges,Solution,211
3525,02:31,Anselm started web development at 14 in 2003. He learned Photoshop and made pixel table websites.,"Anselm's start",212
3526,03:03,Anselm started his own business during high school. After civil service he already had many web development clients so decided not to study.,Started business,212
3527,04:39,"With arrival of CSS3 and HTML5, Anselm found web development fun and exciting again. He spoke at conferences.",Web exciting,212
3528,05:40,"After publisher job with weekends and long hours, Anselm had a small burnout. He took time off which helped.",Small burnout,212
3529,07:11,"After 15 years freelancing, Anselm realized he did not want to continue that way until retirement. He considered alternatives.",Wanted change,212
3530,07:39,Gardening attracted Anselm as an alternative career. He had done some gardening before as a hobby.,Gardening appealed,212
3531,08:32,Anselm and his brother started a market garden together on leased land. They grow seasonal vegetables for 100 customers.,Market garden,212
3532,20:36,Early burnout signs are feeling stressed about tasks that should not be too difficult and friends saying you seem less happy.,Burnout signs,212
3533,22:14,"To avoid burnout, Anselm now does more fun weekend activities and limits multitasking.",Avoid burnout,212
3534,23:27,"Anselm writes a web development newsletter summarizing each month's news to help others avoid burnout and fear of missing out.",Newsletter for others,212
3535,25:10,"Anselm's newsletter also now helps himself stay current on web development since he spends less time coding.",Newsletter for self,212
3536,36:48,Anselm uses a mix of materials like plant waste to make custom fertilizer that he prepares 1 year in advance before using.,Custom fertilizer,212
3537,39:13,Smaller farmers should avoid expensive big machinery that is only worthwhile for large farms.,Avoid big machinery,212
3538,41:23,Fresh eggs from chickens on the farm taste much better than store eggs.,Farm eggs best,212
3539,44:19,Anselm minimizes fertilizer by letting nature fertilize through techniques like green manure.,Nature fertilizes,212
3540,45:06,The market garden is not yet profitable enough to support 2 families. They need more land.,Need more land,212
3541,46:13,Anselm uses his business knowledge from IT for the market garden as well.,Business knowledge,212
3542,49:30,Medium farmers buy unnecessary big equipment and go broke. They need to realize it is not required.,Unneeded equipment,212
3543,51:40,"After moving from the city, Anselm learned many new hands-on skills helping in the country.",Learned hands-on skills,212
3544,56:05,"Beginners should learn HTML, CSS and JavaScript basics thoroughly first before frameworks.",Learn basics first,212
3545,00:02,Welcome to Syntax Podcast,Intro,213
3546,00:35,Riverside App for Podcast Recording,App,213
3547,01:20,Git in VS Code Features,Topic,213
3548,02:33,Donkeys of the Day,Donkeys,213
3549,03:14,Beach Chair Saving,Beach chairs,213
3550,04:00,Crowded Hiking Trails,Crowded trails,213
3551,04:45,Monkey instincts,Monkey,213
3552,05:02,Git terminology,Terminology,213
3553,07:26,Git commit definition,Commit,213
3554,09:04,Git diff definition,Diff,213
3555,10:04,Git branch definition,Branch,213
3556,11:24,Git jargon summary,Jargon,213
3557,12:36,Previous Git GUIs used,GUIs used,213
3558,14:10,Git in VS Code overview,VS Code Git,213
3559,15:49,Integrated terminal drawbacks,Terminal,213
3560,18:03,VS Code command palette for Git,Command palette,213
3561,18:39,Seeing Git options in command palette,See options,213
3562,19:25,Difficulty of Git documentation,Git docs,213
3563,20:06,VS Code source control tab,Source control,213
3564,21:31,Source control tab indicators,Indicators,213
3565,22:12,Buttons in source control,Buttons,213
3566,22:54,Right amount of GUI in VS Code,GUI,213
3567,23:32,VS Code provides intuitive interface,Intuitive,213
3568,24:08,Changing branches in VS Code,Branches,213
3569,25:59,Sync changes button,Sync,213
3570,26:29,Changing branches via status bar,Status bar,213
3571,32:03,VS Code tracks changes between commits,Tracks changes,213
3572,33:34,VS Code timeline feature,Timeline,213
3573,35:28,Finding experimental features,Experimental,213
3574,36:10,VS Code release notes,Release notes,213
3575,37:17,Git merge conflicts explained,Merge conflicts,213
3576,40:09,Resolving merge conflicts in VS Code,Resolving conflicts,213
3577,42:25,Staying in coding context for conflicts,Context,213
3578,43:09,Auto push after commit,Auto push,213
3579,44:31,When not to auto push,No auto push,213
3580,45:53,Team workflows and squashing,Squashing,213
3581,48:09,GitLens extension features,GitLens,213
3582,50:39,Git Graph extension,Git Graph,213
3583,51:18,Official GitHub extension,GitHub extension,213
3584,52:42,GitHub Actions locally,Actions local,213
3585,53:56,Conventional Commits extension,Conventional Commits,213
3586,54:14,Opening repo in VS Code from terminal,VS Code from terminal,213
3587,55:12,Request for Git tips from listeners,Tips request,213
3588,03:56,Question about cache control headers for image heavy sites,Question,214
3589,04:57,Headers are metadata with requests and responses,Headers,214
3590,06:26,Caching stores responses to reuse and avoid re-work,Caching,214
3591,09:12,"Benefits of caching are reduced load, bandwidth, and faster speed",Benefits,214
3592,10:15,Cache control headers use directives to specify caching behavior,Directives,214
3593,11:00,Max age specifies how long an asset should be cached,Max age,214
3594,12:49,Stale while revalidate serves stale assets but fetches fresh in background,Stale revalidate,214
3595,16:19,"Other cache control directives like private, no cache, immutable",Other directives,214
3596,21:55,Main directives are max age and stale while revalidate,Main directives,214
3597,22:36,Caching provides big performance benefits,Performance,214
3598,02:32,"Founded GitHub, worked at Powerset",Career,215
3599,04:00,Not good at math proofs in college,School,215
3600,06:27,Did Flash navigation menus back in the day,Flash,215
3601,08:09,Predicting full skeuomorphism in 7 years,Skeuomorphism,215
3602,11:25,"RedwoodJS stack uses React, GraphQL, Prisma",RedwoodJS,215
3603,15:55,Can build startups in JS instead of Ruby/Rails now,JS vs Ruby,215
3604,24:16,RedwoodJS docs as important as code,Docs,215
3605,29:20,"RedwoodJS has React on front-end, GraphQL in middle, Prisma on back-end",Stack,215
3606,37:35,Started $1M RedwoodJS Startup Fund,Fund,215
3607,43:10,Uses 5 year old specced out iMac Pro,Computer,215
3608,45:06,Uses Apple keyboard with number pad,Keyboard,215
3609,46:00,Uses cheap Logitech corded mouse,Mouse,215
3610,46:34,Uses latest iPhone,Phone,215
3611,46:56,VS Code font is Fira Code,Font,215
3612,49:26,Would start with HTML/CSS/JS for beginners now,Beginner,215
3613,51:36,Keeps up via Hacker News headlines,Keeping Up,215
3614,02:33,TypeScript tooling overview,tooling,216
3615,03:28,Type checkers vs compilers/transpilers,types,216
3616,05:26,"Popular compilers: esbuild, SWC",compilers,216
3617,07:12,Build tools utilize compilers but do more,build tools,216
3618,15:44,"Server-side TypeScript with Deno, esno, tsnode",server-side,216
3619,26:14,Vite and Parcel build tools,build tools,216
3620,31:21,Frameworks like Next.js have built-in tooling,frameworks,216
3621,33:31,Tsconfig and ESLint config,config,216
3622,40:08,VS Code has great TypeScript integration,VS Code,216
3623,45:00,Toothbrush and Tony Box product recommendations,recommendations,216
3624,02:32,Scott describes his home office setup,Office tour,217
3625,04:07,Scott discusses lighting and camera setup,Lighting,217
3626,08:18,Scott and Wes talk about desk options,Desks,217
3627,09:36,Discussion on mini split heat pumps,Heat pumps,217
3628,13:45,Banter about being bad at cornhole,Cornhole,217
3629,19:38,Scott details his professional audio gear setup,Audio gear,217
3630,25:47,"Scott describes his monitor, docking station and other tech",Tech gear,217
3631,32:34,Scott and Wes discuss importance of hardware for recording,Hardware,217
3632,33:12,Scott got a walking treadmill for his birthday,Treadmill,217
3633,35:22,Discussion on benefits of standing mats,Standing mats,217
3634,39:32,Scott and Wes love talking about office setups,Office love,217
3635,00:27,Introducing the Syntax Supper Club podcast series,Intro,218
3636,02:33,TurboRepo abstracts monorepo complexity into a lightweight build system,TurboRepo,218
3637,03:16,TurboRepo makes large-scale development techniques accessible,Accessible,218
3638,04:32,TurboRepo started as a way to add monorepo support to TSDX,TSDX,218
3639,05:56,Large companies like Google use advanced build systems like Bazel,Bazel,218
3640,06:49,These systems create a DAG of build tasks to run incrementally,DAG,218
3641,08:22,"These systems haven't been adopted much in frontend yet",Adoption,218
3642,08:57,TurboRepo focuses on incremental builds and remote caching,Caching,218
3643,09:34,TurboRepo runs tasks in parallel and dependency order,Parallel,218
3644,10:19,TurboRepo can reuse cached artifacts instead of rebuilding,Artifacts,218
3645,11:17,The cache can be shared between developers and CI,Shared cache,218
3646,15:43,Sponsor break - Whiskey Web and Whatnot podcast,Sponsor,218
3647,17:18,Adding TurboRepo to an existing monorepo takes about a day,Adoption,218
3648,20:04,TurboRepo works with all major package managers,Package managers,218
3649,21:26,TurboRepo can use environment variables to determine cache validity,Env vars,218
3650,24:31,TurboRepo binaries are packaged for distribution on NPM,Distribution,218
3651,26:38,TurboRepo can cache anything from logs to video encoding,Caching uses,218
3652,28:06,Sharing image processing cache could help Gatsby performance,Gatsby,218
3653,29:43,TurboRepo can help coordinate builds across packages,Build coordination,218
3654,31:06,"Many of Jared's projects start by solving his own problems",Own problems,218
3655,33:46,Good tools should save time with easy adoption,Easy adoption,218
3656,36:48,Focus on solving problems rather than creating new ones,Solve problems,218
3657,37:23,Rapid-fire questions section,Questions,218
3658,43:08,"TurboRepo CLI is written in Go, packaged for NPM",Implementation,218
3659,46:39,Having a small side project helps you learn and progress,Side projects,218
3660,49:02,Project-driven learning is best for self-taught developers,Project learning,218
3661,52:03,Excited about no-config development workflows in the future,No config,218
3662,53:15,"How Jared's TurboRepo project was acquired by Vercel",Acquisition,218
3663,55:11,Vercel is working on edge rendering and React server components,Vercel projects,218
3664,56:03,Shameless plugs section,Plugs,218
3665,00:31,"Potluck style episode talking about Next.js, styling, NoSQL databases, build tools, game development",Episode overview,219
3666,02:30,Next.js has better build tools than create-react-app without ejecting,Next.js build tools,219
3667,03:30,"Next.js has benefits like pre-rendering, layouts, TypeScript support",Next.js benefits,219
3668,05:04,"Syntax.fm built with Next.js, no major complaints just minor style tweaks",Syntax.fm tech stack,219
3669,08:13,"Syntax.fm uses separate editor workflows for RSS and website, would be nice to consolidate",Syntax.fm workflows,219
3670,10:24,Check Activity Monitor > CPU to see if apps are running Intel or Apple Silicon code,Checking for Apple Silicon,219
3671,23:16,"MongoDB is fully-featured, relationships can be complex",MongoDB relationships,219
3672,25:57,"Node historically CommonJS, tools need to migrate to ESM",Node and ESM,219
3673,32:27,Styled Components added protestware notification for Russian locales,Styled Components protestware,219
3674,41:13,"Game state should be client-side, validate state if competitve",Game state management,219
3675,45:20,"Game developers have experience preventing cheating, obfuscation can help",Prevent game cheating,219
3676,02:33,Talk about 2 JavaScript environments,JS envs,220
3677,03:52,Mention of Structured Content conference,Conf,220
3678,06:07,Start discussing web interoperability,Interop,220
3679,09:10,List many other JS environments,JS envs,220
3680,14:04,Describe JS standards bodies,Standards,220
3681,16:24,Goal to standardize APIs across environments,Standardize,220
3682,17:42,Tools will work across environments,Portable,220
3683,20:25,Announce web interoperability working group,Working group,220
3684,02:33,Wes asks how NX relates to existing tools like Webpack,Tooling,221
3685,05:53,Victor explains how NX provides core task orchestration features and optional plugins for specific tools,NX overview,221
3686,10:04,Discussion on how tools like TypeScript provide long-term benefits that are hard to see at first,Long-term benefits,221
3687,14:40,"Victor clarifies that NX is designed for most companies, not just the scale of Google",NX scale,221
3688,21:14,Example of how NX can help automatically migrate a codebase to new versions of libraries,Migrations,221
3689,26:10,Story of using NX to automatically migrate from TSLint to ESLint,TSLint migration,221
3690,34:37,Explanation of how NX can work with existing tools like Webpack without replacing them,Tool integration,221
3691,40:24,Overview of computation caching in NX to skip unnecessary work,Caching,221
3692,45:19,How caching improves average build times but distribution is needed to improve worst-case times,Caching vs distribution,221
3693,53:58,"Victor's advice to draw weekly diagrams to reinforce new learnings",Learning advice,221
3694,02:33,Web APIs: Interesting things you can do in the browser,Browser APIs,222
3695,04:36,"getUserMedia allows access to user's webcam and microphone",Webcam access,222
3696,07:56,"FileSystem API allows read, write access to local files",File access,222
3697,11:10,Permissions API checks user permissions status,Permissions,222
3698,14:06,"Geolocation API accesses user's location",Location,222
3699,22:38,Web Animations API creates animations with JavaScript,Animations,222
3700,26:36,ResizeObserver API detects size changes of elements,Resize observe,222
3701,31:37,Clipboard API allows copy/paste with JavaScript,Clipboard,222
3702,34:17,"Web Storage API stores data locally (localStorage, sessionStorage)",Local storage,222
3703,38:25,Speech Synthesis API converts text to speech,Text to speech,222
3704,41:42,Speech Recognition API converts speech to text,Speech to text,222
3705,00:30,Talking TypeScript fundamentals,Intro,223
3706,01:01,Narrowing types in TypeScript,Narrowing,223
3707,02:20,Sentry sponsor,Sentry,223
3708,04:00,PaymentsHub sponsor,PaymentsHub,223
3709,05:44,What is type narrowing?,Definition,223
3710,06:35,Using type guards,Type guards,223
3711,09:13,Food metaphors,Food,223
3712,10:19,typeof type guard,typeof,223
3713,11:29,in and instanceof type guards,in and instanceof,223
3714,13:44,Custom type guard functions,Custom guards,223
3715,15:53,Abstracting type checks,Abstracting,223
3716,16:30,this is type narrowing,this is,223
3717,18:06,Discriminated unions,Discriminated unions,223
3718,19:55,Controlling vs being controlled by TS,Control,223
3719,00:02,Podcast intro,Intro,224
3720,00:12,What is edge computing,Edge intro,224
3721,00:29,Run it on the edge,Edge phrase,224
3722,00:37,Sponsors,Sponsors,224
3723,00:53,Scott is sick,Scott sick,224
3724,01:18,Wes was sick,Wes sick,224
3725,02:00,Friday Supper Club announcement,Supper club,224
3726,02:40,Getting guests on podcast,Guests,224
3727,04:56,What is edge computing,Edge explained,224
3728,07:28,Caching with CDNs,CDN caching,224
3729,08:08,Edge computing use cases,Edge use cases,224
3730,10:25,Latency issues with IoT,IoT latency,224
3731,11:34,Speed comparisons,Speeds,224
3732,13:38,Cold start explained,Cold start,224
3733,15:22,Edge function APIs,APIs,224
3734,23:07,Deno and edge functions,Deno,224
3735,24:26,Supabase using Deno,Supabase,224
3736,24:30,Pronouncing Supabase,Supabase name,224
3737,27:03,Size limitations,Size limits,224
3738,30:20,Complex redirects,Redirects,224
3739,31:52,Edge rendering,Edge rendering,224
3740,33:03,Content rewrites,Content rewrites,224
3741,33:40,HTML rewriting example,HTML rewriting,224
3742,34:56,Authentication,Authentication,224
3743,35:30,Conditional loading,Conditional loading,224
3744,36:51,Browser support,Browser support,224
3745,37:20,Localization,Localization,224
3746,38:21,Caching,Caching,224
3747,39:05,Authentication strategies,Auth strategies,224
3748,40:13,Starting async work,Async work,224
3749,40:46,Implementing edge functions,Implementing,224
3750,43:39,Edges as middleware,Middleware,224
3751,46:32,Using WebAssembly,WebAssembly,224
3752,47:47,Companies offering edge,Companies,224
3753,48:57,Portability challenges,Portability,224
3754,50:41,Moving to picks,Picks intro,224
3755,00:29,Discussing Axios vs fetch for network requests,Axios vs fetch,225
3756,01:26,Linode sponsor spot,Linode ad,225
3757,02:09,Sentry sponsor spot,Sentry ad,225
3758,03:03,Axios allows avoiding double JSON promise with fetch,Avoid double promise,225
3759,03:38,Axios has interceptors like middleware,Interceptors,225
3760,04:34,Some are fine with default fetch capabilities,Fetch is enough,225
3761,05:08,Many use a framework that handles network requests,Frameworks handle requests,225
3762,06:25,No need to tack on double JSON promise with Axios,No double promise,225
3763,06:46,Fetch can be enhanced to do anything Axios does,Enhance fetch,225
3764,07:30,Interceptors allow request manipulation,Manipulate requests,225
3765,08:47,Interceptors allow caching third party API data,Cache APIs,225
3766,09:31,Interceptors allow token refresh on expired JWT,Refresh tokens,225
3767,10:10,"Fetch works for most use cases, but can build on it",Extend fetch,225
3768,10:29,Axios handles progress events for uploads/downloads,Progress events,225
3769,11:44,Progress accuracy depends on file sizes known on client/server,Progress accuracy,225
3770,12:14,Axios validateStatus API handles tricky server responses,Validate status,225
3771,13:47,Axios allows default headers and API keys,Default headers,225
3772,14:08,Axios adapters useful for mocking HTTP requests,Mock requests,225
3773,15:44,Axios allows custom request timeouts,Custom timeouts,225
3774,16:28,"Shouldn't use Axios just to avoid double promise",Avoid just for promise,225
3775,16:44,Useful when working with tricky third-party APIs,Tricky APIs,225
3776,17:10,Postman generates Axios code snippets,Postman code gen,225
3777,00:02,Announcer intro,Intro,226
3778,00:15,Wes and Scott introduce stumped episode,Stumped intro,226
3779,00:39,Wes and Scott discuss keeping score,No score,226
3780,00:59,Wes introduces sponsors,Sponsors,226
3781,04:18,Wes and Scott play rock paper scissors for who goes first,Rock paper scissors,226
3782,05:08,Wes asks first question about WeakMap methods,WeakMap question,226
3783,07:20,Scott asks Wes about making objects iterable,Iterable objects,226
3784,09:05,Wes says hard interview questions are normal,Hard questions,226
3785,09:28,Scott asks Wes how to uppercase first string letter,Uppercase string,226
3786,10:37,Wes asks Scott about typeof operator,Typeof operator,226
3787,11:29,Scott and Wes discuss TypeScript type checking,TypeScript types,226
3788,11:56,Wes asks Scott to explain ES6 classes,ES6 classes,226
3789,13:24,Wes asks Scott about enumerating objects,Enumerate objects,226
3790,15:49,Wes introduces sponsor Content by Kentico,Sponsor 1,226
3791,17:20,Scott asks Wes about event queue,Event queue,226
3792,18:23,Wes discusses async timing issues,Async timing,226
3793,19:18,Scott reads StackOverflow answer on event queue,StackOverflow answer,226
3794,21:07,Wes asks Scott about need for promises,Promises,226
3795,23:50,Wes asks Scott about range overflow,Range overflow,226
3796,25:51,Wes asks Scott about JS enhanced object literals,Enhanced objects,226
3797,27:43,Scott and Wes discuss form validation techniques,Form validation,226
3798,28:23,Wes asks Scott about matching regex strings,Matching regex,226
3799,29:36,Wes introduces sponsor LogRocket,Sponsor 2,226
3800,31:15,Wes asks Scott what a thunk function is,Thunk function,226
3801,33:47,Scott asks Wes about benefits of modules,Modules,226
3802,35:49,Wes introduces sponsor Freshbooks,Sponsor 3,226
3803,36:05,"Wes asks Scott about call, apply and bind","Call, apply, bind",226
3804,38:23,Scott and Wes discuss lack of need for bind nowadays,No bind needed,226
3805,40:25,Wes asks Scott to explain need for modules,Modules explanation,226
3806,41:46,Wes asks Scott about variable swapping with destructuring,Variable swapping,226
3807,43:22,Wes wraps up stumped episode,Wrap up,226
3808,44:07,Wes sick picks recycled outdoor furniture,Wes pick,226
3809,46:29,Scott sick picks Who Arted podcast,Scott pick,226
3810,48:51,Wes shameless plug for his courses,Wes plug,226
3811,49:22,Scott shameless plug for Level Up Tutorials,Scott plug,226
3812,50:11,Wes and Scott sign off,Sign off,226
3813,00:21,Talking about building coupon systems for ecommerce,Coupon systems,227
3814,01:38,Using Prismic as a headless CMS to build content with Slice components,Prismic CMS,227
3815,02:38,Using LogRocket to debug errors and monitor user experiences in web apps,LogRocket,227
3816,04:11,"Both built custom coupon engines, challenges and strategies",Building coupons,227
3817,05:15,Layering custom coupon logic on top of payment provider functionality,Layering coupons,227
3818,05:49,Supporting multiple payment methods requires custom coupon logic,Multiple payments,227
3819,07:29,Coupon constraints like dollar or percentage discounts,Coupon constraints,227
3820,08:09,Constraints around allowing coupons on products or subscriptions,More constraints,227
3821,09:27,Restricting coupons to specific products with unique codes,Restricting coupons,227
3822,09:59,Limiting number of coupon redemptions,Limiting redemptions,227
3823,10:18,Incrementing coupon usage count in database,Incrementing usage,227
3824,12:06,Applying discounts to cart total vs individual items,Cart discounts,227
3825,12:24,Setting coupon expiration dates,Expiration dates,227
3826,12:54,Deactivating coupons to stop abuse,Deactivating coupons,227
3827,13:11,Creating single-use coupons,Single-use coupons,227
3828,13:18,Allowing only one coupon per order,One coupon per order,227
3829,13:39,Stacking student discounts with coupons,Stacking discounts,227
3830,14:02,Restricting coupons to certain countries,Country restrictions,227
3831,14:23,Restricting country-specific coupons to those countries,More country restrictions,227
3832,14:54,New vs existing customer coupons,New vs existing,227
3833,15:14,Connecting affiliate coupons,Affiliate coupons,227
3834,16:25,Using referral URLs to apply automatic coupons,Referral coupons,227
3835,16:48,Chaining conditional coupon rules,Chaining rules,227
3836,17:37,Complex conditional logic is difficult to manage,Complex logic,227
3837,18:28,"Can't prevent coupons from being shared","Can't prevent sharing",227
3838,19:24,Focus time on business not anti-piracy,"Don't chase piracy",227
3839,20:04,Unique coupon codes to track attribution,Track attribution,227
3840,20:39,Inferring metadata from coupon code format,Coupon metadata,227
3841,21:08,Applying coupons automatically via URL,Auto apply coupons,227
3842,21:40,Trim whitespace and normalize capitalization,Normalize coupons,227
3843,22:15,Simplify coupon format for usability,Simplify format,227
3844,22:59,Helpful error messages for invalid coupons,Good error messages,227
3845,23:17,Make coupon input easy and clean,Clean input,227
3846,23:48,"Don't frustrate users during purchase","Don't frustrate users",227
3847,24:03,Summary of coupon engine tips,Summary tips,227
3848,24:48,Example of coupon logic exploit,Coupon exploit,227
3849,00:02,Introduction,Announcer intro,228
3850,00:11,Hosts welcome,Hosts intro,228
3851,00:50,Hosts personal updates,Hosts updates,228
3852,01:48,Jury duty experience,Jury duty,228
3853,02:10,Interest in jury duty,Jury interest,228
3854,02:25,Types of jury duty cases,Jury cases,228
3855,02:40,Sponsor intro,Sponsors,228
3856,02:53,Transition to questions,Questions intro,228
3857,02:59,Working with designers/PMs,Teamwork,228
3858,04:24,Being honest with communication needs,Communication,228
3859,05:02,Delivering work on time,Deliver on time,228
3860,05:49,Understanding all roles,Understand roles,228
3861,06:11,Using standups for updates,Standup updates,228
3862,06:42,Pronouncing a name,Name pronunciation,228
3863,07:01,Dealing with imposter syndrome,Imposter syndrome,228
3864,08:09,Being comfortable not knowing,Comfort not knowing,228
3865,08:21,Progressing without formal education,No formal education,228
3866,09:18,Imposter syndrome common,Common imposter,228
3867,10:47,Putting yourself in challenging roles,Challenge yourself,228
3868,11:40,Denver coffee shops,Denver coffee,228
3869,12:06,Using tables for tabular data,Tables for data,228
3870,13:31,Using a dedicated animation library,Animation library,228
3871,14:26,Most are just JS and CSS,JS and CSS animations,228
3872,14:47,Flip animations more difficult,Flip animations,228
3873,15:05,Animating DOM changes difficult,DOM animation,228
3874,15:44,GreenSock framework-agnostic option,GreenSock option,228
3875,16:50,GreenSock well-documented,GreenSock docs,228
3876,17:58,Sentry sponsor spot,Sentry sponsor,228
3877,18:11,Icon library question,Icon libraries,228
3878,19:02,Font Awesome not just web fonts now,Font Awesome not web fonts,228
3879,19:28,Font Awesome improved,Font Awesome better,228
3880,20:12,Curating own SVG icons,Curated SVGs,228
3881,20:33,Switch statement for icons,Icon switch statement,228
3882,20:39,Pick icons that fit brand,Brand identity icons,228
3883,21:27,Using React Icons,React Icons,228
3884,22:15,React Icons API,React Icons API,228
3885,22:37,Carefully choosing icon sets,Choosing icon sets,228
3886,23:40,Higher resolution screens,Higher resolution,228
3887,24:47,Removing logo detail at small sizes,Logo detail,228
3888,25:15,Fixing broken service workers,Service workers broken,228
3889,25:54,Caching causes issues,Caching issues,228
3890,26:36,Serving old cached version,Old cached version,228
3891,27:25,Browser checks for new service worker,Browser checks service worker,228
3892,28:03,Nuke service worker gist,Nuke gist,228
3893,28:19,Wes service worker episode,Service worker episode,228
3894,29:26,Sanity sponsor spot,Sanity sponsor,228
3895,31:10,Fullstack Next.js pros and cons,Next.js fullstack pros/cons,228
3896,31:41,Pros of colocation,Colocation pros,228
3897,32:14,Separation of concerns benefit,Separation benefit,228
3898,32:52,Nothing proprietary about Next.js functions,Next.js not proprietary,228
3899,33:43,Factoring out backend logic,Factoring logic,228
3900,34:31,Easily moving serverless functions,Moving serverless,228
3901,34:54,Using monorepos,Monorepos,228
3902,35:43,Tradeoffs either way,Tradeoffs,228
3903,37:46,Pronouncing French name,French name,228
3904,38:44,Online coding environments,Online coding,228
3905,39:57,Moving to production,Move to production,228
3906,40:11,Keeping private until ready,Keep private,228
3907,40:28,Avoiding always-on repls,Avoid repls,228
3908,40:38,Ok for toys and tools,Ok for toys,228
3909,41:40,New developers going online first,Online first,228
3910,41:58,When to move to production,When move to production,228
3911,42:45,Managing client expectations,Manage expectations,228
3912,43:34,Having a change order process,Change order process,228
3913,44:02,Taking on bad clients when needing work,Needing work,228
3914,44:19,Having standards for clients,Standards,228
3915,02:46,Svelte Cubed explained,Svelte Cubed,229
3916,03:51,Declarative vs imperative 3D,Declarative 3D,229
3917,05:15,What is Three.js?,Three.js,229
3918,06:55,Three.js uses WebGL and Canvas,WebGL,229
3919,07:45,Three.js scene setup,Scene setup,229
3920,10:20,Svelte components for 3D,Svelte 3D,229
3921,11:33,Generating 3D visualizations,3D visualizations,229
3922,12:26,Orbit controls,Orbit controls,229
3923,13:22,Svelte Cubed documentation,Documentation,229
3924,15:03,Using Three.js docs,Three.js docs,229
3925,16:01,Physics with Svelte Cannon,Physics,229
3926,17:08,Summary and additional resources,Resources,229
3927,00:02,Scott and Wes introduce the podcast,Intro,230
3928,00:59,Scott talks about buying a new electric car,New car,230
3929,02:00,Scott describes the look and feel of his new Hyundai Ioniq 5 EV,Car description,230
3930,03:38,"Scott talks about the car's fast charging and advanced tech features",Car features,230
3931,05:24,Wes and Scott discuss regenerative braking in EVs,Regen braking,230
3932,06:29,Scott waited a long time to get the Ioniq 5 without dealer markups,No markups,230
3933,08:32,Question from Andy about adding interactivity to a Drupal site,Drupal question,230
3934,09:40,Wes recommends Alpine.js for simple interactivity without much build process,Alpine recommendation,230
3935,11:02,Scott suggests using vanilla web components,Web component suggestion,230
3936,12:04,Question from Mohammed about presentational React components,React question,230
3937,02:33,Scott deployed code on Friday and Century helped catch a critical bug,Century bug catch,231
3938,03:36,Magic Bell provides notifications inbox for your product,Magic Bell,231
3939,05:35,Topic is how to be consistent,Consistency tips,231
3940,06:13,Committing to a reasonable timeline and schedule is key,Commit,231
3941,07:42,"Start with small, achievable commitments",Start small,231
3942,09:15,Plan and schedule everything needed to accomplish goals,Plan & schedule,231
3943,09:50,Schedule and protect time needed for goals,Protect time,231
3944,10:22,Be flexible for emergencies but stay committed,Stay committed,231
3945,11:13,Batch record/produce content to stay ahead,Batch content,231
3946,12:31,Capture ideas when they come to you,Capture ideas,231
3947,13:02,Have a plan and ideas before batch work sessions,Have a plan,231
3948,13:44,"For developers, use issues and todos to stay consistent",Issues & todos,231
3949,14:13,Being accountable to someone else helps consistency,Be accountable,231
3950,15:04,Sign up for events/things you must complete,Sign up,231
3951,17:17,Having others depend on you increases motivation,Help others,231
3952,19:11,Break big tasks into smaller pieces,Smaller tasks,231
3953,19:55,Consistently make todo lists and prioritize,Todo lists,231
3954,20:30,Use SMART goals that are specific and measurable,SMART goals,231
3955,22:01,Measure and track progress on meeting goals,Measure progress,231
3956,23:07,Revise plans if you fail to meet goals initially,Revise plans,231
3957,02:33,"Wes and Scott discuss how they come up with ideas and lay out content for YouTube videos, blog posts, courses, conference talks, and podcasts.",Content ideation,232
3958,03:05,Scott shares his process for creating consistent YouTube content by capturing ideas in a list and batch recording videos.,YouTube process,232
3959,08:45,Scott advises new YouTubers to release content on a consistent schedule to build their audience.,YouTube advice,232
3960,09:56,Wes shares how he structures conference talks around 6-8 loosely associated topics to keep it interesting.,Conference talks,232
3961,20:03,"Scott outlines his process for developing course ideas and content, starting with goals and key concepts.",Course development,232
3962,27:16,Wes explains how he mind maps course topics and builds projects to cover real world skills.,Course planning,232
3963,34:56,Wes writes blog posts to document solutions to tricky development problems.,Blog posts,232
3964,47:12,Wes and Scott discuss their system for organizing Syntax podcast content and ideas.,Podcast planning,232
3965,02:58,Microsoft proposed adding optional types syntax to JS,Optional types,233
3966,04:52,Types in JS catches bugs and improves autocomplete,Catch bugs,233
3967,06:48,"Many predict types would come to JS, and here we are",Prediction,233
3968,09:25,Optional types are parsed but ignored by JS engines,Parsed types,233
3969,11:08,Prefer TypeScript syntax over more verbose JSDoc comments,Prefer TS syntax,233
3970,15:36,Types help more in complex apps vs simple scripts,Complex apps,233
3971,18:55,TypeScript is proven winner for types over Flow or JSDoc,TypeScript winner,233
3972,20:30,"Types in JS reduces build steps but doesn't eliminate them",Reduce builds,233
3973,23:55,No need for JSX support yet in browser,No JSX yet,233
3974,02:33,"Discussing Scott's phone software issue",Phone issue,234
3975,04:13,Reviewing bald.design portfolio,bald.design,234
3976,08:11,Reviewing huangande.dev portfolio,huangande.dev,234
3977,09:19,"Reviewing Kenny Thai's portfolio site",Kenny Thai,234
3978,11:17,Reviewing abgn.me portfolio,abgn.me,234
3979,14:53,Reviewing bradleyshellnut.com portfolio,bradleyshellnut.com,234
3980,18:01,Reviewing hunterjennings.dev portfolio,hunterjennings.dev,234
3981,21:13,Reviewing matthewfarlim.com portfolio,matthewfarlim.com,234
3982,00:27,Vitest overview,Vitest,235
3983,01:02,COVID and masks,COVID,235
3984,02:09,Campfire smelling masks,Masks,235
3985,02:39,Sponsor: Sentry,Sentry,235
3986,03:53,Sponsor: Magicbell,Magicbell,235
3987,05:02,What is Vitest?,Vitest,235
3988,05:57,Using Vitest config,Config,235
3989,06:57,Vitest setup differences,Setup,235
3990,07:13,Vite backend usage,Backend,235
3991,07:28,Vitest features,Features,235
3992,08:45,Faster test runs,Faster,235
3993,08:50,Jest compatibility,Jest,235
3994,09:52,Mocking built-in,Mocking,235
3995,10:23,Filtering tests,Filtering,235
3996,10:31,Snapshot testing,Snapshots,235
3997,10:45,Code coverage,Coverage,235
3998,11:04,DOM mocking,DOM,235
3999,12:58,Testing library usage,Testing library,235
4000,14:42,In-file testing,In-file,235
4001,15:11,In-file test splitting,Splitting,235
4002,16:09,Colocating tests,Colocating,235
4003,16:34,Hiding test files,Hiding,235
4004,17:30,Testing library integration,Integration,235
4005,19:07,Easy setup,Setup,235
4006,19:36,Minor disruption,Disruption,235
4007,20:37,Year of speed,Speed,235
4008,20:55,Conclusion,Conclusion,235
4009,00:17,"Explaining Wes and Scott's course platform stacks",Stacks,236
4010,00:45,Stacks have changed over the years,Changed,236
4011,00:57,Wes released a big update to his stack,Update,236
4012,01:09,Wes and Scott do similar things but use different tech stacks,Different,236
4013,01:34,"Sponsors: Kentico, LogRocket, .tech domain names",Sponsors,236
4014,03:32,Wes talks about moving his course platform hosting to Render,Moving hosting,237
4015,04:28,Wes explains how Cloudflare proxies websites,Cloudflare proxy,237
4016,05:43,"Wes explains how Let's Encrypt works","Let's Encrypt",237
4017,08:34,More explanation of Cloudflare services,Cloudflare services,237
4018,10:25,Problems when combining Render and Cloudflare,Render/Cloudflare issues,237
4019,15:38,Solutions for using Render and Cloudflare together,Render/Cloudflare solutions,237
4020,18:22,"Gray cloud Render to approve SSL, then re-enable Cloudflare",Gray cloud solution,237
4021,21:09,Scott turns on Cloudflare proxy live during the show,Live Cloudflare change,237
4022,00:11,Potluck episode with questions submitted by listeners,questions,238
4023,00:41,"Questions cover authentication, headless ecommerce, cookies in Next.js, motivation for finishing projects, git conflicts, developer roles, Shopify CMS, URL tokens",topics,238
4024,02:33,Handling different authentication levels with individual permissions and role groups,auth,238
4025,03:05,Salt on roads destroys cars in Canada compared to sun melting snow in Denver,winter,238
4026,04:49,"Grant specific permissions like viewing, editing users, plus conditional queries, not just yes/no access",permissions,238
4027,10:16,"Don't worry about people saying front end developers aren't real developers",roles,238
4028,17:42,Y2K scare was mitigated as the year 2000 arrived with no issues,Y2K,238
4029,26:03,No documentation is worse than bad documentation,docs,238
4030,27:46,"Finish side projects for learning, but don't be afraid to abandon if you've gotten what you need",finishing,238
4031,33:54,Regenerate package-lock.json on merge conflicts rather than resolve manually,package-lock,238
4032,39:19,Sanity.io provides tools to build headless Shopify sites,Shopify,238
4033,43:35,URL tokens allow passing data like PayPal callbacks and tracking codes,URL tokens,238
4034,49:22,Next.js serverless functions can set cookies like Express with proper headers,Next.js cookies,238
4035,55:39,"O'Keefe's hand cream and lip balm recommended for dry cracked skin","O'Keefe's",238
4036,04:00,Question about recent trend towards SSR vs Jamstack/serverless,Question,239
4037,05:56,"Explain what Jamstack, SSR, and serverless are",Definitions,239
4038,12:18,"Discuss differences between SSR, Jamstack, and when to use each",Differences,239
4039,17:00,Explain where serverless fits in,Serverless,239
4040,23:53,Thank listener for good question that turned into whole show,Wrap up,239
4041,00:02,Wes and Scott introduce the podcast,Intro,240
4042,00:11,They will discuss the results of the State of JS survey,Episode overview,240
4043,00:26,"The survey covers languages, testing, pain points and more",Survey topics,240
4044,00:56,Scott has been setting up his office with sound panels,Office setup,240
4045,02:15,"Wes's desk setup and cable management",Desk setup,240
4046,03:13,"Scott's under-desk power and cable management",Cable management,240
4047,03:40,Wes tries online grocery delivery with Instacart,Instacart,240
4048,05:01,Scott uses grocery pickup from Kroger and Whole Foods,Grocery pickup,240
4049,06:29,"Instacart can be expensive and replacements aren't ideal",Instacart issues,240
4050,07:22,"Wes prefers shopping in person, Scott likes it",Grocery preferences,240
4051,08:24,Overview of options for mobile and desktop development,Mobile & desktop,240
4052,09:18,"Wes and Scott's experience with React Native and Electron",React Native & Electron,240
4053,10:11,"Scott discusses Touri, a Rust alternative to Electron",Touri,240
4054,11:34,"Touri documentation is minimal since it's in early development",Touri docs,240
4055,12:51,Native apps still a top choice for mobile development,Native apps,240
4056,13:28,React Native and Electron also popular with JS developers,JS frameworks popularity,240
4057,14:02,Overview of top testing tools by usage and satisfaction,Testing tools,240
4058,15:10,Scott discusses issues with Jest and interest in Vite Test,Jest vs Vite Test,240
4059,16:11,Playwright emerging for end-to-end testing like Cypress,Playwright,240
4060,16:33,Wes and Scott debate Storybook as a testing tool,Storybook testing,240
4061,17:22,"Wes uses Jest, React Testing Library and snapshots","Wes' testing preferences",240
4062,18:04,Scott wants to explore Playwright more,Playwright interest,240
4063,18:38,Sentry tracks errors and exceptions in your apps,Sentry ad,240
4064,21:26,Tools for managing monorepos,Monorepo tools,240
4065,22:30,"Wes switched to PNPM on Scott's recommendation",PNPM,240
4066,23:24,Turborepo gaining interest but not widely used yet,Turborepo,240
4067,24:20,NX and Lerna also popular monorepo tools,NX & Lerna,240
4068,25:05,Scott prefers PNPM and Turborepo,"Scott's preferences",240
4069,27:11,Sanity is a unified content platform,Sanity ad,240
4070,28:30,Node and browser top JS runtimes,JS runtimes,240
4071,29:25,Python surpringly tops non-JS languages used,Non-JS languages,240
4072,31:38,TypeScript established as top typed JS language,TypeScript adoption,240
4073,32:54,Unlikely other typed JS languages will gain traction,Other typed languages,240
4074,35:04,PHP second most used non-JS language,PHP usage,240
4075,36:46,Axios and Lodash among top JS libraries,JS libraries,240
4076,37:23,Moment still popular despite date-fns recommendation,Moment popularity,240
4077,39:43,"ESLint, Prettier and Babel top utilities",JS utilities,240
4078,40:24,Syntax is the top developer podcast,Top podcast,240
4079,41:59,Books not a popular learning resource,Learning resources,240
4080,42:51,"Wes and Scott's online courses are popular resources",Online courses,240
4081,43:41,Most developers happy with direction of JavaScript,JS direction,240
4082,44:28,Managing dependencies is the top JS pain point,JS pain points,240
4083,45:05,State management also a frustration,State management,240
4084,46:26,Async code lowest on the pain point list,Async code,240
4085,47:41,Static typing and standard library top missing features,Missing features,240
4086,48:42,Better date tools still needed,Date tools,240
4087,49:45,Decorators in limbo,Decorators,240
4088,50:50,Vite wins highest satisfaction award,Awards,240
4089,52:02,Elm most popular write-in technology,Write-ins,240
4090,53:05,FreshBooks sponsor ad,FreshBooks ad,240
4091,54:20,"Scott's sick pick is a LeapFrog toy for his daughter",LeapFrog toy,240
4092,55:13,"Wes's sick pick is a Heartbeat Hot Sauce",Hot sauce,240
4093,56:47,Wes plugs his web development courses,"Wes's courses",240
4094,57:28,Scott plugs Level Up Tutorials 10th anniversary,Level Up Tutorials,240
4095,04:12,"Wes made 10,000 sticker packs with 15 stickers each",10k packs,241
4096,05:24,Stickers printed cheaply in China by Zig Pak,China printing,241
4097,06:32,Designs done by Wes and Indonesian skater kids,Designs,241
4098,07:42,DigitalOcean sponsored printing in exchange for pack/sticker,Sponsor,241
4099,11:32,Friends helped pack stickers into envelopes,Packing help,241
4100,13:47,"Sold on Wes's course platform, scaled up servers",Selling platform,241
4101,18:17,"Shipped some via USPS, others through Stallion Express",Shipping,241
4102,22:29,International shipping very expensive to some countries,"Int'l shipping",241
4103,26:45,"$5 sticker packs, costs include printing, shipping, fees",Costs,241
4104,28:44,"Couldn't use official TypeScript logo due to legal",TS logo issue,241
4105,00:02,Announcing new episode on State of JS survey,Episode intro,242
4106,00:11,Overview of topics covered in State of JS survey,Survey topics,242
4107,00:51,Sponsor spots,Sponsors,242
4108,01:09,Wes and Scott intro,Intros,242
4109,01:59,Wes birthday story at cottage,Cottage story,242
4110,05:46,Starting review of State of JS survey results,Survey review,242
4111,07:02,Survey audience skews towards Syntax listeners,Survey audience,242
4112,08:29,Survey salary ranges seem high,High salaries,242
4113,10:23,Optional chaining and knowledge coalescing usage,Language features,242
4114,11:20,"Scott's SvelteKit pick of the year",SvelteKit pick,242
4115,12:35,Usage of private fields and BigInt,More features,242
4116,14:07,Browser API usage results,Browser APIs,242
4117,15:29,Web animations and motion.dev,Web animations,242
4118,16:43,Intl API usage surprisingly low,Intl API,242
4119,18:20,Usage of custom elements and shadow DOM,Web components,242
4120,19:01,Page visibility API,Page visibility,242
4121,19:10,Broadcast channel API,Broadcast channel,242
4122,20:53,Web share API,Web share API,242
4123,21:56,Mobile browser support of web share API,Web share support,242
4124,23:11,Sponsor break,Sponsor,242
4125,24:30,Front-end framework results,Front-end frameworks,242
4126,25:28,React awareness always at 100%,React awareness,242
4127,26:00,Overview of frameworks,Framework overview,242
4128,28:32,Frameworks people would not use again,Would not use,242
4129,29:15,Confusion between Angular and AngularJS,Angular confusion,242
4130,31:34,New frameworks solving old problems,New frameworks,242
4131,32:06,Most are happy with front-end frameworks,Happy with front-end,242
4132,33:30,Sponsor break,Sponsor,242
4133,34:11,Back-end framework results,Back-end frameworks,242
4134,35:30,Rise of frameworks like Next and SvelteKit,New back-end frameworks,242
4135,36:40,Moving from static sites to server rendering,Server rendering,242
4136,38:16,Less happiness with back-end frameworks,Unhappy with back-end,242
4137,39:33,Prediction of improved back-end happiness,Back-end prediction,242
4138,40:25,Dislike of Webpack,Dislike Webpack,242
4139,41:51,Frequent build tool churn,Build tool churn,242
4140,43:14,Meteoric rise of Vite,Vite usage,242
4141,44:30,No one is actually using Rome,No Rome usage,242
4142,45:14,Prediction of build tool happiness increase,Build tool prediction,242
4143,46:37,Sponsor break,Sponsor,242
4144,48:01,More survey topics to be covered next episode,More topics coming,242
4145,48:39,Best podcast question results,Best podcast,242
4146,49:11,"Scott's Inventing Anna Netflix pick",Inventing Anna,242
4147,51:17,"Wes' Everlane uniform sweater pick",Everlane sweater,242
4148,03:44,Sentry helps debug under pressure,Sentry debugging,243
4149,05:25,Preferred array methods based on input/output types,Array methods,243
4150,09:29,forEach vs for...in loops,Looping,243
4151,10:46,for...in allows iterating object properties ,for...in,243
4152,16:03,"hasOwnProperty vs 'in' operator",Object properties,243
4153,19:41,Position vs translate for moving elements,CSS moving,243
4154,23:28,Object assign vs object spread,Object copying,243
4155,00:02,Podcast intro,Intro,244
4156,00:11,Introducing guest Ben Vinegar,Guest intro,244
4157,00:24,Guest jokes about sponsor confusion,Sponsor joke,244
4158,00:38,"Wes and guest discuss guest's background",Guest background,244
4159,02:03,Guest discusses graphics driver development background,Graphics background,244
4160,02:41,Discussion of Epson as a large conglomerate,Epson,244
4161,03:14,Guest got into web development after seeing Ajax demos,Ajax interest,244
4162,03:53,Guest worked at Disqus on embedded commenting,Disqus,244
4163,04:26,Discussion of evolution of web apps and SPAs,SPA evolution,244
4164,04:41,Guest joined Sentry as 4th employee in 2015,Joined Sentry,244
4165,05:08,"Discussion of Sentry's ongoing innovation",Sentry innovation,244
4166,05:45,Guest discusses not stagnating as a company,Avoiding stagnation,244
4167,06:27,Joking about Sentry team laughing at bugs,Bug jokes,244
4168,07:00,Distributed tracing helps debug errors across services,Distributed tracing,244
4169,08:16,Guest explains distributed tracing,Explaining tracing,244
4170,09:22,Discussion of microservices and increased complexity,Microservices complex,244
4171,10:41,Tracing connects errors across services,Tracing connects,244
4172,11:17,Tracing also helps debug performance issues,Tracing performance,244
4173,12:08,Some tracing tools were enterprise focused before,Enterprise tracing,244
4174,12:50,AWS X-Ray as a consumer tracing tool,AWS X-Ray,244
4175,13:32,Rise of full stack developers using cloud services,Full stack cloud,244
4176,14:30,Tools help full stack developers,Tools for full stack,244
4177,14:59,Tracing can help debug slowness without errors,Tracing slowness,244
4178,15:27,Tracing shifts focus from frontend to backend optimization,Backend optimization,244
4179,15:53,Tracing lets you test closer to user experience,User focused testing,244
4180,16:35,Tracing links frontend latency to backend services,Link frontend and backend,244
4181,17:02,Tracing helps pinpoint performance problems,Pinpoint problems,244
4182,18:31,Integration testing versus unit testing discussion,Testing discussion,244
4183,19:21,Century sponsor ad read #1,Ad #1,244
4184,20:02,Contentful sponsor ad read,Ad #2,244
4185,21:25,Discussion of Sentry on Cloudflare Workers,Sentry on Cloudflare,244
4186,22:30,Cloudflare also uses Sentry,Cloudflare uses Sentry,244
4187,23:08,Discussion of Sentry as open source business model,Open source model,244
4188,24:11,Sentry began as open source project,Began open source,244
4189,25:23,Discussion of self-hosted vs Sentry-hosted tradeoffs,Self-host vs Sentry host,244
4190,26:35,Prefer paying over maintaining old self-hosted apps,Pay vs maintain,244
4191,27:48,Sentry uses more complex technologies now,Complex technologies,244
4192,28:32,Sentry uses Kafka and ClickHouse,Kafka and ClickHouse,244
4193,29:21,Running Sentry yourself requires maintenance,Self-host maintenance,244
4194,30:18,Prefer paying than debugging old platforms,Pay over debug,244
4195,31:57,Industrialization of software industry,Industry industrialization,244
4196,32:24,Better to focus on business than infrastructure,Focus on business,244
4197,34:38,"Guest discusses Sentry's tech stack evolution",Stack evolution,244
4198,35:05,Sentry began as Django plugin in 2008-09,Django plugin,244
4199,36:11,Original Sentry aggregated exceptions,Aggregated exceptions,244
4200,36:34,Sentry stayed simple to remain on Postgres/Redis initially,Stayed simple,244
4201,37:01,Frontend rebuilt in React in 2015,React rewrite,244
4202,37:34,Converted to TypeScript 1-2 years ago,TypeScript rewrite,244
4203,38:23,Discussion of fully converting Sentry frontend to TypeScript,TypeScript conversion,244
4204,39:04,Internal process for coordinated changes,Coordinated changes,244
4205,39:50,No major refactors during TypeScript conversion,No major refactors,244
4206,40:35,Took 1.5 years to convert 100k lines to TypeScript,1.5 years,244
4207,41:45,Guest says Sentry codebase is open source example,Open source example,244
4208,42:55,Big transition to TypeScript,Big TypeScript transition,244
4209,43:39,Partial conversions can take a long time,Partial conversions long,244
4210,44:34,TypeScript benefits after full conversion,TypeScript benefits,244
4211,45:42,Browsers may provide clean JS environment function,Clean JS env,244
4212,46:13,Guest was asked weird JS trivia in an interview,Weird JS trivia,244
4213,47:30,Guest discovered deleting properties can restore originals,Deleting restores originals,244
4214,47:41,Now iframes provide clean JS environment,iframes provide clean env,244
4215,48:09,Old libraries like PrototypeJS altered native objects,PrototypeJS alterations,244
4216,49:03,Altering native browser APIs was common before,API alterations common,244
4217,49:21,Example of library breaking Array.prototype.push,Broken array push,244
4218,50:49,Hard to get others to fix their code breaking yours,Get others to fix code,244
4219,51:14,Disqus moved to iframes to isolate environment,Disqus iframes,244
4220,51:24,"Guest was tired of dealing with others' environments","Tired of others' envs",244
4221,53:05,Sentry sponsor ad read #2,Ad #3,244
4222,54:13,"Wes' sick pick - kimchi seasoning powder",Kimchi seasoning,244
4223,55:34,"Scott's sick pick - 'Last Seen' podcast",Last Seen podcast,244
4224,56:38,"Guest's sick pick - 'Worst Scene Best Scene' podcast",WSBS podcast,244
4225,58:39,Discussion of movie podcast recommendations,Movie podcasts,244
4226,59:37,Remote work has changed hiring landscape in Canada,Canada hiring,244
4227,01:00:55,Increase in remote workers moving to Canada,Remote workers to Canada,244
4228,01:02:05,Prediction of growth of tech companies in Ontario,Growth in Ontario,244
4229,01:03:29,Shameless plugs,Shameless plugs,244
4230,01:27,Introducing Magic Bell for app notifications,Magic Bell,245
4231,02:50,Introducing Sentry for error monitoring,Sentry,245
4232,05:20,Fetch coming to Node.js,Fetch API,245
4233,06:05,Fetch coming in Node 16 and 18,Fetch versions,245
4234,09:56,URL imports coming to Node.js,URL imports,245
4235,10:22,Security concerns around URL imports,URL security,245
4236,12:16,JSON modules coming to JavaScript,JSON modules,245
4237,13:04,Other module assertion types like text,Module assertions,245
4238,15:02,node: prefix for Node.js built-ins,node prefix,245
4239,16:30,js: prefix proposed for JavaScript built-ins,js prefix,245
4240,18:12,Pipeline operator for chaining functions,Pipeline operator,245
4241,21:31,Reversible string split proposed,String split,245
4242,23:23,JavaScript module blocks proposed,Module blocks,245
4243,25:24,String.cooked for parsed template literals,String.cooked,245
4244,26:41,BigInt math functions proposed,BigInt math,245
4245,02:24,Talks about Webpack and .env for injecting environment variables,Webpack,246
4246,02:35,Discusses the newer import.meta feature in JavaScript,import.meta,246
4247,07:27,Thoughts on publishing and selling HTML/CSS templates and themes,Themes,246
4248,12:16,Debates when to use the menu tag vs the nav tag in HTML,HTML tags,246
4249,18:14,"Recommends trying multiple browsers like Chrome, Firefox, Safari for development",Browsers,246
4250,20:31,Compares TypeScript types to models in databases,TypeScript,246
4251,26:22,Where to securely store 2FA recovery codes,2FA codes,246
4252,29:35,Discusses options for languages similar to JavaScript without large runtimes,JavaScript options,246
4253,33:08,Debate between Remix vs SvelteKit frameworks,Remix vs SvelteKit,246
4254,38:22,Getting stuck in tutorial purgatory when learning web development,Tutorial purgatory,246
4255,41:43,Do frameworks like Next.js abstract away too much complexity?,Frameworks,246
4256,44:22,How to keep up with new web technologies,New technologies,246
4257,05:41,Wes thinks commenting +1 is not helpful,Commenting,247
4258,07:20,RFC stands for Request for Comments,RFC meaning,247
4259,08:45,RFCs are places for people to discuss issues and ideas,RFC purpose,247
4260,12:18,RFCs show future direction of projects,RFC future,247
4261,12:44,Active changes happen in issues and pull requests,Active changes,247
4262,14:31,Managing RFC conversations is a skill,RFC conversations,247
4263,17:05,Twitter is a good place to learn about new features,Twitter updates,247
4264,00:02,Podcast intro,Intro,248
4265,00:11,Wes introduces himself and Scott,Hosts intro,248
4266,00:21,Wes tries to introduce Wordle and its creator Josh Wardle,Wordle intro,248
4267,00:35,"Wes provides background on Wordle's popularity",Wordle context,248
4268,00:48,"Wes introduces guest Josh Wardle, creator of Wordle",Guest intro,248
4269,02:11,Josh Wardle introduces himself,Guest intro,248
4270,02:29,Josh discusses how Wordle went viral through sharing on social media,Wordle viral,248
4271,03:52,"Discussion of Wordle's popularity in New Zealand",NZ popularity,248
4272,04:55,"Josh outlines Wordle's growth timeline",Growth timeline,248
4273,05:15,Josh sold Wordle to the New York Times,NYT sale,248
4274,06:17,Josh reveals Wordle has over 10 million daily players,10M players,248
4275,06:37,"Reaction to Wordle's massive growth",Growth reaction,248
4276,07:22,Josh discusses his background in art and product management,Josh background,248
4277,08:15,Josh worked at Reddit when it was still small,Reddit job,248
4278,09:27,Josh discusses Reddit April Fools projects,Reddit pranks,248
4279,10:27,Value of understanding tech details as product manager,PM skills,248
4280,11:02,Josh transitioned into software engineering,Career change,248
4281,12:39,Frameworks hide complexity of web development,Frameworks,248
4282,13:59,Benefits of learning web fundamentals before frameworks,Learn fundamentals,248
4283,14:34,Most developers use tools built by others,Using tools,248
4284,15:09,Browser APIs vs third party libraries,Browser APIs,248
4285,15:40,Focusing on end goal vs understanding details,Focus on goals,248
4286,18:21,Wordle uses vanilla JS and web components,Vanilla JS,248
4287,19:19,Overview of web components,Web components,248
4288,20:23,"Wes notices Wordle's custom HTML elements",Custom elements,248
4289,20:45,Keyboard is its own web component,Keyboard component,248
4290,21:13,Josh used low-level web component APIs,Low-level APIs,248
4291,22:29,"Scott asks about Josh's experience with web components",WC experience,248
4292,22:57,Josh would consider a wrapper library next time,Wrapper library,248
4293,23:51,Learning fundamentals was valuable,Learned fundamentals,248
4294,24:11,Wordle frontend is only 250KB,Small size,248
4295,25:08,Josh built Wordle with Rollup,Rollup,248
4296,25:37,Most of bundle is word list and Lodash merge,Bundle contents,248
4297,26:18,Wes suggests smaller Lodash merge alternative,Lodash alternatives,248
4298,27:08,No backend aided viral spread,No backend,248
4299,28:14,Optimizations for going viral,Viral optimizations,248
4300,28:30,Low hosting costs despite huge traffic,Hosting costs,248
4301,29:44,Anecdote about email cost per letter,Email costs,248
4302,30:07,Local storage used for stats and streaks,Local storage,248
4303,30:25,No logins or accounts,No accounts,248
4304,30:56,"Keeping it simple aligned with Josh's goals",Simplicity,248
4305,31:23,Monetization would introduce complexity,No ads,248
4306,31:37,"Josh wasn't trying to build a business",Not a business,248
4307,32:26,Example of Wordle copycats motivated NYT sale,Copycats,248
4308,33:01,Scott suggests encrypting word list,Encrypt word list,248
4309,33:09,Josh explains encryption algorithm,Encryption algorithm,248
4310,33:52,Wes accidentally discovered upcoming words,Spoiled words,248
4311,34:27,Josh randomized full word list,Random words,248
4312,34:56,Josh plays Wordle daily without knowing words,Josh plays,248
4313,35:34,Discussion of occasional problematic words,Bad words,248
4314,36:26,Analysis of moist as a word,Moist analysis,248
4315,37:27,How does Josh create viral hits?,Viral hits,248
4316,38:37,Josh focuses on serving humans,Serve humans,248
4317,40:12,Intuition versus calculated decisions,Intuition,248
4318,40:36,Authenticity enables viral hits,Authenticity,248
4319,41:18,NYT approached Josh about Wordle,NYT reached out,248
4320,42:12,Coping with copycats was draining,Copycats draining,248
4321,43:01,"Monetization wasn't a priority",No priority,248
4322,43:53,Deal process was complicated,Complicated deals,248
4323,44:10,"Josh isn't business-oriented",Not business-minded,248
4324,44:31,Authenticity enabled viral success,Authenticity wins,248
4325,45:23,Wes jokes about invoicing NYT,Invoicing jokes,248
4326,45:38,Wes introduces sponsor FreshBooks,Freshbooks ad,248
4327,46:27,Josh kept his personal domain,Kept domain,248
4328,47:53,Redirecting between domains complex,Redirects complex,248
4329,50:08,Maintaining user data across domains,Cross-domain data,248
4330,50:41,Wes suggests cross-domain communication,Cross-domain tips,248
4331,52:01,Security policies may block cross-domain requests,Security policies,248
4332,52:22,Will NYT expand Wordle features?,New features?,248
4333,52:39,Josh considered adding an archive,Archive idea,248
4334,53:09,Josh slowed feature development,Slow features,248
4335,54:22,Josh varies his first word each day,First word,248
4336,55:17,Analysis of best statistical first words,First word stats,248
4337,55:42,Game appeals to different skill levels,Universal appeal,248
4338,56:33,Importance of UI juice for engagement,UI juice,248
4339,57:36,"Real-world changes aren't instantaneous",Gradual changes,248
4340,58:13,Animations make Wordle feel responsive,Responsive animations,248
4341,58:48,CSS animations add juice,CSS animations,248
4342,59:14,Hosts transition to picks section,Picks intro,248
4343,59:47,Josh picks identical Tupperware containers,Tupperware pick,248
4344,01:00:51,Scott picks giant tub of Epsom salt,Salt pick,248
4345,01:01:29,Wes picks Instant Pot air fryer,Fryer pick,248
4346,01:02:16,Scott plugs Level Up Tutorials,Level Up plug,248
4347,01:03:15,Wes plugs his courses,Wes courses plug,248
4348,01:03:29,Hosts thank guest and end show,Show end,248
4349,02:33,Linode overview,Linode,249
4350,05:20,Recipe Puppy API issues,Recipe API,249
4351,09:51,Disk access pros and cons,Disk access,249
4352,14:10,Serverless functions overview,Serverless,249
4353,18:03,No long running processes,Long processes,249
4354,21:19,Cloudflare Workers use own JS,Cloudflare JS,249
4355,23:47,"JSDOM doesn't work in Cloudflare",JSDOM issue,249
4356,26:55,Separate code into lib folder,Code separation,249
4357,00:12,Scott and Wes introduce Syntax Highlight episode,Intro,250
4358,00:49,Wes tries speaking in Gen Z slang,Gen Z slang,250
4359,02:20,Sponsor spot for Linode,Sponsor,250
4360,04:07,How to submit portfolio sites for review,Submission tips,250
4361,05:35,"Review of Harry Lee's portfolio site",Site review,250
4362,15:11,Sponsor spot for LogRocket,Sponsor,250
4363,18:23,"Review of Austin Baird's portfolio site",Site review,250
4364,21:29,"Review of Oggen Boss Jannec's portfolio site",Site review,250
4365,28:20,Review of next portfolio site,Site review,250
4366,37:13,"Review of Jack's portfolio site",Site review,250
4367,42:05,"Review of Inarugundi's portfolio site",Site review,250
4368,48:28,Sponsor spot for Tabnine,Sponsor,250
4369,50:45,"Review of Cyril's interactive Windows portfolio",Site review,250
4370,55:02,"Scott's sick pick - The Alpinist documentary",Sick pick,250
4371,56:23,"Wes' sick pick - Instant Pot air fryer lid",Sick pick,250
4372,02:01,Sentry helps find errors,Sentry,251
4373,02:45,Sentry prevented a regression,Sentry regression,251
4374,03:19,Sanity manages content,Sanity,251
4375,04:49,Inspired by a Reddit post,Reddit post,251
4376,05:29,"Junior dev unhappy with senior's code",Junior unhappy,251
4377,06:17,Easy to get wrapped up in ego,Developer ego,251
4378,07:07,Shared goals like sports teams,Shared goals,251
4379,08:43,No grudges against teammates,No grudges,251
4380,09:14,Seen developer personalities change,Personalities change,251
4381,10:57,"Don't take criticism personally","Don't take criticism personally",251
4382,12:39,Juniors should listen and discuss respectfully,Juniors listen respectfully,251
4383,13:12,Discuss other approaches without aggression,Discuss respectfully,251
4384,14:02,Be aware how messages are interpreted,Message tone,251
4385,15:30,Ask for clarity on requirements,Ask for clarity,251
4386,16:47,Code reviews should be egoless,Egoless code reviews,251
4387,18:13,Really listen to teammates,Listen to teammates,251
4388,19:08,"Don't insult people through their code","Don't insult code",251
4389,19:36,Teach and learn from each other,Teach and learn,251
4390,20:24,Celebrate wins as a team,Celebrate wins,251
4391,00:11,Intro to monorepos,Monorepos,252
4392,00:27,What a monorepo is,Monorepo definition,252
4393,00:49,Sponsors,Sponsors,252
4394,01:23,Scott had a rough morning,Rough morning,252
4395,02:05,"Wes's monorepo setup",Wes monorepo,252
4396,03:15,"Scott's monorepo setup",Scott monorepo,252
4397,05:05,Git submodules for public packages,Git submodules,252
4398,06:01,Issues with npm workspaces,npm issues,252
4399,07:17,Benefits of monorepos,Monorepo benefits,252
4400,08:08,Managing dependencies,Dependencies,252
4401,09:39,Google and Facebook monorepos,Big tech repos,252
4402,11:33,Shared dependencies,Shared deps,252
4403,13:13,Switching to pnpm,pnpm,252
4404,14:40,Issues with npm workspaces,npm issues,252
4405,16:29,Sponsor - Kontent,Sponsor,252
4406,17:42,Back to monorepos,Monorepos,252
4407,18:53,Managing packages and dependencies,Packages & deps,252
4408,23:09,Referencing local packages,Local packages,252
4409,24:19,Running commands on workspaces,Workspace commands,252
4410,27:02,Shared dependencies like React,Shared deps,252
4411,27:35,Upcoming show on updating dependencies,Dependency updating,252
4412,30:21,Introduction to Turborepo,Turborepo intro,252
4413,31:50,Turborepo build orchestration,Turborepo builds,252
4414,33:56,Turborepo vs pnpm workspaces,Turborepo vs pnpm,252
4415,36:10,Turborepo caching and incremental builds,Turborepo caching,252
4416,38:25,Turborepo cloud caching,Cloud caching,252
4417,39:29,"Turborepo doesn't handle dependencies",No deps,252
4418,40:03,Introduction to NX,NX intro,252
4419,41:34,NX plugins for frameworks,NX plugins,252
4420,45:26,Wes will try NX,Try NX,252
4421,47:17,Lerna for monorepos,Lerna,252
4422,48:11,"Scott's experience with Rush.js",Rush.js,252
4423,49:42,Rush.js seems like a MS tool,MS tool,252
4424,51:02,VS Code still uses Gulp,VS Code Gulp,252
4425,51:10,Old Gulp tutorials still popular,Old Gulp popular,252
4426,52:11,Summary of monorepo tools,Monorepo summary,252
4427,53:02,Wes sick pick: Tineco vacuum,Tineco vacuum,252
4428,55:23,Scott sick pick: Wyze cameras,Wyze cameras,252
4429,57:24,Cheap micro SD cards for cameras,Cheap SD cards,252
4430,59:21,Shameless plugs,Plugs,252
4431,00:48,LogRocket sponsor,sponsor,253
4432,01:19,Magic Bell sponsor,sponsor,253
4433,03:33,Introduction to updating dependencies,intro,253
4434,04:02,Definition of dependencies,define,253
4435,04:26,Wes updated multiple projects,updated,253
4436,05:31,Tools for checking updates,tools,253
4437,06:07,"Scott's update workflow",workflow,253
4438,07:12,"Wes's update workflow",workflow,253
4439,08:58,Update patch versions,patch,253
4440,09:13,Update minor versions,minor,253
4441,09:59,Update major versions,major,253
4442,10:35,Deprecation before breaking changes,deprecate,253
4443,12:27,Check changelogs for breaking changes,changelog,253
4444,13:12,Search codebase for breaking changes,search,253
4445,14:07,Commit after each update,commit,253
4446,14:30,TypeScript prevents breaking changes,typescript,253
4447,14:55,Update other dependencies,other,253
4448,15:27,Regenerate API keys if needed,api keys,253
4449,15:45,Test thoroughly after updating,test,253
4450,16:19,Monitor errors after deploying,monitor,253
4451,16:50,Fix issues going forward,fix forward,253
4452,17:10,Hope for the best,hope,253
4453,00:33,"Pick coding focus, soft skills focus, and random skill for beginner, intermediate, and advanced devs",Topics,254
4454,02:37,Semantic HTML knowledge makes you stand out in interviews,Beginner coding,254
4455,07:42,Get good at working with data in JavaScript,Beginner coding,254
4456,09:02,Practice writing good GitHub issues and PRs,Beginner soft skills,254
4457,11:46,Get good at emailing busy people concisely,Beginner soft skills,254
4458,14:05,Make something animated with CSS,Beginner random,254
4459,16:23,Build a full stack contact form,Beginner random,254
4460,19:04,Learn CSS variables deeply,Intermediate coding,254
4461,23:09,Learn server side fundamentals,Intermediate coding,254
4462,24:30,Improve meeting and client skills,Intermediate soft skills,254
4463,28:48,Learn to organize chaos in repos,Intermediate soft skills,254
4464,30:41,Make something animated with JavaScript,Intermediate random,254
4465,31:43,Write a bot,Intermediate random,254
4466,35:05,Write CI/CD workflows,Advanced coding,254
4467,38:00,Learn advanced TypeScript types,Advanced coding,254
4468,38:39,Teach colleagues at work,Advanced soft skills,254
4469,40:00,Speak at a conference,Advanced soft skills,254
4470,41:09,Make something in 3D,Advanced random,254
4471,05:26,Negative margins are super useful CSS hacks,Margins,255
4472,07:55,Not passing radix to parseInt rarely causes issues,parseInt,255
4473,10:45,Centering with position:absolute and translate is handy,Positioning,255
4474,13:37,Nonstandard HTML elements are technically valid,HTML elements,255
4475,17:27,button must have a type is unnecessary ,Button types,255
4476,19:01,CSS border triangles are simple shape hacks,CSS triangles,255
4477,21:04,Rel noopener on blank targets not needed now,Rel noopener,255
4478,22:20,Inline styles can be useful in components,Inline styles,255
4479,00:57,"Syntax is sponsored by Prismic, Retool, and LogRocket",Sponsors,256
4480,02:50,First question asks how to protect images on a website,Image protection,256
4481,07:26,Should beginners learn TypeScript now or focus on JavaScript first?,Learn TypeScript,256
4482,13:32,When to add TypeScript - after gaining proficiency in JavaScript,Add TypeScript,256
4483,21:17,How to commit to learning one thing when other topics distract you,Learning focus,256
4484,26:32,Best backend language to learn after frontend is Node.js,Backend language,256
4485,28:17,Do Svelte components support media queries?,Svelte media queries,256
4486,30:01,New developers may be intimidated implementing auth or payments,New dev intimidation,256
4487,33:11,Use a tool like LogRocket to investigate errors in intimidating parts of code,Investigate errors,256
4488,34:14,Tips for working with team members in different time zones,Time zones,256
4489,43:12,How to introduce Prettier to a large project without losing git history,Prettier,256
4490,49:31,Thoughts on monorepos - can be very useful,Monorepos,256
4491,53:05,Retool allows you to build internal tools quickly,Internal tools,256
4492,02:20,"Remix delivers on hype with fast modern smooth UX, server rendering, and colocated data fetching",Remix overview,257
4493,03:10,"Sentry logs errors and exceptions, integrates with GitHub, and provides user feedback tools",Sentry ad,257
4494,04:50,"Sanity is a structured content platform that makes devs, marketers, and lawyers happy",Sanity ad,257
4495,08:13,"Remix is fast, smooth, and provides server side SEO benefits",Remix benefits,257
4496,09:48,Remix understands where data is fetched so it can parallelize requests,Parallel data fetching,257
4497,11:17,Loaders in Remix make data available via React hooks instead of props,Loaders,257
4498,14:09,Remix simplifies complexity of data fetching and rendering,Simplifies complexity,257
4499,15:29,"Actions handle POST, PUT, PATCH, DELETE requests in Remix",HTTP verbs,257
4500,18:24,Remix exports like meta and headers handle those concerns cleanly,Meta and headers,257
4501,19:49,"Catch boundaries handle thrown errors, error boundaries handle React errors",Boundaries,257
4502,23:28,Remix has nested routes and layouts,Nested routes,257
4503,25:20,TypeScript support is excellent in Remix,TypeScript,257
4504,26:18,Changing deploy target in Remix requires config tweaks,Deployment,257
4505,29:30,"Once conventions learned, Remix isn't too hard to use",Learning curve,257
4506,00:16,Wes and Scott predictions for web dev in 2022,2022 predictions,258
4507,00:34,Svelte popularity prediction,Svelte,258
4508,01:25,Svelte at Vercel impact,Svelte at Vercel,258
4509,02:30,Next.js future opportunities,Next.js,258
4510,03:59,Next.js data layer possibilities,Data layer,258
4511,04:16,Next.js baked in data wished for,Baked in data,258
4512,04:38,Other frameworks adding data layers,Data layers,258
4513,05:08,Cloudflare as competitor to AWS,Cloudflare vs AWS,258
4514,06:10,Server components in SvelteKit wished for,SvelteKit,258
4515,07:02,Web component popularity prediction,Web components,258
4516,08:13,Easier web component authoring needed,Authoring web components,258
4517,09:15,Open UI web component project,Open UI,258
4518,10:43,Next.js TypeScript support difficulties,Next.js TypeScript,258
4519,11:50,Rust programming language prediction,Rust language,258
4520,12:32,Rust and WebAssembly,Rust and WASM,258
4521,13:17,Rust for performance gains,Rust performance,258
4522,14:15,Rust language challenges,Rust challenges,258
4523,15:18,Tailwind CSS prediction,Tailwind CSS,258
4524,16:08,Subatomic CSS as alternative,Subatomic CSS,258
4525,17:18,Serverless functions prediction,Serverless,258
4526,18:52,Cloudflare services growing,Cloudflare,258
4527,19:47,Stripe checkout APIs,Stripe APIs,258
4528,20:49,Braintree lacking updates,Braintree,258
4529,21:12,Open Props as Tailwind alternative,Open Props,258
4530,22:32,Next generation CSS methodologies,CSS,258
4531,23:53,CSS spec updates,CSS specs,258
4532,25:39,New terminal shells,Terminal shells,258
4533,26:53,Cross shell customization difficulties,Shell customization,258
4534,28:01,Hashnode for developer blogging,Hashnode,258
4535,29:54,Checkout platforms updates,Checkout platforms,258
4536,30:21,CSS container queries,Container queries,258
4537,31:00,More CSS functions wished for,CSS functions,258
4538,31:35,CSS subgrid hopes,CSS subgrid,258
4539,32:01,GraphQL improvements,GraphQL,258
4540,33:02,More GraphQL servers,GraphQL servers,258
4541,33:36,GraphQL developer tools,GraphQL tools,258
4542,34:15,Deno future,Deno,258
4543,35:43,Deno being replaced by Node,Deno vs Node,258
4544,36:15,First party Node and TypeScript,Node TypeScript,258
4545,37:22,TypeScript in Node difficulties,Node TypeScript,258
4546,38:00,Node TypeScript improvements,Node TypeScript,258
4547,39:35,TypeScript interfaces and types,TypeScript types,258
4548,40:43,Complex TypeScript types,Complex TypeScript,258
4549,41:13,TypeScript abstraction,TypeScript abstraction,258
4550,42:16,TypeScript generics difficulties,TypeScript generics,258
4551,43:00,Obtuse TypeScript types,Obtuse TypeScript,258
4552,43:34,Appreciation for advanced TypeScript,Appreciate TypeScript,258
4553,43:56,Server side frameworks comeback,Server frameworks,258
4554,44:46,Server side security benefits,Server security,258
4555,45:25,FreshBooks accounting software,FreshBooks,258
4556,46:12,Payment platforms updates,Payment platforms,258
4557,47:05,Wise multi-currency accounts,Wise banking,258
4558,48:32,Wise benefits,Wise benefits,258
4559,49:54,Braintree offered over Stripe,Braintree vs Stripe,258
4560,51:07,Stripe well-rounded offerings,Stripe offerings,258
4561,51:35,Temporal API hopes,Temporal API,258
4562,53:18,Remote development growth,Remote dev,258
4563,54:20,Remote dev on iPads,iPad coding,258
4564,00:27,Intro to JavaScript one-liners,Intro,259
4565,02:21,Sponsor - Sentry,Sponsor,259
4566,04:02,One-liners from Twitter,One-liners,259
4567,05:14,Unique ID generation,Unique ID,259
4568,06:03,Random color generation,Random color,259
4569,07:33,Labeled console.logs,Labeled logs,259
4570,08:31,Make entire page editable,Editable page,259
4571,10:16,"Get today's date with Temporal",Temporal date,259
4572,11:52,Console.log in implicit return,Log in return,259
4573,13:32,Destructuring to remove props,Remove props,259
4574,15:33,PHP-style debugging in JS,PHP debugging,259
4575,16:41,Destructure first/last array items,First/last items,259
4576,17:44,Speed up audio/video,Faster playback,259
4577,19:45,Pause execution with sleep(),Pause execution,259
4578,21:24,If statements without brackets,If without brackets,259
4579,00:38,2021 web dev highlights,2021 highlights,260
4580,02:43,104 Syntax episodes in 2021,104 episodes,260
4581,03:03,Re-released advanced React course,React course,260
4582,03:25,Launched JavaScript T-shirts site,T-shirts site,260
4583,03:47,Wrote vaccine availability bot,Vaccine bot,260
4584,04:01,Worked on big TypeScript course,TypeScript course,260
4585,04:24,Rewrote video player,Video player,260
4586,04:30,Added course notes,Course notes,260
4587,04:59,Printed Syntax stickers,Syntax stickers,260
4588,05:50,Wes moved houses,Wes moved,260
4589,06:19,Rewrote frontend in SvelteKit,SvelteKit rewrite,260
4590,06:56,Rebuilding admin section,Admin rebuild,260
4591,07:35,Rewrote video uploader with Mux,Video uploader,260
4592,00:21,Wes and Scott introduce snackluck episode,Intro,261
4593,00:36,Snackluck explained,Snackluck,261
4594,00:56,Wes talks about doing snacklucks and potlucks,Wes snacklucks,261
4595,02:01,Scott met Diplo at work one time,Scott met Diplo,261
4596,03:16,Sponsor - Sanity,Sponsor 1,261
4597,04:25,Sponsor - LogRocket,Sponsor 2,261
4598,05:11,Question about package-lock.json,Package lock,261
4599,08:31,"Question on why Syntax doesn't talk much about Angular",Angular question,261
4600,11:59,Wes and Scott use a variety of frameworks,Framework diversity,261
4601,12:25,Question on keeping NPM packages up to date,NPM updates,261
4602,15:29,"Tips for updating packages - use NCU, pnpm, yarn",Update tips,261
4603,17:11,Question on staying motivated as a non-beginner,Non-beginner motivation,261
4604,19:51,Try learning something new and fun like 3D libraries,Learn new things,261
4605,21:05,Question on how in-flight entertainment systems work,In-flight media,261
4606,23:39,"Wes uses a NAS with Plex for downloaded kid's shows","Wes' NAS",261
4607,26:17,Scott uses NAS for kung fu movies,"Scott's NAS",261
4608,29:37,Outro and sponsor mentions,Outro,261
4609,00:27,Introduction of guests Pauline Narvas and Jeff Lee Huntley who work at Gitpod,Guest intro,262
4610,01:02,Discussion about coding on iPads and mobile devices,Coding on iPad,262
4611,03:53,Gitpod allows developers to code from any browser without needing a high-spec computer,Gitpod overview,262
4612,05:06,"Gitpod runs developers' code in cloud-hosted Docker containers",Cloud containers,262
4613,08:34,Pauline helped a Gitpod user debug their workspace on her phone while traveling,Mobile workspace,262
4614,11:00,Wes and Scott ask Jeff and Pauline to explain what Kubernetes is,Kubernetes explanation,262
4615,13:14,Gitpod builds Gitpod using Gitpod with Golang and TypeScript,Gitpod tech stack,262
4616,18:27,Linode sponsors segment,Ad break,262
4617,19:08,Discussion about the types of developers using Gitpod,Gitpod users,262
4618,25:06,"Explanation of Gitpod's collaboration and workspace sharing features",Workspace sharing,262
4619,33:24,LogRocket sponsors segment,Ad break,262
4620,34:19,Discussion about living in a van and working remotely,Remote work,262
4621,40:44,"Jeff discusses NFTs, storing data on blockchains, and creating the NFT Bay",NFT discussion,262
4622,45:29,Thoughts on blockchain technology and the concept of web3,Web3 discussion,262
4623,50:06,Freshbooks sponsors segment,Ad break,262
4624,50:18,Continued discussion about NFTs and blockchain technology,More NFTs,262
4625,51:35,"Sharing some ""sick picks"" - product recommendations",Sick picks segment,262
4626,59:19,"Shameless plugs for podcast hosts' products",Shameless plugs,262
4627,02:33,Prismic sponsors the show,Sponsors,263
4628,02:44,Sentry sponsors the show,Sponsors,263
4629,03:30,Gatsby 4 overview,Gatsby 4,263
4630,04:24,Node version requirements,Requirements,263
4631,05:24,New rendering options in Gatsby 4,Rendering,263
4632,06:14,Static rendering,Static,263
4633,06:47,Build times can get long,Build times,263
4634,07:14,Deferred static generation,DSG,263
4635,08:48,Pages generate on request,On request,263
4636,09:00,Defer option for dynamic pages,Defer option,263
4637,09:59,SSR - server side rendering,SSR,263
4638,10:22,Access GraphQL at build time,GraphQL,263
4639,10:49,Caching with SSR,Caching,263
4640,11:59,Authenticated data challenges,Auth data,263
4641,12:40,Module federation possibilities,Federation,263
4642,13:18,Next.js and Gatsby feature parity,Parity,263
4643,15:48,Parallel queries for performance,Parallel,263
4644,16:29,New data sync for live updates,Data sync,263
4645,16:58,Gatsby admin deprecated,Deprecated,263
4646,18:16,"What's next for Gatsby","What's next",263
4647,02:33,Google Chrome measuring user experience beyond page load,Chrome UX,264
4648,03:13,"Lighthouse scores useful but don't blindly follow",Lighthouse tips,264
4649,04:13,Figma uses Rust via WebAssembly for performance,Figma + Rust,264
4650,05:03,Tools over rules for performance metrics,Tools over rules,264
4651,08:16,Naming functions vs boolean variables,Naming booleans,264
4652,10:20,Enums vs string unions in TypeScript,Enums vs unions,264
4653,13:19,Enums useful for populating dropdowns,Enum dropdowns,264
4654,14:03,WebAssembly allows other languages in browser,Wasm overview,264
4655,15:13,Figma uses C++ via WebAssembly,Figma + C++,264
4656,24:27,GraphQL allows batching requests,GraphQL batching,264
4657,25:21,Throttling/debouncing requests,Throttling requests,264
4658,34:51,302 redirects change POST to GET,302 redirects,264
4659,35:04,307 redirects maintain verb,307 redirects,264
4660,35:18,301 redirects are permanent,301 redirects,264
4661,42:52,Conventional commits for organized messages,Conventional commits,264
4662,50:34,REST most popular web data transfer,REST overview,264
4663,51:25,GraphQL describes data needs in requests,GraphQL overview,264
4664,51:48,RPC/gRPC good for low power situations,RPC for IoT,264
4665,02:33,replacing water pipes,pipes,265
4666,04:07,covering water shutoff valve,valve,265
4667,08:24,local state as variable,state,265
4668,12:31,custom state update functions,functions,265
4669,15:12,live reactive variables,reactive,265
4670,17:02,global state with stores,stores,265
4671,20:49,conditional rendering,conditional,265
4672,25:00,input binding,binding,265
4673,30:12,child components with slots,slots,265
4674,00:31,"Podcast sponsored by LogRocket, Bryndum, and Linode",Sponsors,266
4675,01:09,Guest Ant Rogen introduces himself and his background in industrial automation,Guest intro,266
4676,02:33,Ant worked at Nissan developing head units with JavaScript,Nissan head units,266
4677,05:25,Cars communicate over CAN bus which can be read with OBD-II dongles,CAN bus,266
4678,07:17,Web tech visualizing factory data by interfacing with PLCs,Visualizing factories,266
4679,09:10,Car head units are outdated compared to capabilities of web tech,Outdated head units,266
4680,11:41,Some car head units are now just Android tablets or web browsers,New head units,266
4681,14:02,Core car systems are separate from infotainment systems,Core vs infotainment,266
4682,16:09,Node-RED for interfacing between web and PLCs,Node-RED,266
4683,18:48,Risks of crashing factory systems while testing,Crash risks,266
4684,21:28,PLCs used widely from traffic lights to nuclear plants,PLC ubiquity,266
4685,23:27,"PLCs can open valves, control motors and more",PLC capabilities,266
4686,26:15,OPC protocol for PLC interoperability,OPC protocol,266
4687,27:22,Node-RED created by IBM for interfacing with PLCs,Node-RED history,266
4688,30:52,JavaScript accessible and flexible for industrial automation,JavaScript benefits,266
4689,33:40,Accessibility a challenge for learning industrial automation,Learning challenges,266
4690,35:25,Node-RED forums recommended for getting started,Getting started,266
4691,40:02,MQTT protocol alternative to WebSockets,MQTT protocol,266
4692,43:09,Machine learning predicts industrial equipment failures,Predictive maintenance,266
4693,44:25,Full-stack devs in demand for visualizing industrial data,Devs in demand,266
4694,47:38,Opportunities for devs interested in industrial automation,Career opportunities,266
4695,49:44,Defense contractors interested in web tech like Kubernetes,Defense tech,266
4696,50:47,Renewable energy systems need PLCs and automation,Renewables automation,266
4697,52:46,Home automation has challenges compared to industrial,Home automation,266
4698,55:13,Guest has no home automation despite automation experience,No home automation,266
4699,57:32,Offer to help with any automation projects in the future,Automation help,266
4700,00:29,Introducing meta tags,Intro,267
4701,02:06,Explaining charset meta tag,Charset,267
4702,07:37,Discussing viewport meta tag,Viewport,267
4703,11:56,SEO and page data meta tags,SEO,267
4704,16:14,Keyword meta tags are dead,Keywords,267
4705,18:19,Site verification meta tags,Verification,267
4706,19:52,Open graph and social meta tags,Social,267
4707,27:31,Apple specific meta tags,Apple,267
4708,00:25,Talking about how everything in web development is amazing,Amazing web dev,268
4709,00:45,"Sponsored by FreshBooks, Sentry, Linode",Sponsors,268
4710,01:01,Scott cleaned leaves off his roof,Leaves,268
4711,03:00,"Devs complain a lot, but things have gotten much better",Devs complain,268
4712,04:19,TypeScript adds types to JavaScript,TypeScript,268
4713,07:03,Async/await and promises improved JS flow control,Async/await,268
4714,09:32,jQuery went away because vanilla JS improved,Vanilla JS,268
4715,11:57,Babel allowed writing modern JS compiled to ES5,Babel,268
4716,18:47,Flexbox and CSS Grid improved layouts,Layouts,268
4717,22:27,Only 216 web safe colors used originally,216 colors,268
4718,24:57,Multimedia tags in HTML5 helped with video/audio,Multimedia,268
4719,31:40,Version control integrated into editors,Version control,268
4720,33:20,Build tools require less and less config,Build tools,268
4721,35:12,Image optimization built into frameworks,Images,268
4722,37:08,Hot module reloading speeds up debugging,Hot reloading,268
4723,39:30,Services like Stripe make payments easy,Stripe,268
4724,42:26,Developer tools in browsers have improved,Dev tools,268
4725,00:28,Introducing GitHub Copilot,Intro,269
4726,00:38,GitHub Copilot guesses your code,Copilot,269
4727,01:32,Waking up early to get work done,Early,269
4728,02:44,LogRocket sponsor ad,Ad,269
4729,03:25,FreshBooks sponsor ad,Ad,269
4730,04:05,Starting discussion on GitHub Copilot,Copilot,269
4731,05:08,Copilot is very accurate at guessing code,Accurate,269
4732,05:37,Copilot makes you a faster developer,Faster,269
4733,06:25,Scott had early access to Copilot,Early Access,269
4734,07:01,Example of Copilot generating DOM manipulation code,DOM Code,269
4735,08:29,"Copilot won't design your application for you",No Design,269
4736,08:51,Example of Copilot generating code for UI states,UI States,269
4737,09:52,Copilot works well with React hooks,React Hooks,269
4738,11:36,Writing pseudo code helps Copilot generate relevant code,Pseudo Code,269
4739,12:56,Copilot can generate comments for existing code,Comments,269
4740,14:14,Copilot works with CSS,CSS,269
4741,14:38,Copilot good for CSS boilerplate,CSS Boilerplate,269
4742,15:48,Copilot removes repetitive coding work,Removes Work,269
4743,16:30,Example of Copilot generating component layout,Layout,269
4744,17:39,Concerns about Copilot taking jobs,Job Loss,269
4745,18:27,Copilot increases developer productivity,Productivity,269
4746,18:53,"Copilot doesn't replace developer creativity",Creativity,269
4747,20:40,Concerns about Microsoft dependency,Microsoft,269
4748,21:45,Copilot is just fancy autocomplete for now,Autocomplete,269
4749,22:55,Copilot good for generating TypeScript types,Typescript,269
4750,24:00,Copilot not syntax aware yet,Syntax,269
4751,24:14,Copilot can be a loose cannon,Loose Cannon,269
4752,25:02,Example of Copilot converting code patterns,Conversion,269
4753,25:55,Overall very impressive,Impressive,269
4754,00:02,Intro,Intro,270
4755,00:19,Troubleshooting skills,Topic,270
4756,00:47,Sponsors,Ads,270
4757,01:15,How are you?,Chit chat,270
4758,02:29,House updates,Chit chat,270
4759,03:08,Troubleshooting life skills,Topic,270
4760,05:05,Asking the right questions,Tip,270
4761,06:11,Sanity check,Tip,270
4762,08:13,Isolate and replicate,Tips,270
4763,10:10,Comment out code,Tip,270
4764,11:32,Add back in components,Tip,270
4765,12:21,Replicate issue,Tip,270
4766,13:40,Share minimal example,Tip,270
4767,14:27,Update dependencies,Tip,270
4768,15:12,Replicate with vanilla JS,Tip,270
4769,16:21,Share reproduction,Tip,270
4770,16:38,Read documentation,Tip,270
4771,17:17,Share issue with community,Tip,270
4772,18:17,Provide details in issues,Tip,270
4773,19:27,Rollback changes,Tip,270
4774,20:13,Use version control,Tip,270
4775,20:55,Understand error messages,Tip,270
4776,22:04,Focus on error cause,Tip,270
4777,23:18,Format errors clearly,Tip,270
4778,24:29,Debug node_modules,Tip,270
4779,25:08,Patch dependencies,Tip,270
4780,26:34,Freshbooks ad,Ad,270
4781,27:40,Use debugging tools,Tip,270
4782,32:49,Use debugger statement,Tip,270
4783,33:24,Rubber ducking,Tip,270
4784,35:25,Big Mouth Billy Bass tangent,Chit chat,270
4785,36:39,Fun with animatronics,Chit chat,270
4786,39:56,Electric tools tangent,Chit chat,270
4787,40:00,Back to troubleshooting,Transition,270
4788,41:49,Twitter troubleshooting tips,Tips,270
4789,49:44,Mux sponsor,Ad,270
4790,51:14,Sick picks,Segment,270
4791,56:22,Black Friday deals,Ads,270
4792,01:00:43,Outro,Outro,270
4793,00:29,New 16-inch MacBook Pros,new laptops,271
4794,01:34,Sponsors,ads,271
4795,04:33,Initial thoughts,impressions,271
4796,07:05,Apps and performance,apps,271
4797,10:21,RAM needs for developers,RAM,271
4798,11:21,Memory usage observations,memory,271
4799,12:38,Screen size for developers,screens,271
4800,14:54,Productivity vs overworking,productivity,271
4801,16:04,VSCode performance,VSCode,271
4802,17:58,Setting up new computer,setup,271
4803,21:24,Video editing performance,video editing,271
4804,23:59,DaVinci Resolve performance,DaVinci,271
4805,24:27,Fan noise and heat,fans and heat,271
4806,26:19,Video encoding capabilities,encoding,271
4807,27:16,Waveform performance,waveforms,271
4808,29:33,Other developer improvements,dev improvements,271
4809,31:52,Development experience,dev experience,271
4810,33:26,Minimized barriers,barriers,271
4811,33:52,Hardware impressions,hardware,271
4812,34:51,Notch issues,notch,271
4813,36:48,Menu bar spacing issues,menu bar,271
4814,37:05,Power and charging,power,271
4815,38:39,Fan noise,fans,271
4816,39:46,External monitor support,monitors,271
4817,40:21,It feels like the future,future,271
4818,41:23,Battery life,battery,271
4819,42:04,Monitor color issues,colors,271
4820,43:13,Fingerprint reader,fingerprint,271
4821,44:01,What to do with old laptops,old laptops,271
4822,45:24,Ports,ports,271
4823,45:48,Microphone quality,microphone,271
4824,46:35,Camera quality,camera,271
4825,46:59,Keyboard quality,keyboard,271
4826,00:34,"Sponsored by Linode, Sentry & FreshBooks",Ads,272
4827,00:52,"Scott's fall yard work",Chores,272
4828,02:07,"Wes' fall yard work",Chores,272
4829,02:44,Lawn Talk segment idea,Idea,272
4830,04:20,Using GitHub Copilot,Copilot,272
4831,05:57,Do you wear glasses?,Glasses,272
4832,08:29,Getting eye exams & buying glasses,Eye care,272
4833,11:05,How to deal with work stress,Stress,272
4834,14:45,Dealing with negative customer emails,Emails,272
4835,16:50,Prefer working at big or small company?,Work,272
4836,20:00,"Meaning of ""grok"" in dev culture",Grok,272
4837,23:13,Design process for new projects,Design,272
4838,26:06,Tools for designing websites,Tools,272
4839,31:42,Headless CMS admin UIs,CMS,272
4840,36:11,Tablets for notes & sketches,Tablets,272
4841,39:13,Headless CMS hosting setup,Hosting,272
4842,43:14,How CORS security works,CORS,272
4843,45:04,Authentication in GraphQL,GraphQL,272
4844,48:51,Podcast game idea,Game,272
4845,03:58,Next.js 12 major version with optimization and performance features,Next.js 12 overview,273
4846,04:17,Next.js 12 uses new Rust compiler SWC for faster refresh and builds,SWC compiler,273
4847,05:27,Next.js 12 adds middleware support to intercept requests like Express,Middleware support,273
4848,08:25,Next.js 12 supports React 18 APIs and features,React 18 support,273
4849,09:56,Next.js Image component now supports AVIF images,AVIF images,273
4850,10:17,Next.js 12 detects bots for better ISR fallback experience,Bot detection,273
4851,13:11,Next.js 12 has native ESM module support,ESM support,273
4852,00:33,Introducing StackBlitz and web containers,StackBlitz intro,274
4853,01:14,"Tomac's background in developing libraries and tooling",Tomac background,274
4854,02:04,"Tomac's transition to developer relations and content creation",Tomac dev rel,274
4855,02:31,Overview of online code editors and development environments,Online code editors,274
4856,03:32,StackBlitz as a multi-file online code editor,Stackblitz editor,274
4857,04:06,Custom browser compilation vs VM-based online dev environments,Custom vs VM dev envs,274
4858,04:45,"StackBlitz uses Visual Studio Code's Monaco editor",Monaco editor,274
4859,05:10,StackBlitz has used Monaco since the beginning,Early Monaco use,274
4860,05:51,"Browser APIs needed for Node.js: fs, TCP, binaries",Node browser APIs,274
4861,06:12,History of custom front-end vs VM-based online code execution,Online code history,274
4862,06:39,Custom front-end allows offline but limited functionality,Custom front-end offline,274
4863,07:07,"Custom front-end doesn't support full workflows",Custom front-end limited,274
4864,07:24,VM-based provides full environment but has downsides,VM-based downsides,274
4865,08:14,Challenges with allowing server-side code execution for free,Server-side challenges,274
4866,08:43,Offline usage typically requires persistence tradeoffs,Offline tradeoffs,274
4867,09:32,Fugu API project overview,Fugu API,274
4868,10:13,Fugu allows local file system access in the browser,Fugu filesystem,274
4869,10:38,"Fugu provides secure, sandboxed file system access",Fugu security,274
4870,11:09,Overview of Fugu API support in browsers,Fugu browser support,274
4871,11:32,Fugu API support is better in Chrome/Android than Safari/iOS,Fugu support differences,274
4872,12:08,Device Posture API example,Device Posture API,274
4873,12:29,Fugu can replace Electron for some use cases,Fugu vs Electron,274
4874,13:06,Web containers provide OS capabilities inside the browser,Web containers,274
4875,13:21,"Web containers provide filesystem, network, and binaries",Web container capabilities,274
4876,13:42,Web containers allow offline usage,Web containers offline,274
4877,14:26,WASM enables running code like Node in the browser,WASM enables browsers,274
4878,14:51,Web containers are unique and new browser capabilities,Web container uniqueness,274
4879,15:17,Web containers will enable new browser workflows,New browser workflows,274
4880,15:58,FreshBooks sponsor spot,FreshBooks ad,274
4881,17:44,WASM overview and enabling server-side languages in browser,WASM overview,274
4882,18:37,"Web container basics: Node, browser, WASM",Web container basics,274
4883,19:10,Some Node native dependencies are being ported to WASM,Node dependencies to WASM,274
4884,19:38,WASM allows more portability across environments,WASM portability,274
4885,20:12,Example of native dependency shader-file,Native dependency example,274
4886,20:43,Authors can build packages targeting WASM,Packages targeting WASM,274
4887,21:05,Web container performance compared to local environment,Web container performance,274
4888,21:55,Web containers can outperform local dev environment,Outperforming local env,274
4889,22:34,Browser provides optimized environment over Electron,Browser optimization,274
4890,23:06,Isolates provide safety and speed,Isolates,274
4891,23:22,Web container performance on lower-end machines,Performance on lower-end machines,274
4892,23:47,Browser caching improves install speed,Browser caching,274
4893,24:33,Future of coding primarily in the browser,Browser-based coding future,274
4894,25:04,Safari Shared Array Buffer needed for StackBlitz,Safari Shared Array Buffer,274
4895,25:30,StackBlitz focused on Chrome-based browsers currently,Chrome browser focus,274
4896,25:50,Progress being made on Safari support,Safari progress,274
4897,26:05,StackBlitz switched Node from V8 to SpiderMonkey,"Node's JS engine",274
4898,26:36,SpiderMonkey allows Firefox support without compilation,SpiderMonkey Firefox support,274
4899,27:02,Custom front-end allows browser choice flexibility,Front-end browser flexibility,274
4900,27:29,Firefox advocate on team working on Firefox support,Firefox advocate,274
4901,28:05,StackBlitz switched Node engine for more flexibility,Node engine switch,274
4902,28:19,iOS Support pending on Safari features from Apple,iOS support,274
4903,28:46,Pressure on Apple to empower the web platform,Web platform pressure,274
4904,29:39,WebContainers will enable more use cases,More web container use cases,274
4905,30:10,Example of Markdown blog powered by Node,Markdown blog example,274
4906,30:19,StackBlitz Github integration,Github integration,274
4907,30:57,LogRocket sponsor spot,LogRocket ad,274
4908,31:28,VSCode extension support coming soon,Extension support coming soon,274
4909,32:10,Goal to run full VSCode in browser,Full VSCode in browser goal,274
4910,32:41,Future of development being primarily browser-based,Browser dev future,274
4911,33:13,Current focus on mid-level complexity apps,Mid-level app focus,274
4912,33:28,Vue Slidev as example workflow,Slidev example,274
4913,33:51,Simple starters available for common frameworks,Framework starters,274
4914,34:04,Looking to support more complex real-world apps,Complex app support,274
4915,34:51,Working in public coming soon,Working in public,274
4916,35:03,Asking for increasing complexity examples,Increasing complexity,274
4917,35:28,SQLite support recently added,SQLite support,274
4918,35:54,No known conceptual limitations so far,No known limitations,274
4919,36:51,Actively looking for challenges,Looking for challenges,274
4920,37:02,Turbo overview as faster npm client,Turbo overview,274
4921,37:26,Turbo optimized around imports,Turbo optimization,274
4922,37:45,Turbo leverages browser caching,Turbo browser caching,274
4923,38:09,Turbo clears cache/dependencies on refresh,Turbo cache clearing,274
4924,38:30,Turbo avoids npm post-install scripts,Avoids post-install,274
4925,38:57,Turbo provides safety via browser sandboxing,Turbo safety,274
4926,39:42,Recent event showing npm security issue,npm security issue,274
4927,40:01,Turbo avoids npm security pitfalls,Avoids npm issues,274
4928,40:36,No local Turbo version currently planned,No local Turbo,274
4929,41:05,Overview of similar browser dev environments,Similar environments,274
4930,41:39,CodeSandbox uses mixed compilation models,CodeSandbox mixed models,274
4931,42:11,VSCode Online is backed by VMs,VSCode Online VMs,274
4932,42:34,VSCode Online provides editor but no execution,VSCode Online limitations,274
4933,43:12,Codespaces uses remote VMs,Codespaces uses VMs,274
4934,43:32,Interested in VSCode + Edge integration,VSCode Edge interest,274
4935,44:06,WebContainers already enable VSCode Online limitations,WebContainers beyond VSCode Online,274
4936,44:28,VSCode integration coming in 2022,VSCode integration coming,274
4937,44:51,Goal to replace local dev environment,Replace local env goal,274
4938,45:17,Browser dev interest over Ops focus,Browser over Ops,274
4939,45:32,New hosting tools reducing Ops burden,Reduced Ops burden,274
4940,45:59,Linode sponsor spot,Linode ad,274
4941,46:57,Halo phone magnets sick pick,Magnet sick pick,274
4942,47:57,Grovemade phone stand,Phone stand,274
4943,48:37,DIY wireless charging stand,DIY charging stand,274
4944,49:11,The Dresden Files book series,Dresden Files books,274
4945,50:17,"James Marsters' audiobook narration",Dresden audiobooks,274
4946,50:49,LED interior car lights upgrade,LED car lights,274
4947,51:09,Custom backup camera installation,Backup camera install,274
4948,52:16,Wes Bos courses,Wes Bos courses,274
4949,52:37,Too busy shipping to announce new features,Too busy shipping,274
4950,53:01,StackBlitz Twitter for announcements,StackBlitz Twitter,274
4951,53:17,Astro support recently added,Astro support,274
4952,53:23,Astro course,Astro course,274
4953,53:54,Level Up Tutorials Astro course,Level Up Astro course,274
4954,54:23,Thanks and wrap-up,Conclusion,274
4955,00:33,"Discussing Astro, a new framework for server-rendered static web apps",Astro intro,275
4956,02:11,Sentry and Linode sponsor spots,Sponsors,275
4957,04:13,Astro builds static HTML/CSS sites using JS components,Astro overview,275
4958,05:01,Can use any frontend framework via renderers,Renderers,275
4959,06:00,Renderer allows mixing frameworks in one app,Mix frameworks,275
4960,06:18,"Astro's killer feature is shipping way less JS",Less JS,275
4961,07:53,Astro uses component-style development flow,Component flow,275
4962,09:17,Astro good for websites vs SPA apps,Websites not apps,275
4963,10:07,Astro builds sites at build time unlike Gatsby 4,Build time,275
4964,11:46,Use fetch for data fetching at build time,Fetch data,275
4965,13:57,No built-in auth or serverless functions yet,No auth yet,275
4966,15:54,"Comes with nice defaults for TS, CSS, markdown, etc",Smart defaults,275
4967,18:47,Emmet and VS Code support works out of the box,Emmet support,275
4968,02:33,Scott saw bear near house in Denver recently,bear sighting,276
4969,03:08,"Wes's brother-in-law followed a bear when they saw one on vacation",followed bear,276
4970,03:18,Scott saw a bear in a tree while at an Airbnb in Rocky Mountain National Park,bear in tree,276
4971,04:21,Scott and Wes decide to play CSS edition of Stumped,play Stumped,276
4972,06:15,Scott answers first question correctly: list-style-type changes bullet shape,first question,276
4973,07:00,Wes defines pseudo-element vs pseudo-class correctly,pseudo elements,276
4974,09:24,"Wes explains difference between block, inline and inline-block elements",block vs inline,276
4975,11:01,Scott identifies combinator selectors like + and ~,combinators,276
4976,12:24,"Wes doesn't know specificity calculation but understands concepts",specificity ,276
4977,15:04,"Scott knows translate only works on x/y axis, not z axis",translate axis,276
4978,16:54,Wes explains CSS reset vs normalize correctly,reset vs normalize,276
4979,18:31,Wes suggests using @import inside media query for conditional CSS,conditional CSS,276
4980,20:27,Scott explains why to use translate over positioning,translate vs position,276
4981,02:35,Scott shares funny story of putting a check in the wrong slot at an ATM,ATM check story,277
4982,04:39,"PNPM is a faster, more efficient alternative to NPM that stores modules in one location",PNPM overview,277
4983,08:28,Monorepos allow you to manage multiple packages/projects within one repo,Monorepo benefits,277
4984,11:14,PNPM monorepos use a pnpm-workspace.yaml file to define the package structure,PNPM monorepo setup,277
4985,16:07,Git submodules allow mixing private and public packages within a monorepo,Git submodules,277
4986,20:39,Publishing packages in a PNPM monorepo to NPM is easy,Publishing packages,277
4987,02:21,Collecting horror stories,Horror stories,278
4988,04:12,Wes deletes Denver emails,Denver email bug,278
4989,06:46,Scott leaks XFL cities,XFL leak,278
4990,08:18,$90 million crypto bug,$90M crypto bug,278
4991,11:25,Accidentally deleting server,Deleted server,278
4992,13:48,Accidentally emailing customers,Bad emails,278
4993,15:11,Mass website outage on Friday,Friday deploy,278
4994,18:09,Performance issues in production,Performance issues,278
4995,21:10,Company outage from button,Outage button,278
4996,23:28,Deleting site with script,Deleted site,278
4997,26:20,Breaking site with dependencies,Dependency issues,278
4998,28:20,Developer photos leaked,Leaked photos,278
4999,31:46,Accidentally deleting code,Deleted code,278
5000,35:27,Bug from old code,Legacy bug,278
5001,38:46,Updating all records,Mass update,278
5002,42:11,Bad interview answer,Interview flub,278
5003,00:29,Podcast intro,Intro,279
5004,01:04,Preview of upcoming spooky stories episode,Preview,279
5005,01:33,Sponsor read for Sentry,Sentry ad,279
5006,02:23,Sponsor read for Linode,Linode ad,279
5007,03:27,Reading spooky dev stories from Twitter,Twitter stories,279
5008,04:29,Story about offensive Bible verse appearing in Bible app,Offensive verse,279
5009,04:43,Story about cat deleting API code,Cat delete,279
5010,05:03,Dog paw slapping keyboard story,Dog paw,279
5011,05:18,Grammarly injecting code broke emails,Grammarly broke emails,279
5012,05:57,Accidental DDoS of own server,Self DDoS,279
5013,06:18,Bug sent duplicate emails to customers,Duplicate emails,279
5014,06:32,Images saved to wrong bucket and deleted,Wrong image bucket,279
5015,06:45,Lost work from corrupted FTP file,Corrupt FTP,279
5016,07:36,Locked users out of beta by accident,Locked beta users out,279
5017,07:43,Blacklisted own load balancer IP address,Blacklisted self,279
5018,07:49,Case mismatch broke user accounts,Case sensitivity bug,279
5019,08:14,Offensive test error message got deployed,Offensive error message,279
5020,08:42,Swear filter blocked CSS file,Swear filter blocked CSS,279
5021,09:40,Infinite text alerts to phone numbers,Infinite texts,279
5022,10:13,Integer size bug crashed app after years,Integer size crash,279
5023,10:48,DDoS office internet with download test,Office DDoS,279
5024,11:26,Removed SQL WHERE clause slowed database,Removed WHERE clause,279
5025,11:43,Crashed university website with Google Analytics,Crashed university site,279
5026,12:38,Preview of more stories in next episode,Next episode preview,279
5027,13:04,Outro and sponsors,Outro,279
5028,02:33,Scott and Wes discuss cutting trees and clearing branches,Cutting trees,280
5029,03:27,"Scott finds a video with Wes's insightful sprinkler comment",Wes comment,280
5030,05:04,Get lawyer for terms of use and privacy policy for serious projects,Lawyer policies,280
5031,06:43,Can try LegalZoom for terms and policies instead of lawyer,LegalZoom,280
5032,08:05,Teaching kids - start with logic games and coding toys before code,Teaching kids,280
5033,09:42,Make kids curious problem solvers before teaching code,Make kids curious,280
5034,11:16,Denver a good tech hub with good pay but high cost of living,Denver tech,280
5035,12:03,"GraphQL - resolvers are for types, not columns. Shouldn't need hundreds.",GraphQL resolvers,280
5036,14:47,Can use untrusted code from GitHub repos in portfolio if explain it,Use untrusted code,280
5037,15:29,"Avoid nonsense variable names like foo, bar. Use real examples.",Avoid foo bar,280
5038,16:30,Negative values in CSS are fine and useful despite feeling dirty,Negative CSS values,280
5039,18:58,MongoDB Atlas better than self-hosted Mongo for security and features,Atlas over self-hosted,280
5040,22:19,Get immigration lawyer on show to discuss tech worker immigration,Immigration lawyer,280
5041,26:43,Approach GraphQL as queries and single endpoint rather than REST endpoints,GraphQL queries,280
5042,30:38,Specialized skills like load balancing and sharding usually managed by services,Managed services,280
5043,32:42,Audit simple untrusted packages yourself if concerned,Audit packages,280
5044,33:43,"Can't fully audit all dependencies, have to accept some risks",Accept risks,280
5045,35:58,"Update packages slowly, look for issues before upgrading",Update slowly,280
5046,37:33,"npm audit warnings are often noise, currently inadequate",npm audit noise,280
5047,41:55,"Use fast static site tech like SvelteKit, Gatsby or Next.js static for brochure site",Static for brochure,280
5048,45:42,"CSS negative values are valid, useful techniques. Get over it.",Get over negative values,280
5049,48:30,"Only use Git, no sync services, for backup",Git backup,280
5050,51:03,Cloudinary good for automated image transformation,Cloudinary images,280
5051,02:49,Scott introduces the podcast,Intro,281
5052,03:43,"Scott introduces JUST, a small utility function library",JUST intro,281
5053,07:51,Wes discusses the use cases and benefits of JUST functions,Use cases,281
5054,10:25,Scott talks about the compare function in JUST,Compare fn,281
5055,11:34,Wes suggests using JUST tests as practice exercises,Practice tests,281
5056,00:12,Podcast on running a podcast,Tips,282
5057,00:19,"Recording setups, topics, editing, hosting, transcripts, promoting, sponsors",Podcast topics,282
5058,00:52,Local and Zoom recording setup,Recording,282
5059,02:20,Zoom audio backup,Backup,282
5060,03:00,Audio gear setups,Audio gear,282
5061,05:29,Recording apps: Logic vs QuickTime,Recording apps,282
5062,06:23,Online recording services,Online recording,282
5063,07:33,Importance of consistency in releasing episodes,Consistency,282
5064,09:04,FreshBooks sponsor ad,FreshBooks ad,282
5065,09:18,Episode prep and planning,Planning,282
5066,12:16,New frameworks and topics to cover,New topics,282
5067,13:15,Explainer episodes,Explainers,282
5068,14:15,Massive backlog of episode ideas,Backlog,282
5069,14:29,Short Hasty Treat vs long Tasty Treat episodes,Episode types,282
5070,16:23,Occasional fun episodes like games,Fun episodes,282
5071,16:56,"Episodes explaining projects we've built",Project episodes,282
5072,17:12,Collaboration episodes,Collabs,282
5073,18:51,Non-coding topics like productivity and imposter syndrome,Soft skills,282
5074,19:45,LogRocket sponsor ad,LogRocket ad,282
5075,21:02,Editing process,Editing,282
5076,22:20,Hosting on Libsyn,Hosting,282
5077,23:06,Next.js site and markdown for show notes,Show notes,282
5078,23:59,Most listen through podcast apps,Podcast apps,282
5079,24:07,Working on transcripts,Transcripts,282
5080,26:23,Lack of good podcast discovery,Discovery,282
5081,28:24,Would still start a podcast today,Still start today,282
5082,30:43,Ideas for better podcast discovery,Better discovery,282
5083,31:18,Leveraging existing audiences to promote,Promotion,282
5084,32:26,Recording episodes in advance,Recording advance,282
5085,33:51,Recording every Monday is tricky with holidays,Holidays,282
5086,34:45,How Cloudinary sponsor ad works,Cloudinary ad,282
5087,35:29,5-6 hours per week spent on podcast,Hours spent,282
5088,37:27,Sponsors are services we use and like,Good sponsors,282
5089,39:45,First sponsor reached out early,First sponsor,282
5090,42:33,No interest in Patreon model,No Patreon,282
5091,44:51,Considering ad-free version for supporters,Ad-free version,282
5092,46:16,Live show ideas,Live shows,282
5093,47:25,Annual Halloween spooky stories episode,Spooky stories,282
5094,48:41,"Scott's sick pick: Crime and Penalties documentary","Scott's pick",282
5095,49:43,"Wes' sick pick: Road Runner documentary","Wes' pick",282
5096,51:06,Wes promotes his courses,Wes courses,282
5097,52:04,Scott promotes Level Up Tutorials,Level Up promo,282
5098,04:59,"Color contrast function compares color to others, selecting highest contrast",Color contrast,283
5099,06:47,Accent color property allows styling form inputs with brand colors,Accent color,283
5100,07:50,CurrentColor sets a property to the current text color,CurrentColor,283
5101,09:07,Color functions allow specific color spaces beyond sRGB,Color spaces,283
5102,11:55,Color mix function mixes two colors in a specified amount,Color mix,283
5103,14:23,Space separated color function notation proposed,CSS colors,283
5104,15:46,Alpha values can be added to RGB/HSL with slash notation,Alpha colors,283
5105,18:26,Hex values can now include alpha transparency,Hex alpha,283
5106,22:14,Lab and LCH are new perceptually uniform color spaces,Lab/LCH colors,283
5107,00:02,Hosts welcome listeners to a potluck episode with questions from listeners,Intro,284
5108,02:33,Discussion on working on admin tools and UIs at large companies,Admin tools,284
5109,07:00,Question on using local vs external image services like Cloudinary,Image hosting,284
5110,12:26,Discussion on building portfolio sites to showcase skills vs design,Portfolios,284
5111,16:33,Discussing testing approaches for Svelte components,Svelte testing,284
5112,19:15,Auth0 can handle authentication for apps using any framework,Auth0 ad,284
5113,20:39,Recommendations for learning AWS and devops,AWS devops,284
5114,22:34,Discussion on using MDX vs regular Markdown,MDX,284
5115,33:48,Sentry can track errors and performance issues,Sentry ad,284
5116,37:00,Hosting strategies for using WordPress as a headless CMS,WordPress hosting,284
5117,39:26,Using semantic HTML tags vs divs,Semantic HTML,284
5118,47:41,Linode offers cloud computing services for developers,Linode ad,284
5119,51:47,Documentary series recommendation - LuLaRich,Show recommendation,284
5120,53:30,Flame light bulbs are a fun DIY project,Flame bulbs,284
5121,00:26,Intro to Spicy Takeout episode,Intro,285
5122,01:23,Mixing templates & logic frowned upon but makes sense,Mixing templates,285
5123,04:06,PHP gets flack but has good features we now use in JS,PHP flack,285
5124,05:42,Every PHP request has own scope like serverless functions,Request scope,285
5125,07:45,PHP is hot reloaded and serverless by default,Hot reloaded,285
5126,08:56,PHP has massive standard library that JS is catching up to,Standard library,285
5127,10:46,URL based routing becoming popular again with JS frameworks,URL routing,285
5128,11:23,Server-side rendering gaining popularity again,SSR popular,285
5129,12:29,Easy variable interpolation now possible in JS like PHP,Variable interpolation,285
5130,13:12,All-in-one frameworks like Laravel similar to past PHP frameworks,All-in-one frameworks,285
5131,13:32,Direct database access from templates possible but risky,Direct DB access,285
5132,14:37,Why do people hate PHP and not use it nowadays?,Why hate PHP?,285
5133,16:18,Using Laravel could be interesting to try nowadays,Try Laravel,285
5134,16:39,PHP typing was half-baked but improving in PHP 8,Typing,285
5135,17:34,Inconsistent PHP API naming still an issue,Inconsistent APIs,285
5136,18:02,"Why use JS over PHP nowadays despite PHP's merits?",Why JS over PHP?,285
5137,19:58,Final thoughts on PHP and its influence on JS,Final thoughts,285
5138,01:10,Front End Feud intro,intro,286
5139,02:33,Teams introduced,teams,286
5140,03:29,Rules explained,rules,286
5141,04:34,Round 1 face-off,faceoff,286
5142,05:11,Team ShopTalk wins round 1,round 1,286
5143,10:40,Round 2 face-off,faceoff,286
5144,12:38,Team Syntax wins round 2,round 2,286
5145,17:34,Round 3 face-off,faceoff,286
5146,22:14,Team ShopTalk wins round 3,round 3,286
5147,25:27,Round 4 inverted round,inverted,286
5148,33:39,Team Syntax wins round 4,round 4,286
5149,35:27,Round 5 face-off,faceoff,286
5150,41:51,Team Syntax wins round 5,round 5,286
5151,42:12,Round 6 face-off,faceoff,286
5152,46:46,Team ShopTalk wins Front End Feud,ShopTalk wins,286
5153,03:36,Lucylang compiles to xstate for concise state machines,Lucylang,287
5154,06:33,MD Specs brings MDX style components to Svelte,MD Specs,287
5155,09:34,Rehype and Remark plugins work with MD Specs in Svelte,MD Spec plugins,287
5156,13:29,Fig adds autocomplete to terminals like folders and Git,Fig terminal,287
5157,16:17,Warp terminal built in Rust with collaboration features,Warp terminal,287
5158,19:49,Raycast is an app launcher and workflow tool,Raycast,287
5159,24:00,Obsidian is a Versus Code style note taking app,Obsidian notes,287
5160,27:00,Descript transcribes audio and edits based on text,Descript editor,287
5161,00:22,Scott moved Level Up Tutorials from React to SvelteKit,React to SvelteKit,288
5162,00:47,"Sponsors: Prismic, Sentry, Cloudinary",Sponsors,288
5163,01:12,"Scott setting up office, getting sound treatment",Office setup,288
5164,02:15,Hard numbers comparing React and SvelteKit not useful,No useful metrics,288
5165,02:42,"Scott doesn't hate React, but prefers SvelteKit","Doesn't hate React",288
5166,03:52,Wanted to try SvelteKit for Level Up Tutorials rewrite,Why SvelteKit,288
5167,05:35,Made quick progress with SvelteKit in just a few hours,Quick progress,288
5168,06:43,Concepts transfer between frameworks,Concepts transfer,288
5169,08:29,"Apollo not needed, using custom fetcher",No Apollo,288
5170,09:22,Converting React hooks to Svelte stores,Converting hooks,288
5171,10:11,No need for data providers like with React,No data providers,288
5172,10:36,Switching to Vime video player,Vime player,288
5173,12:30,Site is faster with SSR,Faster with SSR,288
5174,13:14,No need for CSS-in-JS libraries,No CSS libraries,288
5175,13:52,Using Prismic as CMS,Using Prismic CMS,288
5176,16:37,Easier to convert combined React components,Combined components,288
5177,17:11,Converting React state to Svelte variables,State to variables,288
5178,18:31,More intuitive than React patterns,More intuitive,288
5179,19:20,Forgetting React patterns,Forgetting React,288
5180,19:59,No need for event handlers like React,No event handlers,288
5181,21:11,Removing React syntactic cruft,No syntactic cruft,288
5182,21:52,Converting React conditionals to Svelte,Conditional conversion,288
5183,22:40,Verbosity vs concision,Verbosity vs concision,288
5184,23:19,Small differences add up,Small differences,288
5185,26:06,Sponsor: Sentry,Sponsor: Sentry,288
5186,26:43,No React lifecycle issues,No lifecycle issues,288
5187,27:16,Easy to make Svelte packages,Svelte packages,288
5188,28:08,Created a Svelte devtools package,Svelte devtools,288
5189,28:13,Also made Svelte element queries package,Element queries,288
5190,30:12,Need Svelte-only components,Svelte components,288
5191,30:22,On-mount client side fix,On-mount fix,288
5192,31:51,Passing data from JS to CSS,JS to CSS,288
5193,32:45,Using adapter-node,adapter-node,288
5194,33:14,Hosted on Render.com,Hosted on Render,288
5195,34:23,Can host API in SvelteKit,API in SvelteKit,288
5196,35:30,Works on Vercel and Cloudflare,Vercel and Cloudflare,288
5197,36:36,Using Pancake for charts,Pancake charts,288
5198,37:00,Rebuilding admin tools,Admin tools,288
5199,37:36,Issues with ESM imports,ESM issues,288
5200,38:44,Apollo issues,Apollo issues,288
5201,39:13,Some TypeScript annoyances,TypeScript issues,288
5202,40:46,Large drag animation libraries,Drag libraries,288
5203,41:13,Sponsor: Cloudinary,Sponsor: Cloudinary,288
5204,43:03,React ecosystem maturity,React ecosystem,288
5205,43:33,JavaScript libraries work in Svelte,JavaScript libraries,288
5206,44:43,Controlled vs uncontrolled inputs,Controlled inputs,288
5207,45:40,Binding state to inputs,Binding state,288
5208,46:14,Computed values,Computed values,288
5209,47:23,Is SvelteKit stable?,SvelteKit stable?,288
5210,48:29,Feels very stable,Very stable,288
5211,49:46,"Translating ""fast""",Translating fast,288
5212,50:25,Confident in SvelteKit after rewrite,Confident in SvelteKit,288
5213,52:26,Wes picks SGU podcast,Wes: SGU podcast,288
5214,54:19,Scott picks pressure washer nozzle,Scott: Nozzle,288
5215,54:57,Scott picks web components course,Scott: Web components course,288
5216,02:33,Linode provides hosting for Node.js apps,Linode hosting,289
5217,03:36,Webhooks allow servers to communicate with each other,Webhooks intro,289
5218,04:53,Webhooks used for payment processing workflows,Payment webhooks,289
5219,06:21,Webhooks are like automated HTTP requests,Webhooks explained,289
5220,07:21,"Webhooks sent on events, not immediately",Webhooks async,289
5221,08:14,Services provide interface to configure webhooks,Webhook UI,289
5222,09:33,Web developers implement webhook endpoints,Webhook endpoints,289
5223,11:02,Webhooks have JSON or form encoded payloads,Webhook payloads,289
5224,11:48,Secure webhooks with authentication tokens,Webhook security,289
5225,13:12,Locally test webhooks with ngrok,ngrok testing,289
5226,15:35,Consistent webhook URLs help debugging,Consistent URLs,289
5227,16:58,Tools like Insomnia help test webhooks,Insomnia testing,289
5228,18:25,"Stripe's VS Code extension simplifies testing",Stripe testing,289
5229,19:40,Webhook.site verifies webhook payloads,Webhook.site,289
5230,00:23,New JavaScript features in ES2022,ES2022,290
5231,00:55,"Scott's new office setup",Office tour,290
5232,02:33,"Sponsors: Sanity, LogRocket, Auth0",Sponsors,290
5233,05:31,Regex indices flag,Regex indices,290
5234,07:42,Private class fields and methods,Private fields,290
5235,09:08,Class fields initialization,Class fields,290
5236,10:48,Static class methods,Static methods,290
5237,13:13,Top level await,Top level await,290
5238,16:02,Array .at() method,.at() method,290
5239,21:49,Object.hasOwn() utility,Object.hasOwn(),290
5240,25:05,Class static block,Static block,290
5241,00:56,Back from summer hiatus,Hiatus,291
5242,04:04,Wes explains his internet issues at his cottage,Cottage internet,291
5243,06:26,Scott uses up his phone hotspot data quickly,Hotspot data,291
5244,07:31,Wes struggles with data caps in Canada,Data caps,291
5245,08:10,Wes turns off video for podcast due to bad internet,Video off,291
5246,08:29,Introducing Starlink satellite internet,Starlink,291
5247,09:50,Starlink equipment is expensive but necessary for Wes,Expensive,291
5248,10:47,Starlink speeds much faster than previous options,Fast speeds,291
5249,11:24,Starlink latency is good,Low latency,291
5250,11:46,Some short Starlink outages but overall good uptime,Good uptime,291
5251,12:32,Starlink dish needs clear view of sky,Dish setup,291
5252,13:17,Kids notice improved streaming,Kids notice,291
5253,13:49,Issue with Facebook and Instagram on Starlink,Facebook issue,291
5254,14:20,Review of Starlink equipment,Equipment,291
5255,16:28,Using own router instead of Starlink one,Own router,291
5256,17:09,Advanced networking setup,Networking,291
5257,17:57,Good for rural smart home automation,Smart home,291
5258,18:48,HD security cameras now possible,HD cameras,291
5259,19:29,Helping neighbors with internet access,Helping neighbors,291
5260,19:56,Downside is being unable to pause service,"Can't pause",291
5261,02:34,Discussion on pros and cons of using Sass and SCSS in 2021,Sass,292
5262,05:29,Explanation of status of CSS Houdini browser support and spec progress,Houdini,292
5263,09:37,Thoughts on building sites without JS and benefits of progressive enhancement,No JS,292
5264,11:44,"Overview of Tim Berners-Lee's Solid project for decentralized data ownership",Solid,292
5265,19:03,"Tips for bartering web dev skills and whether it's better than using money",Bartering,292
5266,22:14,Perspectives on digital rights management (DRM) and effects on users,DRM,292
5267,25:50,Framework laptop - impressions of Linux laptop focused on repairability ,Framework,292
5268,29:38,Frontity - React framework for WordPress sites,Frontity,292
5269,37:37,"Using GraphQL with Svelte - codegen, Apollo, SvelteKit integrations",GraphQL Svelte,292
5270,41:02,Prisma and whether it makes MongoDB queries easier,Prisma MongoDB,292
5271,43:54,Future of Webpack with new faster bundlers like Vite and ESBuild,Webpack Future,292
5272,46:16,Farewell to current Syntax studio,Farewell Studio,292
5273,00:33,Welcome from Toronto after Syntax Summit,Intro,293
5274,02:33,Century tracks errors and exceptions,Century,293
5275,04:23,Netlify makes Next.js work well,Next.js,293
5276,06:12,Next.js provides great hosting for React,Next.js,293
5277,09:12,Firefox used to lead but now Safari does,Browsers,293
5278,10:49,Firefox has more issues than other browsers now,Firefox,293
5279,12:14,Safari has been adding lots of new CSS features,Safari,293
5280,15:39,CSS is easy with Grid and Flexbox,CSS,293
5281,17:40,Serverless databases differ in features,Databases,293
5282,20:02,Builder.io allows editors to create components,Forms,293
5283,23:10,No good service to bridge CMS forms to apps,Forms,293
5284,26:52,WordPress forms work well but hard to integrate,Forms,293
5285,29:25,"Turbo removed TypeScript, different than Svelte",TypeScript,293
5286,31:32,Next.js has had lots of API changes recently,Next.js,293
5287,35:24,"Electron uses Chromium, Turborepo uses system browser",Desktop apps,293
5288,36:04,React Native makes native iOS and Android apps,React Native,293
5289,38:34,Turborepo removed TypeScript for performance,Turborepo,293
5290,41:20,Sentry knows a lot about errors and exceptions,Errors,293
5291,45:04,Safari adds CSS features even without full support,CSS,293
5292,49:11,Need to know enough CSS with JavaScript,CSS,293
5293,50:02,CSS is required as part of front-end job,CSS,293
5294,51:17,Explanation of computing terms like process and daemon,Computing,293
5295,00:40,New show discussing Syntax website secret sauce,New show,294
5296,01:19,Got name Secret Sauce from whiteboard in Toronto,Name origin,294
5297,01:34,Want to know tech stacks of large companies,Tech stacks,294
5298,02:23,Google Docs rendering episode was great example,Google Docs,294
5299,02:51,Email or use forms to suggest future secret sauce topics,Suggest topics,294
5300,05:11,"Using SvelteKit frontend, Node.js backend",Stack,294
5301,05:19,Serverless functions for API and data tasks,Serverless,294
5302,06:46,"Using Mux's MediaChrome for audio player",MediaChrome,294
5303,07:29,Fuzzy search allows quick finding episodes,Fuzzy search,294
5304,08:01,FlexSearch powers fuzzy search via worker,FlexSearch,294
5305,09:21,FlexSearch builds index from database call,Index building,294
5306,12:29,"Global styles, then scoped component styles",Styles,294
5307,13:10,Some global utilities for common needs,Global utils,294
5308,13:31,Layout utilities help component placement,Layout utils,294
5309,14:13,Using Svelte animation and page transitions,Animations,294
5310,15:49,Page transitions via CSS and onNavigate,Page transitions,294
5311,16:18,"Using Prettier, PostCSS, PNPM",Tooling,294
5312,17:10,Enforcing snake_case with ESLint,Snake case,294
5313,19:00,Using MySQL database with Prisma,Database,294
5314,20:19,Prisma auto-generates types from schema,Types from schema,294
5315,21:31,"Using Deepgram, OpenAI, Anthropic for AI",AI services,294
5316,23:32,TypeScript provides compile-time checking,TypeScript,294
5317,24:37,Using Playwright for browser testing,Playwright testing,294
5318,25:27,"Hosted on Vercel, may try Fly.io",Hosting,294
5319,26:22,Fly.io good for longer processes,Fly benefits,294
5320,27:35,PlanetScale for MySQL database,PlanetScale,294
5321,01:10,Podcast hosts discuss annual horror stories episode,Intro,295
5322,01:40,Story about accidentally deploying a crypto copy paste bug,Crypto bug,295
5323,03:05,Discussion about misunderstanding GitHub comment acronym LGTM,LGTM meaning,295
5324,04:10,Voting algorithm bug caused wrong Big Brother contestant to be eliminated,Big Brother bug,295
5325,05:57,Only 6 laptops could fix NPM when it crashed,NPM laptops,295
5326,07:45,Autocompletion mistake deleted home directories,Directory deletion,295
5327,08:57,Payment form submitted before confirmation,Payments submitted,295
5328,11:25,Intern dropped analytics database,Database dropped,295
5329,12:15,SQL injection attack dropped production database,Production dropped,295
5330,13:00,Typo took down polyfill.io,polyfill.io down,295
5331,14:32,Bitcoin mining exploit drained AWS budget,Bitcoin mining,295
5332,16:06,Command deleted dataset for AI training,Dataset deleted,295
5333,17:48,Chat feature DDoSed own servers,Accidental DDoS,295
5334,19:08,Profanity generated in URL shortener,Profanity generated,295
5335,20:45,Office servers containing source code stolen,Source code stolen,295
5336,22:55,"Wrong database connected, charged cards repeatedly",Cards overcharged,295
5337,24:20,"Turned on unfinished feature, customers got free items",Free stuff shipped,295
5338,25:32,Autocomplete mistake deleted directories,Directories deleted,295
5339,27:24,Shipped hardware with no remote access,No remote access,295
5340,28:30,Semicolon typo crashed production site,Production crashed,295
5341,31:20,Charging and updating card balances together,Double charges,295
5342,33:05,First commit brought down site before flight,Site down before flight,295
5343,36:25,Regex bottleneck crashed site for days,Regex crash,295
5344,37:35,Truncated production database accidentally,Production truncated,295
5345,38:25,Wrong form sent medical equipment to customers,Wrong orders shipped,295
5346,39:08,Load balancer served wrong sites,Wrong sites served,295
5347,40:46,Leaked credentials indexed by search engines,Credentials leaked,295
5348,43:01,Home directory deletion cautionary tale,Directory deletion caution,295
5349,02:34,"Junior dev deployed JS without null check, breaking site",Null check,296
5350,04:20,Accidental embarrassing test page published to live site,Test page,296
5351,06:09,Code review oversight led to login vulnerabilities,Vulnerabilities,296
5352,08:23,Cleaning duplicate JSON data caused education issues,JSON issues,296
5353,13:14,Disallowed search engine crawling tanked rankings,Crawling error,296
5354,14:55,Wrong AWS deletion command wiped customer files,Wrong deletion,296
5355,16:22,"Deleted Postgres database, team lost access",Lost database,296
5356,17:17,Pushed dev code to production Android app,Wrong env push,296
5357,18:44,"Forgot test condition, sent mass emails",Mass email,296
5358,19:53,Misconfigured phone number sent to adult line,Wrong number,296
5359,23:20,Garbage account data required manual reentry,Manual data fix,296
5360,24:13,Incorrect wire transfer account nearly lost $10k,Wire transfer error,296
5361,26:50,Forgot to remove test payment integration code,Test code to production,296
5362,02:34,"If done well, what you're doing is making it possible to achieve new things without micromanaging details",Abstractions enable progress,297
5363,03:06,New hardware like GPUs are driving the need for new high level programming languages,New hardware needs new languages,297
5364,04:02,GPUs were originally built for graphics but are well-suited for AI due to parallelism,GPUs enable AI via parallelism,297
5365,08:13,"Compiled vs interpreted refers to implementation, not the language itself",Compiled vs interpreted,297
5366,09:18,"Mojo can be compiled to binary, interpreted, or use compilers at runtime like JavaScript",Mojo implementation flexibility,297
5367,12:24,"Mojo is a new language in the Python family, fixing Python's need to use C extensions",Mojo replaces Python C extensions,297
5368,15:29,Python was chosen over JS for Mojo due to ML community preference,Python preferred by ML community,297
5369,18:11,"Most AI and ML is in Python currently, but JS community is building more libraries","Python leads in ML, JS catching up",297
5370,22:00,Mojo can scale down to run on smaller systems unlike Python,Mojo scales down,297
5371,29:26,ML models are functions with weights learned from data rather than programmed,ML models learn from data,297
5372,31:12,ML models have billions of parameters trained on large datasets to perform complex tasks,ML models have lots of learned parameters,297
5373,35:11,Python was lucky to be chosen early by projects like TensorFlow but also has strong data science ecosystem,Python ecosystem propelled it in ML,297
5374,36:07,"Fragmentation of languages, frameworks and hardware makes AI development challenging",AI development fragmentation,297
5375,37:01,"Modular's AI engine gives TensorFlow/PyTorch developers superpowers without fragmentation",Modular AI engine,297
5376,40:42,"When creating a new language, start with goals and learn from other languages",New language design process,297
5377,43:37,AI will create new jobs and give programmers superpowers rather than replace them,AI increases productivity,297
5378,47:03,"AI can help interact with the natural world and be more useful in people's lives",AI interacts with real world,297
5379,00:33,Brad Frost discusses design systems and building stuff for the web,Intro,298
5380,03:51,"Brad's background - came up through agency work, now consultant helping orgs build design systems",Background,298
5381,07:15,Design system is the official story of how an org designs and builds UIs,Definition,298
5382,08:51,"The 3 main assets of a design system - design library, code library, documentation",3 Assets,298
5383,10:12,"Documentation website brings the design system together, helps teach it",Documentation,298
5384,10:28,Web components are best for delivering reusable front-end code,Web Components,298
5385,16:06,"Code is source of truth, Figma follows code",Code First,298
5386,19:13,Design systems allow customized API and frameworks for teams,API Layer,298
5387,23:56,Teams can still use React/Angular while powered by web components,Framework Layer,298
5388,25:14,Design system web components end up powering all products and apps,Powering Products,298
5389,26:22,Design systems help with consistency across components,Consistency,298
5390,30:18,Component-driven workflow benefits any size organization,Any Size Org,298
5391,31:39,"Start simple, add complexity only as needed",Start Simple,298
5392,35:15,Design tokens define brand attributes like colors,Design Tokens,298
5393,36:43,"Design tokens help support theming, dark mode, etc",Theming,298
5394,40:24,Overcome developer skepticism by building trust,Trust,298
5395,41:46,Developers are often protective of their codebase,Protective Devs,298
5396,43:14,"When design system doesn't meet needs, have a conversation",Conversations,298
5397,44:52,Include gradients in design tokens,Gradients,298
5398,46:16,Naming is critical but hard,Naming,298
5399,47:11,Good naming improves developer experience,Developer Experience,298
5400,48:30,Tools like Figma are still new to good naming,Figma Naming,298
5401,49:40,Document decisions in markdown docs and Storybook,Documentation,298
5402,50:46,Brad recommends the book Thinking in Systems,Book Rec,298
5403,53:23,Excited about container queries for design systems,Container Queries,298
5404,54:46,Excited about improvements to native CSS capabilities,Native CSS,298
5405,55:20,Standards and native tech are a pragmatic bet,Web Standards,298
5406,00:16,Update show on AI and ML for developers,AI update,299
5407,03:36,"Vercel's new vzero.dev tool to generate React UI from prompts",Vercel vzero,299
5408,09:34,"Anthropic's Claude chatbot and API",Anthropic Claude,299
5409,18:48,"Cloudflare's new AI services in Workers",Cloudflare AI,299
5410,27:18,New AI hardware devices,AI hardware,299
5411,02:33,jQuery added to browser,jQuery,300
5412,02:46,browser compatibility,compatibility,300
5413,02:52,ease of DOM selection,DOM selection,300
5414,03:15,traverse DOM with siblings,DOM traversal,300
5415,03:53,fuzzy matching selectors,fuzzy selectors,300
5416,04:09,animation helpers,animations,300
5417,05:49,realizing power of jQuery plugins,plugins,300
5418,08:01,fetch API for requests,fetch API,300
5419,08:34,Express for server routing,Express,300
5420,09:35,fetch API standardization,standardization,300
5421,12:40,Hapi as Express replacement,Hapi,300
5422,12:55,Hapi uses request/response,request/response,300
5423,15:08,Underscore/Lodash utilities,Underscore,300
5424,16:26,Maps/Sets replace Underscore,Maps/Sets,300
5425,18:17,Spread instead of Lodash,Spread,300
5426,20:14,RequireJS module loading,RequireJS,300
5427,21:15,Left Pad NPM breakage,Left Pad,300
5428,22:58,String pad instead of Left Pad,String pad,300
5429,23:33,960 Grid System,960 Grid,300
5430,25:23,CSS Grid instead of 960,CSS Grid,300
5431,26:28,Sass/Less preprocessing,Sass/Less,300
5432,27:15,WebSockets replacing Socket.IO,WebSockets,300
5433,30:17,Temporal replacing date libs,Temporal,300
5434,30:43,Observables being standardized,Observables,300
5435,00:23,State of CSS survey: CSS frameworks,CSS survey,301
5436,02:33,Most used CSS framework,Frameworks,301
5437,04:31,Bootstrap prevalence and history,Bootstrap,301
5438,07:01,Decline in Foundation framework usage,Foundation,301
5439,08:20,Discussing various CSS component libraries,Components,301
5440,11:15,Decline in CSS-in-JS solutions,CSS-in-JS,301
5441,12:33,Reasons for decline of CSS-in-JS,Decline reasons,301
5442,15:08,Power of CSS custom properties,Properties,301
5443,17:10,Surprise at CSS modules popularity,Modules,301
5444,18:16,Review of various CSS utilities,Utilities,301
5445,21:45,Lightning CSS usage growth prediction,Lightning CSS,301
5446,23:25,Project Wallace for CSS analysis,Project Wallace,301
5447,24:49,Atomizer inline CSS generator,Atomizer,301
5448,25:49,Primary browser usage,Browsers,301
5449,27:24,Safari dev tools issues,Safari tools,301
5450,29:05,Industry sector breakdown,Industries,301
5451,32:10,CSS and JavaScript time split,Time split,301
5452,33:30,Browser compatibility pain points,Compatibility,301
5453,34:57,Desired missing CSS features,Missing features,301
5454,37:09,SVG support discussion,SVG,301
5455,39:55,Grid line styling interest,Grid lines,301
5456,41:33,CSS pain points,Pain points,301
5457,42:43,Powerful CSS layout capabilities,Layouts,301
5458,45:12,Learning resources used,Learning,301
5459,46:26,Notable CSS educators,Educators,301
5460,47:53,Most adopted CSS feature,Adopted feature,301
5461,48:43,Most commented on CSS feature,Commented feature,301
5462,49:08,Highest user retention rate feature,Retention rate,301
5463,49:42,Most user write-in votes,Write in votes,301
5464,05:03,"White light better for concentrating, warm tones more calming",lighting tips,302
5465,08:41,Protect cables on floor to avoid fire hazard,cable safety,302
5466,13:00,Baby wipes for quick cleaning between tasks,cleaning tips,302
5467,18:33,Comfort is key for noise-canceling headphones,headphone tips,302
5468,23:19,Rollerblade wheels for chair make moving smooth,chair wheels,302
5469,02:51,NoImplicitAny prevents TypeScript from inferring any for untyped variables,NoImplicitAny,303
5470,04:58,NoImplicitThis requires explicitly typing this in functions,NoImplicitThis,303
5471,06:25,StrictFunctionTypes prevents assigning mismatched function types,StrictFunctions,303
5472,07:35,AlwaysStrict enables strict mode to prevent redeclaring variables,AlwaysStrict,303
5473,08:10,Strict mode can prevent certain JavaScript edge cases,StrictMode,303
5474,08:54,Strict mode prevents creating undeclared variables,UndeclaredVars,303
5475,10:14,StrictNullChecks requires null checking before property access,StrictNullChecks,303
5476,11:19,"StrictBindCallApply enables type checking on bind, call and apply",BindCallApply,303
5477,12:42,StrictPropertyInitialization requires setting class properties in constructor,ClassProps,303
5478,13:41,UseUnknownInCatchVariables sets catch variable types to unknown instead of any,UnknownCatch,303
5479,00:27,"Today's episode is on JavaScript coding interview questions",coding interview,304
5480,02:33,Scott worked on a GraphQL plugin over the weekend,GraphQL plugin,304
5481,04:13,Definition of a first class function in JavaScript,first class function,304
5482,06:11,Purpose and usage of Object.is in JavaScript,Object.is,304
5483,09:43,Purpose of the Error object in JavaScript,Error object,304
5484,12:27,Definition and benefits of minification in JavaScript,minification,304
5485,15:40,Explanation of label statements in JavaScript,label statements,304
5486,19:22,Methods available on a WeakSet in JavaScript,WeakSet methods,304
5487,23:07,Purpose of preventDefault in JavaScript events,preventDefault,304
5488,25:15,Definition of the spread operator in JavaScript,spread operator,304
5489,30:24,Ways to dynamically load CSS and JavaScript,dynamic loading,304
5490,32:01,Explanation of tasks in the JavaScript event loop,event loop tasks,304
5491,34:20,Definition of a WeakMap in JavaScript,WeakMap,304
5492,38:01,How to get query string values in JavaScript,query strings,304
5493,41:06,Purpose of Array.prototype.some in JavaScript,Array.some,304
5494,42:22,How to delete browser cookies in JavaScript,delete cookies,304
5495,04:12,Freelancers often have toxic clients,Toxic clients,305
5496,05:53,Clients without clear project vision,Unclear vision,305
5497,08:40,Scope creep clients keep expanding project,Scope creep,305
5498,11:00,Ill communicators contact at odd times,Bad communication,305
5499,15:33,“Downtown Donovan” brags too much,Bragging client,305
5500,00:02,Code breaks often when editing,Code breaks,306
5501,00:04,Learn through repetition over time,Compound learning,306
5502,00:05,Read error messages carefully,Read errors,306
5503,00:06,Take walks when stuck on bugs,Take walks,306
5504,00:07,Write comments to outline code,Scaffold comments,306
5505,00:08,Struggling is normal for all devs,All struggle,306
5506,00:09,Replicate designs pixel perfect,Pixel perfect,306
5507,00:10,Learn command line basics,Command line,306
5508,00:11,Soft skills are as important as coding,Soft skills,306
5509,00:12,Always be interviewing to practice,Practice interviewing,306
5510,00:13,Learn vanilla JavaScript deeply,Vanilla JS,306
5511,00:14,Understand tradeoffs of choices,Know tradeoffs,306
5512,00:15,Build projects you are excited about,Exciting projects,306
5513,00:29,CSS hate is misguided; Scott loves CSS,CSS hate,307
5514,01:16,Prismic sponsors Syntax podcast,Ad,307
5515,02:28,LogRocket sponsors Syntax podcast,Ad,307
5516,03:21,CSS gets a bad rap with jokes and memes,CSS jokes,307
5517,04:09,Understanding CSS display types fixes layout issues,Display types,307
5518,05:45,Flexbox and Grid simplify CSS layouts,Layout tools,307
5519,06:08,Flexbox and Grid should be used for layouts instead of floats,No floats,307
5520,07:34,Wes and Scott plug CSS courses,Course plugs,307
5521,08:13,Scoping and cascading in CSS causes frustration,Scoping issues,307
5522,08:48,Use scoping tools like BEM to write cleaner CSS,Use BEM,307
5523,09:00,Avoid using IDs and !important in CSS,Avoid footguns,307
5524,10:23,Avoid !important; fix underlying issues instead,No !important,307
5525,11:09,Use dev tools styles panel to debug styles,Dev tools debugging,307
5526,12:08,Check CSS is linked and class names are correct,Debug tips,307
5527,13:10,Purge unused CSS for savings,Purge CSS,307
5528,14:55,Rewrite overly complex CSS from scratch,Rewrite CSS,307
5529,15:37,Treat CSS as a first-class citizen,First class CSS,307
5530,16:18,Plan CSS structure before coding,Plan styles,307
5531,17:23,CSS is great; focus on foundations,CSS is great,307
5532,00:11,Introduction to potluck episode,intro,308
5533,00:37,How to submit questions for potluck episodes,submit,308
5534,00:46,Sponsor ads,ads,308
5535,04:10,Memoization caches results of functions to avoid repeat calculations,memoization,308
5536,07:28,"Advice on knowing when you're ready for a full-time developer job",full-time,308
5537,09:28,Ethics of using purchased UI template for freelance project,ethics,308
5538,13:36,How specific React components should be,components,308
5539,17:11,Tips for reusable vs. specific React components,reusable,308
5540,21:05,Moist code vs. DRY code,moist code,308
5541,24:06,"Scott's old technique of using unlisted YouTube videos",YouTube,308
5542,29:20,LogRocket for debugging errors on websites,LogRocket,308
5543,31:27,Funny nonsense question from listener,funny,308
5544,38:43,Using NPM packages in Netlify functions,Netlify,308
5545,41:26,Firefox font debugging tools,Firefox fonts,308
5546,46:43,Dealing with underestimating timeline on fixed-price freelance project,freelance,308
5547,51:10,Netflix show I Think You Should Leave,Netflix,308
5548,52:37,Underground wire detector tool,wire detector,308
5549,00:26,Intro to link tag episode,Intro,309
5550,01:05,Sponsors: Sanity CMS and Sentry error monitoring,Sponsors,309
5551,04:16,Genesis of the episode from Twitter suggestion,Genesis,309
5552,04:58,Link tag not actually for anchor links,Not for links,309
5553,05:26,Link tag commonly used for loading CSS,CSS loading,309
5554,06:15,Media attributes for conditional CSS loading,Media attributes,309
5555,07:31,Link tag used for loading web fonts,Web fonts,309
5556,08:08,Link tag used for favicons,Favicons,309
5557,08:35,Link tag for preloading/prefetching resources,Preloading,309
5558,09:17,Prefetching hover images with link tag,Hover images,309
5559,10:06,Prefetching/preloading with link tag vs JavaScript,Prefetch vs JS,309
5560,10:49,Preload endpoint data with link tag,Preload data,309
5561,11:22,Rel attributes define link tag behavior,Rel attributes,309
5562,12:26,Preconnect for faster external resources,Preconnect,309
5563,12:51,Preconnect optimization details,Preconnect details,309
5564,13:23,Module preload flattens dependencies,Module preload,309
5565,13:46,Integrity checksums for unchanged resources,Integrity,309
5566,02:39,Emailer asks for beginner website episode,Question,310
5567,02:47,Explaining basic website concepts for beginners,Overview,310
5568,04:20,HTML is backbone and structure of a website,HTML,310
5569,05:04,"HTML elements for images, text, divisions",Elements,310
5570,06:42,HTML elements divide up structure and content,Structure,310
5571,08:11,CSS adds styles and appearance to HTML,CSS,310
5572,09:26,Cascade allows styling many elements,Cascade,310
5573,10:03,"CSS sections for layout, text, animations",Sections,310
5574,11:08,Adding CSS to HTML page,Adding CSS,310
5575,00:27,Introducing TypeScript utility types,Intro,311
5576,03:29,Overview of TypeScript developer levels,Levels,311
5577,06:02,Mention of type-challenges.com,Challenges,311
5578,07:19,Partial utility type,Partial,311
5579,08:21,Readonly utility type,Readonly,311
5580,09:02,Required utility type,Required,311
5581,09:33,Record utility type,Record,311
5582,10:48,Omit utility type,Omit,311
5583,11:37,Pick utility type,Pick,311
5584,12:45,ReturnType utility type,ReturnType,311
5585,13:21,Case manipulation utilities,Case,311
5586,02:35,Should small businesses use WordPress or more advanced tech,Tech choice,312
5587,03:14,Clients care about results not the tech used,Client focus,312
5588,04:18,Sell clients on benefits of newer tech if appropriate,Sell benefits,312
5589,05:18,"Don't force certain tech if WordPress meets their needs",Right tool,312
5590,06:31,Many clients update sites via mobile so optimize for that,Mobile-first,312
5591,07:37,Preview and collaboration key for static site CMS adoption,Preview/collab,312
5592,09:00,Using 3rd party services requires trust but can save time,Trust services,312
5593,11:01,Established services often more secure than new options,Established best,312
5594,14:20,CI services like Vercel easier than self-hosted options,Use CI services,312
5595,16:31,"Back end hosting harder, look into serverless, databases",Tricky backends,312
5596,18:28,Services like Render simplify Node app hosting,Use Render,312
5597,20:05,Self-hosting can be cheaper but requires more maintenance,Self host pros/cons,312
5598,23:34,Drupal provides flexible data and admin options,Drupal data,312
5599,25:27,Most Drupal users are fans though some self-loathe,Drupal opinions,312
5600,35:06,Component CSS with global helpers and utilities ideal,CSS approach,312
5601,37:59,Scoping key for CSS maintainability,Scope CSS,312
5602,39:39,Leverage professional experience during web dev interviews,Leverage experience,312
5603,42:49,Best fan placement for home cooling,Fan placement,312
5604,45:22,Podcast on minor movie character interviews,Podcast pick,312
5605,00:43,Hot code push for latest web dev stuff,Latest stuff,313
5606,02:53,GitHub Copilot AI for code autocompletion,Copilot,313
5607,08:16,Next.js 11 new performance updates,Next.js,313
5608,08:56,Astro for shipping less JavaScript,Astro,313
5609,09:51,Notion API now in beta,Notion API,313
5610,11:34,Petite Vue for sprinkling interactivity,Petite Vue,313
5611,14:01,Stackblitz for node in the browser,Stackblitz,313
5612,15:32,Solid JS 1.0 released,Solid JS,313
5613,16:41,Stately for state machine visualization,Stately,313
5614,18:20,Web3 JavaScript API overview,Web3,313
5615,00:01,Intro to podcast episode 374,Intro,314
5616,02:07,Guests introduce themselves,Introductions,314
5617,03:26,"Discussion on being fans of each other's podcasts",Podcast fans,314
5618,04:16,Wes and Scott aim to get people excited about web development,Podcast goal,314
5619,05:24,"Scott's background is more CSS/HTML than JavaScript","Scott's background",314
5620,06:45,Even HTML has a lot of depth to discuss,HTML depth,314
5621,08:23,Scott building Level Up Tutorials site in SvelteKit,SvelteKit,314
5622,10:32,"Stack: SvelteKit frontend, Fastify backend, GraphQL",Stack,314
5623,12:02,Impressed with SvelteKit developer experience so far,SvelteKit DX,314
5624,14:08,Wes likes using Next.js recently,Next.js,314
5625,15:03,Next.js becoming a stable platform,Next.js stable,314
5626,15:42,"Stack: Next.js, React, GraphQL, Keystone CMS",Wes stack,314
5627,16:40,GraphQL avoids repetitive code of REST APIs,GraphQL vs REST,314
5628,17:32,"REST won't completely go away, URLs won't die",REST remains,314
5629,18:21,KeystoneJS provides nice CMS on top of Prisma,Keystone JS,314
5630,19:48,SvelteKit very fast due to Vite build tool,SvelteKit fast,314
5631,20:33,"Astro seems interesting for SSR, components",Astro,314
5632,21:24,Lots of great options currently in JS ecosystem,JS ecosystem,314
5633,22:03,Next.js will benefit from React improvements,Next + React,314
5634,23:26,WordPress lacks dev experience of JS stacks,WordPress DX,314
5635,24:05,Sentry sponsor spot,Sentry ad,314
5636,25:09,Prismic sponsor spot,Prismic ad,314
5637,26:36,Generated GraphQL helps avoid React query boilerplate,Generated GraphQL,314
5638,27:43,Keystone provides good permissions model,Keystone permissions,314
5639,28:37,Permissions important but difficult to implement well,Permissions difficult,314
5640,29:53,WordPress is still a good system for many sites,WordPress still good,314
5641,31:27,Working on WordPress can be limiting after using modern JS stacks,WP limiting,314
5642,32:40,Speculation on why WordPress acquired Day One journaling app,Day One acquisition,314
5643,34:29,Goal of podcast is to help understand the world of web dev,Podcast goal,314
5644,35:25,Important to learn new tech occasionally for career growth,Learn new tech,314
5645,36:16,"Don't adopt brand new tech too early","Don't adopt too early",314
5646,37:07,Vue.js shoutout,Vue shoutout,314
5647,38:22,Chris exploring Astro for CodePen use case,Astro for CodePen,314
5648,39:50,Balancing not needing to learn everything but keeping up to some degree,Balance learning,314
5649,41:07,Hard to stay away from web dev as a hobby even on breaks,"Can't escape web dev",314
5650,42:31,Learning fatigue if feel like just another thing to learn,Learning fatigue,314
5651,43:39,Fundamentals same across frameworks,Framework fundamentals,314
5652,44:59,Fun of new tech is syntax and improved DX,New tech fun,314
5653,46:53,Full migration to Next.js eventually for CodePen,CodePen Next eventual,314
5654,47:20,CodePen too big for static site generation,CodePen too big for SSG,314
5655,48:04,Possibility of just editor section in Next.js,Editor in Next,314
5656,49:35,Next.js provides server rendering at sub route initially,Next partial migration,314
5657,50:51,Cloudinary sponsor spot,Cloudinary ad,314
5658,51:15,Transition to picks section,Picks intro,314
5659,53:21,"Dave's anime pick: Haikyu volleyball anime",Haikyu pick,314
5660,55:32,"Dave's other pick: Nintendo Garage game builder",Nintendo Garage pick,314
5661,56:50,Wes lawn care YouTube picks,Lawn care picks,314
5662,04:46,Browser requests /favicon.ico by default,default request,315
5663,05:06,Changing PNG to ICO works for favicon,file hack,315
5664,06:48,Upload square image to favicon generator site,generator site,315
5665,08:24,Provide multiple sizes and reduce detail for small icons,multiple sizes,315
5666,09:44,.ico is the default favicon file format,.ico format,315
5667,10:11,Changing PNG to ICO works for favicon,file hack,315
5668,11:33,Safari now supports SVG favicons,SVG support,315
5669,12:18,130x130px is too small for retina displays,size too small,315
5670,13:38,Can animate favicon with GIF or canvas,animated favicon,315
5671,14:37,Gmail likely generates favicon numbers on the fly,dynamic favicon,315
5672,15:49,Favicon cache issues are improved now,cache improved,315
5673,16:31,Can force favicon update by deleting and resetting link tag,force favicon update,315
5674,16:46,iOS now supports theme color meta tag,iOS theme color,315
5675,17:52,Use CSS in SVG favicon for dark mode,dark mode hack,315
5676,18:47,No way to target favicon by OS dark mode,no dark target,315
5677,19:29,Can generate emoji favicons on fav.farm,emoji favicons,315
5678,20:58,Animated favicon with canvas on uses.tech,animated canvas,315
5679,22:23,"Don't use default host favicon, looks amateur",no default favicon,315
5680,00:18,Wes and Scott introduce themselves and the show format,Intro,316
5681,00:27,They will be answering questions submitted by listeners,Q&A intro,316
5682,00:50,Instructions on how to submit a question,Submit questions,316
5683,01:08,Sponsor advertisements,Sponsors,316
5684,01:20,Scott recently became an uncle again,Scott uncle,316
5685,02:33,Discussion of being a fun uncle vs inappropriate gift giver uncle,Uncle styles,316
5686,03:20,Question about using latest Svelte vs stable React,Svelte question,316
5687,04:29,Scott discusses pros/cons of bleeding edge vs stable technology,Bleeding edge,316
5688,05:39,Scott elaborates on ease of building own components in Svelte,Svelte components,316
5689,06:49,More discussion on risks of vendor lock-in with Next.js hosting,Next.js lock-in,316
5690,08:53,Question on severing ties between projects to start fresh,Sever project ties,316
5691,09:47,Scott explains deleting .git folder removes commit history,Remove .git folder,316
5692,11:05,Question on using Create React App for production apps,CRA question,316
5693,12:31,Wes and Scott discuss moving to Next.js or Gatsby for larger apps,Next.js vs CRA,316
5694,13:25,Discussion on potential vendor lock-in issues with Next.js,Next.js lock-in,316
5695,15:03,Assessing risks of relying on services like Vercel,Vendor risks,316
5696,16:22,Transitioning from old school dev to more services reliance,Old vs new dev,316
5697,18:30,.tech sponsor advertisement,Sponsor: .tech,316
5698,19:41,Question on working in government vs seeking latest technologies,"Gov't work question",316
5699,21:25,Scott advises focusing on stability over bleeding edge tech,Stability over tech,316
5700,23:20,Wes suggests implementing changes internally in government,"Internal gov't changes",316
5701,25:28,Excitement over new video editing software Descript,Descript software,316
5702,26:47,Google Docs as example of complex permissions system,Docs permissions example,316
5703,27:58,Question on building permission-based APIs,Permissions question,316
5704,28:51,Wes discusses access control patterns like roles and permissions,Access control,316
5705,30:07,Scott talks about role-based permissions system they use,Role-based permissions,316
5706,33:16,Sponsor: LogRocket for debugging errors,Sponsor: LogRocket,316
5707,34:25,Question on whether authentication or authorization is harder,Auth vs authz,316
5708,34:35,Question asking for advice on implementing permissions APIs,Permissions APIs,316
5709,36:44,Wes details permissions at model and field level in Keystone,Keystone permissions,316
5710,37:54,Scott reiterates their role-based permissions approach,Role-based permissions,316
5711,40:25,Question about using Rescript as alternative to TypeScript,Rescript question,316
5712,41:21,Scott finds Rescript syntax too different from JavaScript,Rescript syntax,316
5713,42:46,Wes looks for frameworks gaining adoption before investing time,Popular tech,316
5714,43:06,Scott notes he focuses on popular but leading edge technology,Leading edge tech,316
5715,44:44,Speculating about a future switch to Rescript,Future Rescript,316
5716,45:08,Question on adding more sponsors to podcast episodes,More sponsors,316
5717,45:41,Scott says additional ads preferred over patron paywall,Ads over paywall,316
5718,46:31,"Scott complains about Apple's high Patreon cut","Apple's cut",316
5719,47:33,Joking about taking any big sponsorship offer,Big sponsors,316
5720,48:49,Scott admits he has no interest in learning Angular,No Angular,316
5721,49:39,"Scott appreciates Angular's batteries-included approach",Angular batteries,316
5722,50:23,Wes gets flak for not covering all frameworks equally,Framework flak,316
5723,50:37,Joking about ridiculous fake framework names,Fake frameworks,316
5724,51:13,Sponsor: Mux video hosting,Sponsor: Mux,316
5725,53:11,Wes advises parsing spreadsheet to JSON for form data,Parse data for forms,316
5726,54:17,Wes suggests puppeteer for automating complex interactions,Puppeteer automation,316
5727,55:39,Scott sick pick of SvelteKit,SvelteKit pick,316
5728,56:31,Wes sick pick of Wyze sprinkler controller,Wyze sprinkler pick,316
5729,57:48,Scott praises Wyze controller for debugging ease,Wyze debugging,316
5730,58:32,Scott plug for Svelte course,Svelte course plug,316
5731,59:12,Wes plug for his courses on sale,Wes courses plug,316
5732,03:14,"Wes asks Scott to explain what Stylelint is and why it's needed",Stylelint intro,317
5733,04:41,Scott explains Stylelint is a linter for CSS like ESLint is for JavaScript,CSS linter,317
5734,05:53,To use Stylelint you need to install it and create a .stylelintrc config file,Setup,317
5735,06:28,"Scott says you'll likely need to customize the default Stylelint rules for your preferences",Customize rules,317
5736,07:00,Scott highlights the Stylelint plugin ecosystem as a major strength,Plugins,317
5737,08:58,Scott shares some of the custom Stylelint rules his team uses,Custom rules,317
5738,11:54,Wes suggests writing a custom rule to enforce gray vs grey spelling consistency,Gray vs grey,317
5739,14:31,Wes and Scott discuss the benefits of using turns over degrees for rotations,Turns unit,317
5740,15:56,Scott explains how Stylelint could augment code reviews and help managers enforce standards,Code reviews,317
5741,02:33,Scott introduces inset CSS property,inset CSS,318
5742,03:16,Scott explains inset shorthand for position values,inset position,318
5743,04:18,Discussing React 18 new features,React 18,318
5744,05:17,Automatic batching to reduce unnecessary rerenders,batching,318
5745,11:07,Suspense for data fetching and showing loading states,suspense,318
5746,14:21,Suspense list for orchestrating loading order,suspense list,318
5747,16:43,Strict effects mode for fast refreshing,strict mode,318
5748,19:21,useTransition to prevent unmounting during fetch,useTransition,318
5749,23:11,SSR improvements coming in React 18,SSR,318
5750,28:44,Server components to render HTML on server,server components,318
5751,35:10,Great explainers on React docs for new features,docs explainers,318
5752,03:58,Parcel and Vite use modern techniques like ESM and HMR for fast reloads.,Fast reloads,319
5753,05:16,Vite and Parcel rebuild files incredibly fast compared to old tools.,Blazing speed,319
5754,07:46,Vite uses Rollup for production builds while Parcel uses its own SWC compiler.,Different compilers,319
5755,11:36,Vite and Parcel automatically find and bundle all dependencies in your app.,Automatic bundling,319
5756,15:03,"React, Vue, Svelte etc work out of the box with zero config.",Framework support,319
5757,15:52,Vite has handy glob imports while Parcel does not.,Glob imports,319
5758,17:16,Neither Vite nor Parcel do type checking - they rely on TSC.,No type checking,319
5759,19:02,Avoiding Babel is one reason these tools are so fast.,No Babel needed,319
5760,21:20,"Vite has slightly better DX than Parcel 2, which is still in dev.",Vite edge for now,319
5761,00:05,"Scott bought and sold a house, moving in August","Scott's house move",320
5762,00:25,Reviewing user submitted websites and portfolios,Website reviews,320
5763,01:07,Scott is getting his own office in his new house,"Scott's new office",320
5764,02:30,"Wes suggests names for Scott's new office",Office name ideas,320
5765,03:17,Scott and family taking a break this summer during the move,Summer break,320
5766,03:58,Reviewing website for Erica Cud,Erica Cud website,320
5767,06:05,"Suggestions for improving color contrast on Erica's site",Color contrast tips,320
5768,07:50,Tip about setting card height based on content,Card height tip,320
5769,08:47,"Overall positive feedback on simplicity of Erica's site",Erica site feedback,320
5770,09:41,Tip to make social links more prominent,Social links tip,320
5771,10:41,"Review of Damon Bolstra's site - fun animations but some accessibility issues",Damon Bolstra site,320
5772,12:15,Tip to move some over the top animations to separate pages,Animation tip,320
5773,13:22,"Feedback on clashy design elements on Damon's site",Damon design feedback,320
5774,14:18,Emphasizing importance of basic accessibility,Accessibility importance,320
5775,16:26,Tip to remove some distracting background elements,Background elements tip,320
5776,18:18,Story about kid eating too many granola bars,Granola bar story,320
5777,18:58,"Scott's sprinkler was damaged during house sale",Sprinkler damage,320
5778,21:54,"Review of Walter Jenkins' site",Walter Jenkins site,320
5779,23:06,Feedback on scroll effects and typography,Walter Jenkins feedback,320
5780,24:31,Tip about header structure and spacing,Header tip,320
5781,25:40,Suggestion for better text contrast,Text contrast suggestion,320
5782,26:40,Scott discovers interactive map is live transit data,Interactive map,320
5783,27:17,Tip to call out interactivity of map more,Map interactivity tip,320
5784,28:48,Font weight tip when using Google Fonts,Google Fonts tip,320
5785,30:14,"Praise for Suhit's clean, polished site design",Suhit site praise,320
5786,31:34,Benefits of small whimsical touches on sites,Whimsical touches,320
5787,33:48,Praise for restrained use of special effects,Restrained effects praise,320
5788,35:01,Discussion on resume format - HTML vs PDF,Resume format discussion,320
5789,36:25,"Scott's simple GitHub readme approach",GitHub readme,320
5790,37:24,"Review of Jacob Pawlak's site",Jacob Pawlak site,320
5791,39:02,Feedback on header structure and font usage,Jacob header feedback,320
5792,40:09,Emphasizing proper HTML structure,Proper HTML structure,320
5793,41:15,Reiterating paragraph vs heading differences,Paragraph vs heading,320
5794,42:55,"Praise for portfolio integration on Jacob's site",Jacob portfolio praise,320
5795,43:52,Tips for resume design and formatting,Resume tips,320
5796,45:22,Funny banter about image formats,Image format banter,320
5797,47:12,"Introducing Martin Van Hoof's site",Martin site intro,320
5798,47:40,"Praise for fast page transitions on Martin's site",Fast transitions praise,320
5799,49:26,Discussion about non-standard WebKit textstroke CSS,textstroke discussion,320
5800,50:15,"Feedback on logo hover animation on Martin's site",Logo animation feedback,320
5801,50:27,"Issue with contact form on Martin's site",Contact form issue,320
5802,51:51,HTML heading structure should match content hierarchy,Heading structure tip,320
5803,53:33,Goal is to provide helpful portfolio feedback,Portfolio feedback goal,320
5804,54:42,"Wes' sick pick - lever wire connectors",Lever connectors,320
5805,58:15,"Scott's sick pick - What Had Happened Was podcast",What Had Happened Was podcast,320
5806,01:00:08,"Scott's shameless plug for Level Up Tutorials Svelte course",Svelte course plug,320
5807,01:01:01,"Wes' shameless plug for his courses","Wes' course plug",320
5808,00:31,JavaScript buzzwords,buzzwords,321
5809,01:03,Sentry and Freshbooks sponsorships,sponsors,321
5810,02:52,JavaScript timing buzzwords,buzzwords,321
5811,05:27,Threads and CPU processing,threads,321
5812,06:07,Browser threads,browser threads,321
5813,08:05,Blocking in JavaScript,blocking,321
5814,11:39,Concurrent vs parallel execution,concurrent parallel,321
5815,13:48,Callbacks in JavaScript,callbacks,321
5816,18:10,<script> async and defer,async defer,321
5817,22:19,Lazy loading components,lazy loading,321
5818,02:50,Talk basics of elements tab,Elements,322
5819,03:08,Inspect element to see HTML representation of DOM,Inspect DOM,322
5820,04:06,Can manipulate DOM in elements tab,Edit DOM,322
5821,04:39,Right click to edit HTML or delete elements,Right click,322
5822,04:52,Edit as HTML to modify HTML directly,Edit HTML,322
5823,05:27,Drag and drop to rearrange DOM structure,Drag and drop,322
5824,05:36,Highlight and delete to remove elements,Delete elements,322
5825,08:55,Break on subtree modifications to debug JS DOM changes,Break on changes,322
5826,09:33,Select element in console with $0,$0 in console,322
5827,11:38,Reveal selected element in inspector from console,Reveal in inspector,322
5828,12:50,Delete sections of DOM to isolate issues,Delete sections,322
5829,13:38,Layers panel to see DOM rendering issues,Layers panel,322
5830,14:32,"Layers shows paints, scroll rects, z-index",Layers features,322
5831,15:24,Style tab to view computed and cascade,Computed styles,322
5832,16:20,Toggle element states like hover with :hover,Toggle states,322
5833,17:53,Add classes with .cls,Add classes,322
5834,19:41,Inline styles with element.style,Inline styles,322
5835,20:36,Computed tab shows final calculated styles,Computed tab,322
5836,21:22,Layout tab shows box model and flexbox,Layout tab,322
5837,23:00,Use UI buttons for flexbox properties,Flexbox buttons,322
5838,23:52,Firefox and Chrome dev tools now at parity,DevTools parity,322
5839,24:32,Customize dev tools CSS in experiments,Custom CSS,322
5840,25:24,Move tabs to panel,Move tabs,322
5841,26:35,Use escape to open console panel,Escape for console,322
5842,27:09,Drag tabs to panel,Drag tabs,322
5843,28:49,Move network panel,Network panel,322
5844,30:58,Font editor shows web font usage,Font editor,322
5845,31:22,Find applied fonts in computed tab,Find fonts,322
5846,32:11,CSS overview analyzes styles,CSS overview,322
5847,33:29,Turn on CSS overview in experiments,Turn on CSS overview,322
5848,34:18,Changes tab tracks DOM changes,Changes tab,322
5849,35:45,Animations tab lists and replays animations,Animations tab,322
5850,36:17,Slow down animations to inspect,Slow animations,322
5851,38:28,Many settings in cogwheel,Cogwheel settings,322
5852,39:00,Experiments tab enables new features,Experiments tab,322
5853,39:35,New font editor experiment,Font editor experiment,322
5854,40:43,Enable localized dev tools,Localized dev tools,322
5855,41:47,Always check experiments tab,Check experiments,322
5856,43:06,Compatibility tab checks browser compatibility,Compatibility tab,322
5857,44:56,Spend time learning dev tools features,Learn dev tools,322
5858,00:33,7 interesting JavaScript proposals,proposals,323
5859,02:45,Import JSON modules natively,modules,323
5860,05:49,Async do blocks,async,323
5861,10:03,Array findLast methods,arrays,323
5862,15:12,Immutable array methods,immutable,323
5863,17:58,New Temporal date API,dates,323
5864,18:48,As pattern for destructuring,destructuring,323
5865,21:45,Pattern matching,matching,323
5866,00:32,Announcer encourages listeners to submit potluck questions,Questions,324
5867,00:42,"Announcer introduces sponsors: Sanity, LogRocket, Linode",Sponsors,324
5868,01:11,"Scott releases SvelteKit course, talks about enjoyability of building tools for courses",SvelteKit course,324
5869,02:26,"Wes installing sprinklers at cottage, dealing with fluid dynamics",Sprinklers,324
5870,03:52,"Scott selling house, stressful process",Selling house,324
5871,04:11,Question from Stella about exporting components as web components,Web components,324
5872,05:26,Scott found React package for exporting to web components,React web components,324
5873,06:29,Wes and Scott discuss popularity and capabilities of web components,Web components discussion,324
5874,08:13,Lit HTML could be good option for web components,Lit HTML,324
5875,09:11,Wes excited about Lit HTML examples on website,Lit HTML examples,324
5876,11:00,Scott also likes angled highlights on Lit website,Lit highlights,324
5877,11:24,Wes will build something in Lit HTML,Build in Lit,324
5878,11:40,Next question from Brendo about minimum specs for new developers,Minimum specs,324
5879,13:04,"Scott and Wes recommend at least 8GB RAM, i5 processor, MacBook Air",RAM and processor,324
5880,15:50,New M1 Macs are powerful and affordable,M1 Macs,324
5881,18:05,Splurge on computer if you can expense it as business,Business expense,324
5882,19:20,Scott emphasizes not overspending if tight on budget,Budget tips,324
5883,21:12,Wes introduces sponsor Sanity,Sanity sponsor,324
5884,22:31,"Scott thanks Sanity, moves to next question",Next question,324
5885,22:38,Question from Michael about lack of Python discussion,Python question,324
5886,23:07,"Scott built apps in Python and other languages, had issues with Django","Scott's Python experience",324
5887,24:01,Scott says Python great language but he sticks to JavaScript,Stick to JS,324
5888,25:03,"Wes hasn't used Python much, had beginner difficulties",Wes on Python,324
5889,25:41,Scott reiterates sticking to one language for productivity,Stick to one language,324
5890,26:48,Next question from Charles about using Docker for development,Docker question,324
5891,27:31,"Scott and Wes don't use Docker much themselves",Thoughts on Docker,324
5892,28:39,Docker useful for large projects with many dependencies,Docker benefits,324
5893,29:56,Scott has had frustrating experiences trying to use Docker,Docker frustrations,324
5894,31:05,Scott transitions to sponsor read for LogRocket,LogRocket sponsor,324
5895,32:35,Next question from Austin about being overwhelmed at job,Overwhelmed at job,324
5896,33:09,Austin working with many languages and frameworks at job,Many languages at job,324
5897,33:53,Scott says give self slack due to pandemic fatigue,Pandemic fatigue,324
5898,34:32,Scott advises speaking to managers if workload too heavy,Talk to managers,324
5899,35:46,"Scott says don't be too hard on yourself","Don't be hard on self",324
5900,36:52,"Wes notes many jobs are demanding, pandemic fatigue real",Jobs demanding,324
5901,37:27,Next question from Tim about browser rendering engines,Browser engines,324
5902,38:10,"Main browser engines now are Blink, WebKit, and Firefox",Browser engines list,324
5903,39:17,"Scott agrees, moves to next question on server-rendered apps",Server-rendered apps,324
5904,40:05,Scott says many modern frameworks can be server-rendered,Server rendering options,324
5905,41:49,Wes doubts Netflix is fully server-rendered React now,Netflix rendering,324
5906,42:42,Scott finds post saying Netflix removed React from client bundle,Netflix React removal,324
5907,43:01,Wes shamelessly plugs his LearnNode course on server rendering,LearnNode plug,324
5908,43:46,Next question asking about code prediction software,Code prediction question,324
5909,44:41,Scott has used Kite but mainly relies on VS Code IntelliSense,Code prediction tools,324
5910,47:06,Wes also mainly uses VS Code IntelliSense,Wes on code prediction,324
5911,47:21,Next question from Sahas about PropTypes in TypeScript,PropTypes question,324
5912,47:42,Scott and Wes say PropTypes redundant with TypeScript checking,PropTypes unnecessary,324
5913,48:13,Next question from Finnish George about storing audio files,Storing audio files,324
5914,49:10,Wes advises using a CDN and setting caching headers,CDN advice,324
5915,50:17,Scott suggests S3 with CloudFront CDN for cheap storage,S3 and CloudFront,324
5916,51:03,Wes has used Backblaze for file hosting successfully,Backblaze,324
5917,52:27,Wes transitions to sponsor Linode as option for object storage,Linode sponsor,324
5918,54:06,Scott jokes about creating illegal content platform,Illegal content joke,324
5919,54:35,"Scott's podcast pick: Death in Crypto Land",Podcast pick,324
5920,56:25,"Wes's software pick: Affinity Designer for graphics",Software pick,324
5921,59:41,Scott wants Affinity to make screen recording app,Idea for Affinity,324
5922,01:00:18,"Scott's shameless plug: SvelteKit course",SvelteKit plug,324
5923,01:00:44,"Wes's shameless plug: JavaScript guide on his site",JavaScript guide plug,324
5924,00:27,CSRF explained,CSRF,325
5925,05:46,What CSRF is,CSRF overview,325
5926,06:30,How cookies enable CSRF,Cookies and CSRF,325
5927,07:49,Solutions for preventing CSRF,CSRF solutions,325
5928,08:10,Using SameSite cookies,SameSite cookies,325
5929,11:34,CSRF tokens,CSRF tokens,325
5930,14:38,Checking referrer headers,Referrer headers,325
5931,16:20,Other CSRF protections,Other protections,325
5932,02:33,How container queries help style based on available space,Container queries,326
5933,03:21,Different approaches for container queries,Approaches,326
5934,04:28,Container queries proven to work even in early prototype,Prototype works,326
5935,05:08,Joined CSS Working Group to work on CSS Layers proposal,CSS Layers,326
5936,06:31,"Funded by Google to focus on container queries, scope and cascade layers",Funded by Google,326
5937,08:23,Cascade layers allows defining specificity order instead of fighting it,Cascade layers,326
5938,09:11,Explicitly naming the layers we already create in CSS,Naming layers,326
5939,10:52,Container must be separate from elements querying it to avoid loops,Avoid loops,326
5940,12:25,3rd party CSS conflicts addressed by explicitly setting layers,Address 3rd party conflicts,326
5941,13:54,"Built on prior container query work, didn't invent solutions alone",Collaborative solutions,326
5942,15:27,Created Susy grid framework to learn from complaints and improve,Learned from Susy issues,326
5943,18:40,Container queries measure element space unlike viewport media queries,Measure element space,326
5944,20:19,Container queries allow responsive layout based on element location,Responsive containers,326
5945,22:38,Containment isolates page section for performance and container queries,Containment isolation,326
5946,24:19,Still working on container query and containment syntax,Refining syntax,326
5947,26:12,Card example of container query usage,Card component example,326
5948,31:33,Igalia funded Grid implementation for Bloomberg,Igalia and Grid,326
5949,32:16,"Igalia contributes to WebKit, Chromium and Mozilla",Igalia contributions,326
5950,39:00,Scope addresses naming conflicts between components,Scope naming conflicts,326
5951,40:20,Scope works like Vue and CSS Modules scoping,Scope like Vue and Modules,326
5952,44:36,"Container queries for responsive layout, media queries for preferences","CQs for layout, MQs for preferences",326
5953,46:28,Logical properties useful for shorthands like margin inline,Logical properties shorthands,326
5954,49:47,Get involved in CSS Working Group issues on GitHub,Get involved on GitHub,326
5955,03:31,SvelteKit overview,Overview,327
5956,04:09,Works everywhere,Platform agnostic,327
5957,05:26,Multiple rendering options,"SSR, SSG, CSR",327
5958,06:11,Adapters for different platforms,Adapters,327
5959,08:23,Full control over hydration,Hydration,327
5960,09:41,Out of the box features,Features,327
5961,10:04,File based routing,Routing,327
5962,10:39,API routes,API routes,327
5963,11:54,Isomorphic fetch,Fetch,327
5964,12:27,Layouts,Layouts,327
5965,13:49,Focuses on HTML/JS platform,Platform,327
5966,14:17,Automatic code splitting,Code splitting,327
5967,14:26,PostCSS support,PostCSS,327
5968,14:48,TypeScript support,TypeScript,327
5969,17:11,Glob imports,Glob imports,327
5970,18:33,Glob for code splitting,Code splitting,327
5971,19:46,Markdown blog example,Example,327
5972,20:39,Plugin for adding features,Plugins,327
5973,22:33,Summary and recommendations,Conclusions,327
5974,02:33,Immutability explained,immutability,328
5975,03:10,GraphQL mutations explained,graphql,328
5976,07:20,How Wes falls asleep,sleep,328
5977,09:52,How Scott falls asleep,sleep,328
5978,13:05,Managing copy in CMS,cms,328
5979,26:00,Problem solving strategies,problem solving,328
5980,33:04,TypeScript interfaces vs types,typescript,328
5981,37:32,React classes vs hooks in TypeScript,react typescript,328
5982,38:20,Opinions on scaffolding generators,scaffolding,328
5983,44:33,First web dev job at agency,first job,328
5984,49:58,Caching GraphQL APIs,caching,328
5985,52:34,Using Svelte for new projects,svelte,328
5986,55:11,Spice organization containers,organization,328
5987,56:25,Stainless steel blender bottle,blender bottle,328
5988,02:45,Wes built vaccine availability checker bot,Vaccine bot,329
5989,04:41,Wes justified taking vaccine appointment,Justified use,329
5990,06:05,Wes reverse engineered pharmacy vaccine APIs,Reverse engineered,329
5991,09:35,Wes fetched vaccine data and handled cookies,Fetched data,329
5992,11:51,Wes found pharmacy IDs to check,Found IDs,329
5993,13:43,Wes handled multi-step token authentication,Authentication,329
5994,15:42,Wes cached vaccine availability hits,Cached hits,329
5995,16:16,Wes stored vaccine hits in memory only,In-memory storage,329
5996,17:24,Wes used Telegram bot API for notifications,Telegram API,329
5997,18:26,Wes booked vaccine via bot,Booked vaccine,329
5998,00:17,"Introduction of today's topics: Using React with TypeScript",Intro,330
5999,00:52,"Sponsored by FreshBooks, Sentry, and Linode",Sponsors,330
6000,02:55,React and TypeScript integration is polished now,React TS,330
6001,04:56,Typing basic function components in TypeScript,Components,330
6002,18:35,Typing React component state in TypeScript,State,330
6003,22:25,Typing side effects with React useEffect hook,UseEffect,330
6004,00:26,Introducing hosts Wes Bos and Scott Tolinski,Hosts,331
6005,00:50,Scott introduces himself,Intro,331
6006,01:15,Wes introduces sponsor Deque,Sponsor,331
6007,02:18,Scott introduces sponsor LogRocket,Sponsor,331
6008,03:34,Developers can make money by creating valuable products,Making Money,331
6009,04:13,Developers have unique skills to generate income,Skills,331
6010,05:38,Charging for value is not grifting,Value,331
6011,06:11,Ways developers can make money with skills,Developer Money,331
6012,07:10,Selling premium plugins and subscriptions,Plugins,331
6013,08:10,Selling online courses and training,Courses,331
6014,09:43,Popular creators sell courses on their open source projects,Open Source Courses,331
6015,10:36,Selling email support for popular projects,Support,331
6016,12:24,Donation models like Patreon and GitHub Sponsors,Donations,331
6017,13:24,Supporting projects you rely on benefits everyone,Support Projects,331
6018,14:59,Selling merch,Merch,331
6019,16:23,Monetizing content with ads,Ads,331
6020,17:16,Sponsored brand deals,Sponsorships,331
6021,18:48,Scott and Wes joke about Roomba sponsorship,Roomba Joke,331
6022,19:56,The importance of not selling out,No Selling Out,331
6023,21:50,Disclosing sponsorships legally and ethically,Disclose Sponsors,331
6024,22:40,Sponsored content done right,Good Sponsors,331
6025,23:17,Doing sponsored videos for brands,Sponsored Videos,331
6026,24:28,Creative collaborations and deals,Collabs,331
6027,25:17,Many options besides just a SaaS business,Options,331
6028,02:33,Hedge trimmer guides,Guides,332
6029,03:10,Hedge trimmer jigs,Jigs,332
6030,05:29,Event handler naming,Naming,332
6031,06:51,CSS variable naming,Variables,332
6032,12:03,JavaScript exports,Exports,332
6033,13:28,Default exports,Exports,332
6034,17:55,Foobar examples,Examples,332
6035,25:00,Variable naming,Naming,332
6036,27:16,Code editor preferences,Editors,332
6037,31:12,Generic typing,Typing,332
6038,34:44,Indentation syntaxes,Syntaxes,332
6039,04:45,Discussing the drag and drop API in JavaScript,Drag and drop API,333
6040,06:47,Drag and drop allows communication between web apps,Cross app drag,333
6041,09:17,Drag events allow you to store data about the drag,Drag data,333
6042,10:35,Can store metadata like what app data is coming from,Drag metadata,333
6043,13:19,Can customize the drag image shown,Drag image,333
6044,15:29,Have to handle drag UI yourself,Manual drag UI,333
6045,18:02,Security concerns around reading drag data,Drag security,333
6046,20:27,Browser APIs have limitations to prevent abuse,API limitations,333
6047,23:34,Must handle CSS classes for drag states yourself,Manual CSS drag,333
6048,24:55,Implementing accessibility is easier than drag and drop,Accessibility easier,333
6049,26:25,"Google's Transmat library wraps the data transfer API",Transmat library,333
6050,00:17,"Wes and Scott discuss HTML elements, semantic HTML, accessibility, fun tags, and dream tags",HTML tags,334
6051,02:29,"Scott explains semantic HTML - using tags that describe content for accessibility, SEO, and default styling",Semantic HTML,334
6052,03:55,Wes asks why use semantic HTML instead of divs everywhere?,Semantic vs divs,334
6053,06:19,Wes talks about how semantic HTML provides default styling,Default styling,334
6054,09:51,Scott explains difference between UL and OL tags,UL vs OL,334
6055,10:34,Wes gives example of when to use UL vs OL,UL vs OL example,334
6056,14:01,Scott explains link tags vs button tags and accessibility,Link vs button tags,334
6057,16:03,Wes and Scott discuss heading tags for accessibility and SEO,Heading tags,334
6058,18:41,Prismic sponsors ad about component based CMS,Prismic ad,334
6059,21:00,"Wes lists common structural HTML tags like header, nav, footer",Structural tags,334
6060,23:44,Scott explains the article tag,Article tag,334
6061,25:03,Scott and Wes discuss if structural tags do more than divs,Structural vs divs,334
6062,26:31,Scott talks about the address tag,Address tag,334
6063,27:21,Wes discusses the tel attribute,Tel attribute,334
6064,27:57,Scott talks about sub and sup tags,Sub and sup tags,334
6065,30:24,Scott introduces the Ruby tag,Ruby tag,334
6066,30:52,Scott quizzes Wes on the WBR tag,WBR tag,334
6067,32:23,Scott talks about i vs em and b vs strong tags,Formatting tags,334
6068,34:28,Wes discusses the mark tag,Mark tag,334
6069,34:42,Sentry sponsors ad about error handling,Sentry ad,334
6070,36:34,Scott jokes div and span are like Tostitos Scoops for CSS,Div and span tags,334
6071,38:02,Wes lists special HTML elements like details and summary,Special elements,334
6072,39:25,Scott explains fieldset and legend tags,Fieldset and legend,334
6073,40:41,Wes talks about disabling groups of fields with fieldset,Disabling fieldsets,334
6074,42:38,Wes and Scott bet on Safari implementing dialog element,Bet on Safari,334
6075,43:30,Wes wants native textarea autosize and animated accordion,Textarea and accordion,334
6076,44:56,Scott wants better table support in CSS grid,Better tables,334
6077,45:53,Scott suggests virtual list element,Virtual list element,334
6078,47:32,Wes discusses wants for native carousel element,Native carousel,334
6079,49:15,Scott jokes about native cookie banner and tabs elements,More elements,334
6080,50:40,Scott and Wes discuss auto generating heading levels,Auto heading levels,334
6081,51:53,Wes wants a native icon element,Icon element,334
6082,53:04,Scott suggests product and cart elements,Ecommerce elements,334
6083,54:19,Wes lists more suggested elements like date range and hero,More elements,334
6084,54:45,Wes thinks people just want web components,Web components,334
6085,55:06,Scott and Wes wrap up the HTML tag discussion,Wrap up,334
6086,56:16,Scott sponsors Cloudinary for image handling,Cloudinary ad,334
6087,57:36,Wes picks Netflix documentary This is a Robbery,Wes pick,334
6088,58:17,Scott picks baseball hat washer,Scott pick,334
6089,59:43,Scott plugs Level Up Tutorials courses,Level Up plug,334
6090,01:01:00,Wes plugs his courses on WesBos.com,WesBos plug,334
6091,02:11,Sanity as a CMS allows you to create content types and relationships to pull that data anywhere,Sanity CMS,335
6092,03:17,LogRocket records videos of errors happening in real time to help debug bugs,LogRocket,335
6093,04:50,"Most HTML elements can be styled, but complex ones like select have inaccessible shadow DOM",Styling elements,335
6094,06:12,"For unstylable elements, you can style defaults, overlay other elements, use a UI library or wait for better custom elements",Styling options,335
6095,13:11,"Many want better stylable, accessible UI elements added natively to HTML",Native UI elements,335
6096,17:47,"Open UI is documenting and standardizing native UI controls like select, checkboxes and sliders",Open UI project,335
6097,00:29,Introduction,intro,336
6098,02:06,Answering freelancing questions,freelance,336
6099,06:18,Discussing component size in React,components,336
6100,09:45,Explaining throttling vs debouncing,throttling,336
6101,16:51,Giving advice for job hunting after years at big company,job hunting,336
6102,22:03,Tips for beginning designers struggling with CSS,CSS tips,336
6103,26:27,Integrating React with legacy codebase/CMS,React integration,336
6104,35:53,Learning in public for career advancement,learning in public,336
6105,36:09,Rust vs Node.js for GraphQL backend,Rust vs Node,336
6106,40:38,Introducing React to legacy codebase,React migration,336
6107,03:14,Sentry & Prismic sponsor ads,sponsors,337
6108,03:34,What technical debt is and why it happens,technical debt intro,337
6109,04:47,Over time any code will accrue technical debt,inevitability,337
6110,05:12,Examples of startups moving fast while old systems accrue debt,startups vs old systems,337
6111,06:30,Having multiple developers leads to technical debt,multiple developers,337
6112,07:01,Any code will become overgrown like an unpruned garden,unpruned garden,337
6113,07:55,"Wes's example upgrading a Next.js app",Next.js upgrade,337
6114,08:37,Upgrading dependencies leads to technical debt,upgrading dependencies,337
6115,09:30,React Router example of updating APIs,React Router updates,337
6116,10:38,Inconsistencies like CSS units lead to debt,CSS inconsistencies,337
6117,11:13,CSS systems like Tailwind help avoid debt,CSS systems,337
6118,11:56,Using CSS variables avoids style drift,CSS variables,337
6119,12:35,Too many updates lead to Frankenstein codebase,too many updates,337
6120,14:17,"New developers want to update, old avoid updates",new vs old developers,337
6121,16:00,Big codebases need long-term standards,long-term standards,337
6122,17:20,Abstracting code can help avoid debt,abstracting code,337
6123,18:04,"Don't put off updates and refactors","don't put off updates",337
6124,18:48,Good tests help catch issues,good tests,337
6125,20:13,Websites with debt feel clunky and limited,clunky websites,337
6126,21:57,Workarounds show technical debt,workarounds,337
6127,22:09,Funny podcast name idea,podcast name idea,337
6128,23:14,"Scott's messy old HTML site example",old HTML site,337
6129,24:14,Some debt not worth fixing,debt not worth fixing,337
6130,24:59,Sometimes just work around debt issues,work around debt,337
6131,25:41,Massive rewrites often impractical,massive rewrites impractical,337
6132,26:43,Funny idea: call-in show for technical debt,call-in show idea,337
6133,00:09,Welcome to another Potluck episode,Intro,338
6134,00:55,"Scott's week thrown into chaos due to COVID exposure at kids' school",Personal,338
6135,01:25,Wes heading to cottage for spring break,Personal,338
6136,02:32,"For personal blog, markdown + static site generator is good option",Blogging tips,338
6137,05:41,"Fine to share course tips publicly, just don't re-record full course",Course piracy,338
6138,08:34,No need to support IE11 anymore,Browser support,338
6139,12:44,Safari often new lowest common denominator,Safari issues,338
6140,17:23,Nest.js seems tightly integrated with Angular community,Nest.js,338
6141,22:49,Still worth learning WordPress for freelancing,WordPress advice,338
6142,30:17,"Test mobile sites on real devices, not just Chrome emulator",Mobile testing,338
6143,37:08,Piracy frustrating but focus energy on your real supporters,Course piracy,338
6144,39:57,Styled Components generates random class names,Styled Components,338
6145,00:27,Introducing Astro - new meta framework,Astro,339
6146,05:41,"Astro combines React, Vue, Svelte",Astro combines,339
6147,09:09,"Astro has scoped CSS, Sass support",Astro CSS,339
6148,12:08,Introducing Vitkit - framework agnostic,Vitkit,339
6149,16:02,Introducing SvelteKit - batteries included,SvelteKit,339
6150,19:03,Introducing Remix - React focused,Remix,339
6151,00:16,Continuing fundamentals of TypeScript,TS Fundamentals,340
6152,00:36,"Sponsored by accessibility testing, client-side session replay and video APIs",Sponsors,340
6153,02:33,Difference between any and unknown types in TS,any vs unknown,340
6154,03:40,Using never type in React for mutually exclusive props,never type,340
6155,06:30,Using never for enforcing only a or b props,never props,340
6156,09:03,Definition files explain untyped code to TS compiler,Definition files,340
6157,10:21,Definition files not needed for pure TS,Pure TS,340
6158,12:05,Global types may need definitions too,Global types,340
6159,13:56,Type generation from DB schemas or GraphQL,Type generation,340
6160,16:10,Sponsor: LogRocket session replay debugger,Sponsor: LogRocket,340
6161,17:33,Generics allow varied return types from single function,Generics,340
6162,18:27,Promise is good example of nested generic,Promise generics,340
6163,22:51,Reading complex generated types teaches generics,Learning from generated,340
6164,24:59,Generic types can be inferred from arguments,Inferred generics,340
6165,25:51,Sponsor: Deque for accessibility testing,Sponsor: Deque,340
6166,29:56,Type assertions vs type casting in TS,Assertions vs casting,340
6167,32:06,Assertions allow overriding TS inferences,Overriding inferences,340
6168,32:58,Assertions are escape hatches like any,Assertion escape hatches,340
6169,00:33,Explaining Git rebase,Git rebase,341
6170,04:11,"Scott's experience trying rebase",Tried rebase,341
6171,05:07,Example workflow using rebase,Workflow,341
6172,07:50,How rebase works,How rebase works,341
6173,09:33,Interactive rebase to squash commits,Interactive rebase,341
6174,12:10,Rebase helps resolve merge conflicts,Resolve conflicts,341
6175,14:02,When to use rebase,When to rebase,341
6176,15:10,Rebase to tidy commits before PR,Tidy commits,341
6177,00:02,Wes selling and shipping t-shirts after designing them,Wes selling t-shirts,342
6178,00:38,"Today's sponsors: Prismic, Sentry, DQ Accessibility",Sponsors,342
6179,01:42,Scott feeling good writing performant code,Scott update,342
6180,01:57,Wes wanted to make t-shirts for a while,Wes t-shirt idea,342
6181,02:30,Wes got shirts printed at local print shop Whitley,Local print shop,342
6182,03:44,"Scott excited for Wes' t-shirt selling process automation",Automation excitement,342
6183,04:17,Wes explaining the motivation behind automating the process,Automation motivation,342
6184,05:32,Wes tried Shopify then Snipcart for cart,Shopify vs Snipcart,342
6185,06:43,Scott positive on Snipcart for easy ecommerce,Snipcart praise,342
6186,07:39,Wes explaining shipping quotes and customs challenges,Shipping quotes,342
6187,09:16,Wes using Gatsby and Snipcart on the frontend,Frontend tech,342
6188,10:08,Wes using ChitChats and Stallion Express for cheaper shipping,Cheap shipping,342
6189,12:19,Wes using Snipcart webhooks and Next.js backend,Next.js backend,342
6190,13:29,Wes built admin dashboard to manage orders in Next.js,Admin dashboard,342
6191,14:29,Wes leveraged TypeScript for large codebase,TypeScript benefits,342
6192,15:20,Wes explaining packing labels needed in addition to shipping,Packing labels,342
6193,16:05,Scott asking how Wes associated orders with shipments,Order association,342
6194,17:14,Sentry shoutout for error tracking,Sentry ad,342
6195,18:06,Wes using label printer and Cloudinary,Label printer,342
6196,19:09,Wes designing packing slips,Packing slips,342
6197,20:20,Wes manually fulfilled first 100 orders,Manual fulfillment,342
6198,21:11,Wes initially used webcam as QR code scanner,Webcam scanner,342
6199,22:01,Wes switched to Bluetooth barcode scanner,Barcode scanner,342
6200,23:34,Wes scanning shipments and processing with Next.js,Scanning workflow,342
6201,24:24,Prismic shoutout for headless CMS,Prismic ad,342
6202,26:41,Scott asking about QR code scanner compatibility,QR code questions,342
6203,27:28,Wes explaining barcode scanner features,Barcode features,342
6204,28:42,"Wes' kids enjoyed using the barcode scanner",Kids liked scanner,342
6205,29:22,Wes had to rent a trailer to transport shirts,Shirt transport,342
6206,30:45,Wes got inexpensive custom bags from China,Custom bags,342
6207,31:34,Wes wants more eco-friendly packaging,Eco-friendly goal,342
6208,32:14,Wes and Scott discuss composting,Composting chat,342
6209,33:25,Wes got bags printed with recycling logo,Printed recycling logo,342
6210,34:56,Wes explaining the high number of shirt variables,Many shirt variables,342
6211,35:38,Wes included stickers with first orders,Included stickers,342
6212,36:28,Wes wants to eventually outsource fulfillment,Outsource goal,342
6213,37:11,Scott agreeing custom merch is more meaningful ,Custom merch,342
6214,38:50,Wes avoids print-on-demand and low quality shirts,Avoids print-on-demand,342
6215,39:43,Wes avoids funny t-shirt designs,No funny shirts,342
6216,40:48,Wes wants high quality and custom product,High quality goal,342
6217,41:59,Wes avoids merch companies with supplier lock-in,Avoids merch companies,342
6218,43:04,DQ Accessibility shoutout,DQ ad,342
6219,44:24,Wes oversold some items initially,Oversold items,342
6220,45:29,Wes should have added queues for delayed data,Needed queues,342
6221,45:43,"Wes frustrated some didn't read preorder notice",Preorder issues,342
6222,47:10,Wes had to refund a few orders due to stock issues,Refunded orders,342
6223,48:15,Wes plans to do Syntax merch in the future,Future syntax merch,342
6224,49:05,Wes ensured eco-friendly and quality shirts,Eco-friendly shirts,342
6225,50:12,Scott impressed by substantial real-world project,Scott impressed,342
6226,50:36,Wes sick pick Burr coffee grinder,Coffee grinder pick,342
6227,51:59,Scott sick pick macOS AutoMounter app,AutoMounter pick,342
6228,54:41,Wes shameless plug for courses,Wes course plug,342
6229,55:47,Scott shameless plug for Node authentication course,Scott course plug,342
6230,02:33,Miriam Suzanne key contributor,Miriam,343
6231,03:57,Container queries status,Status,343
6232,04:49,Syntax and usage,Syntax,343
6233,08:21,Why container queries needed,Why needed,343
6234,09:59,Resize observer issues,Resize observer,343
6235,11:17,CSS contain property,Contain property,343
6236,15:56,Inline size and block size,Inline/block size,343
6237,17:08,Logical properties,Logical properties,343
6238,18:34,Best practices coming,Best practices,343
6239,19:58,Try it out today,Try it out,343
6240,22:37,Potential polyfill,Polyfill,343
6241,00:21,Dev tools tabs,Overview,344
6242,01:00,Network tab,Tab,344
6243,02:20,Performance tab,Tab,344
6244,02:41,Caching and performance,Caching,344
6245,03:47,Console tab,Tab,344
6246,04:13,Network tab tips,Tips,344
6247,05:10,Network caching,Caching,344
6248,05:53,GZip compression,GZip,344
6249,06:31,Busting cache,Caching,344
6250,07:49,Waterfall loading,Loading,344
6251,08:43,Network request sizes,Network,344
6252,09:46,Network throttling,Network,344
6253,10:20,Slow network debugging,Debugging,344
6254,11:14,Copying network requests,Network,344
6255,12:24,Inspecting requests,Network,344
6256,13:30,Debugging GraphQL,GraphQL,344
6257,14:23,Debugging WebSockets,WebSockets,344
6258,15:07,Understanding requests,Requests,344
6259,15:28,Debugging differences,Debugging,344
6260,16:40,Blocked requests,Network,344
6261,17:34,Bug fixing,Bugs,344
6262,18:41,Copywriting,Copywriting,344
6263,19:05,Browser extensions,Extensions,344
6264,20:22,Vonage sponsor,Sponsor,344
6265,21:55,FreshBooks sponsor,Sponsor,344
6266,22:27,Memory tab,Tab,344
6267,23:57,Memory leaks,Memory,344
6268,24:49,Performance tab,Tab,344
6269,25:16,Flame charts,Charts,344
6270,26:32,Debugging re-renders,Debugging,344
6271,27:25,Performance metrics,Performance,344
6272,28:22,Flame chart debugging,Debugging,344
6273,29:12,CPU profiling,Profiling,344
6274,30:48,Console tab,Tab,344
6275,31:06,Console usage,Console,344
6276,32:07,Console filtering,Console,344
6277,32:34,Ignoring warnings,Console,344
6278,33:19,Console filtering,Console,344
6279,33:31,Sidebar filtering,Console,344
6280,34:20,Live expressions,Expressions,344
6281,35:23,Map previews,Console,344
6282,35:44,$0 selector,Console,344
6283,36:50,Global variables,Variables,344
6284,37:21,API response debugging,Debugging,344
6285,37:33,Bling.js,Bling.js,344
6286,38:04,Query selectors,Console,344
6287,38:39,jQuery alternatives,jQuery,344
6288,39:47,FreshBooks sponsor,Sponsor,344
6289,40:34,Storage tab,Tab,344
6290,41:02,Storage types,Storage,344
6291,42:32,Debugging cookies,Debugging,344
6292,42:55,Client storage,Storage,344
6293,43:41,Unused storage,Storage,344
6294,44:07,Service workers,Service workers,344
6295,44:49,Firefox issues,Firefox,344
6296,45:21,Lighthouse tab,Tab,344
6297,45:43,Lighthouse usage,Lighthouse,344
6298,46:21,Lighthouse opportunities,Lighthouse,344
6299,46:51,Lighthouse nuances,Lighthouse,344
6300,47:35,Lighthouse scoring,Lighthouse,344
6301,48:07,Accessibility issues,Accessibility,344
6302,48:59,Automated accessibility,Accessibility,344
6303,50:27,DOM tab Firefox only,Firefox,344
6304,03:07,Prismic sponsors Syntax podcast,Sponsor,345
6305,05:16,"CSS nesting allows writing CSS easier to read, write, prevents refactoring errors",CSS nesting benefits,345
6306,07:50,"Best use of nesting is when scoping styles, not nesting everything",Nesting guidelines,345
6307,10:24,Two ways to nest in CSS - ampersand and @nest rule,Nesting syntax,345
6308,13:21,@nest rule alternative to ampersand for nesting,@nest rule,345
6309,14:59,Media queries can be nested inside existing selectors,Nested media queries,345
6310,16:48,CSS nesting is likely backwards compatible,Backwards compatibility,345
6311,18:25,Can transpile CSS nesting with PostCSS,PostCSS transpiling,345
6312,02:08,Question about managing API token refresh when making parallel requests,API tokens,346
6313,06:40,Best services for video hosting and optimization,Video hosting,346
6314,15:31,Struggling with logic and relying too much on tutorials when working on personal projects,Personal projects,346
6315,19:40,Feeling like an imposter at new job using undocumented internal framework,Imposter syndrome,346
6316,25:18,Thoughts on using monorepos,Monorepos,346
6317,04:01,Scott talks about Easy Snippet extension for creating VSCode snippets,Easy Snippet,347
6318,05:33,"Wes talks about new ""Add Missing Function Declaration"" in VSCode/TypeScript",Missing Func,347
6319,07:41,Scott discusses the Error Lens extension for highlighting errors,Error Lens,347
6320,09:19,Wes mentions an extension to auto-generate function arguments,Func Args,347
6321,11:12,Scott talks about import syntax and snippets package,Import Snippet,347
6322,12:00,Wes discusses the File Utils extension for file operations,File Utils,347
6323,14:07,Scott mentions the GitLens extension,GitLens,347
6324,15:37,Wes talks about syntax highlighting strings as HTML/GraphQL,String Highlight,347
6325,16:49,Scott discusses the Wrap Console Log extension,Wrap Console,347
6326,17:21,Wes mentions the Text Pastry extension for numbered lists,Text Pastry,347
6327,19:13,Scott talks about the Better Comments extension,Better Comments,347
6328,20:13,Wes gives a tip on using Emmet everywhere in VSCode,Emmet Tips,347
6329,02:10,Matt started Caddy web server as an undergrad to meet his needs,Caddy origin,348
6330,02:28,"The web was changing but web servers weren't",Web server stagnation,348
6331,02:50,Caddy brought something fresh to the stale web server landscape,Caddy refreshing,348
6332,03:17,Caddy disrupted the web server space,Caddy disruption,348
6333,04:12,Matt needed a simple way to quickly spin up websites for school and work,Caddy use case,348
6334,04:59,"Traditional HTTPS was bloated, slow, tedious and insecure",HTTP issues,348
6335,05:30,"Go doesn't have memory safety issues like C",Go safety,348
6336,06:18,Go makes writing safe web servers easy,Go web servers,348
6337,07:57,"Let's Encrypt made obtaining SSL certificates easy and free","Let's Encrypt ease",348
6338,08:39,ACME protocol enabled automation of certificates,ACME automation,348
6339,09:03,Caddy implemented ACME client side,Caddy + ACME,348
6340,11:46,"Renewals are key, not just obtaining certificates",SSL renewals key,348
6341,15:26,Web servers can decide routing based on headers and more,Smart routing,348
6342,17:22,Proxies allow scaling services on a single port,Proxy scaling,348
6343,18:26,Caddy directs traffic like a traffic cop,Traffic direction,348
6344,23:13,Web servers can serve assets faster than app backends,Fast assets,348
6345,24:03,Less backend work improves focus and security,Offload backend,348
6346,24:33,Caddy has authentication plugins,Caddy auth,348
6347,26:41,Web servers can rewrite URLs,URL rewrites,348
6348,29:53,Load balancer distributes requests across backends,Load balancing,348
6349,31:22,Round robin load balancing is simple to implement,Round robin LB,348
6350,38:48,Caddy has a programmable config API,Config API,348
6351,40:22,Matt was productive in Go within a couple weeks,Go productivity,348
6352,41:12,"Go code consistently faster and better than classmates'",Go speed,348
6353,44:39,Easy concurrency with goroutines and channels,Go concurrency,348
6354,45:02,Go is a good systems language,Go systems lang,348
6355,46:58,Every public website should use HTTPS,Universal HTTPS,348
6356,47:46,Not encrypting makes secure content a target,Encryption targets,348
6357,49:42,Not encrypting puts vulnerable visitors at risk,Encryption responsibility,348
6358,00:02,Intro to n+1 problem episode,Intro,349
6359,00:25,What is the n+1 problem?,Define n+1,349
6360,01:44,Sponsor mentions Hasura and Sentry,Sponsors,349
6361,05:00,Explain n+1 problem with podcast/host example,Explain with podcasts,349
6362,06:10,n+1 happens in GraphQL with nested queries,GraphQL nested,349
6363,07:18,Real example with Level Up Tutorials data,Level Up example,349
6364,09:39,Solution is to batch IDs and query once,Batch query solution,349
6365,11:11,Tools like DataLoader can help solve n+1,Tools help,349
6366,15:09,MongoDB aggregations can solve n+1,MongoDB aggregations,349
6367,16:58,Mongoose populate helper,Mongoose populate,349
6368,17:52,Apollo Studio monitors n+1,Apollo Studio,349
6369,18:56,Prisma solves n+1 for you,Prisma solves,349
6370,00:11,"Sponsors: Sanity, Sentry, Mux",Sponsors,350
6371,00:33,Discussing weather in Denver and fresh air,Weather,350
6372,02:03,Discussion on explosive gases like oxygen,Gases,350
6373,02:37,Making potato gun to shoot potatoes across lake,Potato gun,350
6374,03:45,Syntax highlight to critique developer portfolios,Syntax highlight,350
6375,04:14,Future show idea: Showcase of portfolios that got jobs,Showcase idea,350
6376,04:49,Review of shaquillehansford.com,shaquillehansford,350
6377,06:43,Good job linking Twitter and using custom domain,Good Twitter,350
6378,07:18,Make phone number clickable and add email link,Clickable contacts,350
6379,08:07,Discussing strange calls from phone number on site,Strange calls,350
6380,08:38,Improve desktop spacing and typography,Improve desktop,350
6381,09:39,"Keep single accordion level, don't nest",No nested accordions,350
6382,10:25,Good copy in introduction paragraph,Good intro copy,350
6383,11:12,Remove social links except GitHub,Reduce social links,350
6384,11:28,Overall good with some tweaks needed,Minor tweaks needed,350
6385,11:39,Review of benlamers.dev,benlamers.dev,350
6386,12:07,Discussing use of yellow in design,Yellow design,350
6387,12:16,Animated header on scroll is well done,Good header animation,350
6388,12:42,Overall great design and development,Great design,350
6389,13:32,Reduce box shadow opacity slightly,Reduce box shadow,350
6390,14:02,Use CSS variables to easily tweak box shadow,CSS variables,350
6391,15:08,Main nav slightly too low on desktop,Nav position,350
6392,15:31,Make nav position more intentional,Intentional nav,350
6393,16:13,Use semantic HTML tags like main and article,Semantic HTML,350
6394,17:24,Articles would be good for timeline and projects,Article tags,350
6395,18:08,Perfect accessibility score shows attention to detail,Accessibility,350
6396,18:51,Sponsor ad read for Sanity CMS,Sanity ad,350
6397,20:10,Use coupon code for extra free usage tier,Sanity coupon,350
6398,20:28,Review of zubairaziz.com,zubairaziz.com,350
6399,20:50,Spacing works on mobile but too much on desktop,Spacing issues,350
6400,22:05,Reduce space between sections,Reduce space,350
6401,23:03,"Center ""websites"" header with grid",Center header,350
6402,23:18,Portfolio shows breadth of skills and tech stack,Good portfolio,350
6403,24:28,Use CSS Grid for consistent card heights,Consistent cards,350
6404,24:52,Attention to detail improvements needed overall,Detail improvements,350
6405,25:40,Add more recent blog posts,More blog posts,350
6406,26:19,Multiple blog posts add legitimacy,Legitimacy,350
6407,26:44,Use quality photos from Unsplash,Unsplash photos,350
6408,27:24,Add introduction like other examples,Add introduction,350
6409,28:20,"Take advantage of Gatsby's static generation",Gatsby static,350
6410,29:45,Animate nav only on initial page load,Initial animation,350
6411,30:15,Review of codebyphil.dev,codebyphil.dev,350
6412,30:32,Homepage photo adds humanity,Homepage photo,350
6413,31:22,Reduce border radius and box shadow,Reduce effects,350
6414,31:48,Border radius subjective based on context,Subjective effects,350
6415,32:08,"Use real project screenshots, not stock photos",Real screenshots,350
6416,32:43,Link directly to project source code,Link code,350
6417,33:32,"Remove bottom border, adjust box shadow",Adjust contact,350
6418,34:14,Add padding/footer at bottom,Add padding,350
6419,34:45,Fix heading hierarchy with one H1 per page,Heading hierarchy,350
6420,35:30,Articles better than asides for projects,Article tags,350
6421,36:08,Font is subjective but not a favorite,Font opinion,350
6422,36:29,Properly rendered HTML from Gatsby,Gatsby HTML,350
6423,37:37,Sponsor ad read for Sentry,Sentry ad,350
6424,37:44,Review of sample.johngeorge.me,johngeorge.me,350
6425,38:02,Hover explanation on name is clever,Clever name hover,350
6426,38:57,Great intro text and paragraphs,Good intro,350
6427,39:24,Make about page link active when on about,Active about link,350
6428,39:41,Balance homepage content and empty space,Balance homepage,350
6429,40:03,Upcoming show idea on HTML tags,HTML show idea,350
6430,40:31,Add headings and semantic HTML tags,Add HTML tags,350
6431,41:06,Show recent years on blog posts,Recent posts,350
6432,41:37,Add contact info and footer padding,Contact and padding,350
6433,42:05,Like intro text and paragraphs,Good intro,350
6434,42:16,Add name to other pages,Add name,350
6435,42:43,Main nav is big but content small,Nav size,350
6436,43:49,Use proper X icon for mobile nav,Nav icon,350
6437,44:18,Add contact info,Add contact,350
6438,45:10,Sponsor ad read for Mux video,Mux ad,350
6439,46:49,Review of stordahl.dev,stordahl.dev,350
6440,47:30,Unique logo/icon adds personality,Unique logo,350
6441,47:55,Strong intro text covering key details,Good intro,350
6442,48:17,List of core technology stack,Tech stack list,350
6443,48:34,Effective call to action,Good CTA,350
6444,48:38,Custom illustrations for blog posts,Blog illustrations,350
6445,49:08,Cute outlined email signup form,Email form,350
6446,49:46,Shop shows competence with ecommerce,Competence,350
6447,50:04,Smooth out card hover animation slightly,Smooth animation,350
6448,50:51,Site has great polish overall,Great polish,350
6449,51:37,"Use single H1 for name, H2s for sections",Heading hierarchy,350
6450,52:13,"Feedback is subjective, take what resonates",Subjective feedback,350
6451,52:44,Sick pick: Mobile soldering power supply,Sick pick 1,350
6452,55:37,Sick pick: Walkabout Mini Golf VR game,Sick pick 2,350
6453,57:00,GeoGuessr is fun online map guessing game,GeoGuessr,350
6454,58:45,Never played Geoguessr but sounds fun,Geoguessr unfamiliar,350
6455,59:00,Shameless plugs,Shameless plugs,350
6456,02:13,.techdomainnames sponsor ad,Sponsor,351
6457,02:55,LogRocket sponsor ad,Sponsor,351
6458,03:32,Introducing GraphQL Code Generator,GraphQL Codegen,351
6459,04:14,GraphQL Code Generator uses schema to generate code,Schema usage,351
6460,04:47,GraphQL is strongly typed,Typing,351
6461,05:16,Codegen generates TypeScript types,TypeScript types,351
6462,06:04,Codegen generates React hooks,React hooks,351
6463,06:36,Codegen creates hooks from GraphQL queries/mutations,Query hooks,351
6464,07:49,Could switch between React Query and Apollo easily,Framework agnostic,351
6465,09:52,Swagger docs can generate API types automatically,Swagger types,351
6466,11:35,What is Swagger?,Swagger explanation,351
6467,13:09,Strong typing enables code generation tools,Typing benefits,351
6468,15:00,Other GraphQL tools from The Guild,GraphQL tools,351
6469,15:15,GraphQL Scalars provides custom scalar types,GraphQL Scalars,351
6470,16:00,Pericles for painless React forms from GraphQL,Pericles forms,351
6471,17:18,"These tools are low code, not no code",Low code tools,351
6472,00:34,Scott and Wes introduce the podcast episode on building your own authentication using JWT and sessions,Introduce episode,352
6473,01:32,Scott explains how he recently implemented a custom authentication system for his platform after trying other packages,Scott built custom auth,352
6474,03:20,Scott discusses pros and cons of custom auth vs using a package,Custom auth pros/cons,352
6475,04:22,Wes talks about his experience implementing auth in his courses,Wes on auth,352
6476,05:13,Scott explains what JWTs are - encoded but not encrypted tokens containing JSON data,JWT explanation,352
6477,06:57,"Wes explains the 3 parts of a JWT - header, payload, and signature",JWT parts,352
6478,09:19,Wes explains common ways to use JWTs - cookies or local storage,JWT usage,352
6479,14:45,"Scott explains the difference between encryption, hashing and salting",Encryption vs hashing,352
6480,20:25,"Ad for Prismic, a headless CMS",Prismic ad,352
6481,21:04,Discussion on user registration and storing salted/hashed passwords,Registration,352
6482,24:20,Discussion on using HTTP-only secure cookies for JWT storage,JWT cookies,352
6483,32:46,Discussion on using Caddy for local HTTPS development,Local HTTPS,352
6484,38:10,Explanation of CORS and implementing it,CORS,352
6485,43:06,"Ad for Hasura, instant GraphQL API service",Hasura ad,352
6486,44:20,More on CORS implementation,CORS implementation,352
6487,46:10,Explanation of CSRF and CSRF tokens,CSRF,352
6488,49:08,Explanation of user authentication process,Authentication,352
6489,52:11,Wes mentions packages like NextAuth and Passport for auth,Auth packages,352
6490,54:22,"Scott's sick pick - Remarkable 2 e-ink tablet",Remarkable 2 tablet,352
6491,56:35,"Wes's sick pick - Operation Odessa movie on Netflix",Operation Odessa movie,352
6492,57:55,Scott plugs his authentication course,"Scott's course plug",352
6493,58:58,Wes plugs his Advanced React course,"Wes's course plug",352
6494,00:03,"Today's podcast will cover environmental variables",Podcast overview,353
6495,00:26,Scott introduces himself and Wes Bos,Intros,353
6496,00:54,"Wes jokingly calls himself the ""variable master""",Joking around,353
6497,01:05,"Today's sponsors are Sanity and Sentry",Sponsors,353
6498,02:32,Sanity overview and details,Sanity sponsor,353
6499,02:50,Sentry overview,Sentry sponsor,353
6500,03:57,What are environment variables?,Env var intro,353
6501,05:40,Env vars are not checked into source control,No source control,353
6502,06:37,.env files store env vars locally,.env files,353
6503,09:31,Encrypted env vars are more secure,Encrypted env vars,353
6504,10:14,Use both plain text and encrypted env vars,Plaintext and encrypted,353
6505,10:58,Env var groups help organize across services,Env var groups,353
6506,13:37,Prefix client-side env vars differently,Client-side env vars,353
6507,15:15,Hosts provide useful dynamic env vars,Host env vars,353
6508,16:16,Storing env vars in 1Password is common,1Password storage,353
6509,17:50,Multiple .env files can be useful,Multiple .env files,353
6510,19:02,Set env vars directly in npm scripts,npm script env vars,353
6511,19:31,crossenv provides cross-platform env vars,crossenv package,353
6512,20:10,node_options sets CLI flags for node,node_options,353
6513,22:12,node --inspect opens Chrome DevTools,--inspect flag,353
6514,22:52,Next show will cover building authentication,Next show teaser,353
6515,00:50,Wes and Scott introduce themselves and discuss being busy with kids and work,intro,354
6516,02:22,Question about IntelliSense in VSCode not showing full type definitions,intellisense,354
6517,05:08,Thank you note and question about retaining knowledge across different tech stacks over time,retaining knowledge,354
6518,10:43,Question comparing Vercel and Netlify for hosting,vercel vs netlify,354
6519,15:05,More discussion comparing various hosting platforms,hosting platforms,354
6520,18:34,Question on naming conventions for models - singular or plural,model naming,354
6521,23:01,Question on best practices for GraphQL mutations,graphql mutations,354
6522,33:12,Question on building a multi-vendor ecommerce platform,multi-vendor platform,354
6523,45:59,Question on avoiding over-reliance on video tutorials and staying focused,avoiding tutorials,354
6524,49:04,Question on using React vs Handlebars for templating emails,templating emails,354
6525,03:44,Missing communal aspect of office,Office culture,355
6526,04:26,Enjoys stretching without judgement,Remote perks,355
6527,04:42,"Scott never had a job, just co-ops","Scott's work history",355
6528,05:13,Wes values time without useless meetings,Remote perks,355
6529,05:49,What recruiters would need to offer,Job offers,355
6530,09:11,Scott and Wes spend all time on own stuff,Work time split,355
6531,10:14,Wes outsources admin and support work,Outsourcing,355
6532,11:34,"Scott outsources some dev, video, social",Outsourcing,355
6533,12:59,Securing Next.js routes server-side,Next.js routes,355
6534,16:14,Other careers without web dev,Alternate careers,355
6535,17:52,Thoughts on Clubhouse app,Clubhouse app,355
6536,24:30,Should developers learn Vue and React?,Learn Vue and React?,355
6537,00:56,"Introduction of sponsors Sanity, LogRocket and Hasura",Sponsors,356
6538,05:08,Discussion of desks used by Wes and Scott,Desks,356
6539,15:41,Discussion of monitors used by Wes and Scott,Monitors,356
6540,23:00,Discussion of headphones used by Wes and Scott,Headphones,356
6541,24:58,Discussion of keyboards and mice used by Wes and Scott,Keyboards/Mice,356
6542,40:05,Discussion of desk racks used by Wes and Scott,Desk Racks,356
6543,41:44,Discussion of cameras used by Wes and Scott,Cameras,356
6544,44:28,Discussion of microphones used by Wes and Scott,Microphones,356
6545,49:34,Discussion of lighting used by Wes and Scott,Lighting,356
6546,52:48,Discussion of sit/stand usage by Wes and Scott,Sit/Stand,356
6547,55:33,Brief mention of NAS storage,NAS Storage,356
6548,57:49,Discussion of Remarkable tablet by Scott,Remarkable Tablet,356
6549,59:26,Discussion of notebooks used by Wes and Scott,Notebooks,356
6550,01:00:30,"Discussion of curved monitors on Wes' wishlist",Curved Monitors,356
6551,01:01:27,"Discussion of Stream Deck on Wes' wishlist",Stream Deck,356
6552,00:28,Hireable skills for 2021,Topic,357
6553,04:13,Clean and readable code,Code,357
6554,06:11,JavaScript fundamentals,JS,357
6555,08:08,HTTP requests in JS,JS,357
6556,11:57,CSS fundamentals,CSS,357
6557,13:21,JS framework experience,Frameworks,357
6558,14:25,Scoped CSS experience,CSS,357
6559,15:00,Server-side framework experience,Servers,357
6560,15:48,Common helper libraries,Libraries,357
6561,18:17,Data structures and algorithms,DSA,357
6562,20:53,Communication skills,Soft skills,357
6563,22:26,Email writing skills,Emails,357
6564,00:56,Introducing Tanner Linsley,Guest intro,358
6565,02:52,"Tanner's background in open source","Tanner's background",358
6566,03:10,React Query surpassing Relay in stars,React Query popularity,358
6567,05:16,"Wes' experience getting started with React Query","Wes' experience",358
6568,06:11,Main features of React Query,React Query features,358
6569,14:11,Sponsor - Sentry,Sponsor,358
6570,14:20,Manual refetching in React Query,Manual refetch,358
6571,15:45,Query keys in React Query,Query keys,358
6572,21:08,Handling form state with React Query,Form state,358
6573,25:10,Building React Query dev tools,Dev tools,358
6574,31:38,Using React Context with React Query,React Context,358
6575,35:00,React Query for server state management,Server state,358
6576,36:22,Sponsor - Deque Systems,Sponsor,358
6577,37:04,React Server Components announcement,React Server Components,358
6578,38:26,Purpose of React Server Components,Purpose of Server Components,358
6579,40:14,Future of React Query with Server Components,React Query future,358
6580,42:49,"Tanner's experience building React Static",React Static,358
6581,45:50,"Tanner's thoughts on Remix Runway",Thoughts on Remix,358
6582,00:27,Discussing The future of testing and Cypress,Future of Cypress,359
6583,01:34,Episode sponsored by LogRocket and Deque Systems,Sponsors,359
6584,02:23,Deque Systems help with accessibility issues,Deque Systems,359
6585,03:55,Overview of Cypress as an end-to-end testing solution,Cypress Overview,359
6586,06:40,Using data-testid for selecting elements in Cypress,data-testid,359
6587,08:00,"Cypress now supports testing across browsers like Chrome, Firefox, Safari",Cross-browser Testing,359
6588,09:47,"Cypress runs tests in a real browser, helps debug issues",Real Browser Testing,359
6589,10:42,Using Cypress for automating bots,Automating Bots,359
6590,11:16,New Cypress Studio records test runs,Cypress Studio,359
6591,12:56,Hitting real APIs during tests,Real APIs,359
6592,13:40,Mocking data with fixtures,Mocking Data,359
6593,15:10,Cypress Dashboard for monitoring test runs,Dashboard,359
6594,17:12,Plugins like dark mode and accessibility testing,Plugins,359
6595,18:23,Cypress has improved test writing experience,Experience,359
6596,00:14,"Potluck episode with questions on promise rejections, Gatsby + WordPress hosting, learning new tech quickly",potluck,360
6597,01:23,Use async/await and try/catch to handle promise rejection rollbacks,promises,360
6598,05:00,Clients should own their own GitHub repo for Gatsby + WordPress sites,GitHub,360
6599,08:53,"Ask for full stack title if doing full stack work, but pay isn't tied to title",titles,360
6600,09:47,"Bake costs of one-time plugins/tools into project quote, don't pass to client",pricing,360
6601,15:45,"For core functionality, make sure client knows you're integrating third-party plugin",plugins,360
6602,22:20,Debugging a crying baby - go through possible reasons systematically,baby debugging,360
6603,30:10,Reading a folder of images client-side not possible without server-side component,file access,360
6604,35:25,"For large daily cron jobs, use queues to distribute work efficiently",queues,360
6605,43:30,Learn new tech through small projects hitting key features,learning,360
6606,47:34,"Deno has watch mode since v1.4, no need for Denon",Deno,360
6607,03:33,TypeScript compiler analyzes code and does type checking to prevent bugs.,TypeScript compiler,361
6608,08:01,"Babel TypeScript plugin strips TypeScript syntax but doesn't do type checking. Lets you ease into TypeScript.",Babel TypeScript,361
6609,10:23,SWC is a Rust-based TypeScript compiler focused on performance. Being considered for Deno.,SWC compiler,361
6610,13:42,Esbuild is a fast Go-based compiler that could replace Babel. Great for development.,Esbuild compiler,361
6611,15:37,"Compilers don't do type checking yet besides TSC. Use TSC separately for checking.",Type checking,361
6612,18:44,"Bundlers like Webpack don't compile but enable loading assets like images.",Bundlers,361
6613,00:01,Intro,intro,362
6614,00:09,Overview of reviewing resumes/websites,overview,362
6615,01:26,Importance of online presence,presence,362
6616,02:16,Complaint about junk mail,junk mail,362
6617,03:02,How to reduce junk mail,reduce junk,362
6618,04:20,FreshBooks sponsor spot,FreshBooks,362
6619,05:26,"Reviewing Ash Connolly's site",Ash intro,362
6620,06:56,Value of social media presence,social value,362
6621,08:52,"How to pronounce a guest's name",name help,362
6622,09:44,"Review of Ash's site - pros",Ash pros,362
6623,12:51,"Review of Ash's site - cons",Ash cons,362
6624,14:58,"More critiques of Ash's resume",Ash resume,362
6625,16:08,"Review of Ash's Notion resume",Notion resume,362
6626,20:58,"Review of Maddy Bidwell's site",Maddy intro,362
6627,22:07,"What's good about Maddy's site",Maddy pros,362
6628,24:40,"Introducing Lea Lundqvist's site",Lea intro,362
6629,25:49,"Issues with Lea's site",Lea issues,362
6630,27:58,How Lea could improve her site,Lea improve,362
6631,30:05,Using Twitter to resolve customer service issues,Twitter CS,362
6632,31:42,Asking someone directly how to pronounce their name,pronounce name,362
6633,32:29,"Review of Ismael Galu's site",Ismael intro,362
6634,33:48,"Why Ismael's site is impressive",Ismael good,362
6635,35:25,"Ismael's GitHub and articles",Ismael GitHub,362
6636,36:16,"Ismael's testimonial from Vercel",Ismael testimonial,362
6637,37:31,Linode sponsor spot,Linode ad,362
6638,00:33,Overview of keyboard events,keyboard events,363
6639,03:10,Different keyboard events,events,363
6640,08:03,Keyboard event metadata,metadata,363
6641,11:23,Key event properties,properties,363
6642,14:57,Using modifier keys,modifiers,363
6643,16:42,Checking for repeated keys,repeated keys,363
6644,17:35,Media keys,media keys,363
6645,19:08,Best practices,best practices,363
6646,00:01,Introducing TypeScript fundamentals episode,TypeScript intro,364
6647,00:16,Scott working on new version of LevelUpTutorials.com using future tech,Scott working on tutorials site,364
6648,01:33,Scott removed React testing in favor of Cypress end-to-end testing,Cypress testing,364
6649,02:12,2021 is the year of config fatigue,Config fatigue,364
6650,02:53,ES module issues in Next.js,Next.js modules,364
6651,04:11,Overview of primitive data types in JavaScript,JavaScript types,364
6652,05:23,Type unions allow variables to be one of multiple types,Type unions,364
6653,06:12,Other languages like Rust have more specific primitive types,Language types,364
6654,06:32,TypeScript basics - add types to standard JavaScript,TypeScript basics,364
6655,07:19,Can define variable and parameter types in TypeScript,Defining types,364
6656,07:56,All JavaScript is valid TypeScript,JS is TS,364
6657,08:31,Type hints in editor is major benefit of TypeScript,Editor typing,364
6658,09:23,TypeScript prevents easy mistakes like string concat,Prevent mistakes,364
6659,10:28,LogRocket replays errors in app like a video,LogRocket,364
6660,13:31,Start going through TypeScript types,TypeScript types,364
6661,14:03,"Basic types - string, number, arrays",Basic types,364
6662,14:16,BigInt type for large numbers,BigInt type,364
6663,14:23,Arrays are lists of other types,Array types,364
6664,14:42,Objects have properties with their own types,Object types,364
6665,15:18,Type unions allow variables to be multiple types,Type unions,364
6666,15:38,Intersection types combine multiple types,Intersection types,364
6667,16:38,Any type opts out of type checking,Any type,364
6668,17:02,"Explicit any for unknown types, implicit for missing types",Explicit vs implicit any,364
6669,18:10,Void type means a function returns nothing,Void type,364
6670,18:29,Enums create a set of named constants,Enum type,364
6671,19:27,Sanity CMS sponsor ad,Sponsor: Sanity CMS,364
6672,20:28,Type inference allows omitting redundant types,Type inference,364
6673,21:44,Explicit types are safer but more verbose,Explicit types,364
6674,22:09,Moving existing projects to TypeScript gradually,Migrating projects,364
6675,22:51,Generated types from GraphQL schema,GraphQL types,364
6676,23:34,Installing type definitions for untyped packages,Package types,364
6677,25:23,Type helper functions in editor,Editor helpers,364
6678,26:18,Typing DOM elements unlocks methods,DOM types,364
6679,27:01,TypeScript integrates with React,React integration,364
6680,27:34,Sponsor: Cloudinary image hosting,Sponsor: Cloudinary,364
6681,28:07,Benefits of using TypeScript,Benefits,364
6682,29:27,Type hints reduce cognitive load,Type hints,364
6683,30:10,Easy refactoring with TypeScript,Refactoring,364
6684,31:21,Type inference examples,Inference examples,364
6685,32:09,Can explicitly type inferred types,Explicit inferred,364
6686,32:54,Explicit types are safer but more verbose,Explicit types,364
6687,33:26,Getting types for untyped packages,Package types,364
6688,34:10,Many JS packages now have types,Package types,364
6689,35:43,Generating types from JSON examples,Generating types,364
6690,36:43,Overview of TypeScript compilation,Compilation,364
6691,37:35,"TSC type checks but doesn't compile",TSC type checking,364
6692,38:30,GraphQL types become source of truth,GraphQL types,364
6693,39:02,Resolvers and schemas generate GraphQL types,GraphQL generation,364
6694,39:47,Specify target environments in TSConfig,TSConfig targets,364
6695,40:25,Summary of TypeScript benefits,Benefits summary,364
6696,41:46,Type hints reduce cognitive load,Type hints,364
6697,42:43,Easy refactoring in TypeScript,Refactoring,364
6698,43:36,Renaming symbols consistently updates usage,Renaming symbols,364
6699,44:14,TypeScript enables easier refactoring,Refactoring,364
6700,44:31,"Scott's development style","Scott's style",364
6701,45:24,TypeScript fixes circular dependencies,Fixes circular dependencies,364
6702,45:49,Drag and drop refactoring Just Works,Drag and drop refactor,364
6703,46:41,Cloudinary sponsor ad,Sponsor: Cloudinary,364
6704,48:05,Compiling TypeScript overview,Compiling overview,364
6705,48:31,"TSC type checks but doesn't output JS",TSC type checking,364
6706,49:19,Use separate tool like ESBuild to compile,Separate compiler,364
6707,50:05,"Babel doesn't type check",Babel limitations,364
6708,50:50,Use TSC alongside compiler for type checking,TSC with compiler,364
6709,51:37,Future TypeScript episode topics,Future topics,364
6710,51:48,End of TypeScript fundamentals episode,End of episode,364
6711,02:00,Episode about new LevelUpTutorials site,New site,365
6712,02:33,Moving from Meteor to Node/React stack,Tech stack,365
6713,03:28,"Originally built in Drupal, moved to Meteor",History,365
6714,04:12,New stack is Node API and React frontend,Stack,365
6715,05:54,"Not using Babel, using ESBuild",ESBuild,365
6716,06:57,No server-side rendering yet,SSR,365
6717,07:49,"Using Snowpack for dev, 50ms reloads",Snowpack,365
6718,08:07,Wrote GraphQL importer for Snowpack,GraphQL,365
6719,09:14,Production builds very fast with ESBuild,Builds,365
6720,10:38,"API in Node/Mercurius, very fast",Mercurius,365
6721,11:49,No performance issues with MongoDB,MongoDB,365
6722,14:46,Leveraging codegen for types,Codegen,365
6723,15:20,"Hosted on Render, great experience",Render,365
6724,15:44,SSR coming soon with Snowpack Node runtime,SSR,365
6725,16:11,Using Cloudflare with SSL from Render,Cloudflare,365
6726,18:48,Built custom CLI tool called Avalanche,Avalanche,365
6727,20:35,Using Caddy as a dev server and reverse proxy,Caddy,365
6728,21:14,Switched tests from Jest to Cypress,Cypress,365
6729,21:55,Caddy great for SSL and reverse proxy,Caddy,365
6730,00:21,Introducing Deno,Deno intro,366
6731,02:29,Deno replaces Node.js,Deno vs Node,366
6732,03:55,Deno uses TypeScript,TypeScript,366
6733,08:10,"Deno doesn't replace front-end frameworks",Frontend,366
6734,11:01,Deno bundles and compiles code,Bundling,366
6735,15:18,Deno imports ESM modules,Modules,366
6736,23:08,Deno runs WebAssembly,WASM,366
6737,26:19,Deno is fast,Speed,366
6738,31:30,Deno has security sandboxing,Security,366
6739,35:00,Deno can run scripts from URLs,URLs,366
6740,38:28,Deno uses async/await,Async,366
6741,40:15,Deno aims for Node.js compatibility,Node compat,366
6742,44:14,Example Deno scripts,Examples,366
6743,49:27,Current status of Deno,Status,366
6744,00:28,New image format AVIF,AVIF intro,367
6745,01:13,Sentry dashboard and debugging,Sentry ad,367
6746,01:59,FreshBooks expense tracking,FreshBooks ad,367
6747,03:33,AVIF derived from video compression,AVIF background,367
6748,04:59,AVIF is royalty free,Royalty free,367
6749,06:20,AVIF has transparency,Transparency,367
6750,07:23,AVIF files are very small,File size,367
6751,08:54,AVIF is a lossy format,Lossy format,367
6752,10:15,There is a lossless AVIF option,Lossless option,367
6753,11:49,Tools for generating AVIF images,Tools,367
6754,14:03,Browser support for AVIF,Browser support,367
6755,15:54,Quick Look plugin for AVIF on Mac,Quick Look plugin,367
6756,17:29,Support HEIC image format on websites,Support HEIC,367
6757,00:18,Wes and Scott will answer potluck questions,potluck q&a,368
6758,02:33,Listener went from bartender to $100k+ JS job in 3 years,$100k js job,368
6759,04:12,When to use a package vs write code yourself,package vs code,368
6760,11:41,Tips for keeping skills current during long break,skills on break,368
6761,17:11,LogRocket sponsor ad,logrocket ad,368
6762,18:19,Tips for selling digital products,digital products,368
6763,26:08,Tips for building UI component libraries,UI libraries,368
6764,29:57,Prismic sponsor ad,prismic ad,368
6765,30:52,Effective use of dev tools,dev tools,368
6766,35:05,Overcoming programming imposter syndrome,imposter syndrome,368
6767,40:39,"Developers' role in reducing emissions",reducing emissions,368
6768,45:54,Linode sponsor ad,linode ad,368
6769,00:28,CSS typography systems,topic,369
6770,01:47,Sanity CMS,sponsor,369
6771,03:23,Sentry performance tracking,sponsor,369
6772,04:59,Defining font sizes in projects,question,369
6773,06:41,"Wes's font size approach",font sizes,369
6774,09:25,Font size units,units,369
6775,11:01,Avoid font sizes on divs,anti-pattern,369
6776,12:20,"Scott's font size variables",variables,369
6777,14:36,Readable variable names,variables,369
6778,15:13,Media queries for font sizes,media queries,369
6779,16:57,Font size consistency,consistency,369
6780,18:23,Reduced decision fatigue,benefits,369
6781,19:50,Helps beginners,benefits,369
6782,20:56,Typography generator tools,tools,369
6783,22:17,Grab CSS from generators,tips,369
6784,23:24,Eyeballing font sizes,approach,369
6785,24:40,Systems prevent bad designs,benefits,369
6786,02:00,"Live podcast at Reactathon, game segments planned",Intro,370
6787,04:03,Audience can submit questions at pigeonhole.at/tasty,Q&A link,370
6788,04:48,Suspense for data fetching desired in React,React wishlist,370
6789,05:43,Unmount animations difficult to orchestrate in React,React wishlist,370
6790,06:50,Single file components desired in React like Svelte,React wishlist,370
6791,08:06,Prevent default shortcuts desired in React events,React wishlist,370
6792,08:45,Automatic form state management desired in React,React wishlist,370
6793,10:10,Graphene: both a specific carbon lattice and a Python GraphQL library,JS or Nay,370
6794,10:58,Floodlight: both an outdoor light and a syntax highlighter,JS or Nay,370
6795,11:55,Toy Machine: early 2000s skate brand,JS or Nay,370
6796,12:24,Joplin: Markdown note app and Missouri city,JS or Nay,370
6797,13:19,"Nocco: Car battery charger, not no-code tool",JS or Nay,370
6798,13:41,"Inner: Smart light bulb, not CSS selector",JS or Nay,370
6799,15:04,"Capcom Strand: Composite building material, not Svelte state manager",JS or Nay,370
6800,15:45,"Sputnik V: COVID vaccine, not WordPress code name ",JS or Nay,370
6801,19:27,"Deno underrated, enjoys its permissions model and file imports",Over/underrated,370
6802,21:24,"Importing from URLs underrated, useful for testing",Over/underrated,370
6803,23:58,"Remix underrated, excited for server side streaming",Over/underrated,370
6804,25:26,XState underrated for managing state machines,Over/underrated,370
6805,28:36,Redux syntax very readable once you know it,Hot takes,370
6806,29:19,Console.log still very useful for debugging,Hot takes,370
6807,29:41,Optional chaining improves readability,Hot takes,370
6808,30:49,React tough for beginners but worthwhile,Hot takes,370
6809,31:16,npm packages help build apps like Legos,Hot takes,370
6810,32:16,Avoid unnecessary libraries when working at agencies,Hot takes,370
6811,36:11,Startups offer fast growth but can have long hours,Q&A,370
6812,37:57,Try to get job at FAANG company to gain experience,Q&A,370
6813,38:25,TypeScript for everything now with easy setup,Q&A,370
6814,40:32,GitHub Explore and Awesome lists to find new libraries,Q&A,370
6815,41:52,"Low and slow barbecue, use fish sauce",Q&A,370
6816,42:19,Unsure if Blitz.js will gain adoption long-term,Q&A,370
6817,43:35,Optimize images via services like Cloudinary,Q&A,370
6818,00:26,Show about nothing,intro,371
6819,03:29,Undefined variable explanation,undefined,371
6820,04:04,Null vs undefined explanation,null,371
6821,05:36,Void returns nothing explanation,void,371
6822,06:58,Void ignores function returns,void ignores,371
6823,09:22,Never type in TypeScript,never,371
6824,11:13,Faulty value examples,faulty values,371
6825,00:45,Sponsors,Sponsors,372
6826,00:59,Preview,Episode intro,372
6827,01:18,Predictions format,Predictions format,372
6828,02:15,ESM popularity,ESM,372
6829,03:04,Import URLs in Node,Node imports,372
6830,04:51,Other languages improve JS tooling,JS tooling,372
6831,06:04,Remote work widens talent pool,Remote work,372
6832,07:06,Programming communities improve,Communities,372
6833,08:24,Deno adoption increases,Deno,372
6834,09:43,WASM usage increases,WASM,372
6835,11:09,TypeScript tooling improves,TypeScript tooling,372
6836,12:50,Build tooling gets easier,Build tools,372
6837,14:41,Go and Rust improve JS tooling,Go & Rust,372
6838,16:45,Rome JS tooling,Rome JS,372
6839,18:03,Sponsor break,Sponsor 1,372
6840,23:49,WASM details,WASM details,372
6841,27:19,TypeScript popularity,TypeScript popularity,372
6842,30:52,React SSR improvements,React SSR,372
6843,32:41,Competitors challenge React,React challenges,372
6844,33:31,MDX usage increases,MDX,372
6845,34:14,Gatsby streaming/SSR,Gatsby streaming,372
6846,36:17,AI gets easier,AI gets easier,372
6847,38:18,Next.js predictions,Next.js,372
6848,39:52,VS Code growth,VS Code growth,372
6849,41:12,CSS rounding,CSS rounding,372
6850,42:40,Serverless growth,Serverless growth,372
6851,44:02,Sponsor break,Sponsor 2,372
6852,45:34,Enterprise Jamstack,Jamstack,372
6853,46:50,Web apps vs PWAs,PWAs,372
6854,49:25,Show picks,Show picks,372
6855,00:26,Happy New Year! Discussing keyboard shortcuts & window management,intro,373
6856,03:00,FreshBooks sponsor segment,sponsor,373
6857,03:42,Discusses Carabiner Elements app,carabiner,373
6858,04:59,Hyper key uses caps lock for shortcuts,hyper key,373
6859,05:36,BetterTouchTool app discussion,BTT,373
6860,10:13,Using extra keyboard keys for shortcuts,extra keys,373
6861,11:42,Custom screen areas for recording,screen areas,373
6862,13:48,Web overlays with BetterTouchTool,overlays,373
6863,15:41,Uberlayer app for screen recording guides,uberlayer,373
6864,17:05,Customizing VS Code shortcuts,VS Code,373
6865,18:15,Show parameter hints shortcut,hints,373
6866,18:48,Using extra F keys for shortcuts,F keys,373
6867,19:45,Screenflow recording shortcuts,Screenflow,373
6868,20:32,Rocket app for emojis,Rocket,373
6869,21:26,TextExpander for snippets,TextExpander,373
6870,24:06,Clippy app clipboard manager,Clippy,373
6871,25:10,Total available keys with hyper key,available keys,373
6872,02:33,CSS subgrid only supported in Firefox,CSS subgrid,374
6873,04:29,IE is officially dead for most developers,IE dead,374
6874,05:58,NPM Tink did not happen but NPM improved a lot,NPM improved,374
6875,09:08,Yarn 2 released but not widely adopted due to breaking changes,Yarn 2,374
6876,11:38,Snowpack/Skypack released for bundleless development,Snowpack released,374
6877,14:24,ES modules support improving across ecosystem,ES modules,374
6878,15:04,Deno 1.0 released,Deno 1.0,374
6879,18:17,Need native TS support in Node,Native TS in Node,374
6880,19:10,Compilerless modules are the future,Compilerless future,374
6881,20:53,React Suspense not as big as expected,Suspense,374
6882,24:34,Svelte gained popularity,Svelte gained,374
6883,25:38,Vue 3 released,Vue 3,374
6884,27:03,Apollo 3 released,Apollo 3,374
6885,28:07,Next.js gained momentum,Next.js momentum,374
6886,30:28,Gatsby shipping many new features,Gatsby features,374
6887,31:44,Serverless getting much easier,Serverless easier,374
6888,35:23,Many good headless CMS options now,CMS options,374
6889,35:47,Cypress got Firefox and Edge support,Cypress browsers,374
6890,38:27,Figma keeps adding great features,Figma features,374
6891,02:33,Paying for time used on serverless functions,Serverless pricing,375
6892,03:38,"Paying for virtual server resources like CPU, RAM, storage",VPS pricing,375
6893,05:49,"Paying per container or ""dyno"" on Heroku",Heroku pricing,375
6894,08:48,Paying for bandwidth or data transfer,Bandwidth pricing,375
6895,13:52,Paying per number of users who can access the platform,Per user pricing,375
6896,17:09,Paying per number of apps hosted,Per app pricing,375
6897,21:21,Paying for image transforms on Cloudinary,Per work pricing,375
6898,00:21,Merry Christmas intro,intro,376
6899,00:33,Sponsored by FreshBooks and Sentry,sponsors,376
6900,00:37,Scott introduces the first question,first question,376
6901,00:49,"Question from Scott's dad Rock","Scott's dad",376
6902,01:31,Introducing the Mac question from Pookie,Mac question,376
6903,02:15,Pookie asks if new Macs will affect web devs,Macs for devs,376
6904,02:36,Scott and Wes discuss bot strategies for buying a PS5,Bot strategies,377
6905,03:45,Scott suggests avoiding retailers with easily manipulatable checkout processes,Avoid retailers,377
6906,05:10,Wes explains his strategy of scraping retailer sites for availability,"Wes' strategy",377
6907,08:04,"Wes suggests using Puppeteer to scrape sites that don't have APIs",Use Puppeteer,377
6908,08:49,Wes recommends a simple database like LowDB to save scraped data,Use LowDB,377
6909,10:42,They discuss how reCAPTCHA can prevent bots from submitting forms,reCAPTCHA prevention,377
6910,12:37,They acknowledge bot traffic frustrates developers trying to manage inventory,Developer frustration,377
6911,00:03,Intro to serverless with guest Brian Leroux,Intro,378
6912,00:09,"Overview of Brian's background in mobile and serverless","Brian's background",378
6913,00:39,Sponsor - Sentry,Sponsor,378
6914,01:09,Brief intro of Brian and his interest in Syntax podcast,Podcast intro,378
6915,01:34,Discussing Caesar cocktails,Caesars,378
6916,02:16,"Brian's background in mobile and shift to serverless",Background,378
6917,04:05,"Brian's work on Architect and Begin",Architect/Begin,378
6918,06:18,Overview of serverless - outsourcing infrastructure,Serverless overview,378
6919,07:51,"Serverless characteristics - on demand, stateless",Serverless characteristics,378
6920,08:47,Discussion on serverless misconceptions,Serverless misconceptions,378
6921,10:23,"Serverless as an addition, not replacement, for existing architectures",Serverless addition,378
6922,11:04,Using serverless with legacy apps through proxies and incrementally moving functionality,Legacy integration,378
6923,12:42,Good serverless use cases like scheduled tasks and PDF generation,Use cases,378
6924,14:43,Challenges of statelessness in serverless functions,Statelessness,378
6925,16:27,Explanation of cold starts in serverless,Cold starts,378
6926,18:11,Serverless function languages like Rust and Go,Languages,378
6927,19:17,Discussion on Aleph.js for serverless Next.js apps,Aleph.js,378
6928,20:39,Deno optimized for cold starts unlike Node,Deno vs Node,378
6929,21:12,Extremely low cost of serverless functions,Low cost,378
6930,23:13,AWS as the stable choice for serverless infrastructure,AWS stability,378
6931,24:20,"Excitement about Azure's potential in serverless space",Azure potential,378
6932,25:23,Architect for infrastructure as code in serverless,Architect,378
6933,26:15,Begin for easy cloud deployment leveraging Architect,Begin,378
6934,27:24,"Begin's local dev experience for serverless",Begin local dev,378
6935,28:32,Other serverless services like queues and scheduled functions,Other services,378
6936,29:04,Leveraging ephemeral storage like Redis in serverless,Ephemeral storage,378
6937,31:30,Benefits of TypeScript types,TypeScript benefits,378
6938,32:39,Running TypeScript/type checks at runtime,Runtime types,378
6939,34:25,Future of TypeScript if types added to JavaScript,TypeScript future,378
6940,35:51,Deno improving cold start times unlike Node,Deno performance,378
6941,36:48,Using Deno and Node together in serverless architectures,Deno + Node,378
6942,37:16,Deno reimplementing Node APIs as standard library,Deno standard library,378
6943,38:41,Deno security model benefits,Deno security,378
6944,39:04,Sponsor - Netlify,Sponsor,378
6945,40:35,Merits of server-rendered websites without JavaScript,No JS websites,378
6946,43:03,Serverless functions enable server-rendered content,Server rendering,378
6947,44:46,New frameworks focused on server rendering like Remix,Remix,378
6948,45:01,Sharing code between serverless functions,Sharing code,378
6949,46:08,Using layers for binaries in serverless functions,Layers,378
6950,48:04,Amazing capabilities unlocked by serverless,Capabilities,378
6951,49:18,Example of highly scalable serverless app,Scaling example,378
6952,51:17,Smearing apps across accounts to avoid noisy neighbors,Noisy neighbors,378
6953,52:19,Wrapping up the interview with Brian,Wrapping up,378
6954,52:47,"Brian's sick pick - Begin fingerprinting",Fingerprinting,378
6955,54:13,"Wes's sick pick - magnetic grabber tool",Grabber tool,378
6956,55:28,"Scott's sick pick - Blink-182 covers album",Blink-182 album,378
6957,56:46,"Brian plugs Begin's new proxy feature",Proxy feature,378
6958,58:00,Discussion on Begin co-founder Ryan Block,Ryan Block,378
6959,58:54,Wes plugs his courses,Wes courses,378
6960,59:02,Scott plugs his courses,Scott courses,378
6961,02:33,"Tried breakout rooms in Zoom which didn't work well",Zoom breakout rooms,379
6962,04:06,Ended up using Discord for video chat,Discord video chat,379
6963,05:14,Used OBS Streamlabs for live streaming,OBS Streamlabs,379
6964,08:16,Discord is better than Slack for communities,Discord vs Slack,379
6965,11:46,Created looping intro video in Principle,Principle animation,379
6966,13:19,Captured Discord chat window for better video quality,Discord screen capture,379
6967,15:29,Used Mux and React HLS Player for custom live stream,Live stream setup,379
6968,17:23,Made countdown clock with Streamlabs plugin,Countdown clock,379
6969,19:00,Recorded own audio locally for best quality,Local audio recording,379
6970,21:46,Routed audio through Loopback on Mac,Audio routing,379
6971,00:43,Next.js can render pages statically or server-side,Rendering,380
6972,02:03,"Gatsby builds all pages statically, Next allows static or server rendering per page",Static vs Server,380
6973,03:51,"Gatsby builds pages statically at build time, Next renders pages on demand",Build Time vs On Demand,380
6974,05:30,"Next 9 allows statically generating some pages, server rendering others",Static Generation,380
6975,08:27,Next can revalidate and rebuild stale pages automatically,Revalidation,380
6976,13:15,Sanity CMS allows previewing content changes before rebuilding Gatsby sites,Sanity Preview,380
6977,19:50,Gatsby auto-generates a GraphQL API from data sources,Gatsby GraphQL,380
6978,21:56,"Next doesn't include data management, allows using tools like React Query",Bring Your Own Data,380
6979,26:34,Gatsby requires pregenerating dynamic page permutations statically,Dynamic Pages,380
6980,31:04,Folder-based routing can be limiting for animations and layouts,Folder Routing,380
6981,00:27,Scott introduces the topic of React Hooks,Intro,381
6982,01:00,Scott mentions broadcasting from different locations using fake backgrounds,Meta,381
6983,01:36,Sponsor spot for Sentry error tracking,Sponsor,381
6984,03:12,Getting into the topic of React Hooks,Hooks intro,381
6985,04:19,Hooks allow decoupling state from components,Decoupling,381
6986,06:46,Hooks enable code reuse across projects,Code reuse,381
6987,08:01,Hooks improve state management with libraries like Zustand,State mgmt,381
6988,11:35,Hooks reduce code duplication from class components,Less code,381
6989,14:33,Entire codebase converted to hooks except one complex component,Codebase conversion,381
6990,17:12,Refs are simpler with hooks compared to class components,Refs,381
6991,18:18,Now using named function components instead of arrow functions,Named functions,381
6992,21:05,"As codebase grows, explicit naming helps avoid issues",Explicit naming,381
6993,21:14,"Some gripes about hook naming - useLayoutEffect, useEffect",Hook naming,381
6994,22:29,setTimeout/setInterval should be built into React Hooks,setTimeout/setInterval,381
6995,23:32,Vue Composition API gets naming like watchEffect better,Vue comparison,381
6996,02:33,Wes and Scott discuss web developer gift guide,Gift guide,382
6997,03:02,"Categories include home, games, tech, smart home, desk, streaming, fitness, clothing",Categories,382
6998,04:15,Scott discusses cold brew makers,Cold brew,382
6999,05:35,Wes discusses parchment paper and baking sheets,Baking,382
7000,06:25,"Scott discusses gaffer's tape","Gaffer's tape",382
7001,08:38,Wes discusses knife sharpening stones,Knife sharpening,382
7002,10:45,Scott discusses cordless vacuum cleaner,Vacuum cleaner,382
7003,12:21,Scott discusses wireless mechanical keyboard,Mechanical keyboard,382
7004,13:56,Scott discusses programming puzzle game Baba Is You,Baba Is You,382
7005,17:17,Ad for LogRocket debugging tool,LogRocket ad,382
7006,19:16,Wes discusses USB-C hubs,USB-C hubs,382
7007,20:27,Scott discusses Wyze home security cameras,Wyze cameras,382
7008,21:02,Scott discusses Hue light dimmer switches,Hue dimmer switches,382
7009,21:41,Wes discusses Google Nest Hub,Google Nest Hub,382
7010,25:27,Scott discusses fatigue mats,Fatigue mats,382
7011,26:17,Wes discusses roller blade wheels for office chairs,Office chair wheels,382
7012,27:37,Wes discusses Wyze outdoor security camera,Wyze outdoor camera,382
7013,28:17,Scott discusses Lutron light dimmer switches,Lutron dimmer switches,382
7014,30:57,Wes discusses Leviton smart light switches,Leviton light switches,382
7015,31:41,Scott discusses Lutron Caseta light dimmer switches,Lutron Caseta dimmers,382
7016,33:14,Jonathan Speak recommends adjustable workbench desk,Workbench desk,382
7017,34:03,Wes discusses Elgato Stream Deck,Elgato Stream Deck,382
7018,35:32,Wes discusses Logitech MX Master mouse,Logitech mouse,382
7019,36:42,Scott discusses wireless phone chargers,Wireless chargers,382
7020,38:24,Wes discusses cheap HDMI video capture devices,HDMI capture,382
7021,39:50,Wes discusses Elgato Cam Link video capture,Elgato Cam Link,382
7022,41:48,Wes discusses LED studio lights,Studio lights,382
7023,44:14,Wes discusses LED RGB flood lights,RGB flood lights,382
7024,45:46,Scott discusses microphone arms,Microphone arms,382
7025,47:40,Ad for FreshBooks accounting software,FreshBooks ad,382
7026,50:06,Scott discusses Concept2 rowing machine,Rowing machine,382
7027,50:53,Scott discusses resistance bands,Resistance bands,382
7028,51:14,Wes discusses kettlebells,Kettlebells,382
7029,52:15,Scott discusses developer.io t-shirts,Developer shirts,382
7030,52:49,Wes discusses selvedge jeans,Selvedge jeans,382
7031,53:42,"Scott discusses Huckberry men's clothing",Huckberry clothing,382
7032,54:22,Wes discusses Everlane and Fall Raven clothing,Clothing brands,382
7033,55:23,Scott discusses Lululemon joggers,Lululemon joggers,382
7034,00:26,Conventional commits,Topic,383
7035,00:50,Conventional commits help commit messages,Benefit,383
7036,01:02,Sentry tracks errors by commit,Sentry,383
7037,02:16,"Wes hasn't used conventional commits",Experience,383
7038,04:04,Commit message syntax,Syntax,383
7039,05:01,Remembering syntax is hard,Remembering,383
7040,05:43,CLI could help with commits,CLI help,383
7041,06:49,VS Code extension helps,VS Code,383
7042,07:49,SemVer explained,SemVer,383
7043,09:03,Versioning with conventional commits,Versioning,383
7044,09:46,Automatic npm versioning,npm,383
7045,11:38,Awesome documentation,Docs,383
7046,00:26,Submit questions via syntax.fm,Question Submission,384
7047,01:37,WebRTC enables peer to peer communication in the browser,WebRTC,384
7048,03:21,Svelte is the easiest framework for beginners,Svelte,384
7049,05:10,CamelCase vs snake_case - pick one convention and stick to it,Naming Conventions,384
7050,06:26,Debugging is about isolation - isolate the problem then solve it,Debugging,384
7051,09:26,"Framework vs library distinction doesn't really matter",Framework vs Library,384
7052,12:41,Debugging is a skill that improves with experience,Debugging Skills,384
7053,18:43,"For component libraries, use Storybook and Babel aliases",Component Libraries,384
7054,21:43,Use Rust via WebAssembly for performance gains,Rust and WebAssembly,384
7055,27:29,Sanity CMS allows custom diff components,Sanity CMS,384
7056,00:27,Introduction,Intro,385
7057,00:34,Overview of client vs server validation,Overview,385
7058,02:32,Wes explains client side vs server side validation,Explanation,385
7059,03:30,Wes recounts story of manipulating client side validation,Story,385
7060,06:27,Role of client side validation for user experience,Client UX,385
7061,07:29,Client validation should not control app logic,No logic,385
7062,08:31,Client validation is easy to manipulate,Manipulate,385
7063,09:05,Server validation consistent across clients,Consistency,385
7064,12:34,Server validation before database writes,Before DB,385
7065,14:02,"Server throws errors, client displays them",Errors,385
7066,17:17,Validate order total matches on client and server,Match totals,385
7067,18:29,Disable dev tools in production for extra security,Disable dev,385
7068,19:52,"Security is about adding friction, not being unbreakable",Friction,385
7069,20:45,"Security first, then user experience",Security first,385
7070,00:50,Ben started Reactathon conference in 2017 to provide intro level content around React,Reactathon origin,386
7071,02:37,Live Syntax podcasts hosted at Reactathon conferences,Live Syntax at Reactathon,386
7072,04:13,"3 things needed to start a conference: motivation, target audience, execution ability",Starting a conference,386
7073,05:39,Ben motivated by his passion for React and love of developer events/meetups,"Ben's motivation",386
7074,08:02,Important to know your target audience and have an existing brand,Know your audience,386
7075,10:05,"Transparency critical - explain who you are and why you're qualified",Transparency critical,386
7076,10:47,Ben runs Reactathon independently leveraging sales/marketing experience,"Ben's experience",386
7077,13:14,First Reactathon in 2017 was a week of events leading up to React Conf,First Reactathon,386
7078,15:21,"After React Conf canceled, expanded to 3 day conference for all levels",Expanded Reactathon,386
7079,15:52,"After Reactathon, Netlify sponsor asked Ben to organize Jamstack Conf",Jamstack Conf,386
7080,03:41,"CSS Grid doesn't solve masonry layout",masonry gap,387
7081,04:13,CSS Grid Masonry discussed since 2017,masonry old,387
7082,05:35,"Shout out to Dave DeSandro's Masonry JS",masonry shoutout,387
7083,06:58,Masonry packs explicit items first,masonry explicit,387
7084,08:07,Masonry auto flow packs items or goes to next row,masonry pack v next,387
7085,09:28,Can change grid direction like RTL,masonry direction,387
7086,10:43,Examples at link show item placement,masonry examples,387
7087,11:50,Direction works differently than Flexbox axes,masonry direction vs flex,387
7088,13:12,"With aspect ratio and element queries, CSS wishlist done",CSS wishlist,387
7089,14:50,Isotope used masonry for filtering animations,isotope animations,387
7090,00:22,Introduction to how to implement dark mode in web dev,Dark mode intro,388
7091,01:37,Discussion of using Sentry for debugging issues,Sentry debug,388
7092,03:18,Overview of starting with color variables for theming,Color variables,388
7093,04:35,"Using abstract naming like primary, accent for variables",Abstract variables,388
7094,05:17,Benefits of using system color preferences,System colors,388
7095,06:04,Dark mode expectations for color contrast,Dark expectations,388
7096,07:19,Overriding variables instead of CSS overrides,CSS overrides,388
7097,08:46,Using color mix for opacity values,Opacity values,388
7098,09:59,Overriding system color preference with classes,Override system colors,388
7099,12:01,Avoiding flash of unthemed content with cookies,Avoid flash content,388
7100,13:11,Using CSS variables for theming,CSS variables,388
7101,14:27,Creating color variables with LCH,LCH colors,388
7102,16:02,Starting with predefined color palette,Predefined colors,388
7103,18:46,Sizing variables with clamp,Clamp sizing,388
7104,19:32,Overriding existing variables,Override variables,388
7105,22:24,Abstract variable naming conventions,Abstract variables,388
7106,26:37,Component level theming variables,Component variables,388
7107,31:43,Passing variables with inline styles,Inline variables,388
7108,32:34,Zones for theming components,Zones,388
7109,33:22,Light and dark mode overrides,Light/dark overrides,388
7110,38:10,Issues with color contrast in dark mode,Color contrast issues,388
7111,40:49,Avoiding inverse sections in dark mode,Avoid inverse sections,388
7112,41:33,Alternatives to drop shadows in dark mode,Drop shadow alternatives,388
7113,43:06,Avoiding flash of unthemed content,Avoid flash content,388
7114,43:20,Issues with opacity values in themes,Opacity issues,388
7115,48:50,Changing SVG icon colors,SVG color issues,388
7116,54:40,Upcoming features to help with theming,Future features,388
7117,02:33,Jason talks about his new studio setup,Studio setup,389
7118,03:44,Jason started making coding tutorial videos in 2015/2016,Coding videos,389
7119,05:52,Jason went full-time with videos recently to take them further,Full-time videos,389
7120,10:30,Jason is starting a new video series with web devs building apps,New video series,389
7121,23:55,"Focus on what content you'll actually create consistently",Consistent content,389
7122,38:42,Jason feels weird about the React space right now,React space,389
7123,40:38,"Jason sees AI as a creation tool, not publishing tool",AI thoughts,389
7124,45:19,In-person relationships will be more important to cut through noise,In-person relationships,389
7125,00:49,Cloudflare Workers allows running serverless code at the edge,Cloudflare Workers,390
7126,03:14,Cloudflare Workers are useful for customizing CDNs and building highly scalable apps,Use cases,390
7127,07:48,Cloudflare Workers can be used to proxy entire apps or modify responses,Use cases,390
7128,12:33,The edge brings apps closer to users and makes things faster,Edge computing,390
7129,15:23,Cloudflare Workers uses service workers API for a standardized model,Service workers,390
7130,37:00,Cloudflare was first to use service workers model for edge computing,First adopters,390
7131,40:15,Winter CG allows collaboration between runtimes on web standards,Winter CG,390
7132,48:09,Wrangler CLI uses actual Cloudflare Workers runtime for local dev,Local dev,390
7133,54:08,WebAssembly support allows running code in other languages,WebAssembly,390
7134,56:37,Cloudflare offers easy AI model deployment,Cloudflare AI,390
7135,01:00:19,The cache API is useful for persisting data at the edge,Cache API,390
7136,02:33,Darcy built a tweet wall with jQuery for a Holt Renfrew store display,"Darcy's tweet wall",391
7137,02:49,Darcy had to hack into a store from outside to refresh the tweet wall app,Refreshing tweet wall,391
7138,03:52,Darcy became a jQuery master early in his career,jQuery mastery,391
7139,04:20,Scott built a daily deal aggregator called Deal Page,Deal Page,391
7140,05:12,Darcy worked at Jet Cooper which was acquired by Shopify,Jet Cooper acquired,391
7141,06:07,Darcy liked CodeIgniter for its MVC structure,CodeIgniter fan,391
7142,07:25,Darcy contributed to PHP docs early in his career,PHP docs contributions,391
7143,08:10,"Darcy started Themify, a commercial WordPress theme company",Started Themify,391
7144,08:53,Darcy worked at Fantasy Interactive in New York,Fantasy Interactive,391
7145,09:04,"Darcy met Isaac Schlueter, founder of npm, at an early conference",Met Isaac early on,391
7146,10:43,"Ahmed Nasser brought Darcy on to help rebuild npm's team and community trust",Rebuilding npm,391
7147,12:09,npm was acquired by GitHub about a year after Darcy joined,npm acquired,391
7148,13:53,"Other tools have started to encroach on npm's enterprise space",Encroaching competition,391
7149,14:58,npm went through a tough time before Darcy joined,npm tough spot,391
7150,17:00,npm got a lot of hate for issues like peer deps,npm hate,391
7151,18:30,The npm team worked hard to rebuild trust in the community,Rebuilding trust,391
7152,20:06,Volt is a new package manager and registry Darcy is building,Introducing Volt,391
7153,21:11,"There's been a lack of innovation in JS package registry infrastructure",Lack of registry innovation,391
7154,22:29,Package manager clients are limited by server APIs,Client limitations,391
7155,22:45,Volt ships a local proxy of the registry with the client,Local proxy registry,391
7156,23:06,Volt allows managing private registry instances,Private registries,391
7157,23:26,Volt will have APIs for new registry capabilities,New registry APIs,391
7158,24:27,Remote caching shares build artifacts between teams,Remote caching,391
7159,25:40,Volt will optimize packages by providing different distributions,Package distributions,391
7160,26:52,"Most packages ship a lot of code that isn't used",Unused code,391
7161,28:54,Volt can create ESM variants of legacy CommonJS packages,Package variants,391
7162,30:15,"npm is slower because it's highly configurable",npm config slowness,391
7163,31:19,Hard linking has issues like lack of Windows support,Hard link issues,391
7164,33:20,Yarn pioneered workspaces support,Yarn workspaces,391
7165,34:48,Volt wants to be a direct competitor to monorepo tools like NX,Compete with NX,391
7166,36:05,Microsoft has thousands of JS packages in a monorepo,Microsoft monorepo,391
7167,37:14,Every Microsoft web app uses shared JS packages,Microsoft packages,391
7168,38:44,NPM never built policy engines for enterprises,No NPM policy engine,391
7169,40:37,"Darcy doesn't see config locations as a major problem",No config problem,391
7170,42:34,Enterprises often run private registries for security,Private registries,391
7171,45:48,Entire npm registry is about 28 terabytes,28 TB registry,391
7172,48:16,Volt aims to be the Google of packages,Google of packages,391
7173,49:37,Security tools rely on inaccurate registry metadata,Inaccurate metadata,391
7174,50:58,Socket analyzes package contents instead of just metadata,Socket analysis,391
7175,52:19,Volt will have dependency selectors like CSS,Dependency selectors,391
7176,53:27,Darcy recently got a goldendoodle puppy named Charlie,New puppy,391
7177,54:51,Darcy likes reading Scientific American magazine,Scientific American,391
7178,56:00,Darcy received a Nespresso machine as a gift,Nespresso machine,391
7179,57:49,Darcy recommends watching the BlackBerry movie,BlackBerry movie,391
7180,59:48,Darcy is listening to the new Blink 182 album,New Blink 182,391
7181,01:00:17,Darcy is seeing Moneen and Protest the Hero shows soon,Moneen and PtH shows,391
7182,00:17,Maps and sets - spicy buffalo objects,Maps/sets,392
7183,01:08,Maps can have any type as a key,Map keys,392
7184,02:21,Sets automatically deduplicate values,Set values,392
7185,04:52,Looping over maps and sets,Looping,392
7186,06:42,"Use cases - metadata, dictionaries, lookups",Use cases,392
7187,09:55,API for maps and sets,API,392
7188,12:08,Using maps as a cache,Caching,392
7189,13:45,Sets vs arrays,Sets vs arrays,392
7190,17:31,When to use sets,Use sets,392
7191,20:24,Unique set values and use cases,Unique values,392
7192,22:52,Weak maps and sets,Weak maps/sets,392
7193,00:31,Introducing stale while revalidate caching technique,Caching intro,393
7194,01:05,Centux Replay for caching error handling,Caching errors,393
7195,01:47,Explanation of stale while revalidate caching header,Stale revalidate explained,393
7196,02:07,Caching HTML pages to avoid database queries,Caching HTML,393
7197,02:24,Caching Syntax open graph images to speed up generation,Caching images,393
7198,02:28,Open graph images take long time to generate,Slow image gen,393
7199,03:11,Why you might want to cache something,Why cache,393
7200,03:26,Avoiding expensive operations with caching,Avoid expense,393
7201,04:08,Caching used in many areas of computer science,Caching ubiquitous,393
7202,04:20,Avoiding expensive operations with caching,Avoid expense,393
7203,04:55,Caching images to avoid re-downloading,Caching images,393
7204,05:11,Putting caches closer to users with CDNs,CDN caching,393
7205,05:26,Local browser caches assets,Local caching,393
7206,05:40,CDNs cache assets globally,Global CDNs,393
7207,06:13,Server can respect cache headers,Server caching,393
7208,07:07,Caching to limit API hits,Limit API hits,393
7209,07:40,Caching expensive image generation,Cache images,393
7210,08:24,Serving from cache avoids expense of regeneration,Avoid expense,393
7211,09:02,Max age sets cache lifetime in seconds,Max age explained,393
7212,10:06,"Don't cache sensitive user-specific data",No user cache,393
7213,10:22,"S-maxage caches on CDN, maxage on browser",S-maxage explained,393
7214,11:52,Max age sets total cache lifetime,Max age sets cache lifetime,393
7215,12:05,Stale while revalidate sets stale cache lifetime,Stale lifetime,393
7216,12:16,Stale value tells how long to serve stale asset,Stale value,393
7217,13:33,Stale while revalidate serves stale but refreshes,Stale but refreshes,393
7218,14:41,Stale while revalidate avoids waiting for background tasks,Avoids waiting,393
7219,15:11,Not for content that must always be fresh,Not for fresh content,393
7220,16:16,Accuracy important for stale cache suitability,Accuracy matters,393
7221,18:35,Why not use stale while revalidate everywhere?,Why not everywhere?,393
7222,18:47,Caching adds complexity,Caching complex,393
7223,19:22,Need traffic to enable stale revalidations,Need traffic,393
7224,20:08,"Some things don't need caching",Not always needed,393
7225,20:41,CDN propagation delays limit speed,CDN delays,393
7226,21:18,Show wrap-up,Wrap-up,393
7227,00:42,Launch issues and lessons learned,Site launch,394
7228,02:33,Too much data crashed database,Database timeout,394
7229,03:26,"Just launch, don't over polish",Launch early,394
7230,04:29,AI transcript caused database timeout,AI transcripts,394
7231,09:09,Error monitoring essential for launch,Error monitoring,394
7232,14:15,Replay showed odd player bug cause,Bug replay,394
7233,16:27,UI bugs missed in dark mode,Dark mode bugs,394
7234,18:40,WASM bundling issues on Vercel,WASM issues,394
7235,22:07,Site launches faster now,Fast launch,394
7236,23:36,AI generated show notes very good,AI show notes,394
7237,26:25,Local development very fast,Fast local dev,394
7238,27:38,Mind payload sizes in production,Payload sizes,394
7239,31:39,New browser APIs look promising,Browser APIs,394
7240,36:19,Background jobs and serverless issues,Background jobs,394
7241,40:21,Launched with TypeScript errors,TypeScript errors,394
7242,42:57,Basic tests sufficient for launch,Basic testing,394
7243,45:09,Wes improved design and polish,Design polish,394
7244,00:53,How to build a website or app,Topic,395
7245,03:08,Design and code workflow,Workflow,395
7246,06:33,Design systems vs creative design,Design approach,395
7247,10:12,Real vs fake data,Data,395
7248,13:36,Templating engines,Templating,395
7249,18:18,Component design approaches,Components,395
7250,21:16,Testing components,Testing,395
7251,23:37,CSS variables and dev tools,CSS,395
7252,26:31,Varied fake data,Data,395
7253,30:07,Do you need a CMS?,CMS,395
7254,33:25,Static CMS options,CMS,395
7255,36:13,Picking backend first,Backend,395
7256,39:54,Meta frameworks,Frameworks,395
7257,41:46,End-to-end testing,Testing,395
7258,44:15,Integration testing challenges,Testing,395
7259,47:36,You may not need complex hosting,Hosting,395
7260,49:09,Simple HTML/CSS hosting options,Hosting,395
7261,00:33,Wes and Scott introduce guest Mark Techson from Angular team,Angular intro,396
7262,02:33,"Mark explains Angular rebrand is just a rebrand, same framework",Rebrand,396
7263,03:15,Scott asks about history of Angular JS and Angular,History,396
7264,05:20,Wes asks about new Angular website angular.dev,Angular.dev,396
7265,07:15,Mark explains how interactive tutorials work using web containers,Tutorials,396
7266,08:39,Mark discusses strengths of Angular ecosystem and adoption by enterprise,Strengths,396
7267,10:45,Mark talks about Angular being used in production at scale at Google,Google scale,396
7268,11:38,Mark explains Angular requires TypeScript,TypeScript,396
7269,13:17,Discussion about Angular adopting RxJS Signals for state management,State signals,396
7270,15:20,Wes asks about state management strategies in Angular,State options,396
7271,19:05,Mark excited about deferred loading with new template syntax,Deferred loading,396
7272,20:33,Mark explains declarative deferred loading syntax,Deferred syntax,396
7273,21:29,Teams share ideas like deferred loading across frameworks,Sharing ideas,396
7274,23:09,Mark explains new low-level control flow if/for syntax,Control flow,396
7275,25:25,Scott asks about meta-framework and SSR story for Angular,Metaframework,396
7276,26:17,Mark explains hydration support but not full metaframework yet,Hydration,396
7277,27:39,Discussion about internal Google framework Wiz,Wiz framework,396
7278,31:10,Wes asks about new view transition APIs,Transitions API,396
7279,32:39,Scott asks about CSS strategy in Angular,CSS strategy,396
7280,33:56,Wes asks how data flows from components to templates,Data flow,396
7281,35:07,Wes jokingly asks about competition with other teams at Google,Google teams,396
7282,39:37,Wes asks about component library ecosystem,Components,396
7283,42:03,Scott asks how Angular works with web components,Web components,396
7284,43:02,Mark shares he uses VS Code high contrast theme,Editor setup,396
7285,44:18,Mark discusses how he stays up to date on web tech,Staying current,396
7286,45:36,Wes says no need to rush to latest trends,Latest trends,396
7287,47:39,Mark recommends tech radars to spot shifts vs trends,Tech radar,396
7288,49:42,Discussion about Thoughtworks technology radar,Thoughtworks radar,396
7289,51:27,Mark shares Godot game engine as his sick pick,Godot pick,396
7290,53:48,Mark plugs Angular.dev and his encouragement videos,Angular plug,396
7291,02:10,nth child microsyntax allows more control over nth child selectors,nth child microsyntax,397
7292,07:16,CSS motion path allows moving DOM elements along SVG paths,CSS motion path,397
7293,11:23,scroll snap allows snapping to specific regions when scrolling,scroll snap,397
7294,15:12,scroll driven animations enable animations based on scroll position,scroll driven animations,397
7295,17:48,margin trim trims margins at container edges,margin trim,397
7296,00:24,TypeScript future viability,TypeScript viability,398
7297,00:29,Flutter for web apps,Flutter web,398
7298,00:37,Tailscale for secure remote access,Tailscale,398
7299,00:52,Making Syntax website faster with Sentry,Sentry perf,398
7300,08:29,Canvas apps can be fast but lack browser features,Canvas apps,398
7301,14:01,Tailscale for secure remote access,Tailscale,398
7302,17:08,Bandcamp music sales platform,Bandcamp,398
7303,24:01,Modern workflows for WordPress sites,WordPress workflows,398
7304,36:41,Shoelace web component library,Shoelace lib,398
7305,40:31,Rust project ideas,Rust projects,398
7306,45:50,"Having Scott's wife back on the show","Scott's wife",398
7307,47:53,Using MongoDB for AI embeddings,MongoDB embeddings,398
7308,00:36,Discussing CSS Layers,CSS Layers,399
7309,02:46,What CSS Layers are,Layers,399
7310,03:47,Browser Support for CSS Layers,Support,399
7311,04:13,Purpose and usage of CSS Layers,Purpose,399
7312,05:06,Layers solve specificity issues,Specificity,399
7313,06:03,Redesigning sites with legacy code,Redesign,399
7314,07:17,Handling third party CSS overrides,Third Party CSS,399
7315,08:13,Defining layer order ahead of time,Layer Order,399
7316,08:54,Authoring order matters without defined layers,Authoring Order,399
7317,09:45,Overriding legacy CSS with layers,Legacy Override,399
7318,10:41,Non-layered CSS precedence,Non-layered CSS,399
7319,11:54,Inline styles precedence over layers,Inline Styles,399
7320,12:25,Non-layered CSS overrides layers,Non-layered Precedence,399
7321,13:19,Using @import to wrap legacy CSS in layers,@import Legacy,399
7322,16:24,Nesting layers for finer control,Nesting Layers,399
7323,18:07,Example layer usage,Layer Examples,399
7324,20:21,More layers provide more benefits,More Layers,399
7325,21:10,Tailwind uses layers under the hood,Tailwind Layers,399
7326,23:19,"Adam Argyle's nested layer usage",Argyle Layers,399
7327,25:21,"Una Kravitz's simple layer usage",Kravitz Layers,399
7328,02:33,Welcoming Salma Alam Naylor to talk DevRel,Intro,400
7329,04:34,Where DevRel teams exist in companies,DevRel in company,400
7330,06:29,DevRel as a bridge between community/engineering/product/marketing,DevRel role,400
7331,10:26,"Developers don't want to be marketed to by companies",Marketing,400
7332,15:56,Speaking at a conference on personal Twitch stream,Speaking,400
7333,21:42,DevRel being given blog post quotas,Blog quotas,400
7334,24:02,Writing 50% blog posts on product and 50% on personal interests,Blog split,400
7335,35:49,Getting into DevRel by doing it as a hobby first,Getting into DevRel,400
7336,38:14,Having your own website/domain is important,Personal domain,400
7337,41:41,Pick 1 platform to focus on instead of trying them all,Focus platform,400
7338,45:23,DevRel needs research time to keep up with web dev,Research time,400
7339,50:13,"Some conferences aren't very inclusive in their speaker lineups",Conference inclusion,400
7340,54:39,Recreating 1990s mysterious website Hell.com,Hell.com,400
7341,02:04,Standardize source maps to fix bugs and improve performance,Source maps,401
7342,05:37,New method to format durations based on locale,Format durations,401
7343,08:25,Revise source maps to be smaller and parse faster,Faster source maps,401
7344,13:04,Temporal API to replace JavaScript date time,Temporal API,401
7345,21:08,Find last index and last instance in arrays,Last in arrays,401
7346,23:42,Import JSON files directly into JavaScript,JSON imports,401
7347,24:50,Change regex flags within expressions,Regex modifiers,401
7348,26:51,Group arrays by callback return value,Array grouping,401
7349,30:54,Immutable array methods like sort and splice,Immutable arrays,401
7350,00:33,Discussion on Payload CMS,Payload CMS,402
7351,02:14,Thoughts on where Payload is going,Payload direction,402
7352,03:21,Using CMS solutions and building your own admin UI,CMS solutions,402
7353,04:46,Payloads features and benefits over other CMS,Payload features,402
7354,06:18,Naming and positioning Payload vs other CMS,Payload naming,402
7355,08:09,Using Payload for non-website tools and internal enterprise apps,Payload use cases,402
7356,09:27,Payload deployments - customization and flexibility,Payload flexibility,402
7357,11:07,Using Drizzle ORM with Payload for flexibility,Drizzle and Payload,402
7358,13:36,Generating Payload types for front-end usage,Payload types,402
7359,14:14,Pronouncing MS SQL and database options,MS SQL pronunciation,402
7360,15:19,Payload performance considerations in DB choice,Payload performance,402
7361,16:24,Automatically joining tables with Drizzle for Payload,Joining tables,402
7362,16:48,TypeScript migrations with Drizzle,TypeScript migrations,402
7363,18:12,Maintaining MongoDB and Drizzle implementations,Multiple databases,402
7364,19:48,Querying Payload data from front-end frameworks,Querying data,402
7365,21:48,Simplifying headless by using Payload and front-end together,Headless simplicity,402
7366,23:04,Moving back to simplicity from complexity in web dev,Web simplicity,402
7367,24:39,Moving Payload architecture to Next.js,Next.js move,402
7368,25:30,Next.js server components importance for Payload,Server components,402
7369,26:45,"GitHub and AI's increasing roles",GitHub and AI,402
7370,27:34,Building custom vs configurable UIs with CMS,Custom UIs,402
7371,30:05,Building Payload visual editor for any front-end,Visual editor,402
7372,30:41,Example of building ecommerce site powered by Payload,Ecommerce example,402
7373,31:25,Exposing Payload admin UI to end users,Exposing admin UI,402
7374,32:46,Building Payload component library for front-ends,Component library,402
7375,33:20,Filling gap between Payload admin and front-end UIs,Bridging admin UIs,402
7376,35:12,Avoiding building back-ends from scratch with CMS,Avoid back-end building,402
7377,36:18,Hosting front-ends with Payload Cloud,Hosting front-ends,402
7378,38:20,Need for Laravel equivalent in JavaScript ecosystem,JavaScript Laravel,402
7379,39:48,Payloads goal to be Ruby on Rails of TypeScript,Payload goals,402
7380,41:17,Sustainability of open source Payload development,Open source sustainability,402
7381,42:09,Managing Payload open source contributions,Managing contributions,402
7382,43:39,Using GitHub for Pull Requests with Payload,GitHub PRs,402
7383,44:05,Thoughts on GitHub moving more into AI,GitHub and AI,402
7384,45:35,Responsibly using AI for content creation,Responsible AI,402
7385,47:08,Fundraising plans and revenue sources for Payload,Revenue sources,402
7386,48:29,Using Sentry for error tracking with Payload,Sentry integration,402
7387,50:16,Fixing bugs with help of Sentry session replays,Fixing bugs with Sentry,402
7388,51:43,Payload offices and team based in Michigan,Michigan offices,402
7389,53:12,Learning web development again from scratch,Learning from scratch,402
7390,54:07,Hopes for bundler and ESM improvements,Bundler hopes,402
7391,02:30,ARIA roles and labels explained,ARIA,403
7392,05:04,Using ARIA labels for better UI context,Context,403
7393,09:05,Accessibility lawsuits and legal requirements,Lawsuits,403
7394,12:11,ARIA roles describe element purpose,Roles,403
7395,21:54,ARIA labeled by associates labels,Labeled by,403
7396,00:34,Discussion on whether you can trust random npm packages,npm trust,404
7397,01:18,socket.dev launched 1.5 years ago to help pick safe open source packages,socket.dev,404
7398,02:24,Some malicious packages steal environment variables and API keys,malicious packages,404
7399,11:12,"Event stream node package was hijacked to steal users' cryptocurrency",event stream hijack,404
7400,16:21,Socket scans npm packages for suspicious signals like new network requests,scanning packages,404
7401,20:27,Socket scans every package with over 500 downloads and new publishes,scanning criteria,404
7402,23:15,"Protestware packages add unwanted code based on user's location",protestware packages,404
7403,26:00,Socket finds about 400 malicious packages per week,malicious packages found,404
7404,36:37,WebTorrent uses WebRTC data channels for peer-to-peer file transfer,webtorrent implementation,404
7405,44:00,Wormhole provides end-to-end encrypted file sharing,wormhole encrypted files,404
7406,02:26,Overview of observer pattern,Pattern overview,405
7407,02:43,Used in game development,Game dev use,405
7408,04:05,Achievements as observer example,Achievements,405
7409,05:12,Decoupled event communication,Decoupled events,405
7410,06:50,Observer and subject components,Components,405
7411,07:32,Intersection observer example,Intersection,405
7412,08:17,Potential downsides of observers,Downsides,405
7413,10:18,Observers in JavaScript,JavaScript,405
7414,10:55,Other DOM observers,DOM observers,405
7415,12:54,Event listeners as observers,Event listeners,405
7416,15:16,Differences from observables,Observables,405
7417,16:59,Signals and observer pattern,Signals,405