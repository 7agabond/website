id,number,title,date,url,show_notes,hash,slug,md_file,created_at,updated_at,show_type
syntax_podcast_show_00000,0,Preview,2017-06-27 16:00:00.000,https://traffic.libsyn.com/syntax/Syntax000.mp3?dest-id=532671,"
## Show Notes

It's Coming! Subscribe now so we can launch this puppy with a bang!
",ed9dd64fc6beec1179fc4c1ce54f6dd8ff25a415d294b038bbe1fded1d470835,preview,/shows/000 - Syntax Preview.md,2023-10-16 20:06:52.965,2023-10-27 15:57:40.759,SPECIAL
syntax_podcast_show_00001,1,React Tools,2017-07-05 12:00:00.000,https://traffic.libsyn.com/syntax/syntax001_4.mp3,"
## Show Notes
* [Wes Bos' Site](https://wesbos.com)
* [Level Up Tutorials site](https://www.leveluptutorials.com/)
* [Level Up Tutorials YouTube channel](https://www.youtube.com/user/LevelUpTuts)
* [Scott Tolinski personal site](http://www.scotttolinski.com/)
* [Cloudflare](https://www.cloudflare.com/)
* [Next.js](https://learnnextjs.com/)
* [Hacker News Example in Next.js](https://github.com/now-examples/next-news)
* [GraphQL](http://graphql.org/learn/)
* [Graphcool](https://www.graph.cool/)
* [create-react-app](https://github.com/facebookincubator/create-react-app)
* [React dev-tools](https://github.com/facebook/react-devtools)
* [Redux dev-tools](https://github.com/gaearon/redux-devtools)
* [Preact.js](https://preactjs.com/)
* [React Storybook](https://github.com/storybooks/storybook)
* [Meteor](https://www.meteor.com/)
* [Blaze](http://blazejs.org/)

## Sick Picks

* Wes: [Parcel App](https://parcelapp.net/)
* Scott: [Fish shell](https://fishshell.com/)

## Shameless Plugs

* [Learn Node](http://wesbos.com/learn-node/)
* [React Native for everyone](https://www.leveluptutorials.com/store/products/tutorials/lut-dd014)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",47ad8480e9df86f5e89d1969f1ce00bc6d88c4506746dd24aeee12848d3711e3,react-tools,/shows/001 - React Tools.md,2023-10-16 20:06:53.018,2023-10-27 15:57:40.833,TASTY
syntax_podcast_show_00002,2,Webcam and audio access with WebRTC and getUserMedia(),2017-07-12 12:00:00.000,https://traffic.libsyn.com/syntax/syntax002.mp3,"
## Show Notes
* [WebRTC](https://webrtc.org/)
* [Apple WebRTC Support](https://www.theregister.co.uk/2016/04/13/apple_rolling_webrtc_into_webkit/)
* [GetUserMedia](https://w3c.github.io/mediacapture-main/getusermedia.html)
* [Slack](https://slack.com)
* [WebTorrent](https://webtorrent.io)
  * https://github.com/webtorrent/webtorrent
* [Soctt WebRtc Mirror](https://github.com/stolinski/bboy-tools/blob/master/client/tools/Timemachine.js)
* [MediaRecorder](https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder)
* [Electron](https://electron.atom.io/)
* [Kap](https://getkap.co/)
* [Wes Security Cam](https://github.com/wesbos/HTML5-Security-Camera)
* [Scott Colorbars YouTube](https://www.youtube.com/watch?v=4cuqYDnekpg)
* [Wes Face Detection](https://github.com/wesbos/HTML5-Face-Detection)
* [Fluent Conf](https://conferences.oreilly.com/fluent/fl-ca)

## Sick Picks
* Wes:
  * [Peak Design Everyday Backpack](https://www.peakdesign.com/everyday-backpack)
  * [Everyday Backpack Video](https://www.youtube.com/watch?v=Wf8US4LJp1w)
  * [Splice](https://splice.com/)
* Scott:
  * [Quik by GoPro](https://quik.gopro.com)

## Shameless Plugs
#### [JavaScript30](https://javascript30.com)
A Free 30 Day Vanilla JS Coding Challenge Course. Build 30 things in 30 days with 30 tutorials.
No Frameworks No Compilers No Libraries No Boilerplate. Join 101,746 others.

#### [Level Up Tutorials](https://leveluptutorials.com/)
Over 860 free video tutorials for beginners, intermediate and expert web professionals. Level Up your skills with clear, high production, free video tutorials.

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a2bc038f22a4a8ce0f633b76721fd9b784b502daaafb5d6c0e07470fc6058f83,webcam-and-audio-access-with-webrtc-and-getusermedia,/shows/002 - Webcam and audio access with WebRTC and getUserMedia().md,2023-10-16 20:06:53.058,2023-10-27 15:57:40.876,TASTY
syntax_podcast_show_00003,3,CSS Preprocessors and Structuring CSS,2017-07-19 12:00:00.000,https://traffic.libsyn.com/syntax/Syntax003.mp3,"
## Show Notes

* [WesBos Website](http://wesbos.com)
* [Level Up Tutorials](https://leveluptutorials.com)
* [GraphQL](http://graphql.org)
* [Dinosaur JS Conference](https://dinosaurjs.org)
* [Angular](https://angular.io)
* [Pug / Jade](https://pugjs.org/api/getting-started.html)
* [EJS](http://www.embeddedjs.com)
* [BEM Methodology](https://en.bem.info/methodology/)
* [Stylus](http://stylus-lang.com)
* [Rupture](http://jescalan.github.io/rupture/)
* [Less](http://lesscss.org)
* [Sass](http://sass-lang.com)
* [PostCSS](http://postcss.org)
* [PostCSS Autoprefixer](https://github.com/postcss/autoprefixer)
* [RuckSack](https://www.rucksackcss.org/)
* [cssnext](http://cssnext.io)
* [LostGrid](http://lostgrid.org)
* [Bootstrap](http://getbootstrap.com)
* [Haml](http://haml.info)
* [Babel](https://babeljs.io)
* [Flickity Plugin](https://flickity.metafizzy.co)
* [webpack](https://webpack.js.org)
* [Compass](http://compass-style.org)
* [React](https://facebook.github.io/react/)

## Sick Picks

* Wes:
  * [Bartender 2](https://www.macbartender.com)
  * [Vanilla](http://matthewpalmer.net/vanilla/)
* Scott: [Power Blocks](http://www.powerblock.com)

## Shameless Plugs

#### [JavaScript30](https://javascript30.com)
A Free 30 Day Vanilla JS Coding Challenge Course. Build 30 things in 30 days with 30 tutorials.
No Frameworks No Compilers No Libraries No Boilerplate. Join 101,746 others.

#### [The Sketch Course & UX Prototyping with Principle Combo](https://store.leveluptutorials.com/products/tutorials/lut-dd013008)
Limited Sale Price: $39.99 ~~$49.99~~

Learn the new industry standard for web design. Become an expert in the app that is changing how designers work in the modern web and app design world.

**_Animate Your Ideas, Design Better Apps_**

Principle makes it easy to design animated and interactive user interfaces. Whether you're designing the flow of a multi-screen app, or new interactions and animations, Principle lets you create designs that look and feel amazing.

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9895c80db6faea45c1828e2154b4e8fc3321905ee66449f5567d460359e24578,css-preprocessors-and-structuring-css,/shows/003 - CSS Preprocessors and Structuring CSS.md,2023-10-16 20:06:53.107,2023-10-27 15:57:40.920,TASTY
syntax_podcast_show_00004,4,JavaScript Tooling,2017-07-25 22:14:19.844,https://traffic.libsyn.com/syntax/Syntax004.mp3,"
## Sponsor

* [Deliciousbrains WP Migrate DB Pro](https://deliciousbrains.com/syntax) - Use the code SYNTAX for 20% off

## Show Notes

* [WesBos Website](http://wesbos.com)
* [Level Up Tutorials](https://leveluptutorials.com)
* [WHY USE WWW?](http://www.yes-www.org/why-use-www/)
* [Webpack](https://webpack.github.io/)
* [Babel](https://babeljs.io/)
* [ESLint](http://eslint.org/)
* [Prettier](https://github.com/prettier/prettier)
* [Babili](https://github.com/babel/babili)
* [Prepack](https://prepack.io/)

## Sick Picks

* Scott: [Figma](https://www.figma.com)
* Wes: [CalDigit TS3 Dock](http://www.caldigit.com/thunderbolt-3-dock/#TS3)

## Shameless Plugs

#### [JavaScript30](https://javascript30.com)
A Free 30 Day Vanilla JS Coding Challenge Course. Build 30 things in 30 days with 30 tutorials.
No Frameworks No Compilers No Libraries No Boilerplate. Join 101,746 others.

#### [React Native for everyone](https://www.leveluptutorials.com/store/products/tutorials/lut-dd014)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",378cacdb9efa17529d68c15c81de199529bf2bea161fa09a0feb41449ef14b04,javascript-tooling,/shows/004 - JavaScript Tooling.md,2023-10-16 20:06:53.155,2023-10-27 15:57:40.960,SPECIAL
syntax_podcast_show_00005,5,How to Slam Dunk Freelancing,2017-08-02 14:26:58.000,https://traffic.libsyn.com/syntax/Syntax005.mp3,"
## Sponsor

* [Deliciousbrains WP Migrate DB Pro](https://deliciousbrains.com/syntax) - Use the code SYNTAX for 20% off

## Show Notes

* [Stickers](https://bos.af) - SOLD OUT MORE SOON
* [Scott's Personal Website on Gatsby](http://scotttolinski.com/)
* [Gatsby Codealong](https://www.youtube.com/watch?v=xqaThBnesfY)
* [Gatsby](https://github.com/gatsbyjs/gatsby)
* [MJML Email Framework](https://mjml.io/)
* [The E-Myth Revisited Book](http://amzn.to/2f8y8Li)
* [Design is a Job](http://amzn.to/2uZ9CQw)
* [Breaking the Time Barrier](https://www.freshbooks.com/blog/breakingthetimebarrier)
* [Basecamp](https://basecamp.com/)
* [Trello](https://trello.com/)
* [Freshbooks](http://www.shareasale.com/r.cfm?B=963929&U=976068&M=52946&urllink=)
* [Wave](https://www.waveapps.com/)

## Sick Picks
* Wes:
  * [Hyper Key + Karabiner Elements](https://github.com/tekezo/Karabiner-Elements/)
  * [Better Touch Tool](https://www.boastr.net/)
* Scott: [King of the Road](https://www.viceland.com/en_us/show/king-of-the-road)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a11d1e72b6b107d3eb96c0a6e4f40e578285e9946e08478790788d9b4d56b83f,how-to-slam-dunk-freelancing,/shows/005 - How to Slam Dunk Freelancing.md,2023-10-16 20:06:53.196,2023-10-27 15:57:41.009,TASTY
syntax_podcast_show_00006,6,Accepting Money on the Internet 💰💸,2017-08-09 15:30:00.000,https://traffic.libsyn.com/syntax/Syntax006.mp3,"
In this episode we talk about how to accept money on the internet including the ups of Stripe, the downs of PayPal.

## Sponsor

* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes

* [Apollo](http://www.apollodata.com/)
* [React Apollo](http://dev.apollodata.com/react/)
* [GraphCool](https://graph.cool)
* [Stripe](http://stripe.com/)
* [PayPal](http://paypal.com/)
* [Braintree](https://www.braintreepayments.com/)
* [Stripe Docs](https://stripe.com/docs)
* [HTML5 Autocomplete Types](https://wiki.whatwg.org/wiki/Autocomplete_Types)
* [Stripe Radar](https://stripe.com/docs/radar)
* [Royal Bank PayPal WorkAround](http://travelblogbreakthrough.com/canadian-paypal-users-transfer-usd-bank/)
* [Stripe Atlas](https://stripe.com/atlas)
* [Transferwise](https://transferwise.com/u/wesleyb22)
* [Stripe Bitcoin](https://stripe.com/bitcoin)

## Sick Picks
* Wes: [ChefSteps](https://www.youtube.com/user/chefsteps)
* Scott: [What Cha Tea](http://what-cha.com/)

## Shameless Plugs
* [Wes' Courses](https://wesbos.com/courses)
* [Level UP Tutorials Youtube](https://www.youtube.com/user/LevelUpTuts)
* [How to GraphQL](https://www.howtographql.com)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",71386ca78cceed17839610ae8754fc99832194e4aa4e8beb253d2c055ab10141,accepting-money-on-the-internet,/shows/006 - Accepting Money on the Internet.md,2023-10-16 20:06:53.245,2023-10-27 15:57:41.055,TASTY
syntax_podcast_show_00007,7,Scott Tolinski Origin Story 🎧 📹 💻 🕺,2017-08-09 15:30:00.000,https://traffic.libsyn.com/syntax/Syntax007.mp3,"
In this episode, Scott talks about his unconventional career path and how to grow your career by working on what you love.

## Sponsor

* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes

* [UofM Performing Arts Technology](https://www.music.umich.edu/departments/pat/index.php)
* [Devin Kerr](http://www.devinkerr.com/)
* [Jamie Schefman](http://partybabymusic.com/)
* [Michelle Chamuel](http://michellechamuel.com/)
* [Guitar World](http://www.guitarworld.com/)
* [Ghostly International](http://www.ghostly.com/)
* [Q LTD](http://qltd.com/)
* [Michigan Creative](https://creative.umich.edu/)
* [Ford](http://www.ford.com/)
* [GTB](https://www.gtb.com/)
* [Level Up Tutorials](https://www.leveluptutorials.com/)
* [Scott Concussion](https://www.youtube.com/edit?o=U&video_id=ApwQLpJgmqc)
* [Atya](https://getatya.com)

## Sick Picks
* Scott: [Good Hertz](https://goodhertz.co/)

## Shameless Plugs
* [Wes' Courses](https://wesbos.com/courses)
* [Level UP Tutorials Youtube](https://www.youtube.com/user/LevelUpTuts)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b332b5dead329c6a7f4918e3eb01956395e6d17f92df6761213a1d7943c7dadd,scott-tolinski-origin-story,/shows/007 - Scott Tolinski Origin Story.md,2023-10-16 20:06:53.294,2023-10-27 15:57:41.104,TASTY
syntax_podcast_show_00008,8,Wes Bos Origin Story 🎸💼💻🔥🐷,2017-08-23 13:00:00.000,https://traffic.libsyn.com/syntax/Syntax008.mp3,"
In this episode, Wes talks about his career path from a MySpace customizer to where he is now.

## Sponsor

* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes

* [Brootal PS20.itgo.com](http://ps20.itgo.com/)
* [CDN Money](http://cdn-money.com)
* [2004 WesBos.com](https://web.archive.org/web/20040715000000*/http://wesbos.com)
* [The Success of Zara: Technology Makes It Possible](http://soft4inventory.com/blog/the-success-of-zara-technology-makes-it-possible/)
* [REI](https://www.rei.com/)
* [BTM at Ryerson University](http://www.ryerson.ca/programs/undergraduate/business-technology-management/)
* [WordPress Codex](https://codex.wordpress.org/)
* [Angle Media Group](http://www.anglemediagroup.com/)
* [Ryerson Co-op](http://www.ryerson.ca/trsm-co-op/)
* [Jet Cooper](http://www.jetcooper.com/)
* [Darcy Clarke](http://www.darcyclarke.me/)
* [DealPage Daily Deal Aggregation](https://web.archive.org/web/*/dealpage.ca)
* [jQuery IRC](https://irc.jquery.org/)
* [YayQuery](http://yayquery.com/)
* [Ladies Learning Code](http://ladieslearningcode.com/)
* [HackerYou](http://hackeryou.com/)
* [Wes' Blog](http://wesbos.com)
* [Sublime Text Book](https://sublimetextbook.com/)
* [Command Line Power User](https://commandlinepoweruser.com/)
* [Flexbox.io](https://flexbox.io)
* [React For Beginners](https://reactforbeginners.com/)
* [ES6 for Everyone](https://es6.io/)
* [JavaScript30](https://javascript30.com/)
* [This Podcast](https://syntax.fm)

## Sick Picks
* Wes: [MotoRead](https://motoread.com/)

## Shameless Plugs
* [Wes' Courses](https://wesbos.com/courses)
* [Level UP Tutorials Youtube](https://www.youtube.com/user/LevelUpTuts)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",646b369fbe40e2474649653b567f48534d4b2bad11f75e3349643c62cd145f78,wes-bos-origin-story,/shows/008 - Wes Bos Origin Story.md,2023-10-16 20:06:53.339,2023-10-27 15:57:41.188,TASTY
syntax_podcast_show_00009,9,"Dang, that's handy! JavaScript Utility Libraries 🛠️",2017-08-30 13:12:11.000,https://traffic.libsyn.com/syntax/Syntax009.mp3,"
Scott and Wes talk all about different JavaScript utility libraries that make you say ""Dang, that's handy!""

## Sponsor

* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes

* [Lodash](https://lodash.com/docs/4.17.4)
* [Underscore](http://underscorejs.org/)
* You should follow [John David Dalton](https://twitter.com/jdalton) on twitter
* [Moment.js](https://momentjs.com/)
* [moment().endOf(‘term’)](https://medium.com/@timrwood/moment-endof-term-522d8965689)
* [date-fns](https://date-fns.org/)
* [Slugify](https://www.npmjs.com/package/slugify)
* [speakingurl](https://github.com/pid/speakingurl)
* [Fetch API](https://developer.mozilla.org/en/docs/Web/API/Fetch_API)
* [Axios](https://github.com/mzabriskie/axios)
* [Cookie Jar](https://www.npmjs.com/package/cookiejar)
* [store.js](https://github.com/marcuswestin/store.js)
* [Cross Storage](https://github.com/zendesk/cross-storage)
* [Faker.js](https://github.com/marak/Faker.js/)
* [Woah URL.searchParams() is a thing](https://developer.mozilla.org/en-US/docs/Web/API/URL/searchParams)
* [Parse URI](https://www.npmjs.com/package/parseuri)
* [url-search-params-polyfill](https://www.npmjs.com/package/url-search-params-polyfill)
* [ngrok](https://ngrok.com/)
* [Browsesync](https://www.browsersync.io/)
* [Async](https://caolan.github.io/async/)
* [Bling.js](https://gist.github.com/paulirish/12fb951a8b893a454b32)


## Sick Picks
* Wes: 
  * [Essentialism Book](http://amzn.to/2vqp77J)
  * [Essentialism Audiobook](http://amzn.to/2xLolPn)
* Scott:
  * [Satechi Aluminum Multi-Port Adapter](http://amzn.to/2xwiy0W)
  * [Satechi all Docks](http://amzn.to/2xwuGPm)

## Shameless Plugs
* [Dhanish Gajjar's Instagram](https://www.instagram.com/dhanishgajjar/)
* [Paweł Grzybek's Snippet Generator](https://pawelgrzybek.com/snippet-generator/)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",099eec57565a8d6d97d74dbade4b630f0358fbc4bc55d9203e7fea08b7134a1e,dang-that-s-handy-javascript-utility-libraries,/shows/009 - JavaScript Utility Libraries.md,2023-10-16 20:06:53.372,2023-10-27 15:57:41.232,TASTY
syntax_podcast_show_00010,10,CSS in JS 💅👩‍🎤💁🚒 (Drama Free!),2017-09-06 13:38:25.555,https://traffic.libsyn.com/syntax/Syntax010.mp3,"
The most requested syntax episode ever! We break down CSS in JavaScript. Pros/Cons? What is it? What problems does it solve? What libraries should you use? Is it stupid or amazing?

## Sponsor

* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Follow us on twitter!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* [Syntax](https://twitter.com/SyntaxFM)

## Show Notes

* [BEM](http://getbem.com/)
* [Styled Components](https://www.styled-components.com/)
* [Emotion](https://github.com/tkh44/emotion)
* [Radium](https://github.com/FormidableLabs/radium)
* [Glamorous](https://github.com/paypal/glamorous)
* [Styled JSX](https://github.com/zeit/styled-jsx)

## Sick Picks
* Scott: [Boxyapp Mail Client](http://www.boxyapp.co/)
* Wes: [Airpods](http://amzn.to/2wFYNpc)

## Shameless Plugs
* [Grab Level Up Tuts before the price goes up!](https://www.leveluptutorials.com/)
* [Modern Dev Tools](https://moderndevtools.com/)

#### Twitter
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d15aeaf8b05e69e8041c398a97837fab11ae604381d8a078ab78e6f3a5fb45ae,css-in-js-drama-free,/shows/010 - CSS in JS.md,2023-10-16 20:06:53.410,2023-10-27 15:57:41.273,TASTY
syntax_podcast_show_00011,11,Our favourite Productivity Hacks 🔥,2017-09-13 12:51:21.000,https://traffic.libsyn.com/syntax/Syntax011.mp3,"
Scott and Wes - Do you sleep? How do you get so much done? You replied to me way too fast! We share our best productivity hot tips and the apps we use the GSD.

## Sponsor
* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes

* [Alfred](https://www.alfredapp.com/)
* [Alfred Package Manager -Packal](http://www.packal.org/)
* [Alfred Units Conversion Workflow](http://www.packal.org/workflow/units)
* [Cobalt2 Alfred Theme](https://github.com/wesbos/Cobalt2-Alfred-Theme)
* [Alfred Timezones Workflow](http://www.packal.org/workflow/timezones)
* [Alfred Process Kill Workflow](https://github.com/ngreenstein/alfred-process-killer)
* `⌘+L` makes text huge!
* [Alfred Font Awesome Workflow](https://github.com/ruedap/alfred-font-awesome-workflow)
* [Alfred Encode / Decode Workflow](https://github.com/willfarrell/alfred-encode-decode-workflow)
* [Alfred DevDocs Workflow](https://github.com/yannickglt/alfred-devdocs)
* [Alfred Stack Overflow Workflow](https://github.com/deanishe/alfred-stackoverflow)
* [Clipy Clipboard Manager App](https://clipy-app.com/)
* [Todoist](https://en.todoist.com/)
* [Things App](https://culturedcode.com/things/)
* [Getting Things Done Book](https://www.amazon.ca/Getting-Things-Done-Stress-Free-Productivity/dp/0143126563/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&psc=1&refRID=MHJARXPDAEP4QJA5R0FP)
* [Git Alias](https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases)
* [Text Expander](https://smilesoftware.com/textexpander)
* [aText](https://www.trankynam.com/atext/)
* [Evernote](https://evernote.com/)
* [Video Speed Controller](https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk?hl=en)
* [Karabiner Elements](https://github.com/tekezo/Karabiner-Elements/)
* [Better Touch Tool](https://www.boastr.net/)
* [Focus App](https://heyfocus.com/)
* [Self Control App](https://selfcontrolapp.com/)
* [Slicy](http://macrabbit.com/slicy/)
* [Figma Exports](https://www.figma.com)
* [CloudApp](https://my.cl.ly/r/0O0c442O0w1Z0n3W)


## Keyboard Shortcuts You Should Know
Sorry windows users.
* `⌘ + Tab` switch between apps
* Press `q` to quit an app from this place
* `⌘` + Backtick to switch between multiple windows of an app
* `⌘ + T` for a new tab
* `⌘ + Shift + T` to reopen a closed tab
* Crank up **Key Repeat** in your keyboard setting
* `Option + ←/→` to move word-by-word
* Add Shift to select those items
* `⌘+option+Arrow` to switch tabs
* `⌘ + Number` to go to that tab #
  * [Scott's gist with keybindings for VSCode](https://gist.github.com/stolinski/f49adedf7053b76634f437e824188a70)
* [Enable tabbing on OSX dialog Boxes](http://wesbos.com/osx-dialog-boxes-keyboard-tab/)
* Press question mark in any google app to get a list of shortcuts

## Sick Picks
* Scott: [Rhino Shield Case](http://amzn.to/2iXXxZE)
* Wes: [Deep Work](https://www.amazon.ca/Deep-Work-Focused-Success-Distracted/dp/1455586692)

## Shameless Plugs
* [Level Up Tuts](https://www.leveluptutorials.com/)
* [Wes' Courses](https://wesbos.com/courses)

#### Tweet us your tips
 * [@wesbos](https://twitter.com/wesbos)
 * [@stolinski](https://twitter.com/stolinski)
 * Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets

",700a01526a19c29ce484be494ba7cc2ec454ba4ad87b31aadbc9888593744e24,our-favourite-productivity-hacks,/shows/011 - Productivity Hot Tips.md,2023-10-16 20:06:53.447,2023-10-27 15:57:41.314,TASTY
syntax_podcast_show_00012,12,Why is everyone switching to VS Code?,2017-09-20 13:13:36.876,https://traffic.libsyn.com/syntax/Syntax012.mp3,"
Scott and Wes talk about switching to VS Code. What is so good about it? Killer features? Must have Plugins!

## Sponsor
Need to learn Docker? Check out Nick Janetakis' [Dive into Docker](https://diveintodocker.com/ref-bwfff) course which is currently on sale!

## Follow us on twitter!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* [Syntax](https://twitter.com/SyntaxFM)

## Show Notes
* [Cobalt2 for VS Code](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2)
* [Visual Studio Code](https://code.visualstudio.com/)
* [@rachsmithtweets 🔥 rename symbol tip](https://twitter.com/rachsmithtweets/status/907350440634748928) - you should follow her too!
* Use F8 to cycle through inline errors
* Open the problems tab to see all your applications errors and warnings
* The built in debugger
* [ESlint Package](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint)
* You can use the [Prettier Package](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode) on it's own, or use via your .eslintrc file and just use the above ESLint plugin.
* [Git History](https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory)
* [Git Lens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)
* [Debugger for Chrome](https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome)
* [Color Highlight](https://marketplace.visualstudio.com/items?itemName=naumovs.color-highlight)
* Settings: `""editor.formatOnSave"": true` and `""eslint.autoFixOnSave"": true`
* [Wes' Current ESLint + Prettier Config](http://wes.io/maOn)
* [Grumpy Developer](https://twitter.com/kurtinatlanta/status/909821362197401601)
* [Import Cost](https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost)
* [Path Intellisense](https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense)
* [npm Intellisense](https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense)
* [CSS Intellisense](https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion)
* [PHP Intellisense](https://marketplace.visualstudio.com/items?itemName=HvyIndustries.crane)
* [Another PHP Intellisense](https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-intellisense)
* [Custom CSS and JS Loader](https://marketplace.visualstudio.com/items?itemName=be5invis.vscode-custom-css)
* [Cobalt2 Theme](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2)
* [Material Theme](https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme)
* [Material Pale Night Theme](https://marketplace.visualstudio.com/items?itemName=whizkydee.material-palenight-theme)
* [Version Lens for npm](https://marketplace.visualstudio.com/items?itemName=pflannery.vscode-versionlens)
* [Project Manager](https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager)
* [⌘ + # Tabs Key Bindings](https://gist.github.com/stolinski/f49adedf7053b76634f437e824188a70)
* [Scott's VS Code Series on YouTube](https://www.youtube.com/watch?v=4q1tD39Mk_A)
* [Sublime Keymap for VS Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.sublime-keybindings)
* [ES6 Absolute Imports with Webpack](https://moduscreate.com/es6-es2015-import-no-relative-path-webpack/)
* [Autorename Tag](https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag)

## Sick Picks
* Scott: 
  * [Moonwalking with Einstein](http://amzn.to/2ycbnul)
  * Outdoes Wes by 3oz: [Bottl](https://www.amazon.com/BOTTL-Stainless-Bottle-Growler-Bigger/dp/B01ICB6N90)
* Wes:
  * [Yeti Rambler](http://yeti.com/rambler)
  * [Ozark Trail 20oz](https://www.walmart.com/ip/Ozark-Trail-20-Ounce-Double-Wall-Vacuum-Sealed-Tumbler/178742177)

## Shameless Plugs
* [Level Up Tuts](https://www.leveluptutorials.com/) - check out scott's new shopping cart!
* [Wes' Courses](https://wesbos.com/courses)
* [Stickers are coming!](https://bos.af/)
",fef0472e00003044c02ef5c5e4f5058a0fb739213d7d33e68ff2a9881223786d,why-is-everyone-switching-to-vs-code,/shows/012 -Why is Everyone Switching to VS Code.md,2023-10-16 20:06:53.483,2023-10-27 15:57:41.366,TASTY
syntax_podcast_show_00013,13,The Command Line for Web Developers,2017-09-27 14:22:32.009,https://traffic.libsyn.com/syntax/Syntax013.mp3,"
This episode is all about how to become comfortable and proficient with the command line. This one includes windows users too!

## Sponsor
Need to learn Docker? Check out Nick Janetakis' [Dive into Docker](http://wes.io/mkHG) course which is currently on sale!

## Show Notes
* [React 16](https://facebook.github.io/react/blog/2017/09/26/react-v16.0.html)
* [Command Line Power User Course](https://commandlinepoweruser.com/)
* [iTerm2](https://www.iterm2.com/)
* [Hyper](https://hyper.is/)
* [Awesome Hyper](https://github.com/bnb/awesome-hyper)
* [Cmder for Windows](http://cmder.net/)
* [Windows Subsystem Linux](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide)
* [Windows 10 Insiders Program](https://insider.windows.com/en-us/)
* [ZSH](http://www.zsh.org/)
* [Oh My ZSH](http://ohmyz.sh/) - You'll want to start here, not on zsh.org
* [Fish Shell](https://fishshell.com/)
* [Oh My Fish](https://github.com/oh-my-fish/oh-my-fish)
* [Fisherman](https://github.com/fisherman/fisherman)
* [Bass](https://github.com/edc/bass)
* [ZSH Autosuggestion](https://github.com/zsh-users/zsh-autosuggestions)
* [ZSH Syntax Highlighting](https://github.com/zsh-users/zsh-syntax-highlighting)
* [z Frecent](https://github.com/rupa/z) (GET THIS)
* [Tree](http://brewformulas.org/Tree)
* [Wes Custom Tree](https://gist.github.com/wesbos/1432b08749e3cd2aea22fcea2628e2ed)
* [Brew](https://brew.sh/)
* [Brew Cask](https://caskroom.github.io/)
* [Trash CLI](https://github.com/sindresorhus/trash-cli)
* [YouTube-DL](https://rg3.github.io/youtube-dl/)
* [Wes' Video on youtube-dl](https://www.youtube.com/watch?v=-eUd2k5M1B0)
* [pbcopy](http://osxdaily.com/2007/03/05/manipulating-the-clipboard-from-the-command-line/)
* [ZSH Extract](https://coderwall.com/p/arwifq/extracting-archives-from-the-terminal-easily)
* `..` or `...` or `....` or `.....` or `......`
* `!!` re-runs the last command (careful!)
* `cd -` back to last folder - this works with lots of commands like `git checkout -`
* `⌘ + K` to clear. `⌘ + R` to clear but maintain scrollback
* [Cobalt2 for ZSH + iTerm2](https://github.com/wesbos/Cobalt2-iterm)
* [Cobalt2 for Hyper](https://github.com/wesbos/hyperterm-cobalt2-theme)
* [Patched Powerline Fonts](https://github.com/powerline/fonts)
* [Slavic Cat](https://github.com/yangwao/omf-theme-slavic-cat)
* [Wild Cherry](https://github.com/mashaal/wild-cherry)

## Sick Picks
* Scott: [Source Making](https://sourcemaking.com/)
* Wes: [My Fitness Pal](http://www.myfitnesspal.com/)

## Tweet us your tips!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)

## Shameless Plugs
* [Level Up Tuts](https://www.leveluptutorials.com/) - check out scott's new shopping cart!
* [Wes just updated his ES6 course!](https://ES6.io)
* [Stickers are coming!](https://bos.af/)
",4f930592dcc35dec8588eb3d20967ab684ae573e3a3197addef2046c5f89ff23,the-command-line-for-web-developers,/shows/013 - The Command Line for Web Developers.md,2023-10-16 20:06:53.523,2023-10-27 15:57:41.416,TASTY
syntax_podcast_show_00014,14,Our Stacks Explained,2017-10-04 13:14:34.000,https://traffic.libsyn.com/syntax/Syntax014.mp3,"
Scott and Wes detail their current stacks that run their training platforms. From front end code linting to the server side and databases.

## Sponsor

[Intro to The Serverless Framework](http://courses.codemore.io/p/serverless-framework-node/) by Loren Stewart. The first 20 people to use the code SYNTAX_FREE will get the course for free! After that make sure to use the code SYNTAX for an extra $10 off.

## Show Notes
* [Wes' Stack Youtube Video](https://www.youtube.com/watch?v=4CS436KZ35A)
* [Meteor](https://www.meteor.com/)
* [Node.js](https://nodejs.org/en/)
* [Level Up Tutorials](https://leveluptutorials.com/) is fast!
* [Express](https://expressjs.com/)
* [Learn Node](https://learnnode.com/)
* [Passport JS](http://passportjs.org/)
* [MongoDB](https://www.mongodb.com/)
* [Mongoose](http://mongoosejs.com/)
* [mLab Hosting](https://mlab.com)
* [Mongohub](https://github.com/jeromelebel/MongoHub-Mac)
* [MongoDB Compass](https://www.mongodb.com/products/compass)
* [Studio 3T](https://studio3t.com/)
* [MiniMongo](https://github.com/mWater/minimongo)
* [React](https://reactjs.org/)
* [Styled Components](https://www.styled-components.com/)
* [Stylus Lang](http://stylus-lang.com/)
* [Metor Sessions](https://docs.meteor.com/api/session.html)
* [Prerender.io](https://prerender.io/)
* [React Apollo](https://github.com/apollographql/react-apollo)
* [Cross Storage](https://github.com/zendesk/cross-storage)
* [Victory Charts](https://github.com/FormidableLabs/victory-chart)
* [Cloudinary](https://cloudinary.com/invites/lpov9zyyucivvxsnalc5/qceqbjqg3a3fe5gwozcd)
* [Tim Thumb](https://github.com/GabrielGil/TimThumb)
* [Amazon S3](https://aws.amazon.com/s3/)
* [Amazon Cloudfront](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html)
* [Backblaze](https://secure.backblaze.com/r/008x60)
* [Vimeo Pro](https://vimeo.com/professionals)
* [Jest](https://facebook.github.io/jest/)
* [Mocha](https://mochajs.org/)
* [Fixer.io Curreny Conversion API](http://fixer.io/)
* [Brain Tree](https://www.braintreepayments.com/)
* [Stripe](https://stripe.com/)
* [Mandrill](https://www.mandrill.com/)
* [Drip](https://getdrip.com)
* [Amazon SES](https://aws.amazon.com/ses/)
* [PostMark App](https://postmarkapp.com) (THE BEST)
* [Zurb Inky](https://www.npmjs.com/package/inky)
* [Juice CSS Inliner](https://www.npmjs.com/package/juice)
* [Meteor Hosting](https://www.meteor.com/hosting)
* [Meteor Hosting](https://www.meteor.com/hosting)
* [Digital Ocean](https://m.do.co/c/0c736d39efbc)
* [Zeit Now](https://zeit.co/now)
* [Heroku](https://www.heroku.com/)
* [Bluehost Sucks](https://github.com/bluehost/endurance-page-cache/issues/16)
* [Let's Encrypt](https://letsencrypt.org/)
* [Cloudflare](https://www.cloudflare.com/) I KNOW I SAID CLOUDFRONT OOPS

## Sick Picks
* Scott: [Focusrite Scarlett 2i2](http://amzn.to/2xWd2Xv)
* Wes: [Better Bidding](http://www.betterbidding.com/index.php?app=hotel_lists#ffmenuWB)

## Tweet us your tips!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)

## Shameless Plugs
* [Level Up Tuts](https://www.leveluptutorials.com/) - check out scott's new shopping cart!
* [Wes just updated his ES6 course!](https://ES6.io)
",d04187559a9a9841aa9330561078793f70d5126e8bb7be5d557ace36b03c3575,our-stacks-explained,/shows/014 - Our Stacks Explained.md,2023-10-16 20:06:53.563,2023-10-27 15:57:41.465,TASTY
syntax_podcast_show_00015,15,"Advice for New Developers, Imposter Syndrome and Interviewing at Google",2017-10-11 13:07:11.000,https://traffic.libsyn.com/syntax/Syntax015.mp3,"
Scott and Wes dish out some tasty advice to developers who are new to web development. How do you get better? How do you deal with imposter syndrome?

## Sponsor
* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Shameless Plugs
* [Wes just updated his ES6 course!](https://ES6.io)
* [Mastering Figma is now Launched!](https://www.leveluptutorials.com/store/products/tutorials/lut-dd015)

## Show Notes
This show is light on links :)

* [The Gap by Ira Glass](https://vimeo.com/85040589)
* [Hackathon Starter](https://github.com/sahat/hackathon-starter)

## Sick Picks

* Scott: [Nintendo Switch](https://www.nintendo.com/switch/)
* Wes: [Creative Market Fonts](https://creativemarket.com/fonts)

## Tweet us your tips!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)

",d9271bbcda5dc8b47d40eb6407ddbf2f2816cf10332fb7cffc12b39d1e0d592b,advice-for-new-developers-imposter-syndrome-and-interviewing-at-google,/shows/015 - Advice for Newbies.md,2023-10-16 20:06:53.601,2023-10-27 15:57:41.519,TASTY
syntax_podcast_show_00016,16,"Tasty Treats — Rems VS Ems, Remote Work, Making Money, Getting good at Design + more! 🍬",2017-10-18 13:23:26.044,https://traffic.libsyn.com/syntax/Syntax016.mp3,"
## Show Notes


* **Q**: Rems vs Ems vs Pixels? What do you use?
* **Q**: What activity, that isn't developer related, benefits you most as a developer?
* [Becoming a Supple Leopard](https://www.amazon.com/gp/product/1936608588/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=1936608588&linkCode=as2&tag=leveluptuts01-20&linkId=b9f598d6432ce7394e5b0510fe0bebba)
* **Q**: Is a hot dog a sandwich? 🌭
* **Q** If Google offered you a job today, would you take it?
* [Mike Rowe: Why Entrepreneurs Crave the 'Reverse Commute'](https://www.youtube.com/watch?v=3K-b7CZaPpw)
* **Q**: How did Wes and Scott Meet?
* **Q**: What are your thoughts on CMSs, like WordPress, adding JavaScript frameworks, like React?
* **Q**: Where do you find remote work?
* **Q**: How do you make money?
* **Q**: Can a back-end dev become a good designer?
* [Hero Patterns](http://www.heropatterns.com/)
* [Steve Schoger's Twitter](https://twitter.com/steveschoger)
* **Q**: Do you ever feel tired?
* **Q**: What do you think about live streaming?
* Should we do a Syntax live stream?!
* **Q**: What stack should a new developer use?
* **Q**: What is your process for deciding on new tools?
* [React FAQ](https://reactfaq.site/) - sign up for Tim's newsletter!
* **Q**: Where do you see yourself in 5 years?

## Sick Picks
* Scott: [Fivestar Notebook](http://amzn.to/2xNmnCH)
* Wes: Read about your credit card benefits + perks!

## Tweet us your tips!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)

",c43cd17947a4917d81f6f91db6c83d705fec985387f358c3f242704792e94d62,tasty-treats-rems-vs-ems-remote-work-making-money-getting-good-at-design-more,/shows/016 - QA.md,2023-10-16 20:06:53.655,2023-10-27 15:57:41.560,TASTY
syntax_podcast_show_00017,17,"22 Buzz Words Explained — Mutations, Pure Functions , Serverless, Hoisting, MVC + More",2017-11-01 12:54:28.534,https://traffic.libsyn.com/syntax/Syntax017.mp3,"
Buzz Words! WTF Do they mean?! Do They Mean Things?? Let's Find Out!

## Sponsor
* [Freshbooks](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## The Buzz Words

This is the order in which we talk about the different concepts. If you have anything to add to the next buzzwords show, tweet us [@SyntaxFM](https://twitter.com/syntaxfm)

* Serverless / Cloud Functions
* Composition in functional programming
* [funfunfunction](https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q)
* Progressive Enhancement
* Singleton
* APIs + SDKs
* Pure Functions + Side Effects
* [Date-fns](https://date-fns.org/)
* Immutable / Mutable / Mutations
* [Immutable.js](https://facebook.github.io/immutable-js/)
* [JavaScript30 Array Cardio](https://javascript30.com/)
* Isomorphic / Universal JavaScript
* Microservices
* Scoping
* Closures
* **M**odel **V**iew **C**ontroller Pattern
* [Learn Node](https://learnnode.com/) with a stupid explanation of MVC
* Bike Shedding
* Tree Shaking
* Hoisting
* ES Next
* Asynchronous / Synchronous

## Sick Picks
* Scott: [Ghost in the Wires: My Adventures as the World's Most Wanted Hacker](http://amzn.to/2gVP4pH)
* Wes: [Apollo Reddit App for iOS](https://apolloapp.io/)

## Shameless Plugs
* Scott: [React 16 for Everyone](https://www.leveluptutorials.com/store/products/tutorials/lut-dd016)

## Tweet us your tasty treats!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)

",dcbb6f713601c9e955ecaf9550dc560b19f7feea19b103d792605065aad0d50f,22-buzz-words-explained-mutations-pure-functions-serverless-hoisting-mvc-more,/shows/017 - Buzz Words.md,2023-10-16 20:06:53.694,2023-10-27 15:57:41.600,TASTY
syntax_podcast_show_00018,18,All About CSS Grid,2017-11-08 14:06:32.171,https://traffic.libsyn.com/syntax/Syntax018.mp3,"
It's a long awaited CSS Grid show! How does it work? When do you use it? What's the difference between Grid and Flexbox?

## Sponsor
* [Save A Bro](https://saveabro.com/) is selling absolutely hilarious mustache t-shirts for $18 - all proceeds go to support the fight against prostate cancer.  Use the coupon code ""syntax"" at checkout to get free shipping in the US.

## The Show Notes

* [Wes Bos AMA](https://dev.to/wesbos/im-wes-bos-ask-me-anything/comments) where he tricked Scott that Bert Bos was his dad
* [CSS Tricks A Complete Guide to Grid](https://css-tricks.com/snippets/css/complete-guide-grid/)
* [Rachel Andrew](https://rachelandrew.co.uk/)
* [Rachel Andrew Twitter](https://twitter.com/rachelandrew)
* [Rachel's Grid by Example](https://gridbyexample.com/)
* [Rachel's Grid AMA](https://github.com/rachelandrew/cssgrid-ama)
* [CSS Grid Garden](http://cssgridgarden.com/)
* [The Story of CSS Grid, from Its Creators](https://alistapart.com/article/the-story-of-css-grid-from-its-creators)
* [Jen Simmons](http://jensimmons.com/)
* [Jen Simmons Twitter](https://twitter.com/jensimmons)
* [Jen Simmons Labs](http://labs.jensimmons.com/)
* [CSS Grid Pinterest / Masonry Layout Question](https://github.com/rachelandrew/cssgrid-ama/issues/19)
* [Wes' grid-auto-flow: dense; Experiment](https://twitter.com/wesbos/status/926119942197522433)
* [grid-auto-flow: dense; Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow)
* [caniuse CSS Grid Support](caniuse.com/#search=grid) - make sure to click the ""Show All"" button
* ""If someone thinks progressive enhancement means providing a crappy experience for older browsers then they’ve got a lot of reading to do."" — [Sara Soueidan](https://twitter.com/SaraSoueidan/status/927150129257250817)
* [Benjamin De Cock - @bdc](https://twitter.com/bdc) dropping tasty CSS Grid treats all day long on twitter.
* [CSS Grid Animation #1](https://twitter.com/wesbos/status/925420897028202498)
* [CSS Grid Animation #2](https://twitter.com/wesbos/status/925422255601016832)
* [David K Piano Twitter](https://twitter.com/davidkpiano?lang=en)
* [Flipping](https://github.com/davidkpiano/flipping)
* [Slide Deck on FLIP](http://slides.com/davidkhourshid/flipping#/)
* [CSS Grid Template Area ASCII](https://mozilladevelopers.github.io/playground/css-grid/08-template-areas/)
* [Grid repeat()](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat)
* [Grid minmax()](https://developer.mozilla.org/en-US/docs/Web/CSS/minmax)
* [CSS Grid nth-row()](https://github.com/w3c/csswg-drafts/issues/1943)
* [CSS Sub-Grid](https://rachelandrew.co.uk/archives/2017/07/20/why-display-contents-is-not-css-grid-layout-subgrid/)

## Sick Picks
* Scott: [Just My Type](https://www.amazon.com/gp/product/1592407463/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=1592407463&linkCode=as2&tag=leveluptuts01-20&linkId=cda796c9ea5df1225e445ff4d0368cb1)
* Wes: [Sick Update on the Caldigit TS3 Dock](http://www.caldigit.com/)

## Tweet us your tasty treats!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)
",013c37c3aa690e57980936ba6d00797a67051543a1202c1527b6e1acde21cc3f,all-about-css-grid,/shows/018 - CSS Grid.md,2023-10-16 20:06:53.754,2023-10-27 15:57:41.656,TASTY
syntax_podcast_show_00019,19,How to get into Speaking At Conferences,2017-11-15 14:28:06.658,https://traffic.libsyn.com/syntax/Syntax019.mp3,"
Wes talks to Scott about speaking at conferences. What are the benefits of speaking? How do you apply? What talk should you give? What makes a good conference talk?

## Freshbooks is the best!

[Freshbooks.com/syntax](https://freshbooks.com/syntax) - Get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## The Show Notes

* Snow Tires are supes important
* Blizzzzaaaaakkksss!!!

### Benefits

* Free travel / accommodations / vacation
* Fantastic Friendships and Industry Connections
* Job Opportunities
* Industry Recognition
* Renewed Excitement
  * Wes loved [David K Piano's Flip Talk](http://slides.com/davidkhourshid/flipping#/)

### How do you Apply / Where to Find Conferences

* Create a CFP
* You need to brute force it
* 🍯 Honey Hole: [Lanyrd Calls](http://lanyrd.com/calls/)
* 🐝 Honey Hole: [The Weekly CFP](http://theweeklycfp.com/)
* 🍯 Honey Hole: [Papercall.io](https://www.papercall.io/)
* [Meetup](http://meetup.com/)

### Types of Talks you could give

1. Lessons Learned Talk
1. The New Concept Talk (_the tasty treats talk_)
1. My Approach to XYZ
1. The Complicated Concepts Explained
1. The Super Interesting Deep End Talk

### What makes a good talk?

* Skip the history lesson - hook them
* Keep your personal bio short
* Start with a banger ‼️
* Short Code Examples
* Short Looping video examples
* [Scott's Origin Story Podcast](https://syntax.fm/show/007/scott-tolinski-origin-story)
* Make sure your talk works offline
* Prepare for aspect ratios
* Plug into the projector before your talk
* Live that dongle life
* Show people _why_ they need to know something


### Slide Deck Software
* Powerpoint or Keynote
* [Wes' HTML5 Slide Deck](https://github.com/wesbos/future-js)
* [Another one of Wes' talks](https://github.com/wesbos/ES6-talk)
* [Reveal JS](http://lab.hakim.se/reveal-js/)
* [React Spectacle](https://github.com/FormidableLabs/spectacle)
* [Prezi](https://prezi.com/)

### Conference Training
* Training pays well
* More hands on experience for conf attendees

### Getting the Most out of a tech conference
* [Wes' Post on Getting the most out of a conference](http://wesbos.com/get-the-most-out-of-conferences/)
* [Conf Code of Conduct](http://confcodeofconduct.com/)
* [Logitech Wireless Clicker](http://amzn.to/2hBmLgD)
* Join Twitter Early
* Have Lunch with Speakers
* Stay off your phone
* Keep your name badge on!
* Practice your break away

## Sick Picks
* Scott: [Spectacle Window Manager](https://www.spectacleapp.com/)
* Wes: [What the heck is the event loop anyway?](https://www.youtube.com/watch?v=8aGhZQkoFbQ)

## Tweet us your tasty treats!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)
",cbcd33087d879a07afe9378929d7243e7afa6875823f4219874b718ffc9bb5ab,how-to-get-into-speaking-at-conferences,/shows/019 - Conferences.md,2023-10-16 20:06:53.794,2023-10-27 15:57:41.720,TASTY
syntax_podcast_show_00020,20,"Fitness, Nutrition, and Losing Weight",2017-11-22 14:25:54.493,https://traffic.libsyn.com/syntax/Syntax020.mp3,"
Wes and Scott talk about their fitness journey and how it relates to being a web developer in terms of energy, focus and mental clarity.

## Get Fit with Dev Lifts — Show Sponsor

[Dev Lifts](https://devlifts.io) - Thad and JC are on a mission to make web developers healthy.

They are currently offering Personal Training and Nutrition Plans for $149 (Regular $249) and with the code **Syntax** you'll get an extra $50 off. That's only $99 for the next ~95 people!

## The Show Notes

* 04:20 - Scott's Fitness Story
* 08:00 - Wes's Fitness Story
* 09:50 - The benefits of fitness and being a web developer. Productivity / Focus / Mental Clarity
* 14:00 - Finding Time to Work Out
* Tweet your work + workout routine to [@SyntaxFM](https://twitter.com/syntaxfm)
* 17:40 - How to work out / What to do / Routines?
* 24:00 - Learning to code && Learning to Workout
* 25:20 - Significant Other Buy-in
* [Fitness Blender](https://www.fitnessblender.com/)
* [Starting Strength](https://startingstrength.com/)
* 28:00 - All About [Dev Lifts](https://devlifts.io)
* [Jeff Nippard Youtube](https://www.youtube.com/channel/UC68TLK0mAEzUyHx5x5k-S1Q)
* 34:00 — Nutrition
* 36:00 — Wes' Keto Nutrition Plan
* [Dom D'Agostino Keto Interview](https://www.youtube.com/watch?v=keSoSyu9m7c)
* [MyFitnessPal](https://www.myfitnesspal.com/)
* [Keto Reddit](https://www.reddit.com/r/keto/)
* [Keto Gains Reddit](https://www.reddit.com/r/ketogains/)
* 41:00 - Scott's Nutrition
* 42:00 - Pop or Soda?
* 45:45 - 16 : 8 Intermittent Fasting
* [IF Reddit](https://www.reddit.com/r/intermittentfasting/)
* 48:30 - Dieting is bad
* Supplements — Don't take our Advice here. Talk to your trainer.
* 50:00 - Wes' Supplements and how Bags of Milk are the best
* [BCAA Amino Energy](http://amzn.to/2hKkVqk)
* [Preworkout Coke'd Up](http://amzn.to/2hIQ9hd)
* [Cissus Quadrangularis Extract - Genoflex](http://amzn.to/2hJcUSd)
* [Fish Oil](http://amzn.to/2iF54tT)
* [Vita Jym Multivitamin](http://amzn.to/2zXYtnV)
* 54:00 - Scott's Supplements
* [NOW Adam Superior Men’s Multi](http://amzn.to/2zVtPvj)
* [Optimum Nutrition Gold Standard 100% Whey Protein](http://amzn.to/2zX0IrM)
* [NOW Psyllium Husk](http://amzn.to/2ze1xZy)
* [BulkSupplements Pure L-Citrulline DL-Malate 2:1 Powder](http://amzn.to/2z96vqL)
* [Bulksupplements Pure Caffeine Capsules. Caffeine can be dangerous warning!](http://amzn.to/2zW4GAJ)

## Sick Picks
* Scott: [TriggerPoint GRID Foam Roller](http://amzn.to/2zbRAMi)
* Wes: [Nike Techfleece Joggers](http://amzn.to/2jL2XYY)

## Tweet us your tasty treats!
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM)
",4d09814df2c13a239caa29e0d8c40b151c568989c2d8ee5f23e928c94d78aa72,fitness-nutrition-and-losing-weight,/shows/020 - Fitness.md,2023-10-16 20:06:53.840,2023-10-27 15:57:41.777,TASTY
syntax_podcast_show_00021,21,"What's New in CSS? Variables, Scoping, New Selectors and Color Functions",2017-11-29 15:18:55.950,https://traffic.libsyn.com/syntax/Syntax021.mp3,"
Wes and Scott talk about the future of CSS - what is new and what should we expect to be coming in the near future?

## Bug Replay — Sponsor

You need to try out [Bug Replay](https://www.bugreplay.com/) for recording and re-playing browser based bugs. It's a  bug reporting tool that can be used at all stages of development and by anyone in your organization. Provide your dev team with detailed reports so they can fix bugs faster.

## Freshbooks — Sponsor

If you are a small business or freelancer check out[Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## The Show Notes!

03:30

* IT'S NOT CALLED CSS4
* You can find the different levels over at [CSS Working Group Drafts](https://drafts.csswg.org/)

06:24

* CSS Custom Properties (CSS Variables)
* Bite and chew over the syntax - it's backwards compatible
* What's the difference between this and Sass/Less/Stylus?
* [JavaScript30.com](https://JavaScript30.com) Day 3 uses JavaScript + CSS Variables
* CSS Tricks: [The CSS attr() function got nothin’ on custom properties](https://css-tricks.com/css-attr-function-got-nothin-custom-properties/)
* Independent Transforms - `transform: rotateX(var(--x)) translateY(var(--y));`

19:20

* [CSS Filters](https://developer.mozilla.org/en-US/docs/Web/CSS/filter)
* Drop Shadow Filter
* [SVG Filters](https://developer.mozilla.org/en-US/docs/Web/SVG/Applying_SVG_effects_to_HTML_content)

28:20

* [RRGGBBAA](https://hashnode.com/post/understanding-rrggbbaa-color-notation-cisvdr52x088fwt53h1drf6m2)
* [Hex transparency in colors](https://stackoverflow.com/questions/15852122/hex-transparency-in-colors)

31:00

* Colour Functions
* [CSS Next](http://cssnext.io/)
* [Draft Spec for Color Functions](https://drafts.csswg.org/css-color/#modifying-colors)

36:00

* CSS Level 4 Selectors
* ITS NOT CSS4!!!!!!
* [css4.rocks](http://css4.rocks/)

40:00

* nth-of-selectoed
* `:nth-child(3n of img.dog)`
* `div:has(img)`

44:00

* Some not-so-new-but-still-cool units
* [Viewport Units](https://css-tricks.com/fun-viewport-units/)
* min-height: 100vh
* ch units
* ex units
* [CSS Angles](https://developer.mozilla.org/en-US/docs/Web/CSS/angle) - deg(), grad(), rad(), turn()

## Sick Picks
* Scott: [Google Pixel 2 XL](https://store.google.com/product/pixel_2)
* Wes: 
  * [Anker 5 Port 40w USB Charger](http://amzn.to/2ng5LhZ)
  * [Anker 10 Port 60w USB Charger](http://amzn.to/2AgOYjx)
  * [Anker 5 Port 60w with a USB-C Port](http://amzn.to/2zOT03R)

## Tweet us your tasty treats!
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",187a1f35c9a5bbd86ade52955babe07e1142c63b0fb1e1491ec316780c76339a,what-s-new-in-css-variables-scoping-new-selectors-and-color-functions,/shows/021 - CSS4.md,2023-10-16 20:06:53.878,2023-10-27 15:57:41.823,TASTY
syntax_podcast_show_00022,22,Failure,2017-12-06 15:00:46.998,https://traffic.libsyn.com/syntax/Syntax022.mp3,"
Failure. How do you deal with it? How to learn from it? How do you know when you should give up vs keep pushing?

## Snipcart — Sponsor

Snipcart allows you to create online shopping carts without any backend work. It's entirely client-side which means it's the perfect fit for anyone building a SPA in React, Angular or any other framework. Check out the full list of features over at [Snipcart.com/syntax](https://snipcart.com/syntax?utm_source=syntax&utm_medium=podcast&utm_campaign=syntax1) and sign up for three months free!

## Get In Shape with DevLifts — Sponsor

[DevLifts](https://devlifts.io/) is how I (Wes) got in shape. After an indepth consultation about your goals, They will create you a personal training and nutrition plan. If you are looking to get in shape in 2018, now is the time to sign up. Use the code SYNTAX for an extra $50 off.

## The Show Notes!

01:34

* Scott and Wes shoot the shit
* Wes is back from the DotJS conference
* Wes does a terrible (and hopefully not offensive) French Accent

03:50

* What's the deal with the #FailFast culture
* We talk about Fear of Failure and how it can stop you from starting anything at all
* High Stakes vs Low Stakes Failure

09:20

* Be aware of how fear of failure manifests itself in your work
* Just do it, put in the work
* Pen to Paper

12:20

* How to deal with mid-project failure
* Getting sick of a project part way through
* Finishing Things is such an underrated skill
* Small wins is key for confidence
* Take the emotion out of the decisions

18:00

* MVP - Minimum Viable Product

19:30

* Do you plan for failure?
* Wes' Life is Course Correction
* Wes is Unapologetically Confident
* Scott is Ignorantly Confident


23:00

* Another one of Scott's amazing segueways into our Sponsor

26:20
* Wes' Facebook Ads Failures
* The cost of admission
* Own your role in something failing

33:33
* Eating burnt rice is a huge character trait
* Pivoting

41:20

* Our own personal failures detailed
* [Scott's Soundcloud](https://soundcloud.com/domesticrobot/sets/best-of-domestic-robot)
* [Scott's Bandcamp](https://domesticrobot.bandcamp.com/)

## Sick Picks
* Scott: [Cypress.io](https://cypress.io)
* Wes: [Dome D201 Dashcam](http://amzn.to/2jlCAFL)

## Tweet us your tasty treats!
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",acdf9dec6f494e4767600c9279fb1fb79f65a85ed28b860f5babbc2d068cde26,failure,/shows/022 - Failure.md,2023-10-16 20:06:53.915,2023-10-27 15:57:41.863,TASTY
syntax_podcast_show_00023,23,Web Development in 2017 && a look ahead at 2018 🍾🍷,2017-12-13 15:18:01.000,https://traffic.libsyn.com/syntax/Syntax023.mp3,"
What happened in web development in 2017? What were our personal and professional feats in 2017? What should we look forward to in 2018?

## Snipcart — Sponsor

Snipcart allows you to create online shopping carts without any backend work. It's entirely client-side which means it's the perfect fit for anyone building a SPA in React, Angular or any other framework. Check out the full list of features over at [Snipcart.com/syntax](https://snipcart.com/syntax?utm_source=syntax&utm_medium=podcast&utm_campaign=syntax1) and sign up for three months free!

## Freshbooks — Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## The Show Notes!

02:00

* Scott's 2017 Look Back
* Scott is a new parent
* Dealing with kids who don't sleep
* Scott's Breakdancing Gains

05:20

* Wes' Look Back
* Taking Health Seriously
* First full year of Wes doing tutorials full time
* Course Correction VS Goals
* Course Platform Improvements
* Lots of Email Marketing
* Migration to Drip

09:10

* Scott cut ties with startup
* 100% Invested in Levelup Tutorials
* Major Platform improvements
* New Payment Gateways
* Lots of new Series - 400 videos!

11:25

* We Launched Syntax!
* Thank you!
* The show is getting good (we think?)

13:50

* Wes launched his [Learn Node](https://LearnNode.com) Course
* Wes updated his [ES6 for Everyone](https://ES6.io) Course
* Lots of feedback on Wes' [JavaScript30](https://JavaScript30.com) course
* Stickers!

16:20

* Goals for 2018
* The Yacht Club
* S.M.A.R.T. Goals

18:00

* Scott's 2018 Goals
* More videos
* More Youtube
* Building a Set
* Less Overtime

20:35

* Wes' 2018 Goals
* Releasing lots and lots of Content
* CSS Grid
* VS Code
* Some ideas around JavaScript and CSS Courses [tweet Wes your feedback](https://twitter.com/wesbos)
* If it's not a Hell Yes, it's a no
* Double down on what works
* New Checkout Experience
* Delegate + Automate
* Get faster at recording

29:40

* JavaScript in 2018
* SSR Frameworks: Next.js, Gatsby, Nuxt.js
* [ParcelJS](https://parceljs.org/)
* Tooling is becoming less of a pain in the ass

33:00

* GraphQL Is Blowin' Upppppp
* Typed Languages / Typings
* Flow / Typescript / ReasonML / GraphQL Typings

38:00

* WordPress' Gutenberg Editor

41:00

* React Patent's Dropped
* Vue became really popular

45:30

* CSS Changes!
* CSS Grid
* Firefox CSS Grid Dev Tools

48:50

* Componentized CSS
* Design Systems
* [Figma](https://figma.io)
* CSS Variables

54:00

* VS Code became very popular

55:00

* The Iron Yard shut down

58:00

* Progressive Web Apps

59:00

* What do we hope for in 2018?

## Sick Picks
* Scott: [Google Daydream](https://vr.google.com/daydream/)
* Wes: [Missive](http://missiveapp.com)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",02ca61ccc195f152538499b64158c5fa658f8207be1eb641a10bbd0cb8bf2d35,web-development-in-2017-and-and-a-look-ahead-at-2018,/shows/023 - 2017 In Review.md,2023-10-16 20:06:53.952,2023-10-27 15:57:41.902,TASTY
syntax_podcast_show_00024,24,All About CSS BEM!,2017-12-21 00:47:25.817,https://traffic.libsyn.com/syntax/Syntax024.mp3,"
Scott and Wes dive into CSS BEM — What is it? Why do you need it? How does it work?

## Sign up for D3 in 5 Days — Sponsor

D3 has a bit of a bad reputation for being hard to learn so Ben Clinkinbeard has put together this awesome 5 day email course that will get you comfortable with the 3 or 4 fundamental concepts that are needed to create amazing data visualizations with D3.js. [Get it now](http://d3in5days.com/syntax/)

## The Show Notes!

01:00

* Minisode! What do you think?
* Meijer is the best!

05:00

* What is CSS BEM?
* What problems does CSS BEM solve?
* Block, Element, Modifier!

8:00

* What about really long class names?

9:00

* Use with Sass/Stylus

12:00

* What about styled components?!

15:00

* Listener Question: Do / should you use Dropbox for a website with Git and node_modules?


## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",8de824afb511b12a6f3f177e1306f3608d568dbc2bdce2da01fd1172ccf68612,all-about-css-bem,/shows/024 - What is CSS BEM.md,2023-10-16 20:06:53.986,2023-10-27 15:57:41.940,SPECIAL
syntax_podcast_show_00025,25,Dealing With Email Overload && Prettier Setups,2017-12-27 14:00:00.000,https://traffic.libsyn.com/syntax/Syntax025.mp3,"
Wes details ""Breakout"" — his email management strategy for overwhelmed creatives and Scott and Wes chat about how they have their prettier setup.

## Freshbooks — Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.


## The Show Notes!

01:00

* [Wes' notes on the Breakout Email Management System](http://wesbos.com/breakout-email/)

02:00

* Do you like minisode or snackisode?
* Any other ideas for names for these short episodes?

04:00

* Email is often busywork

04:30

* You likely have a decision problem

06:00

* Kill it at the source! How do you stop email from getting to you in the first place?

08:00

* Your inbox is not the world's TODO list
* Process it when you get it
* Getting Things Done

09:30

* Filter! Filter! Filter!

10:30

* Germans sure do get a lot of vacation time!

13:00

* Expansions
* Using Robots for empathy
* [Text Expander](https://smilesoftware.com/textexpander)
* [aText](https://www.trankynam.com/atext/)

15:30

* Dictation is great!

17:30

* Video responses

18:30

* Defer

19:19

* Batch Processing Email
* Send + Archive

20:31

* Stop emailing yourself

24:00

* Listener Question: How do you use Prettier?

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5988caa8a582b2cd2577afb64d71a9ee8f89d2e268b005af10a8287bf7517a5c,dealing-with-email-overload-and-and-prettier-setups,/shows/025 - Breakout Email Management.md,2023-10-16 20:06:54.029,2023-10-27 15:57:41.982,TASTY
syntax_podcast_show_00026,26,All About Redux && Cookies vs JWT,2018-01-03 14:00:00.000,https://traffic.libsyn.com/syntax/Syntax026.mp3,"
## Dev Lifts — Sponsor

[Dev Lifts](http://devlifts.io) will create a personal training plan tailored to your 2018 health and fitness goals. Use the code **SYNTAX** for $50 off.

Join with a friend and we'll make you a Buddy Plan that you can do together (nutrition will still be tailored on a per-individual basis, but workouts will be something you can both do together)! Plus, use the coupon code below and you'll both get $100 off.

Enter each other's email address as the coupon code and your discount will be applied to your invoices (invoices are sent manually currently, so I'll apply the discount for you both once you've both signed up). Valid thru January 31, 2018.

## The Show Notes!

01:00

* [Scott's New Redux Course](https://www.leveluptutorials.com/store/products/tutorials/lut-dd018)
* [Redux Docs](https://redux.js.org/)
* What is Redux? Why do we need it?

06:00

* Modifying Your State
* Immutability

07:15

* Actions + Actions Creators
* Dispatching

09:00

* Reducers

14:00

* [Wes' Redux Tutorial](https://LearnRedux.com)

18:30

* What is the difference between Cookies and JWT?

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",df1cc1c94cb44a81944097931cf32c117855768b5fd5a8071297a97bcb62258d,all-about-redux-and-and-cookies-vs-jwt,/shows/026 - Redux.md,2023-10-16 20:06:54.063,2023-10-27 15:57:42.024,TASTY
syntax_podcast_show_00027,27,GraphQL? Here is what you need to know!,2018-01-10 14:13:26.009,https://traffic.libsyn.com/syntax/Syntax027.mp3,"
## Snipcart — Sponsor

Snipcart allows you to create online shopping carts without any backend work. It's entirely client-side which means it's the perfect fit for anyone building a SPA in React, Angular or any other framework. Check out the full list of features over at [Snipcart.com/syntax](https://snipcart.com/syntax?utm_source=syntax&utm_medium=podcast&utm_campaign=syntax3) and sign up for three months free!

## Freshbooks — Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## { show(id: 027) { notes }}

02:40

* What is GraphQL anyways?
* GraphQL Relational Data

04:45

* How is it different than REST?

08:30

* GraphQL's self documenting Nature

09:20

* You don't need to replace your existing REST api
* It can sit infront of multiple APIs

10:00

* GraphQL Resolvers
* [Apollo Link State](https://github.com/apollographql/apollo-link-state) does local data as well

11:50

* GraphQL on the client side
* [Relay](https://facebook.github.io/relay/)
* [Apollo](https://www.apollographql.com/)
* [GraphQL Request](https://github.com/graphcool/graphql-request)
* [Lokka](https://github.com/kadirahq/lokka)
* Nano

13:30

* Why we like Apollo
* Setup is amazingly fast

15:00

* Pagination
* Refreshing of data

18:00

* The GraphQL Core Concepts
* Queries
* Mutations
* Filtering and Sorting
* It's not really a query language

21:00

* How do you say Schema?

22:00

* More on Resolvers

22:50

* Mutations
* Updating the cache

27:00

* Using with existing APIs
* Do you have two schemas now? One for MongoDB and one for GraphQL?


35:00

* CMS and Static Site Generators that run on GraphQL
* [Gatsby](https://github.com/gatsbyjs/gatsby)
* [WP-GraphQL](https://github.com/wp-graphql/wp-graphql)
* [GraphCMS](https://graphcms.com/)

45:00

* [Graph Cool](https://www.graph.cool/)

53:00

* Apollo Link
* Apollo VS Redux

56:00

* Graphiql

## SIIIIICK PICKS

* Wes: [The Indicator Podcast](https://www.npr.org/sections/money/567724614/the-indicator)
* Scott: [You Don't Know JS](https://github.com/getify/You-Dont-Know-JS)

## Shameless Plugs

* [Free GraphQL Tuts from Scott](https://www.leveluptutorials.com/tutorials)
* [CSS Grid Course is coming sooooon!](https://CSSGrid.io)


## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",24db4a0f1e5612a3ac3c6e2dd92f1244beab11687b95f2841cf3c9dafe83772b,graphql-here-is-what-you-need-to-know,/shows/027 - GraphQL.md,2023-10-16 20:06:54.099,2023-10-27 15:57:42.068,TASTY
syntax_podcast_show_00028,28,Async + Await,2018-01-17 16:48:28.549,https://traffic.libsyn.com/syntax/Syntax028.mp3,"
## Freshbooks — Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes

02:55

* [Wes' Async + Await talk on YouTube from DotJS](https://www.youtube.com/watch?v=9YkUCxvaLEk)
* JavaScript is Asynchronous
* [Ryan Dhal (Creator of Node.js) original Node.js talk](https://www.youtube.com/watch?v=ztspvPYybIY)

06:00

* Callback Hell
* Q
* Bluebird
* What is a promise?
* Promises are an IOU

8:30

* Async + Await IS promises
* What is Async + Await?
* How does the code look?
* Returning values from an await

15:20

* Performance Considerations
* MEGA PROMISES
* `Promise.all()`
* Here is an example:
* const [weather, store] = Promise.all(getWeather(), getStores());

19:22

* This stuff is 100% native
* Most new Browser APIs are build on Promises
* [Fetch()](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)
* Some examples:
* `await fetch('https://api.github.com/users/wesbos').then(data => data.json())`
* OR
* `await (await fetch('https://api.github.com/users/wesbos')).json()`
* [Axios](https://github.com/axios/axios)

22:48

* [The Payment Request API](https://developers.google.com/web/fundamentals/payments/)
* You should listen to episode 006 on [accepting money on the internet](https://syntax.fm/show/006/accepting-money-on-the-internet)
* Web Animation API

27:00

* Snackisodes
* Snack Packs
* Hasty Treats?!!!

28:00

* Making callback-based functions promised basked
* [es6-promisify](https://www.npmjs.com/package/es6-promisify)
* [util.promisify()](http://2ality.com/2017/05/util-promisify.html)

30:00

* Error Handling Methods
* View [my slides](https://wesbos.github.io/Async-Await-Talk/) for some code examples.
* Try/Catch
* High Order Function
* Just handle the error when you `callIt().catch(dealWithIt);`
* Node's `process.on('unhandledRejection')` event

36:00

* Browser Support
* Babel it!

38:00

* [AbortController()](https://developer.mozilla.org/en-US/docs/Web/API/AbortController)
* [Abortable Fetch](https://developers.google.com/web/updates/2017/09/abortable-fetch)

## SIIIIICK PICKS

* Scott: [Ring Doorbell](http://amzn.to/2DEUJaL)
* Wes: [The Indicator Podcast](https://www.npr.org/sections/money/567724614/the-indicator)

## SICK TIP

* Chrome's Autoplay is changing
* [Details on this](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes)
* Visit chrome://media-engagement to see your scores

## Shameless Plugs

* [Fullstack GraphQL](https://www.youtube.com/channel/UCyU5wkjgQYGRB0hIHMwm2Sg)
* [CSS Grid Course is coming sooooon!](https://CSSGrid.io)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",fb81051f020c68ecb365826dbccfb605a284a6c0250742d02433ce48911f8442,async-await,/shows/028 - Async Await.md,2023-10-16 20:06:54.142,2023-10-27 15:57:42.118,TASTY
syntax_podcast_show_00029,29,"Hosting & Servers — Heroku, Now, Galaxy, Digital Ocean, Linode, Docker, Netlify and more!",2018-01-24 14:13:19.637,https://traffic.libsyn.com/syntax/Syntax029.mp3,"
## Xojo — Sponsor

Xojo is a cross-platform development tool for creating native apps for desktop, mobile, web and Raspberry Pi.

With Xojo you really can write just one version of your app, say, on the Mac, click a button, and have a completely native Windows version too.

Xojo lets you abstract yourself from specific platform details, so you can focus on what makes your app unique. All apps have completely native controls, even if they weren’t developed on that platform. Just use drag and drop to create your user interface, and one language to program the functionality.

Users also include Fortune 500 companies, citizen developers, professional developers, IT, hobbyists and students - anyone who wants to build apps faster.

Listeners of this show get 20% off with the coupon code SYNTAX over at [xojo.com/syntax](http://xojo.com/syntax)

## Show Notes

* Take a drink every time Wes says exactly

01:10

* [CSS Grid course is out!](https://CSSGrid.io)

03:50

* The most basic hosting / services
* WordPress.org, Medium, Wix, Squarespace

05:00

* Your Cheap PHP/Apache Hosts
* Endurance International Group owns most of the cheap web hosting world
* cPanel
* Bluehost doing shady stuff
* Siteground seems p good

13:20

* Service Based Hosting
* [Heroku](http://heroku.com/)
* [Zeit's Now](https://zeit.co/now)
* [Galaxy](https://www.meteor.com/hosting)

15:00

* What does ""spinning down"" mean?
* Deploying to these services

17:20

* How these services do instant cut-overs to new servers
* SSL Certificates

20:00

* You should listen to the [Our Stacks Explained](https://syntax.fm/show/014/our-stacks-explained) episode.
* [Zeit's Now Alias](https://zeit.co/blog/now-alias)
* [mLab MongoDB Hosting](https://mlab.com/)
* [Compose MongoDB Hosting](https://www.compose.com/)

29:00

* Raw Server Space
* [Linode](https://www.linode.com/)
* [Digital Ocean](https://m.do.co/c/0c736d39efbc)
* [Rackspace](https://www.rackspace.com/)
* Digital Ocean Droplets
* Digital Ocean's docs are 👌👌👌👌

32:00

* What is Nginx?!
* [Let's Encrypt](https://letsencrypt.org/)
* [Mozilla's SSL config generator](https://mozilla.github.io/server-side-tls/ssl-config-generator/)
* [Caddy Server](https://caddyserver.com/)

38:20

* [Docker](https://www.docker.com/)

40:00

* SPA Apps - React, Angular, Vue...
* How to handle Routing
* [Netlify](https://netlify.com)

## SICK PICKS

* Wes:
  * [Magnetic Magsafe-life USB cable for micro USB, USB-c and Lightning](http://amzn.to/2Dqe3KY)
  * [Magsafe-like USB that can handle a 87w Macbook Pro](http://amzn.to/2DwPz3s)
* Wow: [MONGOOSE VS SNAKE VIDEO](https://www.youtube.com/watch?v=OyuIAUlL5IU)
* Scott: [Bulk Supplements](http://amzn.to/2DzGGq9)

## Shameless Plugs

* Scott: [Levelup Tutorials Pro](http://leveluptutorials.com/pro)
* Wes: [CSS Grid Course](https://CSSGrid.io)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c23490a992e944a7a67a50b1a4af592f2a9cada912faae78c377be788e9101f2,hosting-and-servers-heroku-now-galaxy-digital-ocean-linode-docker-netlify-and-more,/shows/029 - Hosting.md,2023-10-16 20:06:54.182,2023-10-27 15:57:42.164,TASTY
syntax_podcast_show_00030,30,"Snack Pack — CSS Frameworks, React HOC, Render Props, Coding Designers, Early Career Advice and a sound board!",2018-01-31 14:02:55.235,https://traffic.libsyn.com/syntax/Syntax030.mp3,"
## Dev Lifts - Sponsor

[Dev Lifts](https://devlifts.io) - Thad and JC are on a mission to make web developers healthy. Get a Personal Training and Nutrition Plan — use the code SYNTAX for $75 off. They have also just announced their [slack-only memberships](https://devlifts.io/slack.html) for $5/month

## Freshbooks - Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes

01:10

* you should try out the new [Syntax Soundboard](https://codepen.io/drehimself/full/BYBwBp/) by Andre Madarang

* [Have a Question?! Submit it here!](https://docs.google.com/forms/d/e/1FAIpQLSfQlAo1wXHiJMySdU-h8QMtfoz92aMS9eycEHXB6eRCLh8KHA/viewform)

03:00

* Skateboarding on a TRAMPOLINE?!

04:30

* **Q:** What are your favourite features coming to HTML 5.2
* [Dialog Box](https://webdesign.tutsplus.com/tutorials/native-popups-and-modals-with-the-html5-dialog-element--cms-23876)
* Multiple Main Tags
* Thanks Jordan!

10:00

* **Q:** How do you retain all the info you learn like a sponge?
* Thanks Ozan

13:30

* What are your favourite CSS Libraries / Frameworks?
* Thanks Blake!

21:00

* What were some of the struggles you had early on in your career? How did you overcome them?
* Learning how to read error logs and messages
* Dealing with Impatience
* Coding is very frustrating

26:50

* What are High Order Components and Render Props?
* [High Order Components](https://reactjs.org/docs/higher-order-components.html)
* [React Render Props](https://reactjs.org/docs/render-props.html)
* [Video: Michael Jackson - Never Write Another HoC](https://www.youtube.com/watch?v=BcVAq3YFiuc)
* [React Downshift](https://github.com/paypal/downshift)
* [React Reconciliation](https://reactjs.org/docs/reconciliation.html)

34:45

* **Q:** When should you just drop the towel on code?
* When should you throw in the towel on code?
* Scrapping a codebase and moving from PHP to JS
* Let's talk about if it's worth it

41:00

* **Q:** What is the best way for a JS beginner to get their hands dirty?
* Don't work on apps, work on pieces!

47:50

* How do you recommend a designer falling in love with frontend dev sharpen their skills while being (happily) committed to a full time design position?
* Should designers code?

## SIIIIIIICK PICKS

* Scott:
  * [It’s Not How Good You Are, It’s How Good You Want to Be](http://amzn.to/2DOE9V9)
  * [Whatever You Think, Think the Opposite](http://amzn.to/2GybLbh)
* Wes:
  * [Tony Robins Podcast](https://www.tonyrobbins.com/podcasts/)
  * [The Kevin Rose Show](https://www.kevinrose.com/)

## Shameless Plugs

* Scott: [New React Native Course!](https://www.leveluptutorials.com/pro)
* Wes: [CSS Grid Course](https://CSSGrid.io)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",be6607b5dc066c546f1ca0346612a755686636d3da92b6c6c7a634dccabc90b6,snack-pack-css-frameworks-react-hoc-render-props-coding-designers-early-career-advice-and-a-sound-board,/shows/030 - QA.md,2023-10-16 20:06:54.219,2023-10-27 15:57:42.211,TASTY
syntax_podcast_show_00031,31,"Wes and Scott's Lives - Breakdancing, BBQ, Wives, Work/Life Balance, Problem Solving, YouTube Subscriptions",2018-02-07 13:45:56.482,https://traffic.libsyn.com/syntax/Syntax031.mp3,"
## Freshbooks - Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Show Notes


0:00

* Goofing Around

1:30

* Real show starts

2:12

* Scott explains his breakdancing hobby
* ""Breaking"" is breakdancing
* What is flavour?

10:20

* Wes talks about being into BBQ
* [World's Longest Yard Sale](http://www.127yardsale.com/)
* Wes has a large Big Green Egg and a MiniMax BGE

19:00

* Scott talks about how he is into making music
* Domestic Robot
* Scott is starting up a new project called ""Shift. Super.""


21:30

* How do you find time for these hobbies?
* Avoiding burnout
* Work/Life Balance
* Buy in from significant others

28:00

* Wes talks about working out and going on date nights with his wife
* Hamilton is cool
* Home Renos

35:00

* Doing a downtown job
* Problem Solving

40:00

* Scott talks about his love for KungFu Movies
* 5 Fingers of death
* 5 Deadly Venoms
* secret service of the imperial court
* Boxer from shantung
* 36th Chamber of Shaolin
* Human Lanterns

46:00

* What kind of cars do we drive?

55:00

* What YouTube channels do you watch?

* **Wes:**
* [Jeannies Garage](https://www.youtube.com/channel/UCWMaOB-Wxb1pbayjkOZn2iA)
* [It's Alive with Brad](https://www.youtube.com/playlist?list=PLKtIunYVkv_S7LqWqRuGw1oz-1zG3dIL4)
* [Wranglestar](https://www.youtube.com/channel/UCMIjEnXruVHtvgSVf6TgfUg)
* [Mattias Wandel Main Woodgears](https://www.youtube.com/user/Matthiaswandel)
* [Mattias Wandel Secondary Channel](https://www.youtube.com/channel/UC3_AWXcf2K3l9ILVuQe-XwQ)
* [Big Clive](https://www.youtube.com/user/bigclivedotcom)
* [How it's Made](https://www.youtube.com/channel/UCELt4nocnWDEnYJmov4zqyA)
* [Alex French Guy Cooking](https://www.youtube.com/user/FrenchGuyCooking)

* **Scott:**
* [RedLetterMedia](https://www.youtube.com/user/RedLetterMedia)
* [stance](https://www.youtube.com/user/stanceelements)
* [theneedledrop](https://www.youtube.com/user/theneedledrop)
* [BroScienceLife](https://www.youtube.com/channel/UCduKuJToxWPizJ7I2E6n1kA)


1:05:00

* What are you working on Personally / Mentally?
* [Habit Tracker](https://play.google.com/store/apps/details?id=org.isoron.uhabits&hl=en)
* Doing a downtown job

## Quuuuuiiiiiick SIIIIIIICK PICKS
* Scott:
  * [Dan Carlin's Hardcore History: Addendum](https://dchhaddendum.libsyn.com/)
  * [Whatever You Think, Think the Opposite](http://amzn.to/2GybLbh)
* Wes: [Tracy Osbourne's Hello Web Design](http://amzn.to/2Er7JDq)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a932afffc40112b6ace71596eb6bff9ea047bb9023efd39b87c5912ce8236ef4,wes-and-scott-s-lives-breakdancing-bbq-wives-work-life-balance-problem-solving-youtube-subscriptions,/shows/031 - Personal.md,2023-10-16 20:06:54.263,2023-10-27 15:57:42.257,TASTY
syntax_podcast_show_00032,32,"Designing, Templating, Inlining and Sending Email.",2018-02-14 14:02:08.511,https://traffic.libsyn.com/syntax/Syntax032.mp3,"
In this show, Scott and Wes talk about about sending both transactional and marketing email. Everything from designing to templating to inlining the CSS to getting it sent. Enjoy!

## Freshbooks - Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.

## Xojo — Sponsor

Xojo is a cross-platform development tool for creating native apps for desktop, mobile, web and Raspberry Pi.

With Xojo you really can write just one version of your app, say, on the Mac, click a button, and have a completely native Windows version too.

Xojo lets you abstract yourself from specific platform details, so you can focus on what makes your app unique. All apps have completely native controls, even if they weren’t developed on that platform. Just use drag and drop to create your user interface, and one language to program the functionality.

Users also include Fortune 500 companies, citizen developers, professional developers, IT, hobbyists and students - anyone who wants to build apps faster.

Listeners of this show get 20% off with the coupon code SYNTAX over at [xojo.com/syntax](http://xojo.com/syntax)

## Show Notes

0:00

* WELCOME!

2:00

* An update on GraphCool, Prisma and Yoga

3:45

##  Syntax Contest!

* You can win a free course from either Scott or Wes by screenshotting yourself listening to the podcast and uploading to Twitter or Instagram.
* We will pick 1 winner from Twitter and 1 winner from Instagram
* Make sure to tag [@wesbos](https://twitter.com/wesbos) and [@stolinski](https://twitter.com/stolinski) on Twitter and [@wesbos](https://instagram.com/wesbos) and [@stolinski](https://instagram.com/stolinski) on Instagram
* \#TastyTreats

5:40
* Email ain't easy!


6:20

* How do Scott and Wes use email in their apps and businesses?
* Transactional vs Marketing Email

9:00

* Dealing with multiple emails and modifier
* Signing in with Facebook vs Email?!

11:00

* Transactional Email
* The Process to creating single one-off email

13:00

* **Scott's Setup:**
* [Handlebars](http://handlebarsjs.com/)
* [Meteor Email Docs](https://docs.meteor.com/api/email.html)
* [Mandrill](https://www.mandrill.com/)

* **Wes' Setup**
* [Pug Templating](https://pugjs.org/api/getting-started.html) - _the artist formerly known as Jade_
* [Juice CSS Inliner](https://www.npmjs.com/package/juice)
* [Foundation for Emails](https://foundation.zurb.com/emails/email-templates.html)
* [Inky](https://github.com/zurb/inky)
* [NodeMailer](https://nodemailer.com/about/)
* [Postmark](https://postmarkapp.com)


20:00

* Why does email get blocked?
* [Amazon SES](https://aws.amazon.com/ses/)
* [SendGrid](https://sendgrid.com/)
* [MailGun](https://www.mailgun.com/)
* [MJML](https://mjml.io/)
* Email Reputation
* [MailTrap](https://mailtrap.io/)
* [MailHog](https://github.com/mailhog/MailHog)

30:00

* Designing Emails
* CSS is very limited
* [MJML React Email Templating](https://mjml.io/)
* [Tony](https://twitter.com/TonyRanieri/status/963591591159099393) from Twitter also told me about [HEML](https://heml.io/)

37:22

* Debugging and Testing Emails
* [Litmus](http://litmus.com/)
* [Email on Acid](https://www.emailonacid.com/) is way cheaper


45:00

* Marketing Emails
* [MailChimp](http://mailchimp.com/)
* [Drip](https://getdrip.com)

52:00

* Host your own Platforms
* [Sendy](https://sendy.co/)
* [Email Octopus](https://emailoctopus.com/)
* [Mautic](http://mautic.org/)
* [MailTrain](https://github.com/Mailtrain-org/mailtrain)

## Siiick Pixxxx
* Scott: [Personal Capital](https://www.personalcapital.com/)
* Wes: Nothing is Sick this week

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e8ef3c0121c2aae3bda177e7f5b49c1fc8e1b4bfce6232bf38b3a3a508235735,designing-templating-inlining-and-sending-email,/shows/032 - Sending Email.md,2023-10-16 20:06:54.305,2023-10-27 15:57:42.296,TASTY
syntax_podcast_show_00033,33,"Large Files - CDNs, Image Compression, Video Hosting, and Big Zips",2018-02-21 14:10:48.753,https://traffic.libsyn.com/syntax/Syntax033.mp3,"
Scott and Wes talk about working with images, videos and big zips. How do you host them? Do you need a CDN? What about compression?!

## Cloudinary

[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to host, compress and transform your images on the web. Sign up for their free tier and get 10GB of bandwidth for free!

Also check out Cloudinary's [ImageCon](http://www.imagecon.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=ImageCon_Syntax_podcast) conference - use the code SYNTAX99 for a discount when checking out.

## Xojo — Sponsor

Xojo is a cross-platform development tool for creating native apps for desktop, mobile, web and Raspberry Pi.

With Xojo you really can write just one version of your app, say, on the Mac, click a button, and have a completely native Windows version too.

Xojo lets you abstract yourself from specific platform details, so you can focus on what makes your app unique. All apps have completely native controls, even if they weren’t developed on that platform. Just use drag and drop to create your user interface, and one language to program the functionality.

Users also include Fortune 500 companies, citizen developers, professional developers, IT, hobbyists and students - anyone who wants to build apps faster.

Listeners of this show get 20% off with the coupon code SYNTAX over at [xojo.com/syntax](http://xojo.com/syntax)

## Show Notes

1:30

* Chit-chatting about GraphQL Testing

3:45

* What is a CDN? Why do you need one?
* How does the internet even work?

7:00

* Amazon S3 + Cloudfront
* CacheFly
* MaxCDN
* Cloudflare

11:30

* Talking about Image Formats
* [WebP](https://developers.google.com/speed/webp/)
* [WebP CanIUse](https://caniuse.com/#search=webp)

16:00

* Losslesss VS Lossy
* Stripping image meta data like EXIF
* [Image Optim App](https://imageoptim.com/mac)
* [ImageMin](https://github.com/imagemin/imagemin)
* [Gulp ImageMin](https://www.npmjs.com/package/gulp-imagemin)
* [ImageMin Webpack](https://github.com/Klathmon/imagemin-webpack-plugin)
* [ImageMin Plugins on npm](https://www.npmjs.com/search?q=imagemin)


26:00

* How we use Cloudinary

29:00

* Hosting, Encoding and Compressing Videos
* [Our Stacks Explained Syntax Podcast](https://syntax.fm/show/014/our-stacks-explained)
* [Vimeo Pro](https://vimeo.com/professionals)
* [YouTube DL](https://rg3.github.io/youtube-dl/)
* [BrightCove](https://www.brightcove.com/en/)
* [Wista](https://wistia.com/)
* [Sprout Video](https://sproutvideo.com/)
* [Cloudinary Video](https://cloudinary.com/documentation/video_management)

41:00

* What is Cloudflare?
* [Cloudflare Video is coming](https://blog.cloudflare.com/introducing-cloudflare-stream/)

46:30

* [Web Torrent](https://webtorrent.io/)
* [Apparently Spotify doesn't use P2P any longer](https://techcrunch.com/2014/04/17/spotify-removes-peer-to-peer-technology-from-its-desktop-client/)


50:00

* Big Zips!
* How do we host large video downloads?
* Amazon S3 + Cloudfront
* [Handbrake](https://handbrake.fr/)
* [Backblaze B2](https://www.backblaze.com/b2/cloud-storage.html)

55:00

* Video Formats

59:00

* [SVGO](https://github.com/svg/svgo)
* [SVGOMG](https://jakearchibald.github.io/svgomg/)


## Siiick Pixxxx
* Wes: [Node Inspector Manager](https://chrome.google.com/webstore/detail/nodejs-v8-inspector-manag/gnhhdgbaldcilmgcpfddgdbkhjohddkj?hl=en)
* Scott: [iShowUInstant](https://shinywhitebox.com/ishowu-instant)

## Shameless Plugz
* [Level Up Pro](https://LevelUpTutorials.com/pro)
* [Wes' Courses](http://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cdeae85628f6537829c3d337a1cd630f5ac702eceda6bfc57f955b64d7bf456c,large-files-cdns-image-compression-video-hosting-and-big-zips,"/shows/033 - Images, Videos and Big Zips.md",2023-10-16 20:06:54.350,2023-10-27 15:57:42.339,TASTY
syntax_podcast_show_00034,34,Why Static Site Generators are Awesome,2018-02-28 02:46:38.881,https://traffic.libsyn.com/syntax/Syntax034.mp3,"
Wes and Scott talk all about Static Site Generators!

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

They are also hiring! [netlify.com/careers](https://netlify.com/careers)


## Freshbooks - Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.


## Show Notes

1:00

* Woah Scott's Audio!

4:00

* #TastyTreats Winners

8:00

* What are static site generators?

10:00

* Benefits of Static Site Generators
* [Gatsby](https://www.gatsbyjs.org/)
* [StaticGen.com](https://www.staticgen.com/)
* [Jekyll](https://www.staticgen.com/jekyll)
* [Hugo](https://www.staticgen.com/hugo)
* [Hexo](https://www.staticgen.com/hexo)

24:00

* More complicated apps as static sites
* [Next.js Static Export](https://github.com/zeit/next.js#static-html-export)
* [Nuxt.js](https://nuxtjs.org/)

34:00

* Limitations of a static site
* What happens when you need something on the server?
* [Snipcart for Ecommerce](https://snipcart.com/syntax)
* [Algolia](https://www.algolia.com/)
* [Awestruct](http://awestruct.org/)
* Hot Hot Reloading

41:00

* Using with a Headless CMS
* Reloading The Pages

48:00

* WHAT WHAT Scott is Canadian?!

50:00

* Where can you host a Static Site?
* Literally Anywhere
* [Github Pages](https://pages.github.com/)
* [Netlify](https://netlify.com/syntax)
* [rsync](https://en.wikipedia.org/wiki/Rsync)
* [WPGraphQL](https://github.com/wp-graphql/wp-graphql)


## Siiiiiiiick Pixxxx
* Scott: [JSRefactor](https://marketplace.visualstudio.com/items?itemName=cmstead.jsrefactor)
* Wes: [Auto Rename Tag](https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag)


## Shameless Plugz
* [Level Up Pro](https://LevelUpTutorials.com/pro)
* [ES6 For Everyone](https://ES6.io)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cd9eee86edbf2f2242e572e044eba315b288ed64f9078f6462827e899a69d6f9,why-static-site-generators-are-awesome,/shows/034 - Static Site Generators.md,2023-10-16 20:06:54.402,2023-10-27 15:57:42.382,TASTY
syntax_podcast_show_00035,35,Keeping Up with the Codeashians. Dealing with our fast paced industry.,2018-03-07 14:12:36.331,https://traffic.libsyn.com/syntax/Syntax035.mp3,"
Scott and Wes talk about how to deal with being overwhelmed with our fast paced industry. How do you keep you and your team's skills up to date?

Wes' Note: Scott came up with the title for this one. I know.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

They are also hiring! [netlify.com/careers](https://netlify.com/careers)


## Freshbooks - Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.


## Show Notes

1:00

* WELCOME
* Scott is 32! Happy Birthday
* Wes Relaunched his [React for Beginners](https://reactforbeginners.com/) course!


4:00

* That feeling
* Being okay with not knowing everything


9:00

* How to wait it out
* When you should jump into a library
* 1.0 of libraries
* Dogfooding

13:00

* Just In Time learning
* Doubling down on the fundamentals

21:00

* What is JAM Stack?

22:00

* Why do you need to stay up to date?
* Moving or Losing Jobs
* Comfy Chairs

25:00

* Hipster Web Developers

27:00

* Someone think of the customers!
* Technical Debt
* Falling in love with web development again
* Constantly challenging yourself


30:00

* Complacency in Web Devleopment
* Motivating Comfortable Web Developers
* You have to stay up to date

32:00

* Working on the weekends
* Real Talk: part of your job is staying up to date
* How to find time to learn on the clock

36:00

* Adding new tech to projects as a way to learn

39:00

* What if your senior developer is holding back progress?
* How to convince your team or boss that you aren't just a hipster and this new tech is worth it
* Show them the why!

47:00

* Okay, I want to stay up to date. How?
* Strong handle on fundamentals
* [Twitter](https://twitter.com/wesbos)
* [Twitter](https://twitter.com/wesbos)
* [WebDev Reddit](https://www.reddit.com/r/webdev/)
* [NodeJS is Cancer](https://www.semitwist.com/mirror/node-js-is-cancer.html)
* [Kitze's LOL Tweet](https://twitter.com/thekitze/status/966347713934774272)
* [JavaScript Weekly](http://javascriptweekly.com/)
* Lunch and Learns
* Meetups


## Siiiiiiiick Pixxxx
* Scott: [Never Split The Difference](http://amzn.to/2tku2GC)
* Wes: [Containers Podcast](https://medium.com/containers)


## Shameless Plugz
* Scott: [Pro Gatsby](https://LevelUpTutorials.com/store)
* Wes: [React For Beginners](https://reactforbeginners.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",03917d6c69f9d8d53263f621b4dcdcab9784b06d4df724be88bd4ffafffc3401,keeping-up-with-the-codeashians-dealing-with-our-fast-paced-industry,/shows/035 - Keeping Up.md,2023-10-16 20:06:54.449,2023-10-27 15:57:42.429,TASTY
syntax_podcast_show_00036,36,Hasty Treat — Freelancing Hot Tips 🔥,2018-03-09 17:09:50.261,https://traffic.libsyn.com/syntax/Syntax036.mp3,"
In this Hasty Treat (Short episode) we answer your questions about Freelancing - how to charge more, building a portfolio, finding clients and our thoughts on using pre-made WordPress themes.

## Sign up for the Value Pricing Bootcamp - Sponsor

Get Jonathan Stark's free 6 day email course on value based pricing for freelancers over at [valuepricingbootcamp.com](http://valuepricingbootcamp.com).

Jonathan Stark is the author of [Hourly Billing is Nuts](https://expensiveproblem.com/hbin) and has worked with companies such as Staples, Time and T-Mobile. These days he routinely commands an effective hourly rate of $2000+ per hour, so I'd say you should check his course out.

## Show Notes

1:00

* [Our first episode on Freelancing - how to slam dunk freelancing](https://syntax.fm/show/005/how-to-slam-dunk-freelancing)


4:00

* **Q:** Ideas on building a portfolio and landing those first customers
* Your portfolio doesn't really matter as a web developer
* Your reputation and referrals is key
* Reputation in the community is important
* Put yourself out there!
* You have to tell people what you do
* You have to ask people if they need work
* Good communication is key

8:00

* **Q:** What are some strategies for budging and quoting?
* Understanding what a website is worth to a client
* Talking to your client ablut pricing
* Asking how much they have available to spend
* Chunking the project into multiple bits so they can build on it


14:00

* **Q:** How do you tell your existing clients that you need to charge more?
* Clean Scope / Scope Creep
* Quote in Features and pieces, not entire projects
* Fixed Pricing
* Becoming a better/faster developer
* Getting more expensive as you move
* Don't charge hourly
* Taking big Ls

18:30

* **Q:** What is your opinion on value based pricing?
* We're huge proponents
* Clients don't like hourly billing
* The client should know what you are paying and what you are getting

22:00

* **Q:** When is it okay to use WordPress and pre-made themes? Is that cheating?
* The beauty of open source
* The business Wes answer
* The developer Wes answer
* Building your own starter files
* Undoing other developer's work


## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",8959a0d737d97a51f2b71660b78849c9782c6727b283b3268541451a86fd639f,hasty-treat-freelancing-hot-tips,/shows/036 - Freelancing Hot Tips.md,2023-10-16 20:06:54.490,2023-10-27 15:57:42.466,SUPPER
syntax_podcast_show_00037,37,"Recording Screencasts - Hardware, Software, Dos and Don'ts",2018-03-14 16:48:00.243,https://traffic.libsyn.com/syntax/Syntax037.mp3,"
In this episode, Scott and Wes everything about their recording — from gear to software to tips and tricks for creating a good screencast.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

They are also hiring! [netlify.com/careers](https://netlify.com/careers)


## Freshbooks - Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.


## Show Notes

2:00

* **Scott's Hardware:**
* [EV RE20](http://amzn.to/2FGHSF0)
* [DBX 286s Preamp](http://amzn.to/2pbz4kh)
* [K&M 23850 Microphone Desk Arm](http://amzn.to/2GqpykA)
* [Shure KSM32](http://amzn.to/2Hy0xTY)
* [Blue Snowball](http://amzn.to/2paEbB5)
* [Bluebird](http://amzn.to/2pbo9XW)
* [Scarlet 2i2](http://amzn.to/2pi2o8b)

4:00

* We talk about Different types of microphones

* **Wes' Hardware:**
* [Heil PR40](http://www.amazon.com/gp/product/B000SOYOTQ/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B000SOYOTQ&linkCode=as2&tag=webo080-20&linkId=YH6ZR6GSGBI2JOJF)
* [Heil PL2T Boom Arm](http://www.amazon.com/gp/product/B000SZVZ74/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B000SZVZ74&linkCode=as2&tag=webo080-20&linkId=HJ6K3KRLOL5XJJSC)
* [Audio Technica AT2020](http://www.amazon.com/gp/product/B0006H92QK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B0006H92QK&linkCode=as2&tag=webo080-20&linkId=PHY64E6Y43GHI55T)
* [Heil Flush Desk Mount](http://amzn.to/2pb4xD3)
* [Scarlet 2i2](http://amzn.to/2pi2o8b)
* [DBX 286s Preamp](http://amzn.to/2pbz4kh)
* [EQ351 Equalizer](http://amzn.to/2paGSmb)
* [BSW Pop filter for Heil PR40](https://www.bswusa.com/Pop-Filters-BSW-RE27POP-P1419.aspx)
* [Heil Shock Mount](http://amzn.to/2HygCsJ)


14:30

* What are the essentials for hardware?
* Put a t-shirt under your keyboard

16:00

* Once you get to record, what do we use?
* [Divvy](http://mizage.com/divvy/)
* [IShowU Instant](https://shinywhitebox.com/ishowu-instant)
* [Screenflow](https://www.telestream.net/screenflow/overview.htm)
* [Uberlayer](https://itunes.apple.com/ca/app/uberlayer/id510139938?mt=12)
* [Loopback](https://rogueamoeba.com/loopback/)


32:00

* Making Mistakes
* Leaving in goof ups and debugging

40:00

* Bad screen recordings
* What is boring? What is annoying?
* Recording pet peves
* Tips for sizing your editor
* Gross sounds
* Too many files

50:00

* What makes a good recording?
* Good contrast on colour scheme
* Keeping the code open
* Short recordings

## SIIIIICKkkkkkkkk PIXXXXX

* Wes: [CD Player Magnet Phone Holder](http://amzn.to/2FIRdMs)
* Scott: [OxyLED Motion Sensor Lights](http://amzn.to/2FTzENi)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",73f66eefdc9e81f8a1ceb1977ff49cb6216f91e67198e5b96cb8e83c2ebd275d,recording-screencasts-hardware-software-dos-and-don-ts,/shows/037 - Recording Setups.md,2023-10-16 20:06:54.538,2023-10-27 15:57:42.511,TASTY
syntax_podcast_show_00038,38,20 Easy Win Performance Tips,2018-03-21 13:53:36.110,https://traffic.libsyn.com/syntax/Syntax038.mp3,"
In this episode, Scott and Wes chat about 20 different ways you can improve the perf, speed and overall user experience of your websites.


## Cloudinary - Sponsor

[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to host, compress and transform your images on the web. Sign up for their free tier and get 10GB of bandwidth for free!

Also check out Cloudinary's [ImageCon](http://www.imagecon.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=ImageCon_Syntax_podcast) conference - use the code SYNTAX99 for a discount when checking out.

## Fluent Conf - Sponsor

Developers, software engineers, designers, and web performance professionals flock to Fluent in pursuit of a common goal: building a better web. That means delivering fast, secure, accessible experiences to users and customers.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) covers a broad range of technologies and topics to provide web programming professionals with the skills, connections, and inspiration needed to build better online and mobile experiences.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) is this June 11-14 in San Jose, CA. Save 20% today with code: **SYNTAX**


## Show Notes

So many perf tips came in over twitter, so in addition to this podcast I'd recommend you read all the replies to [this tweet](https://twitter.com/wesbos/status/976082854848450560)

0:00

* We just cracked 1,000,000 downloads! Thank you!

4:00

* Network Tips
* Reducing the amount of HTTP requests
* A little bit about HTTP2
* An interview about [http2](https://www.youtube.com/watch?v=w--PU4HO9SM)


8:00

* Use Caching and LocalStorage
* Turn on aggressive caching on your server - long expire times
* What is gzip? / Enabling gzip


12:00

* Using a CDN
* Listen to our episode on [CDNs and #BigZips](https://syntax.fm/show/033/large-files-cdns-image-compression-video-hosting-and-big-zips)


13:00

* When to load your JS
* Blocking Requests

15:00

* Use Lazy Loading

17:00

* Preloading content with Link rel=""preload""
* rel=""prefetch""

19:00

* Picture, picturefill and srcset=""""
* Article on [srcset and Picture](https://www.smashingmagazine.com/2014/05/responsive-images-done-right-guide-picture-srcset/)
* srcset vs picture/source elements

25:00

* Image Compression
* One less jpg
* Serve less data

26:00

* Inline SVG
* Talk about Font Awesome

33:00

* CSS and JS Code
* [Critical CSS](https://github.com/addyosmani/critical)


37:00

* Remove unused code
* [Purify CSS](https://github.com/purifycss/purifycss)
* no-unused-imports with ESlint


38:00

* Code Splitting

40:00

* Transpile less
* babel-preset-env


41:00

* Tree shaking
* [Hoyyyy its a tree shaker](https://www.youtube.com/watch?v=ajACU-lsnFc)

42:00

* Async and defer attributes on your script tags
* [Amazing site that visualizes async and defer](http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html)


45:00
* Icon Fonts
* Web Fonts
* Native Font Stack:
* Good: `font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;`

47:00

* [font-display](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display)


49:00

* Troubleshooting Performance
* Simulate Slow Network Speed
* [Google Page Speed](https://developers.google.com/speed/pagespeed/insights/)
* [Wes' Page Speed Video](http://wesbos.com/wordpress-page-speed/)


## SIIIIICKkkkkkkkk PIXXXXX

* Scott: [WiFi Surge Protector](http://amzn.to/2FVcD9n)
* Wes: [KitSound Bluetooth Airline Converter](http://amzn.to/2DKvtxV)

## Shameless Plugs

* [Scott is working on a Vue course! ](https://LevelUpTutorials.com/pro)
* Wes is working on his Advanced React course!


## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cd811725761abb1d985009eb9878fae68167aac1bf1cc8b39d5a65b2410cc3dd,20-easy-win-performance-tips,/shows/038 - 20 Performance Tips.md,2023-10-16 20:06:54.596,2023-10-27 15:57:42.556,TASTY
syntax_podcast_show_00039,39,Is jQuery Dead?,2018-03-28 12:23:40.413,https://traffic.libsyn.com/syntax/Syntax039.mp3,"
Wes and Scott dive into jQuery. Is it dead? Should you still use it? Why not? What are some alternatives?


## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax)


## Freshbooks - Sponsor

If you are a small business or freelancer check out [Freshbooks.com Cloud Accounting](https://freshbooks.com/syntax) and get 30 days free. Make sure to enter SYNTAX into the ""How did you hear about us"" section.


## Show Notes

03:00

* A stroll down jQuery Memory Lane
* What was the first jQuery plugin you wrote?
* jQuery Conference
* jQuery IRC room
* [Ben Alman](http://benalman.com/)

9:00

* [jQuery UI](https://jqueryui.com/)
* [jQuery Mobile](https://jquerymobile.com/)
* [Sencha Touch](https://www.sencha.com/products/touch/)
* nvr 4get where u come from

13:00

* So, why is jQuery going away?

16:00

* The Selector API
* Sizzle
* [Bling.js](https://github.com/wesbos/Learn-Node/blob/master/starter-files/public/javascripts/modules/bling.js)
* [querySelectorAll Docs](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll)

21:00

* Working with Ajax
* [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)
* [Axios](https://github.com/axios/axios)

27:00

* Dom Traversal
* [Element.matches()](https://developer.mozilla.org/en-US/docs/Web/API/Element/matches)
* [You don't need jQuery](https://github.com/nefe/You-Dont-Need-jQuery)

30:00
* Data / Utility Functions
* [Lodash](https://lodash.com/)
* Just use Map/Reduce/Filter
* Data Massaging 💆🏻‍


34:00

* Cross Browser Compatability
* [Polyfill.io](https://Polyfill.io)

37:00

* Event Listeners
* Event Delegation
* Listening for events on multiple elements


47:00

* Final Thoughts on jQuery
* [JavaScript30](https://JavaScript30.com)
* [The JS Foundation](https://js.foundation/)



## Seeeaaaaacccckkkk PIX

* Scott: [MJML Desktop App](https://mjmlio.github.io/mjml-app/)
* Wes: [HyperSelect LED Utility Light](https://amzn.to/2J1tjOy)

## Shameless Plugs

* [Vue.js for Everyone](https://LevelUpTutorials.com/store)
* [All of Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",1c0d1e0bff47dc250c95182c092efa1146184f030318de98e80e170d8b96887f,is-jquery-dead,/shows/039 - Is jQuery Dead.md,2023-10-16 20:06:54.642,2023-10-27 15:57:42.596,TASTY
syntax_podcast_show_00040,40,The Testing Show,2018-04-04 13:10:33.583,https://traffic.libsyn.com/syntax/Syntax040.mp3,"
Wes and Scott talk all about testing!

## SnapShooter - Sponsor

[SnapShooter](https://snapshooter.io/) is a Digital Ocean backup service. You get fine grain control over when you backup and how long you backup for. Easily restore from previous snapshots.

Use the code [**SYNTAX**](https://snapshooter.io/) to get 20% off your first 12 months.

## Fluent Conf - Sponsor

Developers, software engineers, designers, and web performance professionals flock to Fluent in pursuit of a common goal: building a better web. That means delivering fast, secure, accessible experiences to users and customers.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) covers a broad range of technologies and topics to provide web programming professionals with the skills, connections, and inspiration needed to build better online and mobile experiences.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) is this June 11-14 in San Jose, CA. Save 20% today with code: **SYNTAX**


## Show Notes

3:00

* Testing Talk
* Is testing scary?


8:00

* Unit Testing
* Pure Functions
* Mutations
* Pass in dates to functions

11:40

* Integration Testing
* [Integration Testing Mémé](https://i.imgur.com/gAQVZ65.gif)

14:00

* Visual Regression Testing

17:00

* End to End Testing

21:00

* Why would you want to test?
* Confidence
* Easy Refactoring
* Finding edge cases

33:00

* Test Runners vs Assertion Libraries
* [Jest](https://facebook.github.io/jest/)
* [Mocha](https://mochajs.org/)
* [Cucumber](https://cucumber.io/)
* BBD (Big Black Dog)
* BDD (Behaviour Driven Development)
* [Cypress.io](https://www.cypress.io/)
* [Enzyme](https://github.com/airbnb/enzyme)
* [React Testing Library](https://github.com/kentcdodds/react-testing-library)

50:00

* Mocking
* Spy Functions

54:00

* Snapshot Testing
* [Jest Snapshot Testing](https://facebook.github.io/jest/docs/en/snapshot-testing.html)

57:00

* TDD (Test Driven Development)
* BDD (Behaviour Driven Development)
* Continuous Integration
* [Travis CI](https://travis-ci.org/)


## Shameless Plugs

* [Vue.js for Everyone](https://LevelUpTutorials.com/store)
* [SMASH that Subscribe Button on Wes' YouTube](https://www.youtube.com/wesbos)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e04d76c45b7988bda85f0b8a865431d30bb67d7bbdf7f8e1b6da88a22114a93c,the-testing-show,/shows/040 - Testing.md,2023-10-16 20:06:54.676,2023-10-27 15:57:42.639,TASTY
syntax_podcast_show_00041,41,Preventing and Dealing with Burnout in Web Development,2018-04-11 13:19:36.374,https://traffic.libsyn.com/syntax/Syntax041.mp3,"
Scott and Wes Chat about burnout!


## Freshbooks - Sponsor

This is episode Wes mentions the free book [Breaking The Time Barrier](https://www.freshbooks.com/ebooks/breaking-the-time-barrier). Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax).

## Fluent Conf - Sponsor

Developers, software engineers, designers, and web performance professionals flock to Fluent in pursuit of a common goal: building a better web. That means delivering fast, secure, accessible experiences to users and customers.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) covers a broad range of technologies and topics to provide web programming professionals with the skills, connections, and inspiration needed to build better online and mobile experiences.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) is this June 11-14 in San Jose, CA. Save 20% today with code: **SYNTAX**


## Show Notes

01:50

* What is burnout?
* Losing Enthusiasm for web development
* That Hustle

7:00

* Why is being burnt out bad?
* Putting off hobbies

12:30

* How do you prevent burnout?
* Farming out Work
* Automating content
* Busy work

18:00

* Aggressively turn down meetings
* Work to cut out busy work
* [Locus of Control](https://en.wikipedia.org/wiki/Locus_of_control)
* Managing Email and Notifications
* Scrubbing Plates


24:00

* Health and Nutrition
* Sleep

27:00

* Motivation
* What to do when you just don't like the work you are working on
* Small Wins
* Learning new Things
* Getting a new job
* Taking Courses
* [Keeping Up With The Codeashians](https://syntax.fm/show/035/keeping-up-with-the-codeashians-dealing-with-our-fast-paced-industry)

37:00

* Being overworked at work
* Overtime


41:00

* So you've burnt out, what do you do?
* How do you reignite the spark?
* Taking a day off
* Delegating GitHub
* Online chat with other developers

## ×SICK×PICKS×

* Wes: 
  * [Dewalt 20v Drill Set](https://amzn.to/2GPYlLL)
  * [Dewalt 20v Cordless Wet/Dry Vac](https://amzn.to/2qoZE9f)
* Scott: [MERU](https://www.imdb.com/title/tt2545428/)

## Shameless Plugs

* [Vue.js for Everyone](https://LevelUpTutorials.com/store)
* [SMASH that Subscribe Button on Wes' YouTube](https://www.youtube.com/wesbos)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",18bdb14275d8b5730549d3f877a74f1ab4259010ff5f296b1562e978f2480b22,preventing-and-dealing-with-burnout-in-web-development,/shows/041 - BURNOUT.md,2023-10-16 20:06:54.711,2023-10-27 15:57:42.682,TASTY
syntax_podcast_show_00042,42,Potluck EP × Vue.js × Headless WP × Typescript & Flow × Productivity × Server Side Rendering × Yeoman,2018-04-18 13:26:11.080,https://traffic.libsyn.com/syntax/Syntax042.mp3,"
It's a Potluck episode - you bring the questions and we turn them into tasty treats.

## DeployHQ - Sponsor

DeployHQ is the easiest way to deploy websites to your servers. Invite your team and set up automated deployment processes to:

* Compile a production build of your assets
* Deploy securely to servers behind VPNs and firewalls
* Execute SSH commands
* Manage and upload your config files
* Preview and schedule deployments
* Track and monitor your deployments in real-time

Deploy to multiple servers at the same time, whether that be your own server via FTP/SSH, or an Amazon S3 bucket. You can even start deployments automatically whenever you push!

Instant setup for repositories hosted on GitHub, Bitbucket, GitLab and Codebase, plus realtime notifications in your favourite chat services like Slack or HipChat.

To get 50% off your first 6 months, head on over to [deployhq.com/syntax](https://www.deployhq.com/syntax). The first 25 listeners to deploy successfully will receive a FREE branded mug or t-shirt!

## Fluent Conf - Sponsor

Developers, software engineers, designers, and web performance professionals flock to Fluent in pursuit of a common goal: building a better web. That means delivering fast, secure, accessible experiences to users and customers.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) covers a broad range of technologies and topics to provide web programming professionals with the skills, connections, and inspiration needed to build better online and mobile experiences.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) is this June 11-14 in San Jose, CA. Save 20% today with code: **SYNTAX**


# [Submit Your Questions Here](https://docs.google.com/forms/d/e/1FAIpQLSfQlAo1wXHiJMySdU-h8QMtfoz92aMS9eycEHXB6eRCLh8KHA/viewform)

## Show Notes

02:44

* What are your thoughts on Vue.js?
* [VuePress](https://vuepress.vuejs.org/)
* [Nuxt](https://nuxtjs.org/)

6:20

* What are your thoughts on Typescript and Flow?
* [Typescript](https://www.typescriptlang.org/)
* [Flow](https://flow.org/)

10:45

* What was your biggest breakthrough in Programming?
* [Nude.js](https://github.com/pa7/nude.js/)


20:00

* Any tips, tools and tricks to avoid procrastination
* [The productivity episode](https://syntax.fm/show/011/our-favourite-productivity-hacks)
* Sort by anxiety
* [Eat That Frog](https://amzn.to/2HajbS0)
* [Todoist](https://en.todoist.com/)

25:00

* Thoughts on CMSes? Headless? Database Driven? Static Site Generator?
* Headless WordPress
* Gatsby

34:00

* How can I start creating and selling courses?


40:00

* How did you two become renown in the developer community?
* We don't think we're renown :)
* YouTube Ad Revenue is poor

46:00

* Server Side Rendering with JavaScript Apps

53:00

* Is Yeoman still a thing?

## ×SICK×PICKS×

* Scott: [Eat That Frog](https://amzn.to/2HajbS0)
* Wes: [DevDocs.io PWA](https://devdocs.io)

## Shameless Plugs

* [Vue.js for Everyone](https://LevelUpTutorials.com/store)
* [Wes' Course](https://wesbos.com/courses)
* [SMASH that Subscribe Button on Wes' YouTube](https://www.youtube.com/wesbos)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5094e24d0a1b144715ff4b7e519a1118ef9b972d46d94c8557bf24f9d87d4168,potluck-ep-vue-js-headless-wp-typescript-and-flow-productivity-server-side-rendering-yeoman,/shows/042 - potluck.md,2023-10-16 20:06:54.751,2023-10-27 15:57:42.730,TASTY
syntax_podcast_show_00043,43,20 JavaScript Array and Object Methods to make you a better developer,2018-04-25 11:08:31.142,https://traffic.libsyn.com/syntax/Syntax043.mp3,"
Wes and Scott rattle through ~20 different Object and Array Methods that will make you a better JavaScript developer.

## Freshbooks - Sponsor

This is episode Wes mentions the free book [Breaking The Time Barrier](https://www.freshbooks.com/ebooks/breaking-the-time-barrier). Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax).

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

They are also hiring! [netlify.com/careers](https://netlify.com/careers)


## Show Notes

For the docs for all these, just google `mdn` and the method you are looking for 😃

3:00

* Why are these great?
* They are chainable
* Immutable

5:30

* .filter()
* Truthy or Falsy

8:00

* .map()

10:00

* .reduce() - returns any shape! filter, create a new shape, add up numbers...

14:30

* .forEach()
* Side effects

16:00

* .some()
* can be used as a short circuit forEach

25:00

* .every()
* .includes() (why not contains?)

26:00

* Array.from()
* Array.from() takes a secondary map arg
* Array.of()

29:00

* Object.values()
* Object.keys()
* Object.entries()

32:00

* Array spread - converts iterable to array
* Array spread - Concats arrays
* Array Spread + Slice. Don't splice - remove an item from an array.

34:00

* Object Spread

37:00

* Function Rest

39:00

* Object.freeze()

40:00

* Object.seal()

41:00

* Object.assign() - no longer needed because you can object spread
* [Reference vs Copy in JavaScript](https://www.youtube.com/watch?v=YnfwDQ5XYF4)

## ×SICK×PICKS×

* Scott: [Tea Haus](https://theteahaus.com/)
* Wes:
  * [SOG Folding Knife](https://amzn.to/2qZHrzk)
  * [Sharpening Stone](https://amzn.to/2HGNeob)

## Shameless Plugs

* [Vue.js for Everyone](https://LevelUpTutorials.com/store)
* [Wes' Course](https://wesbos.com/courses)
* [SMASH that Subscribe Button on Wes' YouTube](https://www.youtube.com/wesbos)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",46fa4e8a1a328f57e05f3cb4930a7fd3842f4b2e3fe1443f1c00d548fa12e09a,20-javascript-array-and-object-methods-to-make-you-a-better-developer,/shows/043 - Method Madness.md,2023-10-16 20:06:54.789,2023-10-27 15:57:42.769,TASTY
syntax_podcast_show_00044,44,How to Learn New Things Quickly,2018-05-02 13:06:35.740,https://traffic.libsyn.com/syntax/Syntax044.mp3,"
Scott and Wes talk about how they learn new things quickly. Scott also tells a crazy story about his weekend.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

They are also hiring! [netlify.com/careers](https://netlify.com/careers)

## Fluent Conf - Sponsor

Developers, software engineers, designers, and web performance professionals flock to Fluent in pursuit of a common goal: building a better web. That means delivering fast, secure, accessible experiences to users and customers.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) covers a broad range of technologies and topics to provide web programming professionals with the skills, connections, and inspiration needed to build better online and mobile experiences.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) is this June 11-14 in San Jose, CA. Save 20% today with code: **SYNTAX**


## Show Notes

2:00

* Scott recounts his crazy story about getting Lymphangitis

8:30

* Know your learning type
* videos, blogs, docs, source
* no right or wrong way

15:00

* Foundational Skills

23:00

* Narrow your focus
* Should you learn Redux with React?
* blurring skills hurts future progress
* don't learn too many things at once

26:00

* Get excited
* try to reclaim your initial excitement
* flow happens when you are excited
* pick projects around hobbies
* Star wars sucks

33:00

* Grind Time
* write code first ask questions later
* break shit
* Submit to yourself that you are going to build this 3-4 times
* iteration driven development
* quality from quantity
* use smarter people
* snippet libs
* style guides

40:00

* Immersion
* follow every kind of media you can
* put things on in the background
* permeate into your brain

## ××× SIIIIICK ××× PIIIICKS ×××

* Wes:
  * [Crushing It Book](https://amzn.to/2FC4PIv)
  * [Crushing It AudioBook](https://amzn.to/2JL8ZQQ)
* Scott: [Popmotion Pose](https://popmotion.io/pose/)


## Shameless Plugs

* [Wes' JavaScript30 Course](https://javascript30.com/)
* [Scott's Headless WordPress course](https://LevelUpTutorials.com/store)


1:00:00

* Scott comes out of nowhere with a story about TEA!

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a462dfb6c8353ffe1f64330fb5f8e99184e2259bc749a3eb05986f90fb20e07f,how-to-learn-new-things-quickly,/shows/044 - Learning.md,2023-10-16 20:06:54.824,2023-10-27 15:57:42.820,TASTY
syntax_podcast_show_00045,45,Potluck EP × Is Redux Dead × Learning Quickly × Developing Solo × Specialist vs Generalist × Funnest Projects × Wes’ BBQ Course,2018-05-09 13:00:00.364,https://traffic.libsyn.com/syntax/Syntax045.mp3,"
It's a Potluck episode - you bring the questions and we turn them into tasty treats.

## Fluent Conf - Sponsor

Developers, software engineers, designers, and web performance professionals flock to Fluent in pursuit of a common goal: building a better web. That means delivering fast, secure, accessible experiences to users and customers.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) covers a broad range of technologies and topics to provide web programming professionals with the skills, connections, and inspiration needed to build better online and mobile experiences.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) is this June 11-14 in San Jose, CA. Save 20% today with code: **SYNTAX**

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

2:42

* What is an efficient way to process huge data, greater than 740 MB when not working in JS?

6:45

* What’s new and shiny thing in web development do you think is going to go the distance?
* [GraphQL](https://www.apollographql.com)
* [Prisma](https://www.prisma.io/)
* [GraphCool](https://www.graph.cool/)
* [GraphQL Playground](https://github.com/graphcool/graphql-playground)

11:09

* Wes, can you make a course on how to barbecue meat properly?

12:31

* How do you go about learning a new language or framework?
* [Ep 44 - How to Learn New Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)

12:54

* What are the best things to keep in mind when you are the only developer on a team?

18:07

* Is Redux for React dead with the new context API?
* [Redux](https://redux.js.org/)

21:41

* What’s the funnest project you have ever worked on and why?
* [LevelUpTuts](https://leveluptutorials.com)

27:19

* What’s the best use case for JWT?
* [JWT](https://jwt.io/)

29:50

* Should I focus on one thing and try to master one technology instead of being a jack of all trades?

35:00

* Why do thousands of entrepreneurs build SaaS products on Ruby on Rails?
* [Laravel](https://laravel.com/)
* [Laravel Spark](https://spark.laravel.com/)
* [CodeIgniter](https://codeigniter.com/)
* [Meteor](https://www.meteor.com/)
* [Hackathon Starter](https://hackathon-starter-2018.herokuapp.com/)

39:41

* Would you use single page application vs SSR for large reactor view apps?
* [SSR](https://www.npmjs.com/package/react-ssr)
* [Next.js](https://nextjs.org/)

41:06

* What do you use for online learning platforms?
* [Ep 14 - Our Stacks Explained](https://syntax.fm/show/014/our-stacks-explained)
* [Teachable](https://teachable.com/)
* [Moodle](https://moodle.org/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Wes:[Parcel](https://parcelapp.net/)
* Scott:[Nebo](https://www.myscript.com/nebo/)

## Shameless Plugs

* [Scott's Headless WordPress course](https://LevelUpTutorials.com/store)
* [Wes' Instgam](https://instagram.com/wesbos)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",258599c0a6e93db0cff8e3b33bf78be585a2a7b4a054086f341e0262fa9a9d8a,potluck-ep-is-redux-dead-learning-quickly-developing-solo-specialist-vs-generalist-funnest-projects-wes-bbq-course,/shows/045 - potluck.md,2023-10-16 20:06:54.858,2023-10-27 15:57:42.867,TASTY
syntax_podcast_show_00046,46,"What's New in Javascript",2018-05-16 13:00:00.202,https://traffic.libsyn.com/syntax/Syntax046.mp3,"
Scott and West talk about what’s new in JavaScript.

## Fluent Conf - Sponsor

Developers, software engineers, designers, and web performance professionals flock to Fluent in pursuit of a common goal: building a better web. That means delivering fast, secure, accessible experiences to users and customers.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) covers a broad range of technologies and topics to provide web programming professionals with the skills, connections, and inspiration needed to build better online and mobile experiences.

[Fluent](https://conferences.oreilly.com/fluent/fl-ca) is this June 11-14 in San Jose, CA. Save 20% today with code: **SYNTAX**

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

They are also hiring! [netlify.com/careers](https://netlify.com/careers)

## Show Notes

1:55 - Scott's new studio

4:57 - [Pop Motion Pose](https://popmotion.io/pose)

* New library for React or vanilla JavaScript
* Define locations instead of CSS styles
* Pass the animation state into a React component as open or closed instead of active or inactive
* Flip animation techniques
* [Style Fire](https://popmotion.io/api/stylefire) - Simple HTML & SVG styler optimised for animation

8:44 - [Intersection Observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)

* Browser-based API based on observables
* Example uses: Tell me when this element is on the page, goes off the page or is halfway down the page

10: 32 - [MDX](https://github.com/mdx-js/mdx)

* Webpack loader for MDX (i.e. JSX-infused Markdown) using mdx-it
* Turns MarkDown files into components in Webpack

12:56 - [Resize Observer](https://wicg.github.io/ResizeObserver/)

* Watch elements for resize

15:47 [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API)

* Works with animations natively in JavaScript
* Tell your animations to play, pause, reverse, etc.
* Instead of changing classes, you have full control over what the animation is doing
* [Web-Animation-JS Polyfill](https://github.com/web-animations/web-animations-js)
* [Can I use](https://caniuse.com/)

18:00 - [Window Face Detector API](https://twitter.com/wesbos/status/976097163834019842)

* Create a new window.face detector and pass it an image tag and it returns an array of faces.

22:53 - [Payment Request API](https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API)

* Eliminates check out forms
* Allows platform to handle payment safely and securely

29:23 - [INTL.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat)

* Format pricing with different currencies

32:59 - [V8 BigInts](https://v8project.blogspot.com/2018/05/bigint.html)

* Makes working with big numbers more viable

34:53 - [Speech Recognition](https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition)

* Converts speech to text
* Pipe in different accents

36:22 - [Text To Speech](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance)

* Simulates text into spoken words

41:46 - [ES6 Modules In Node](https://nodejs.org/api/esm.html)

* There are no ES6 modules in Node. It's still being developed. If you want to build an ES6 module in Node, you have to use the .mjs extension


## ××× SIIIIICK ××× PIIIICKS ×××

* Scott:[Dank Mono](https://dank.sh/)
* Wes:[Video Doorbell Pro from Ring](https://shop.ring.com/products/video-doorbell-pro)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c7ce776a2ef0bea4adbf7da731939c502fce53540f7d84ba6d715e74d88ff532,what-s-new-in-javascript,"/shows/046 - What's New in Javascript.md",2023-10-16 20:06:54.894,2023-10-27 15:57:42.906,TASTY
syntax_podcast_show_00047,47,How to Get Better at Debugging,2018-05-23 13:00:00.561,https://traffic.libsyn.com/syntax/Syntax047.mp3,"
Scott and Wes detail the tips and tools you need to get better at debugging.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Coffeecup's CSS Grid Builder Tool

Check out Coffeecup's [CSS Grid.cc](https://cssgrid.cc/) builder tool and resources to learn, prototype and build next gen layouts with CSS Grid!

## Show Notes

4:00
* Read the stack trace

7:35

* Make sure you aren't debugging production
* Make sure you're not cached

8:40

* Check the network panel for the whole response
* CORS (Cross-Origin Resource Sharing)

12:04

* Use debugger commands in the browser
* Set breakpoints (race conditions)

13:40

* Use Source Maps

15:29

* Make full use of all console methods
  * console.group/groupEnd/info/
  * console.log({objNAme})

17:02

* View your code in other browers
* Make sure your browser is up to date

18:50

* Step into and step over function
* Useful for especially tricky issues

19:47

* Look into Scope in dev tools panel

20:33

* Recreate it in CodePen or Create React App
  * Helps to quarantine your code
  * Verify where the problem actually is

24:12

* Take a break
  * Helps clear your head and approach your problem from a different angle

25:40

* Rubber Duck Debugging
  * Forcing yourself to talk it out will often reveal problems/issues

26:40

* Check Github issues / ask in Slack
  * Leave your solution in the comments for others

28:12

* Use Node --inspect flag

29:57

* Read the code in your libs (if you can)

32:34 - Chrome Dev Tools Tabs Rundown

* 33:10 - Network tab
* 34:15 - Preformance tab
* 35:58 - Lesser known tools
  * 36:15 - Firefox Grid Debug
  * 36:20 - Firefox Fonts tab
  * 37:10 - More tools (three dots menu in top right of Chrome Dev Tools window)
  * 37:39 - Chrome Animations Inspector
  * 38:34 - [/dev tips](https://umaar.com/dev-tips/) & [Modern DevTools Course](https://moderndevtools.com/)
  * 39:41 - Chrome & FF Layers for 3d and full view of canvas & window
  * 40:51 - Sensors for overriding fake devices sensors
    * Hot tip: Use Instagram on the desktop - Go to [Instagram](https://instagram.com) and set the user agent to iPad and it will work as it does on that actual device
    * Hot tip: Get free internet on a plane ;) - If the airplane offers free internet for a certain device, change your user agent to that device and then switch back
  * 43:12 - Favorite DevTools extensions
    * [Apollo](https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm?hl=en)
    * [React](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en)
    * [Redux](https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en)
    * [Vue](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en)
    * [Lighthouse](https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk?hl=en)
    * [JSON Formatter](https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa?hl=en)
* 44:06 - Application/Storage tab
* 44:41 - FireFox Grid Inspector

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Hotel Tonight App](https://www.hoteltonight.com/)
* Wes: Coffee table - If you're trying to build an outdoor coffee table, use a piece of granite

## Shameless Plugs

* [Scott's Level 2 React Course coming out THIS WEEK!](https://LevelUpTutorials.com/store) - subscribe and be notified when it's released
* [Wes' Courses - Advanced React course coming soon](https://wesbos.com/courses/) - subscribe to be notified when it's released

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f8584d201ed06ff389c1ee926614b22c1b700348351e34cd4c6f8ca99fb398d7,how-to-get-better-at-debugging,/shows/047 - How to Get Better at Debugging.md,2023-10-16 20:06:54.932,2023-10-27 15:57:42.944,TASTY
syntax_podcast_show_00048,48,VS Code Round Two,2018-05-30 13:00:00.617,https://traffic.libsyn.com/syntax/Syntax048.mp3,"
Scott and Wes are back with another round of tips, tricks and tasty treats for their favorite code editor, [VS Code](https://code.visualstudio.com/).

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax)

## Show Notes

01:45

* Why Scott and Wes use VS Code vs all the other options
* [Stay up to date with all releases](https://code.visualstudio.com/updates/v1_23)

06:05 - Favorite new updates

* Notification API
* Auto Import
* Listing errors in the file explorer
* Column Selection
* Interface Customization
* __Hot Tip__: Anytime you find yourself using your mouse, there's likely a shortcut key for what you're trying to do
* [React Snippets Library](https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets)
* [Wes' VS Code settings](https://github.com/wesbos/dotfiles)
* Visual Studio Live Share

27:40 - Favorite/New Extensions

* [Bracket Pair Colorizer](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer)
* [Rainbow Brackets](https://marketplace.visualstudio.com/items?itemName=2gua.rainbow-brackets)
* [Auto Rename Tag](https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag)
* [Better Comments](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments)
* [Jest](https://marketplace.visualstudio.com/items?itemName=Orta.vscode-jest)
* [Snapshot Tools](https://marketplace.visualstudio.com/items?itemName=asvetliakov.snapshot-tools)
* [JS Refactor](https://marketplace.visualstudio.com/items?itemName=cmstead.jsrefactor)
* [Import Cost](https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost)
* [Polacode](https://marketplace.visualstudio.com/items?itemName=pnp.polacode)
  * [Carbon](https://carbon.now.sh/) - An alternative way to share beautiful images of your source code

38:49 - Themes

* [LevelUp Official](https://marketplace.visualstudio.com/items?itemName=leveluptutorials.theme-levelup)
* [Night Owl](https://marketplace.visualstudio.com/items?itemName=sdras.night-owl)
* [Cobalt2](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2)

40:35 - Tips and Tricks

* Learn how to jump and select by letter, word, line, etc.
* Move a line (or Line Bubbling) - Use this for rearranging and/or moving lines of code quickly.
* Cycling through multiple windows of the same app - If you have multiple VS Code windows open, ""Cmd + backtick"" will cycle through them, so you don't have to drag them in and out of view.
* Adjust MacOS keyboard settings - change Key Repeat to ""fast"" and Delay Until Repeat to ""short"". This will make your editor super fast when holding down arrow keys.
* Use Git features
  * [Git History](https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory)
* Spell Checker - ""Cmd + ."" will open up code actions and you check for possible misspellings, etc.
  * [Code Spell Checker](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker)
* Rename Symbol - Much more reliable than find/replace.
* [Sort Lines](https://marketplace.visualstudio.com/items?itemName=Tyriar.sort-lines)
* Select everything between quotes - (Cmd + Shift + Space)

57:25 - Things that could be improved

* Region folding is inconsistent and sometimes doesn't work at all.
* No easy way to tell which extension is causing CPU performance issues.
* Sidebar indentation isn't clear.

## ××× SIIIIICK ××× PIIIICKS ×××

* Wes: [Melnor 4-Zone Digital Water Timer](https://www.amazon.com/gp/product/B0094KM4VK/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=webo080-20&creative=9325&linkCode=as2&creativeASIN=B0094KM4VK&linkId=d4f202fb09280739e3ed764255eb1020)
* Scott: [Tosowoong Enzyme face cleanser](https://amzn.to/2IWrn9j)

## Shameless Plugs

* [Scott's Intermediate React Series](https://LevelUpTutorials.com/store)
* [Wes' All Course Secret Sale](https://wesbos.com/courses/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7a95792c62be05200e22039d873d41ec013eb22d6044e275fe26df79f81d40b3,vs-code-round-two,/shows/048 - VS Code Round Two.md,2023-10-16 20:06:54.966,2023-10-27 15:57:42.988,TASTY
syntax_podcast_show_00049,49,Potluck EP × SSR × SEO × Tips for Students × Music × Security × GraphQL,2018-06-06 13:00:00.736,https://traffic.libsyn.com/syntax/Syntax049.mp3,"
It's a Potluck episode - you bring the questions and we turn them into tasty treats.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## CoffeeCup's CSS Grid Builder Tool

Check out Coffeecup's [CSS Grid.cc](https://cssgrid.cc/) builder tool and resources to learn, prototype and build next gen layouts with CSS Grid!

## Show Notes

2:15

* What's the best resource for staying up to date with Javascript?

3:48

* How do you stay motivated if you don't like your current project?

7:08

* What's your favorite music to work to?

11:10

* In what order should developers learn tools related to GraphQL?

13:48

* As a JS developer, is it a good idea to learn other languages like PHP or Python?

19:55

* As a CS undergrad, what can you do in terms of programming that could be a great benefit after graduation?

23:14

* Should you be concerned about SEO when using JS frameworks like React?

28:17

* How can you build your network when you're too tired or busy to go to a bunch of meetups?

32:55

* How do you come up with such good designs and UI for your courses?

36:37

* As more websites move to secure connections, where can a noob learn the basics of https, SSL certificates, how to deploy a secure website, etc.?

43:05

* Have you had experience working for large companies and how does it compare to smaller companies and/or freelancing?

47:30

* What are other programming podcasts you listen to?

__Want to submit a question for our next potluck episode?__ [Check out our tasty Listener Questions form](https://docs.google.com/forms/d/e/1FAIpQLSfQlAo1wXHiJMySdU-h8QMtfoz92aMS9eycEHXB6eRCLh8KHA/viewform).

## ××× SIIIIICK ××× PIIIICKS ×××

* Wes: 
  * [SpikeBall](https://amzn.to/2kzAjXO)
  * [Slammo](https://amzn.to/2shGaVM)
* Scott: [Stance](https://www.youtube.com/user/stanceelements)

## Shameless Plugs

* [Scott's Level 2 React Course](https://LevelUpTutorials.com/store)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",03ac6db9da99b82d1cca03ce78ff1da1ebddb8e19b763c95bea988d05dc70d46,potluck-ep-ssr-seo-tips-for-students-music-security-graphql,/shows/049 - potluck.md,2023-10-16 20:06:55.005,2023-10-27 15:57:43.028,TASTY
syntax_podcast_show_00050,50,Progressive Web Apps,2018-06-13 13:00:00.021,https://traffic.libsyn.com/syntax/Syntax050.mp3,"
Scott and Wes dive into the ins and outs, best practices and tasty tidbits of Progressive Web Apps.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax)

## Show Notes

2:00

* What's the deal with the GitHub / Microsoft acquisition?

6:05

* What is a Progressive Web App?

8:55 - [Progressive Web App Checklist](https://developers.google.com/web/progressive-web-apps/checklist)

### What are the baseline features for a Progressive Web App?

09:25

* Site is served over HTTPS
* [Let's Encrypt](https://letsencrypt.org/)

11:05

* Pages are responsive on tablets & mobile devices

11:35

* All app URLs load while offline
* [Use a Service Worker](https://developers.google.com/web/fundamentals/primers/service-workers/)

16:35

* Metadata provided for Add to Home screen

18:40

* First load fast even on 3G

20:00

* Site works cross-browser

20:15

* Page transitions don't feel like they block on the network

22:20

* Each page has a URL

### What makes an exemplary Progressive Web App?

27:42

* All content is indexed by Google

28:38

* Schema.org metadata is provided where appropriate
* Social metadata is provided where appropriate

29:42

* Canonical URLs are provided when necessary

### User experience

31:43

* Content doesn't jump as the page loads
* [Scott's Pro Gatsby Course](https://www.leveluptutorials.com/tutorials/pro-gatsby)

36:52

* Pressing back from a detail page retains scroll position on the previous list page

37:34

* When tapped, inputs aren't obscured by the on screen keyboard

### The Best of the rest

38:22

* Content is easily shareable
* Site is responsive
* Any app install prompts are not used excessively
* The Add to Home Screen prompt is intercepted

39:20

* Use cache-first networking

### Device APIs

40:34

* [Web RTC](https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API)
* [Get User Media](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia%20)

41:50

* [Push API](https://developer.mozilla.org/en-US/docs/Web/API/Push_API)

45:12

* Accelerometer
* GPS

45:55

* [Payment Request API](https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API)

47:12

* [Local Storage](https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage)

48:03

* [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API)

48:35

* [StorageManager](https://developer.mozilla.org/en-US/docs/Web/API/StorageManager)

51:45

* [Vibration API](https://developer.mozilla.org/en-US/docs/Web/API/Vibration_API)

52:58

* Use [Lighthouse](https://developers.google.com/web/tools/lighthouse/) to improve the quality of your web apps

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [myNoise](https://mynoise.net/)
* Wes: [Ozark Trail Drinkware](https://www.walmart.com/search/?query=ozark%20trail%20rambler&cat_id=0)

## Shameless Plugs

* [Scott's Level 2 React Course](https://LevelUpTutorials.com/store)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",400d5c616e8399a5ade215f93998a806cc39dea85521d595d1741a5e7fb51985,progressive-web-apps,/shows/050 - Progressive Web Apps.md,2023-10-16 20:06:55.043,2023-10-27 15:57:43.065,TASTY
syntax_podcast_show_00051,51,"Our Workflows — Design, Development, Git and Deployment",2018-06-20 13:00:00.620,https://traffic.libsyn.com/syntax/Syntax051.mp3,"
It's a workflow extravaganza! Scott and Wes talk about their development workflows, covering everything from design to deployment.

## Cofeecup's CSS Grid Builder Tool — Sponsor

Check out Coffeecup's [CSS Grid.cc](https://cssgrid.cc/) builder tool and resources to learn, prototype and build next gen layouts with CSS Grid!

## VueSchool.io's Vue.js Masterclass — Sponsor
Check out [VueSchool.io's new Vue.js Masterclass](https://vueschool.io/) taught by Alex Kyriakidis. Learn Vue.js along with best practices, modern Javascript, and other exciting technologies, by building a real-world application - a forum. The first 50 people to visit [VueSchool.io/syntax](https://vueschool.io/syntax) to get 25% off.

## Show Notes

4:00 - Design Workflow

* Wes:
  * Screenshots of look + feels
  * Sketch layouts out in pencil
  * Mock up layout in Sketch
  * Once rough layout is done, I refine
  * Once I have: colors, type, patterns, textures and overall layout, I move to code.
  * A design program is important to vs designing in code

* Scott
  * Mirrored component structure in Figma
  * Using Ideas from Atomic design and React components
  * Goal is for Figma components to be 100% mapped to styled components
  * Flexible and testable in different layouts
  * My design philosophy is refinement through iteration
  * Light theft
    * Footer from [Pitchfork](https://pitchfork.com/)
    * New card animation idea from [Patagonia](http://www.patagonia.com/)

15:55 - Design to Dev Workflow

* Wes:
  * Happy with design so far
  * Setup tooling - styled components, stylus, sass...
  * Setup type, variables, partials, resets...
  * Do as much HTML as possible before styling
  * CSS it up for layouts, then go section by section
  * Broad first, then zoom in on finesse
  * Browsersync / Hot Reload
  * Test across browsers / Devices

* Scott:
  * Define parameters in Figma
  * Styled components in React, hand write that CSS bruh
  * Move aspects of styled components lib like breakpoints, colors, functions, helpers, base components

32:06 - Git Workflow

* Wes:
  * Tear off a branch - name after issue - DEV113
  * Do your work
  * Rebase
  * Squash
  * Pull Request
  * Rinse + Repeat

* Scott
  * Master branch is 1-1 with live
  * Develop is where work is done (but not really because I make a feature branch for each feature and merge in)
  * Contributors issue pull requests into develop

42:34 - Deployment Workflow

* Scott:
  * Hosted on Meteor Galaxy, container based hosting
  * Develop is merged into master, all tests run, if everything passes tests and manual check, I deploy to Galaxy via NPM script.
  * Soon I'll be adding in automated test running & auto deploy to galaxy on push to master.
  * Secrets are kept in a settings.json file that's used during deployment.

* Wes:
  * Codeship
  * DeployHQ
  * Git
  * Rsync
  * Dealing with secrets

49:53 - Project Folder Structure

* Wes:
  * Folder Structure - 0100, 0101…

* Scott:
  * API
  * UI
    * element -> styled components with index
  * Startup
  * Utilities

## Links

* [BNO Train Wreck Album](https://upload.wikimedia.org/wikipedia/en/thumb/3/33/BNO-trainwreck_cover.jpg/220px-BNO-trainwreck_cover.jpg)
* [Atomic Design](http://bradfrost.com/blog/post/atomic-web-design/)
* [Guide Design Systems](https://www.invisionapp.com/blog/guide-to-design-systems/)
* [BrowserSync](https://browsersync.io/)
* [FontSquirrel](https://www.fontsquirrel.com/)
* [fontplop](https://www.fontplop.com/)
* [Creative Market](https://creativemarket.com/)
* [Delicious Brain's WP Migrate DB Pro](https://deliciousbrains.com/wp-migrate-db-pro/)
* [Ryan Dahl - 10 Things I Regret About Node.js](https://www.youtube.com/watch?v=M3BM9TB-8yA)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Overcooked - Nintendo Switch](https://www.nintendo.com/games/detail/overcooked-special-edition-switch)
* Wes: [SkyRoam Solis](https://www.skyroam.com?rfsn=1346968.ac598)

## Shameless Plugs

* [Scott's Level 2 React Course](https://LevelUpTutorials.com/store)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0c966f5bc03022bef2daa7e901beca3250bec408764a847e4a808d2e6dc453c1,our-workflows-design-development-git-and-deployment,/shows/051 - Workflows.md,2023-10-16 20:06:55.081,2023-10-27 15:57:43.112,TASTY
syntax_podcast_show_00052,52,Marketing for Developers,2018-06-27 13:00:00.172,https://traffic.libsyn.com/syntax/Syntax052.mp3,"
Scott and Wes talk about marketing. Specifically how to do marketing if you're a developer wondering where to start.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax)

## Show Notes

7:58 - Personal Branding

* Build trust and reciprocity
* Be authentic to yourself and let that carry through in your work.
* Have the guts to put yourself out there and establish yourself as an expert.
  * Speak at conferences
  * Write blog posts
  * Make YouTube videos
  * Be on podcasts
  * Start your own podcast

14:50 - Running a Business

* Treat people well.
* Reward your customers.
* Don't punish your users.
* Have a refund policy.

19:26 - Social Media

* Don't push people off a platform. Bring content to them that is tailored for that platform.
* Get in early, before the platform becomes super crowded.

* YouTube
  * Quality content through quantity.
  * Write good SEO titles.
  * Tease your paid content or create a free one-off.
  * Don't expect to make a lot of money, but it can be great for growing a brand.

* Twitter
  * Be helpful - small, digestible tips and tricks and great for growing a Twitter following.
  * Quality is still the key.
  * [Steve Schoger](https://twitter.com/steveschoger) is a great example of consistent, high quality content.

* Facebook
  * People have other interests besides web development. People like to see into your life.
  * Use Facebook to give people a window into who you are.

* Reddit
  * Reddit is really difficult. It's easy to get banned. The best strategy is to not focus on marketing and just try to be helpful.
  * It's sort of replaced forums and is a great place to build communities around different hobbies.

* Instagram
  * Recently IG has been blowing up for web developers.
  * [Dhanish](https://www.instagram.com/dhanishgajjar/) is a perfect example of how to do Instagram well.

49:55 - Paid Advertising

* Don't be sleazy.
* Ads are good for getting likes and driving some traffic to something, but it takes experimentation to get the best bang for you buck.

54:40 - Email marketing

* Wes: Email is probably responsible for most of my sales.
* Keeps people up to date and helpful for promoting new courses.
* Helpful for figuring out what people want.

59:17 - Partnerships

* A lot of companies want to partner rather than just sponsor.
* It can be a great way to fund the creation of products/courses.
* Affiliate programs are great when they work out.

67:30 - Freebies

* Giving away free content is a surefire way to get people to pay attention.
* It's about giving back to the community as much as marketing your products.

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Cypress: End to end testing](https://www.cypress.io/)
* Wes: [Audiobook: Own the Day, Own Your Life](https://www.amazon.com/Own-Day-Your-Life-Optimized/dp/B079GC7F8X)

## Shameless Plugs

* [Scott's New Electron Course](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React and GraphQL Course](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4aab076d09857a1162411d5dad08b0c67265aece2f1d3d81a8b1b585cc24a89d,marketing-for-developers,/shows/052 - Marketing.md,2023-10-16 20:06:55.117,2023-10-27 15:57:43.160,TASTY
syntax_podcast_show_00053,53,Hasty Treat - Domain Management,2018-07-02 13:00:00.092,https://traffic.libsyn.com/syntax/Syntax053.mp3,"
In this Hasty Treat (Short episode) Scott and Wes discus all things domains. Where to get them, how to set them up and how to save time managing them all in one place.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

3:30

* What is a domain?

4:59

* What is DNS?

6:00

* Nameservers

8:30

* What is a DNS provider?
  * [DNS Simple](https://dnsimple.com/)
  * [Cloudflare](https://www.cloudflare.com/)
  * [Hover](https://www.hover.com/)
  * [Name](https://www.name.com/)
  * [Domainr](https://domainr.com/)
  * [iwantmyname](https://iwantmyname.com/)

13:30

* Different types of DNS records

17:00

* Different kinds of domains
  * .com, .tv, .io, etc.

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d7f485bf43a3769afdd7038712b388a22ff42b80f9cf7bfb42aadf62ec538cbd,hasty-treat-domain-management,/shows/053 - Domain Management.md,2023-10-16 20:06:55.151,2023-10-27 15:57:43.198,HASTY
syntax_podcast_show_00054,54,Potluck EP × Remote Work × Headless WordPress × Good Client Questions × Alternate Careers × React API Credentials,2018-07-04 13:00:00.341,https://traffic.libsyn.com/syntax/Syntax054.mp3,"
It's another potluck episode in which Wes and Scott talk about freelancing best practices, tips for working remotely, what they would do if they had to pick a different career, and much more!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Coffeecup's CSS Grid Builder Tool — Sponsor

Check out Coffeecup's [CSS Grid.cc](https://cssgrid.cc/) builder tool and resources to learn, prototype and build next gen layouts with CSS Grid!

## Show Notes

4:48

* How long should you stay with each job and/or company?

8:20

* What is the best way to work remotely?
* Tips for remote working
  * Have a dedicated space
  * Clear on and off times
  * Have a time for winding down
  * Make specific TODO lists
  * Use blocking software to help you stay focused
  * Switch up the scenery / Work in different places

15:26

* What are the trade-offs with using WordPress in a headless setup vs a tradition setup?

21:28

* How do you deal with API credentials in React?

27:15

* How do you keep an eye on performance with an app/site over the long-term?
  * Check uptime
  * Check the performance features in browser dev tools
  * Use error checking software
  * Host-based performance tools
  * [Newrelic](https://newrelic.com/)
  * [pingdom](https://www.pingdom.com/)
  * [LogRocket](https://logrocket.com/)

34:28

* What happened to Canvas after all the hype around HTML5 a few years ago?

40:15

* How do you deal with analysis paralysis?
  * Just get to work - you can always change things later
  * Do research, but don't let it get in the way of shipping

44:05

* If you were forced to change your career (and it had to be something you've never done professionally in the past), what would it be?
  * Wes: Some sort of buying and selling (eBay, Amazon, etc,)
  * Example: Buying things at wholesale prices and selling them with a markup
  * Scott: Could go a lot of different directions.
  * Example: DJ, Snowboarding instructor, develop a video game that is a sequel to [Cruis'n USA](https://en.wikipedia.org/wiki/Cruis%27n_USA)

50:14

* As a freelance developer, what are some good questions to ask before taking on a client?
  * Budget
  * Scope
  * Preferred communication methods
  * How do you make money?
  * What are the ultimate goals?
  * Basically, ask as many questions as possible

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Goodhertz](https://goodhertz.co/)
* Wes: [Audiobook: Anything You Want by Derek Sivers](https://www.audible.com/pd/Bios-Memoirs/Anything-You-Want-Audiobook/B00563HS4C)

## Shameless Plugs

* [Scott's Level 1 Electron Course](https://LevelUpTutorials.com/pro)
* [Wes' Courses are all on sale](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4ec33e071a83f0ac11d924afb0f3d16462c970a1bc6492ba3d723a718d29d8f2,potluck-ep-remote-work-headless-wordpress-good-client-questions-alternate-careers-react-api-credentials,/shows/054 - Potluck copy.md,2023-10-16 20:06:55.187,2023-10-27 15:57:43.238,TASTY
syntax_podcast_show_00055,55,Hasty Treat - User Role Systems,2018-07-09 13:00:00.658,https://traffic.libsyn.com/syntax/Syntax055.mp3,"
In this Hasty Treat (Short episode) Scott and Wes discuss user roles, what to think about when creating your own, security implications, etc.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

3:30

* How to manage user role systems

11:30

* Client side best practices
* Don't rely on front-end role systems as a security measure

14:13

* Where to store your roles
* Start simple and get more complex as needed

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bf8f61446cbefc92a2a9e7f015124fbe6fe8560614686b72e78f00145a3b9646,hasty-treat-user-role-systems,/shows/055 - Roles.md,2023-10-16 20:06:55.223,2023-10-27 15:57:43.278,HASTY
syntax_podcast_show_00056,56,Design Systems,2018-07-11 13:00:00.456,https://traffic.libsyn.com/syntax/Syntax056.mp3,"
In this highly requested episode, Scott and Wes talk about design systems, what they are, why you may want or need one, how to use them, efficiency, best practices, and much more...

## VueSchool.io's Vue.js Masterclass — Sponsor
Check out [VueSchool.io's new Vue.js Masterclass](https://vueschool.io/) taught by Alex Kyriakidis. Learn Vue.js along with best practices, modern Javascript, and other exciting technologies, by building a real-world application - a forum. The first 50 people to visit [VueSchool.io/syntax](https://vueschool.io/syntax) to get 25% off.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

2:40

* Design Systems 101
  * [Wes' Tweet about Design Systems](https://twitter.com/wesbos/status/1012325994437529600)

9:40

* Organizational elements of design systems
  * It's all about consistency

23:07

* Best tools for building design systems and style guides
  * [Figma](https://figma.com)
  * [Relay for Figma](https://relayforfigma.com/)
  * [InVision Design Systems Manager](https://www.invisionapp.com/design-system-manager/)
  * [Airbnb Lona](https://github.com/airbnb/lona)
  * [Brad Frost's Pattern Library](http://patternlab.io/)
  * [uiengine](https://github.com/dennisreimann/uiengine)

41:52

* Where to learn more

## Links

* [Guide to Design Systems by InVision](https://www.invisionapp.com/blog/guide-to-design-systems/)
* [Shopify's Design System](https://polaris.shopify.com/content/product-content)
* [Mailchimp's Voice and Tone](https://styleguide.mailchimp.com/voice-and-tone/)
* [Zendesk Garden](https://garden.zendesk.com/)
* [Material Design](https://material.io/design/)
* [Awesome Design Systems](https://github.com/alexpate/awesome-design-systems)
* [Design Systems Repo](https://designsystemsrepo.com/)
* [Design Systems](https://www.designsystems.com/)
* [Docz](https://www.docz.site/)
* [Facebook Yoga](https://yogalayout.com/)
* [StorybookJS](https://storybook.js.org/)
* [Stuart Clarke-Frisby Tweet](https://twitter.com/stuartfrisby/status/983274546802421760)
* [Figma's Platform](https://blog.figma.com/introducing-figmas-platform-ee681bf861e7)
* [Figma Styles and Prototyping](https://blog.figma.com/figma-3-0-217d6c248f85)
* [Design Systems Newsletter](http://news.design.systems/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [CalDigit TS3 Plus](https://amzn.to/2Mxz8nC)
* Wes: [Picasso Tiles](https://amzn.to/2IDzAOW)

## Shameless Plugs

* [Scott's Level 1 Electron Course](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course (Coming Soon)](http://advancedreact.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7d5cdc619b6dac870cfc6ea2a54735abb63742ddd1c6df7e828f69c7f1ce79f2,design-systems,/shows/056 - Design Systems.md,2023-10-16 20:06:55.258,2023-10-27 15:57:43.318,TASTY
syntax_podcast_show_00057,57,Hasty Treat - Dot Files,2018-07-16 13:00:00.805,https://traffic.libsyn.com/syntax/Syntax057.mp3,"
In this Hasty Treat (Short episode) Scott and Wes discuss dot files, what they are, how to use and manage them as well as best practices and more.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

3:15 - What is a dot file?

* Access tokens
* Settings for editors, etc.

4:40 - Dot file examples

  * .gitignore
  * .gitkeep
  * .rc
    * .babelrc
    * .bashrc
    * .eslintrc
  * .env
  * .DS_Store
  * .editorconfig
  * .meteorignore

23:46 - How to keep your dot files in sync

## Hot Tip
* In MacOS, toggle dot files with ""Shift + Cmd + .""

## Links
[Wes' dot files repo](https://github.com/wesbos/dotfiles)
[Prettier](https://prettier.io/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",15d21351a83d87a09d1e7eb389e7bb2f1dd66b72d958e54da426d91cf0f6653c,hasty-treat-dot-files,/shows/057 - Dot Files.md,2023-10-16 20:06:55.293,2023-10-27 15:57:43.360,HASTY
syntax_podcast_show_00058,58,"Advice For Beginners - Tech Skills, Applying for Jobs, Focus, Imposter Syndrome + More",2018-07-18 13:00:00.645,https://traffic.libsyn.com/syntax/Syntax058.mp3,"
Scott and Wes give their best advice for beginners, including tech skills, applying for jobs, focus, imposter syndrome, and more...

## Coffeecup's CSS Grid Builder Tool — Sponsor

Check out Coffeecup's [CSS Grid.cc](https://cssgrid.cc/) builder tool and resources to learn, prototype and build next gen layouts with CSS Grid!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

4:46 - Advice for gaining new skills

* Patience and momentum are key
* You likely won’t get anywhere significant in two months
* Think about where you want to be in five years
* Start small
* Start with was excites you and let that drive your exploration
* Start writing code ASAP. Don't worry about the right way, just get started.

17:15 - Advice for applying to jobs

* Apply for everything. Failing an interview is no big deal.
* Each interview is an opportunity to gain experience
* Putting yourself out there is huge - one blog post, YouTube video, or open source project will put you miles ahead
* Have an entrepreneurial mindset - you can negotiate money, hardware, vacation time, flexible schedule, etc. Don’t just google “average salary”
* Negotiate salaries and perks.

29:32 - Advice for knowing what to focus on

* What gets you jazzed? Find something cool and figure out how to recreate it.
* Find a problem and figure out how to solve it - build real things.
* Don’t focus on tech - tech is just a tool.

38:32 - Advice for impostor syndrome

* Listen to this podcast! ;)
* Almost everyone has it.
* Don’t worry about other people’s progress.
* You don't need to know how to do everything, but you should be able to figure out how to learn.

46:45 - Misc advice

* Evaluate things for yourself - don't blindly follow the loudest voices on the internet
* Focus on soft skills as well - time management, communication
* Get a mentor
* Health and Hobbies - don't let yourself burnout

## Links

* [Ep 044 - How to Learn New Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)
* [Javascript30](https://javascript30.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Sony A7iii](https://amzn.to/2NhCls4)
* Wes: [Zevia](https://www.zevia.com/)

## Shameless Plugs

* [Scott's Level Up Tuts Pro](https://LevelUpTutorials.com/pro)
* [Wes' Stickers](https://bos.af/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d9615bac3044b7ef02452010f7bdbcc1b128999cda4a6c630dca1884c2ab0a34,advice-for-beginners-tech-skills-applying-for-jobs-focus-imposter-syndrome-more,/shows/058 - Advice for Beginners.md,2023-10-16 20:06:55.340,2023-10-27 15:57:43.403,TASTY
syntax_podcast_show_00059,59,Hasty Treat - Refactoring,2018-07-23 13:00:00.929,https://traffic.libsyn.com/syntax/Syntax059.mp3,"
In this Hasty Treat, Scott and Wes discuss refactoring, what it is, why you should do it, when to do it, as well as best practices and much more.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

5:00 - What is refactoring and why would you do it?

* Re-writing code while maintaining functionality
* The first code you write is most likely not your best code

7:32 - Benefits To Refactoring

* Keep part of your codebase in your head
* Keep codebase timely and up to date (E.g. promises, async, await, etc.)
* Writing code from the vantage point of having already built your product
* Performance improvement

12:54 - When to refactor

* When it's stopping your from progressing
* When bringing someone new on to your team
* When you can see a more elegant solution
* When you're having performance issues
* When you're sharing or presenting code
* When you have a large codebase that needs to be broken up into smaller components

19:03 - Tips on how to refactor

* Testing will make refactoring easier
* Identify bad code and problem areas
* Use git as an escape hatch
* Break things into smaller chunks
* Publish often use code to npm as modules

## Links
* [Facebook's Codemod](https://github.com/facebook/codemod)
* [Syntax043 - 20 JavaScript Array and Object Methods to make you a better developer](https://syntax.fm/show/043/20-javascript-array-and-object-methods-to-make-you-a-better-developer)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",af1bcc1a4bedc112aaa0a8ab2b7b1f52fe2d3e77874d4f5106d02554eb78f054,hasty-treat-refactoring,/shows/059 - Refactoring.md,2023-10-16 20:06:55.380,2023-10-27 15:57:43.445,HASTY
syntax_podcast_show_00060,60,"The Undocumented Web - scraping, private APIs, proxies and “alternative solutions”",2018-07-24 13:00:00.084,https://traffic.libsyn.com/syntax/Syntax060.mp3,"
What is the undocumented web? Scott and Wes dive into it, discussing APIs, faking, scraping, automation, proxies as well as tips and tricks for best practices.

## Kyle Prinsloo's Freelancing & Beyond — Sponsor

Kyle Prinsloo teaches you everything you need to know about freelancing, including how to quit your job, earn a side-income and start taking control of your life. Check it out at [https://studywebdevelopment.com/freelancing](https://studywebdevelopment.com/freelancing.html) and use the coupon code ""syntax"" at checkout to get 25% off.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

3:05 - What Is the undocumented web?

* When traditional methods don’t give you what you want
* Wild West

6:10 - Undocumented APIS

* Instagram's private API
* Use dev tools' XHR Request
* React Dev Tools will also have the data
* [Ep 008 - Wes Bos Origin Story](https://syntax.fm/show/008/wes-bos-origin-story)
* [Realtor.ca - MLS Mapping](https://www.realtor.ca/)
* [Simon Willison’s Zeit Day Talk about XML files](https://github.com/simonw/datasette)
* [Charles Proxy App](https://www.charlesproxy.com/) - also good for debugging requests

17:34 - Faking

* Faking User Agents
  * Sending headers from requests
  * Free Blackberry wifi on plane

23:52 - Scraping

* What is scraping?
* [Cheerio](https://github.com/cheeriojs/cheerio) - jQuery like node package

27:30 - Automation

* Cron Jobs
* Filling out forms instantly
* Headless browsers
  * [Puppeteer](https://developers.google.com/web/tools/puppeteer/)
  * [PhantomJS](http://phantomjs.org/)

33:30 - Proxies

* Need a fresh IP address
* Need a different country
* Side note: Canadians buying stuff in USA M4S1P1 === 41100
* API throttling

39:00 - Tips and Tricks

* Multiple API keys
* [diskDB](https://www.npmjs.com/package/diskdb) - Text files as databases
* Search Github for API keys
* Inspect Element and Delete Overlays
* Delete Cookiesokay

44:45 - Stories

* Photo Voting
* MLS Listing
* Top Entrepreneur voting cheating
* Vanity Plate Checker
* [My Hockey Team Sucks](https://forwardcourses.com/lectures/346)
* [Vehicle auction bidding app](https://twitter.com/lawjolla/status/1008739031448875008)
* [youtube-dl](https://rg3.github.io/youtube-dl/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Octopath Traveler & OST](https://amzn.to/2mvECnS)
* Wes:
  * [AvE Youtube Channel](https://www.youtube.com/channel/UChWv6Pn_zP0rI6lgGt3MyfA)
  * [Mustie1 Youtube Channel](https://www.youtube.com/channel/UCcSeeATlWJJbXpOZRYOfaDg)

## Shameless Plugs

* [Scott's Level Up Tuts Pro](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",227d91ffd47cd7a7c4a1f4ddd79eb189fee5ee9f0bc06806734017935357f1d2,the-undocumented-web-scraping-private-apis-proxies-and-alternative-solutions,/shows/060 - The Undocumented Web.md,2023-10-16 20:06:55.421,2023-10-27 15:57:43.482,SPECIAL
syntax_podcast_show_00061,61,"Hasty Treat - Whats the deal with npm, yarn and lock files?!",2018-07-30 13:00:00.332,https://traffic.libsyn.com/syntax/Syntax061.mp3,"
In this Hasty Treat, Scott and Wes discuss npm, yarn, lock files, why they're useful, why you would or wouldn't want to track them in Git and much more!

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

4:10

* What is npm and yarn?

8:00

* What's the difference between npm and yarn?

12:00

* What is semver?

16:40

* What is the dependency tree?
* This is the problem that lock files solve

20:32

* Cool new features of npm and yarn
  * npx
  * security warnings

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2beb6daae46ade63f4e2ff05cfd8ab766662a9c94e49bbc730e31f7b14329e8c,hasty-treat-whats-the-deal-with-npm-yarn-and-lock-files,/shows/061 - Lock files.md,2023-10-16 20:06:55.461,2023-10-27 15:57:43.524,HASTY
syntax_podcast_show_00062,62,Potluck - Editor Fonts × Portfolios × Meetup Tips × Switching to Windows × Freelancing Sources,2018-08-01 13:00:00.841,https://traffic.libsyn.com/syntax/Syntax062.mp3,"
It's another potluck episode in which Wes and Scott answer your questions about freelancing, portfolios, code editors, meetup tips, switching to windows and more!

## VueSchool.io's Vue.js Masterclass — Sponsor

Check out [VueSchool.io's new Vue.js Masterclass](https://vueschool.io/) taught by Alex Kyriakidis. Learn Vue.js along with best practices, modern Javascript, and other exciting technologies, by building a real-world application - a forum. The first 50 people to visit [VueSchool.io/syntax](https://vueschool.io/syntax) to get 25% off.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

2:37

* Question: Maaz Syed Adeeb - Are editor fonts worth the investment (if yes, why)? Why are they such a big deal in the first place?
* [Operator Mono](https://www.typography.com/fonts/operator/styles/)
* [Dank Mono](https://dank.sh/)
* [Fira Code](https://github.com/tonsky/FiraCode)

6:10

* Question: Ste O'Neill - How can I come up with ideas for projects? What can I put in a portfolio when I work for an agency?

9:10

* Question: JavaScript Joe - If I only have two hours per week to work on coding projects, do I spend it building a side project or do I spend it contributing to open source? What's your experience contributing to open source?

10:45

* Question: Diane - Why is Git so hard to grasp in team projects? What are the best resources to master it?
* [Try Github](https://try.github.io/)

13:35

* Question: Grant Chambers - What are some tips for going to your first meetup?
* [React Meetups](https://www.meetup.com/topics/reactjs/?_cookie-check=PJfretbVZR3XexRA)

20:23

* Question: Michael Hoffman - Have you ever thought about using Linux or Windows as your main operating system?
* [Google Pixelbook](https://store.google.com/us/product/google_pixelbook)
* [Microsoft Surface Pro](https://www.microsoft.com/en-us/p/surface-pro/8nkt9wttrbjk/lhl3?activetab=pivot%3aoverviewtab)
* [Figma](https://www.figma.com/)
* [Logic](https://www.apple.com/logic-pro/)
* [Sketch](https://www.sketchapp.com/)
* [Mint OS](https://www.linuxmint.com/)
* [Final Cut Pro](https://www.apple.com/final-cut-pro/)

27:39

* Question: Would you recommend using [Upwork](http://upwork.com) for starting out freelancing or something similar?

31:18

* Question: Mike C. - What do you guys think about sites like [Codewars](https://www.codewars.com/) and [Code Fights](https://codefights.net/#/)? Being new to web development, I find the problems hard to solve. Is it important to know how to solve all these problems? If so, how do I get better at developing the mindset to solve them?
* [JavaScript 30](https://javascript30.com/)
* [Level Up Tutorials](https://www.leveluptutorials.com/)

38:47

- Question: When I work on a website, I need to record user names, passwords, URLs, keys, logins, cPanel, WordPress, ftp, MySQL for each and every website, local and remote.
  Currently, I use a text file to save all that information. How are you storing all this info? How others do it? How the pros are managing this? Pros and cons?
- [SSH Key](https://wiki.archlinux.org/index.php/SSH_keys)
- [LastPass](https://www.lastpass.com/)
- [1Password](https://1password.com/)

42:15

- Question: Chandler Bing - What happened to [Scott's YouTube channel](https://www.youtube.com/channel/UCyU5wkjgQYGRB0hIHMwm2Sg)?

44:57

- Question: Whose idea was it to do a podcast? Who approached whom first?
- [Josh Owens](http://joshowens.me/)
- [Egghead.io](https://egghead.io/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Jarvis Legs](https://amzn.to/2ObNeNm)
* Wes: [King of the Road](https://www.viceland.com/en_us/show/king-of-the-road)

## Shameless Plugs

* [Scott's Level 1 Apollo Client with React Course](https://www.leveluptutorials.com/tutorials/level-1-apollo-client-with-react)
* [Wes' Social Media](https://wesbos.com/courses)
  * [Twitter](https://twitter.com/wesbos)
  * [Instagram](https://www.instagram.com/wesbos/)
  * [Facebook](https://www.facebook.com/wesbos.developer)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7fa0a2200e875ffbe960b2adfe0a59973cd85a4d0355684c05506bbaa385dd42,potluck-editor-fonts-portfolios-meetup-tips-switching-to-windows-freelancing-sources,/shows/062 - Potluck.md,2023-10-16 20:06:55.497,2023-10-27 15:57:43.618,TASTY
syntax_podcast_show_00063,63,"Hasty Treat - JSON, JSONP and CORS",2018-08-06 13:00:00.265,https://traffic.libsyn.com/syntax/Syntax063.mp3,"
In this Hasty Treat, Scott and Wes discuss all things cross-origin - APIs, Javascript, JSON, CORS, and more.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

3:52

* What is JSON?

5:09

* Origin policy in the browser

6:00

* Cookies + how they work

6:38

* How do you get data from one site to another?

7:00

* JSON P (JSON with Padding)

9:00

* CORS (cross-origin resource sharing)
* CORS errors + learning on the fly

11:31

* Canvas elements

12:24

* Proxies
* [Crossorigin.me](https://corsproxy.github.io/)
* [Enable-cors.org](https://enable-cors.org/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0eb6b2a15d1aac0ce3804cef4db7a3b1c00fa113148d296cb0a063c7efcd9d10,hasty-treat-json-jsonp-and-cors,/shows/063 - Cross-Origin.md,2023-10-16 20:06:55.531,2023-10-27 15:57:43.666,HASTY
syntax_podcast_show_00064,64,Our Office Setups (Gotta Get The Gear),2018-08-08 13:00:00.987,https://traffic.libsyn.com/syntax/Syntax064.mp3,"
Scott and Wes talk office setups and all things gear. [Gotta get the gear!](https://www.youtube.com/watch?v=R3SFqV0hMyo)

## Mlab - Sponsor

mLab is the leading Database-as-a-Service for MongoDB, powering over half a million deployments worldwide. Wes and Scott use mLab to host their own databases as well as take care of backups, security, scaling and performance. Try out a sandbox database on your next mongoDB project → [https://mlab.com](https://mlab.com/)

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

11:00

* [Wes' gear](https://wesbos.com/uses)
* [Scott' gear](https://www.leveluptutorials.com/my-gear)
* [Scott's podcasting/screencasting gear](https://kit.com/leveluptutorials/podcasting-screencasting-gear)

13:30 - Computer

* Wes: Macbook Pro 15""
* Scott: Macbook Pro 15""

17:39 - Monitors

* Wes:
  * [22"" vertical Cheap Acer](https://amzn.to/2vkXomG)

  * [27"" Dell 4k](https://amzn.to/2Mo3NnO)
  * [Ergotron Monitor Arms](https://amzn.to/2voS9CF)

* Scott:
  * [LG 34UC88-B 34-Inch 21:9 Curved UltraWide](http://amzn.to/2F0sLsU)
  * [VIVO Dual stand](https://amzn.to/2AREOI2)

28:33 - Keyboards and Mice

* [Twitter Thread about mice](https://twitter.com/wesbos/status/1007671082915192834)

* Wes:
  * [Apple Magic Keyboard](https://amzn.to/2nhTx5M)
  * [Magic Mouse](https://amzn.to/2ATwRT4)
  * [Logitech MX Master 2S](https://amzn.to/2ALF7nR)

* Scott:
  * [CODE Keyboard](https://blog.codinghorror.com/the-code-keyboard/)
  * [Apple Magic Trackpad](https://www.amazon.com/Apple-Magic-Trackpad-2-MJ2R2LL/dp/B016QO5YWC/ref=sr_1_3?s=electronics&ie=UTF8&qid=1533676132&sr=1-3&keywords=Apple+Magic+Trackpad)

33:14 - Desks

* Wes:
  * [Ikea Countertop](https://www.ikea.com/ca/en/catalog/products/20274961/)
  * [Ikea Alex Drawers](https://www.ikea.com/ca/en/catalog/products/10373037/)

* Scott:
  * [Ikea Karlby Walnut Countertop](https://www.ikea.com/us/en/catalog/products/70335212/#/70335212) + [Jarvis Legs](https://www.amazon.com/Jarvis-Standing-Desk-Frame-Only/dp/B01N023V8B/ref=sr_1_1?ie=UTF8&qid=1533695529&sr=8-1&keywords=jarvis+legs) === dope desk!

37:53 - Chairs

* Wes:
  * [Herman Miller Aeron Polished Aluminum](http://www.amazon.com/gp/product/B000LTAO8S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B000LTAO8S&linkCode=as2&tag=webo080-20&linkId=6G4M6ZR4CYKT3TM5)

* Scott:
  * [Herman Miller Aeron](https://www.amazon.com/Herman-Miller-Chair-Size-Adjustable-Arms-lumbar/dp/B00TXS2FR6/ref=sr_1_1_sspa?ie=UTF8&qid=1533695947&sr=8-1-spons&keywords=Herman+Miller+Aeron&psc=1)

39:24 - Headphones

* Wes:
  * [Bose QC35s](https://amzn.to/2OOcY2y)
  * [Apple AirPods](https://www.apple.com/shop/product/MMEF2AM/A/airpods)

* Scott:
  * [AKG K 553 Pro](https://www.amazon.com/AKG-3280H00100-K-553-Pro/dp/B00X3MT7F6/ref=sr_1_1?ie=UTF8&qid=1533695990&sr=8-1&keywords=AKG+k553+Pro)
  * [M-Audio Bx8 monitors](https://www.amazon.com/M-Audio-BX8-D3-Powered-Reference/dp/B01J66ZEE0/ref=sr_1_1?ie=UTF8&qid=1533696043&sr=8-1&keywords=M-Audio+Bx8+monitors)
  * [Polk Audio 12” Subwoofer](https://www.amazon.com/Polk-Audio-12-Inch-Powered-Subwoofer/dp/B000092TT0/ref=sr_1_3?ie=UTF8&qid=1533696133&sr=8-3&keywords=polk+audio+12+subwoofer) for that booom booom!

43:50 - Hard Drives / Backup Systems

* Wes:
  * [WD My Passport 1TB](https://amzn.to/2AHKsg1)
  * [Backblaze Backup](https://secure.backblaze.com/r/008x60)

* Scott:
  * [WDMyCloud EX4100](https://www.amazon.com/EX4100-Diskless-Network-Attached-Storage/dp/B00TB8XMR0/ref=sr_1_1?s=electronics&ie=UTF8&qid=1533696680&sr=1-1&keywords=wd+mycloud+ex4100)


47:28 - Charging Stations

* Wes:
  * [Anker USB Wall Charger](https://amzn.to/2M0da13)

48:52 - USB Splitters

* Wes:
  * [CalDigit TS3 Plus](https://amzn.to/2voCKSP)
  * [Amazon Basics USB 3 Hub](https://amzn.to/2AMPHLo)

* Scott:
  * [CalDigit TS3 Plus](https://amzn.to/2voCKSP)

50:35 - Wifi

* Wes:
  * [Amplifi HD Mesh](https://amzn.to/2AMQrQG)

* Scott:
  * [Google Wifi Mesh](https://www.amazon.com/Google-WiFi-system-3-Pack-replacement/dp/B01MAW2294/ref=sr_1_1_sspa?s=electronics&ie=UTF8&qid=1533697191&sr=1-1-spons&keywords=Google+Wifi+Mesh&psc=1)

54:26 - Recording Gear

* Check out [episode 037](https://syntax.fm/show/037/recording-screencasts-hardware-software-dos-and-don-ts) for a full rundown of all of our recording gear

* Wes:
  * [Heil PR40 Pack](https://amzn.to/2AIur9q)
  * [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Preamp-Processor/dp/B004LWH79A/ref=sr_1_2?s=electronics&ie=UTF8&qid=1533697367&sr=1-2&keywords=dbx286s)
  * [Focusrite Scarlett 2i2](https://www.amazon.com/Focusrite-Scarlett-Audio-Interface-Tools/dp/B01E6T56EA/ref=sr_1_3?s=electronics&ie=UTF8&qid=1533696603&sr=1-3&keywords=scarlett+2i2)

* Scott:
  * [Electro Voice RE-20](https://www.amazon.com/Electro-Voice-RE-20-Cardioid-Microphone/dp/B000Z7LLQ0/ref=sr_1_1?s=musical-instruments&ie=UTF8&qid=1533696508&sr=1-1&keywords=re20)
  * [Sony a7 III](https://www.amazon.com/Sony-Full-Frame-Mirrorless-Interchangeable-Lens-ILCE7M3/dp/B07B43WPVK/ref=sr_1_1?s=photo&ie=UTF8&qid=1533696572&sr=1-1&keywords=Sony+A7iii)
  * [Focusrite Scarlett 2i2](https://www.amazon.com/Focusrite-Scarlett-Audio-Interface-Tools/dp/B01E6T56EA/ref=sr_1_3?s=electronics&ie=UTF8&qid=1533696603&sr=1-3&keywords=scarlett+2i2)

58:32 - Misc

* Wes:
  * [Peak Design Everyday 30L Backpack](https://amzn.to/2Kw8hHk)
  * [Skyroam Solis Hotspot](https://amzn.to/2nhK4eo)

* Scott:
  * [Google Home](https://store.google.com/us/product/google_home?hl=en-US)
  * Smart outlet that shuts off all my stuff
  * [topodesigns.com](https://topodesigns.com/)

## Links
* [Laravel Nova](https://nova.laravel.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* All of the above ;)

## Shameless Plugs

* [Scott's Level 1 Apollo Client with React Course](https://www.leveluptutorials.com/tutorials/level-1-apollo-client-with-react)
* [Wes' Advanced React Course - Coming Soon](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",59980207c08025576d27cc03e0cc51bd1ed6d6924366137c64352b817941ac3a,our-office-setups-gotta-get-the-gear,/shows/064 - Gear.md,2023-10-16 20:06:55.572,2023-10-27 15:57:43.705,TASTY
syntax_podcast_show_00065,65,Hasty Treat - Building Curriculum for Courses,2018-08-13 13:00:00.725,https://traffic.libsyn.com/syntax/Syntax065.mp3,"
In this Hasty Treat, Scott and Wes discuss how they create courses, design and build curriculum, as well as insights and best practices for content creation.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

 4:32 - Wes' process

* Figure out what to make
* Build the thing you're teaching in the course
* Have it reviewed by experts
* Simplify and create a linear flow for what you're teaching

16:25 -  Scott's process

* Chose a topic
* Build the thing
* Create the outline as you go
* Have goals in mind, for individual topics
* Record with final code open

28:25 - How to get started

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",179beee7bbd70f7598ae23c649bee30e553d2cd0a8b7dbfc59a103df71d1f2bb,hasty-treat-building-curriculum-for-courses,/shows/065 - curriculum.md,2023-10-16 20:06:55.608,2023-10-27 15:57:43.746,HASTY
syntax_podcast_show_00066,66,The React Episode,2018-08-15 13:00:00.260,https://traffic.libsyn.com/syntax/Syntax066.mp3,"
In this episode Wes and Scott do a deep dive into React - what it is, best practices and all the ins and outs of how the framework works.

## Dev Lifts — Sponsor

[DevLifts](https://devlifts.io/) - Thad and JC are on a mission to make web developers healthy. They’re currently offering Personal Training and Nutrition Plans as well as a new program called [fit.start()](https://devlifts.io/join/fitStart). Get 50% off fit.start() with the coupon code “SYNTAX”. Additionally, the first 10 people to use the code ""TASTY"" get 50% off your [DevLifts Premium](https://devlifts.io/join/premium) subscription. Check it out today! 

## Mlab - Sponsor

mLab is the leading Database-as-a-Service for MongoDB, powering over half a million deployments worldwide. Wes and Scott use mLab to host their own databases as well as take care of backups, security, scaling and performance. Try out a sandbox database on your next mongoDB project → [https://mlab.com](https://mlab.com/)

## Show Notes

5:23

* Components

12:30

* JSX

25:13

* Data and Props

44:48

* Fetching

49:22

* Event Handlers

54:00

- Instance classes + properties

55:02

* Lifecycle Methods

59:55

* Context

1:01:35

* Routing

## Links

* [Preact](https://preactjs.com/)
* [Inferno](https://infernojs.org/)
* [How to Comment in JSX (article)](https://wesbos.com/react-jsx-comments/)
* [Apollo](https://www.apollographql.com/)
* [Redux](https://redux.js.org/)
* [LevelUpTutorials.com Level II React Course](https://www.leveluptutorials.com/tutorials/level-2-react)
* [React Informed (forms)](https://www.npmjs.com/package/informed)
* [Meteor](https://www.meteor.com/)
* [Axios](https://www.npmjs.com/package/axios)
* [Firebase](https://firebase.google.com/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Here's how React's new Context API works](https://youtu.be/XLJN4JfniH4)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Dark Net Diaries Podcast](https://darknetdiaries.com/)
* Wes: 
  * Any suggestions for key management products?
  * [Iliza Shlesigner Stand-Up](https://www.netflix.com/title/80213658)

## Shameless Plugs

* [Scott's Level Up Tuts Pro](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",76e7ebe2c1ccfe9f84f5076b9f2a72e8c1902bcd93cec31a6420974829e22c2f,the-react-episode,/shows/066 - React.md,2023-10-16 20:06:55.679,2023-10-27 15:57:43.796,TASTY
syntax_podcast_show_00067,67,Hasty Treat - Goal Setting,2018-08-20 13:00:00.249,https://traffic.libsyn.com/syntax/Syntax067.mp3,"
In this Hasty Treat, Scott and Wes talk goal setting - why it's important, when to do it, how to stick to them, and more. Tweet us your goals with the hashtag #syntaxgoals.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

 4:14

* Setting SMART goals (Specific, Measurable, Attainable, Relevant, Time)

7:45

* What kinds of thing should you set goals for?

10:49

* Business goals

16:50

* Visualizing Goals

22:58

* When should you set goals?

27:42

* Accountability

## Links
* [ProfitWell](https://www.profitwell.com/)
* [Forever Jobless Goals Worksheet](https://foreverjobless.com/fj-goals-worksheet.pdf)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",fe00443aea5c412ac63922970982487638c25e9737b53423eca10d4a194545c3,hasty-treat-goal-setting,/shows/067 - Goals.md,2023-10-16 20:06:55.716,2023-10-27 15:57:43.835,HASTY
syntax_podcast_show_00068,68,Design Tips for Developers,2018-08-22 13:00:00.119,https://traffic.libsyn.com/syntax/Syntax068.mp3,"
In this episode Wes and Scott dive into designing for developers - tips and tricks for improving your designs, and how to up your game in small ways that will have a big impact on your projects.

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1).

## Mlab - Sponsor

mLab is the leading Database-as-a-Service for MongoDB, powering over half a million deployments worldwide. Wes and Scott use mLab to host their own databases as well as take care of backups, security, scaling and performance. Try out a sandbox database on your next mongoDB project → [https://mlab.com](https://mlab.com/).

## Show Notes

6:18 - General Design Tips

* Spacing is important
* Using patterns and textures
  * [Subtle Patterns](https://www.toptal.com/designers/subtlepatterns/)
  * [Hero Patterns](https://www.heropatterns.com/)
  * [Heroicons](http://www.heroicons.com/)
  * [FlatIcon](https://pattern.flaticon.com/)
  * [True Grit Texture Supply](https://www.truegrittexturesupply.com/)
  * [Steve Schoger](https://twitter.com/steveschoger)

* Use subtle gradients
  * [ColorSpace](https://mycolor.space/gradient)

* Use subtle drop shadows
  * Multiple shadows on one element can have a nice effect

* Don't use true black and white (e.g. #000 or #fff) - use softer variation of black and white
  * Use CSS Variables for custom blacks and whites
  * CSS default colors are almost always too harsh

* Default browser UI is almost never the best UI
  * Select elements, radio buttons, checkboxes, etc. can all be styled - it's no fun, but way better than it’s ever been

40:22 - UX Design & Animation

* Don't use animations when not necessary
* Subtle scale/transitions on hover can be a nice effect
* [Particles.js](https://vincentgarreau.com/particles.js/)
* [Patagonia's Bears Ears](http://bearsears.patagonia.com/)

* CSS transitions vs Physics based

51:30 - How To Get Better

* Follow UI-themed Instagram accounts
* [siteInspire](https://www.siteinspire.com/)
* [Dribbble](https://dribbble.com/)
* [UISources](https://www.uisources.com/)
* [Follow Steve Schoger](https://twitter.com/i/moments/994601867987619840)

* Find a free mockup and build it out pixel for pixel

* Take time to challenge what you think is possible or doable technically and creatively

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Louis Cole](https://open.spotify.com/album/0WbNyHNpkxpqscNWiiEhZS?si=j5iT085_Rc-weuwF3OxeGQ)
* Wes: [r/posthardcore Spotify Playlist](https://open.spotify.com/user/v9iqfai0ejp8rgcb2sx9n6yis/playlist/5JTDyts3BDNzlBzemtw5zc)

## Shameless Plugs

* [Scott's React Testing Course](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4e91d4d6ecdb06a8254a1c34d040c0aad04078c497c39124a2dfe54145b4cc9d,design-tips-for-developers,/shows/068 - Design.md,2023-10-16 20:06:55.757,2023-10-27 15:57:43.882,TASTY
syntax_podcast_show_00069,69,Hasty Treat - Framer X and Prototyping Tools,2018-08-27 13:00:00.304,https://traffic.libsyn.com/syntax/Syntax069.mp3,"
In this Hasty Treat, Scott and Wes talk about prototyping and design tools in the development space, specifically Framer X - what it is, what it isn't, and some cool stuff coming down the pipeline.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:35

* Framer X - What it is and what it isn't

13:20

* What it means for other prototyping and design tools

17:00

* Future of prototyping and design and development

21:40

* Final thoughts

## Links

* [Scott's Framer X First Look Video](https://youtu.be/oUhoBus1nn0)
* [Sign up for Framer X Beta](https://framer.com/x/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",de29e172f7891b6cb7018b1e7817429f03a8e11826ab32c549582445716646f4,hasty-treat-framer-x-and-prototyping-tools,/shows/069 - Framer.md,2023-10-16 20:06:55.796,2023-10-27 15:57:43.919,HASTY
syntax_podcast_show_00070,70,Potluck - Programming Languages × Soft Skills × PHP vs JS × Breakdancing x Spice Blends,2018-08-29 13:00:00.798,https://traffic.libsyn.com/syntax/Syntax070.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - programming languages, how to practice soft skills, PHP vs JS, is it every too late to become a developer, and more.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Mlab - Sponsor

mLab is the leading Database-as-a-Service for MongoDB, powering over half a million deployments worldwide. Wes and Scott use mLab to host their own databases as well as take care of backups, security, scaling and performance. Try out a sandbox database on your next mongoDB project → [https://mlab.com](https://mlab.com/).

## Show Notes

5:00

* Why don't you work with Typescript?

10:52

* How do you recommend working with APIs/libraries that compete with the DOM (e.g. d3 + react, react + google maps)?

13:40

* What is meant by the word ""state"" when referring to Vue or React?

16:32

* How do you practice and get better at ""soft skills"" (e.g. burnout, freelancing, time management, confrontation)?
* [Syntax 025 - Dealing with email overload](https://syntax.fm/show/025/dealing-with-email-overload-and-and-prettier-setups)
* [PaperKarma - The App to Stop Junk Mail](https://www.paperkarma.com/)

28:23

* Do you guys use different environments (e.g. ""QA"" and ""Prod"")? What are some best practices?
* [Semaphore - Test and deploy your code](https://semaphoreci.com/)
* [Sentry - Open-source error tracking](https://sentry.io/welcome/)

32:43

* As someone trying to break into the field of programming, should you build everything from scratch, or it ok to use plugins and libraries?

38:52

* What would WordPress be like if it were built on Node and GraphQL?
* [Ghost](https://ghost.org/)

46:54

* I'm learning JavaScript at 34... Do you think I can learn to breakdance at 34 too?

51:16

* How do you handle high level page layout when using styled components?

53:13

* As a junior dev, should I switch from PHP and Laravel to full stack JS? I love PHP, but JS is taking over.

## Links

* [react-async-script-loader](https://github.com/leozdgao/react-async-script-loader#readme)
* [Netflix Explained](https://www.netflix.com/title/80216752)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Alfred Emoj](https://github.com/sindresorhus/alfred-emoj)
* Wes: [Motherboard YouTube Channel](https://www.youtube.com/user/MotherboardTV)

## Shameless Plugs

* [Scott's React Testing Course](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",1b108777f9eef72e6f3d4e276b60c386018fa2133cf5a1aae855b3cceae8f73f,potluck-programming-languages-soft-skills-php-vs-js-breakdancing-x-spice-blends,/shows/070 - Potluck.md,2023-10-16 20:06:55.833,2023-10-27 15:57:43.964,TASTY
syntax_podcast_show_00071,71,Hasty Treat - Stumped! Interview Questions,2018-09-03 13:00:00.141,https://traffic.libsyn.com/syntax/Syntax071.mp3,"
In this Hasty Treat, Scott and Wes try to stump each other with interview questions from [30 Seconds of Interviews](https://30secondsofinterviews.org/).

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

4:33

* What is the difference between the postfix (i++) and prefix (++i) increment operators?

7:15

* What's the difference between a static method and an instance method?

9:25

* What is a focus ring? What is the correct solution to handle them?

11:20

* How does hoisting work in JavaScript?
* [Syntax 017 - 22 Buzz Words Explained — Mutations, Pure Functions , Serverless, Hoisting, MVC + More](https://syntax.fm/show/017/22-buzz-words-explained-mutations-pure-functions-serverless-hoisting-mvc-more)

12:47

* What are the advantages of using CSS preprocessors?

14:29

* What is memoization?

15:48

* Describe the different ways to create an object. When should certain ways be preferred over others?

19:15

* What is event delegation and why is it useful? Can you show an example of how to use it?

22:06

* How do you compare two objects in JavaScript?

26:00

* Can you describe how CSS specificity works?


## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",14e8ae8ca9e5214e9c2ef33847fda1596c2d6823352f2c01f63c285e507894be,hasty-treat-stumped-interview-questions,/shows/071 - Stumped.md,2023-10-16 20:06:55.866,2023-10-27 15:57:44.007,HASTY
syntax_podcast_show_00072,72,Accessibility,2018-09-05 13:00:00.467,https://traffic.libsyn.com/syntax/Syntax072.mp3,"
In this episode Wes and Scott dive into the very big topic of accessibility, from the basics and easy wins to best practices, tools, resources and more!

## Cloudinary - Sponsor

[Cloudinary](https://cloudinary.com?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Accessibility_Syntax_podcast) is a heavy duty media hosting stack for your websites and applications.

Also, check out [Making Media Accessible: How to Automatically Generate alt Text for Images](https://cloudinary.com/blog/making_media_accessible_how_to_automatically_generate_alt_text_for_images?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Accessibility_Syntax_podcast). In the first part of the series, Cloudinary will demonstrate how you can integrate machine learning tools into your image management pipeline to automatically generate alt text for your assets.

## Deque - Sponsor

[Deque](https://www.deque.com/) is the amazing company behind the [aXe](https://www.deque.com/axe/) accessibility testing tool that over 200,000 people use to ensure their websites are accessible.

For users looking to scale accessibility, export issues and collaborate with colleagues, Deque offers an enterprise toolset called [Attest](https://www.deque.com/tools/worldspace-attest/). Attest also allows you to select accessibility custom rules, offers a more robust API and more integrations AND can test the accessibility of your iOS and Android applications.

## Show Notes

6:00 - Basics

* What is accessibility?
* [Amy Carney Tweet](https://twitter.com/click2carney/status/1027601637156610048)
* [Tim Berners Lee Quote](https://www.w3.org/standards/webdesign/accessibility)
* a11y
* What types of disabilities are there?
  * [Temporary, situational, and permanent](https://medium.com/valtech-design/inclusive-design-dd4e03f82094)
* [Tweet thread with lots of info](https://twitter.com/wesbos/status/1027187967243309057)

15:03 - How do you write accessible code (easy wins)?

* Clean HTML
* Semantic elements
* Use the alt attribute on images
* HTML5 (article, section, header, footer, aside)
* Proper inputs types - number, text,
* CSS order property on Flexbox and Grid
* Colors and proper contrast
* Use links and buttons properly
* Use ARIA roles to define elements when semantic HTML falls flat (popups, non-standard controls, etc.)
  * [Introduction to ARIA](https://developers.google.com/web/fundamentals/accessibility/semantics-aria/)
  * [Using ARIA: Roles, States, and Properties](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques)
* Keyboard only navigation
* [Tabindex](https://webaim.org/techniques/keyboard/tabindex)
* Skip to content
* [""Skip Navigation"" Links](https://webaim.org/techniques/skipnav/)
* a11y ESLint rules
* Video captions for ESL
* Transcripts for Podcasts

44:48 - Tools

* [aXe](https://www.deque.com/axe/)
* Lighthouse - Audits tab in Chrome dev tools
* [Inclusive Design Posters](https://github.com/UKHomeOffice/posters/blob/master/accessibility/design-accessible-services/FINAL-Designing-accessible-services-posters-set.pdf)
* [HTML Code Sniffer](https://squizlabs.github.io/HTML_CodeSniffer/)
* [Pa11y runs code sniffer from the CLI](https://github.com/pa11y/pa11y)
* Accessibility features in OS
* Screen Readers
  * MacOS VoiceOver
  * [NVAccess](https://twitter.com/NVAccess)
  * [Chrome Vox](https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en)

54:35 - Resources

* [The A11Y Project](https://a11yproject.com/)
* [Bulb Accessibility Audit from Heydon](https://bulbenergy.github.io/bulb-audit/)
* [Deque Youtube Channel](https://www.youtube.com/channel/UCvNQ5aJllZ5Oi49jtMKeb0Q)

62:22 - Important Ideas

* Use your website with accessibility tools turned on
* Sit with someone using a screen reader
* [Amy Carney's Tweet](https://twitter.com/click2carney/status/1027604230759051265)
* [Mike Behnke Tweet](https://twitter.com/localpcguy/status/1027215599817158656)
* [moose of letters' Tweet](https://twitter.com/_reverett/status/1027189007799791618)

## Links

* [Syntax033: Large Files - CDNs, Image Compression, Video Hosting, and Big Zips](https://syntax.fm/show/033/large-files-cdns-image-compression-video-hosting-and-big-zips)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [SpeedCurve](https://speedcurve.com/)
* Wes: [Netflix - Magic for Humans](https://www.netflix.com/title/80190510)

## Shameless Plugs

* [Scott's React Testing Course](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",136b71f426ac8c96e4754cb335a0b79add1bc4df46cd061ee28831d4ba8118b8,accessibility,/shows/072 - Accessibility.md,2023-10-16 20:06:55.919,2023-10-27 15:57:44.055,TASTY
syntax_podcast_show_00073,73,Hasty Treat - Reading Documentation,2018-09-10 13:00:00.827,https://traffic.libsyn.com/syntax/Syntax073.mp3,"
In this Hasty Treat, Scott and Wes dive into documentation - how to avoid common pitfalls and overwhelm, as well as how to read, understand and get the most out of documentation.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

5:10 - What are the different kinds of documentation?

* Tutorials
* Docs
* API references
* Video docs

* Examples of good documentation
  * [Stripe](https://stripe.com/docs)
  * [Next.js Examples](https://github.com/zeit/next.js/tree/canary/examples)
  * [New PayPal Docs](https://developer.paypal.com/docs/)
  * [Gatsby](https://www.gatsbyjs.org/tutorial/part-two/)
  * [Jest](https://jestjs.io/docs/en/getting-started)
  * [Meteor](https://docs.meteor.com/#/basic/)


14:34 - How to read documentation

* Understanding how you learn will save you lots of time

16:03 - Understanding Parameters

* Parameter types
* Required / Optional
* Parameter order

22:45 - How do you tackle learning something new?

* Look at some examples
* Scan the entire docs to get an idea of the surface area
* Have something specific in mind that you want to build

27:34 - What to do when the docs suck?

* Look at other people's code
* Chat rooms
* Tests for examples
* Read the source code
* Github search
* Contribute

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",6c821949cd49aafd1005b7539ee04f5ffbc18f356b967f1adfaab3d1b40d4b70,hasty-treat-reading-documentation,/shows/073 - Documentation.md,2023-10-16 20:06:55.957,2023-10-27 15:57:44.103,HASTY
syntax_podcast_show_00074,74,11 Habits of Highly Effective Developers,2018-09-12 13:00:00.069,https://traffic.libsyn.com/syntax/Syntax074.mp3,"
In this episode Wes and Scott discuss 11 habits that will make you a better developer - everything from understanding the business goals behind your projects to maintaining work-life balance, staying curious, and developing empathy.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1).

## Show Notes

2:55 - You understand stakeholder and business goals

* What is the website (or project) ultimately trying to accomplish?
* How does the business make money?
* Don't get caught up in your own ""mama drama"" about frameworks, but instead focus on how a particular framework will help achieve the end goal of the business

5:13 - You're curious and always learning

* This industry is ever-changing and isn’t slowing down

7:36 - You have an open mind about new technology

* Don’t “poopoo” something because it’s intimidating, new, scary or different
* Like foods you've never tried, sometimes something unusual turns out to be game changing

9:57 - You ask for help

* #LifeHack - most people know more than you
* Be comfortable with NOT knowing
* Be comfortable with failing and with how others might perceive that
* Check your ego at the door

15:35 - You help others

* Helping others solidifies your own knowledge
* Answering questions
  * [Stack Overflow](https://stackoverflow.com/)
  * [Quora](https://www.quora.com/)
* Blogging
* YouTube videos
* Mentoring co-workers
* Not offering unwanted advice

19:12 - You have a ""problem solver"" mentality

* General curiosity - figuring out why things aren’t working
* Break things down into testable components to pinpoint an issue
* Have a clear head under pressure (e.g. interviews)

24:37 - You have fun with what you do

* Enjoying challenges
* Even if something isn't particularly fun, you find ways to make it fun and interesting

27:54 - You understand work-life balance

* Burnout is huge in our industry
* It can be difficult when you love what you do, but it's so important to maintain balance

34:00 - You are empathetic to your co-workers and users

* Be a team players while getting things done
* Make everyone around you better at what they do
* Be someone others want to work with by being inclusive and professional
  * Don't make inappropriate jokes, put co-workers in a tough position, etc.

37:08 - You pay attention to detail

* Think about edge cases

39:03 - You're part of the community

* Local meetups / lunch and learn
* Twitter #100daysofcode
* Conferences

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Overcooked! 2](http://www.ghosttowngames.com/overcooked-2/)
* Wes: [Book - Rich Dad Poor Dad](https://www.amazon.com/Rich-Dad-Poor-Teach-Middle/dp/1612680194/ref=sr_1_1?ie=UTF8&qid=1536628473&sr=8-1&keywords=poor+dad+rich+dad+-+robert+kiyosaki)

## Shameless Plugs

* [Scott's React Testing for Beginners Course](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Graph QL Course](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",423408b2806207117d39c7af16f7bda833f669f590242f7a842458b330c6af8b,11-habits-of-highly-effective-developers,/shows/074 - habits.md,2023-10-16 20:06:55.991,2023-10-27 15:57:44.145,TASTY
syntax_podcast_show_00075,75,Hasty Treat - Feedback and Criticism,2018-09-17 13:00:00.983,https://traffic.libsyn.com/syntax/Syntax075.mp3,"
In this Hasty Treat, Scott and Wes talk about feedback and criticism in the web industry.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

4:00 - Getting Feedback

* Don't assume malice - tone is easily lost in digital communication
* Don't take it personally
* Evaluate the feedback through the eyes of who it's coming from
* Look for the truth in the feedback
* Be open to feedback

15:15 - Giving Feedback

* Don't be negative - phrase your feedback in positives
* Don’t give unrequested feedback
* Explain the why behind your feedback
* Don’t be rude or an asshole
* Use Tools and Standards for Code Quality
* Give an opportunity to improve
* Explain the ""why"" behind the feedback
* Sandwich criticism with something positive
* When things are heated, try to diffuse the situation
* Give frequent positive feedback

## Links

* [Tweet from Dan Blundell](https://twitter.com/danblundell/status/1039537984394211328)
* [Tweet from Dan vs Code](https://twitter.com/daveVScode/status/1039525792206741504)
* [Manager Tools’ Feedback Model](http://www.rightattitudes.com/2008/02/23/manager-tools-feedback-model/)
* [Elon Musk on The Joe Rogan Experience](https://www.youtube.com/watch?v=ycPr5-27vSI)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",285832c462f9adda5be0bdc3dc6d80c354f004f721feeb644be1dda29d1b05a5,hasty-treat-feedback-and-criticism,/shows/075 - Feedback.md,2023-10-16 20:06:56.024,2023-10-27 15:57:44.192,HASTY
syntax_podcast_show_00076,76,Specialization vs Generalization,2018-09-19 13:00:00.095,https://traffic.libsyn.com/syntax/Syntax076.mp3,"
In this episode Wes and Scott discuss specialization vs generalization - the different ways one can be a generalist or a specialist, advantages and disadvantages to both, and, ultimately, which is the better career path.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Dev Lifts — Sponsor

[Dev Lifts](https://devlifts.io/) - Thad and JC are on a mission to make web developers healthy. They're currently offering Personal Training and Nutrition Plans as well as a new program called [Fit.Start](https://devlifts.io/join/fitstart-lean). Get 50% off with the coupon code ""tasty"". Check it out today!

## Show Notes

4:18 - What is a specialist?

* Someone who is very good at one or two things
* Can be very lucrative if you've taken the time to become well-known in you're industry

12:20 - What is a generalist?

* Two ways to look at generalists:
  * Someone who tries to do a little bit of everything (e.g. a developer who does Wordpress, Drupal, Django, Rails, etc.)
  * Someone who builds related skills around one area (e.g. a JavaScript developer who can code up a backend and a frontend)
* There will be more jobs available for the dev with tightly integrated skills in related areas than a true ""jack of all trades"".

22:22 - Frontend vs Backend

* Frontend
  * Frameworks (React, Vue, etc.)
  * CSS
  * Performance
  * Animations

* Backend
  * Web servers
  * Serverless / AWS
  * Scaling
  * Frameworks
  * Performance
  * Databases
  * Docker
  * CI

26:50 - When to widen your focus

* When you are complacent with your mastery
* You need a skill to get something done.
* For fun
* For a specific job

30:42 - When to narrow your focus

* You don’t feel control over your skills
* You are missing out on employment because a lack of skills in one department
* You feel overwhelmed by the options available
* You want to be the ""go to person”
* For fun

35:48 - How to master and expand

* Focus on one skill at at time. Master it and then expand on your skillset
* Find satellite skills - things that work in harmony

38:47 - Scott's journey

42:31 - Wes' journey

44:55 - How to know where to focus

* Necessity will dictate a lot - what do you need right now?
* Job postings - you can stack the deck in your favor by learning React. Once you are in, you're can lean anything you want.
* Follow your heart - but have a plan

51:03 - Should I be a generalist or a specialist?

* Wes: There is nothing wrong with having a large skillset as long as you aren’t mediocre at everything. If you're optimizing for hire-ability I think having a defined focus on either front-end or back-end is best, but still an understanding of how the other works. Ideally you have 1) Very good JS skills, 2) an understanding of how things work on both ends.

* Scott: You can do either, but whatever you do, do it well. It’s easier to do a few things well than many things well. That said there are some virtuosic devs out there who can be amazing at many things, however those people are not common. Most people have holes in their armor.

## Links

* [JAMstack_conf](https://jamstackconf.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Great British Baking Show](https://www.pbs.org/show/great-british-baking-show/)
* Wes:
  * [Pointless Packaging Instagram](https://instagram.com/pointless_packaging)
  * [Ozark Season 2](https://www.netflix.com/title/80117552)

## Shameless Plugs

* [Scott's React Testing for Beginners Course](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",969d6de20df41ed84921c41e991eb0e3fff20660a5f3d82a43d84638fba5c9f3,specialization-vs-generalization,/shows/076 - Specialization.md,2023-10-16 20:06:56.060,2023-10-27 15:57:44.236,TASTY
syntax_podcast_show_00077,77,Hasty Treat - Positivity and Web Development,2018-09-24 13:00:00.377,https://traffic.libsyn.com/syntax/Syntax077.mp3,"
In this Hasty Treat, Scott and Wes talk about positivity in the web industry - how it can affect you, your work, and the people around you.

## NativeScript - Sponsor

NativeScript is an open source framework for building truly native mobile apps with Angular, Vue.js, TypeScript, or JavaScript. It's is a great way for front-end developers to get started building native mobile apps. Get started today at [nativescript.org/syntax](https://nativescript.org/syntax).

## Show Notes

The tech industry is always on the cutting edge and we’re starting to see a shift in how we deal with positivity and negativity.

3:18 - The effects of negativity and how the web industry is improving

* Mental health awareness is very real
* [Stack overflow](https://stackoverflow.com/) sees that it needs to change
* [Linus Torvalds' apology](https://arstechnica.com/gadgets/2018/09/linus-torvalds-apologizes-for-years-of-being-a-jerk-takes-time-off-to-learn-empathy/)
* Negativity is a disease, and it spreads
* Positivity is a force as well
* You can be constructive while still being nice
  * Dan Abramov, Addy Osmani, Sarah Drasner are all amazing examples of people pushing the web forward while having a smile on their face

11:50 - Healthy ways to approach disagreements

* Never assume malice
* Kill them with kindness
* Take note of the people you admire and how they deal with aggressiveness

17:08 - The power of positivity

* Inspire the change you want to see
* It's good for your productivity - it makes you feel good

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bcf7aa9506b6752549344e20cfc96506343a39379eac69a44644b647388776d9,hasty-treat-positivity-and-web-development,/shows/077 - Positivity.md,2023-10-16 20:06:56.095,2023-10-27 15:57:44.277,HASTY
syntax_podcast_show_00078,78,Potluck - JS × Web Components × Security × They took our jobs!,2018-09-26 13:00:00.879,https://traffic.libsyn.com/syntax/Syntax078.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - all things JS, go-to dev stacks, website security and the ever-changing nature of development.

## Mlab - Sponsor

mLab is the leading Database-as-a-Service for MongoDB, powering over half a million deployments worldwide. Wes and Scott use mLab to host their own databases as well as take care of backups, security, scaling and performance. Try out a sandbox database on your next mongoDB project → [https://mlab.com](https://mlab.com/).

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1).

## Show Notes

3:33 - Would you ever consider doing a live Syntax show?

* Yes! Get tickets at [JAMstack_conf](https://jamstackconf.com/)

4:31 - What are your thoughts on Flutter? Does React Native have some solid competition now?

* Google's answer to [React Native](https://facebook.github.io/react-native/).
* [Flutter](https://flutter.io/)
* [NativeScript](https://www.nativescript.org/)

9:43 - What are your website security essentials for static and dynamic sites? What's the deal with forms? Is it bad to put a form on my site with no server-side validation?

* Not cool. Always do server-side validation.
* [Netlify](https://www.netlify.com/)
* [Cloudflare](https://www.cloudflare.com/)

14:55 - Do you have a 'go-to' stack when building new web apps? If so, what is it and how would you go about choosing the right stack for the project?

* Scott - Gatsby for sites / Meteor Apollo, React, MongoDB for db needing accounts sites
* Wes - Next.js, Express Backend + either MongoDB, DiskDB or Prisma (or hasura)

21:51 - What are your thoughts on 100 Days of Code Challenge?

* Consistency and accountability.
* The best way to get good.
* [100 Days of Code](https://www.100daysofcode.com/)

25:05 - I really have been learning a lot of React recently and have been wondering what is the difference between Next.js, Gatsby.js and vanilla React?

* Dynamic vs static. What are your needs, how often does the content change.
* [Next.js](https://nextjs.org/)
  * Use for dynamic needs
  * It can do static exports too
  * Convert to markdown
  * Nothing special other than Routing and SSR (Server request getInitialProps)

* [Gatsby.js](https://www.gatsbyjs.org/)
  * Use for static needs
  * Gatsby has lots of adapters

30:38 - What are websockets and when should they be used?

* A request that is always open - it responds to events instead of pinging, pushing or pulling data

35:15 - I would love to hear your take on PWAs. Do either of you have any experience with building or using them?

* [Syntax Ep 50 - Progressive Web Apps](https://syntax.fm/show/050/progressive-web-apps)

40:16 - I'm a nervous newbie who's concerned about doing a web app that accepts payments or sensitive information. How can I know I've done everything to create a secure website and also protect myself from being sued by the client if their website gets hacked? I'm trying to be a jam stack developer so I'm looking at things like [Snipcart](https://snipcart.com/) and [Stripe](https://stripe.com/)

* Don’t save sensitive info in plain text. Use services that make it tough to do that until you are confident.
* Look up [PIPEDIA compliance](https://www.google.com/search?q=pipeda+compliance)

43:23 - What is a JavaScript generator? I heard that async/await creates a “generator” under the hood.

* Pausable function that can return multiple values - call .next() on it

46:54 - Are web components worth it in 2018?

* [Web Components](https://www.webcomponents.org/)
* Polymer
* Svelte

49:52 - How soon the designers replace React Developers with the invent of tools like Framer X?

* Not soon.
* Your job is changing and will continually change
* [SouthPark - They Took Our Jobs!](https://www.youtube.com/watch?v=DEiWU1MbBfk)

56:52 - Have you, or anyone you know ever thought of quitting the industry because of difficulties you have run into?

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [EGO Lawn Tools](https://amzn.to/2MFATPj)
* Wes: [B is for Build YouTube Channel](https://www.youtube.com/channel/UCl4-WBRqWA2MlxmZorKOV7w)

## Shameless Plugs

* [Scott's Level Up Pro Subscription](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://advancedreact.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",847b4488d57d573c9f6b564eb795850f4fad6b784ada512a82bb65471585c281,potluck-js-web-components-security-they-took-our-jobs,/shows/078 - Potluck.md,2023-10-16 20:06:56.130,2023-10-27 15:57:44.316,TASTY
syntax_podcast_show_00079,79,Hasty Treat - Stumped! 02,2018-10-01 13:00:00.682,https://traffic.libsyn.com/syntax/Syntax079.mp3,"
In this Hasty Treat, Scott and Wes are back for a second edition of Stumped! where they try to stump each other with interview questions from [30 Seconds of Interviews](https://30secondsofinterviews.org/).

## NativeScript - Sponsor

NativeScript is an open source framework for building truly native mobile apps with Angular, Vue.js, TypeScript, or JavaScript. It's is a great way for front-end developers to get started building native mobile apps. Get started today at [nativescript.org/syntax](https://nativescript.org/syntax).

## Show Notes

5:05

* What are defer and async attributes on a script tag?

7:15

* What are the differences between var, let, const and no keyword statements?

8:45

* What is a callback? Can you show an example using one?

9:52

* What is recursion and when is it useful?

12:06

* What is the difference between the array methods [map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) and [forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)?
* [Syntax Ep 043](https://syntax.fm/show/043/20-javascript-array-and-object-methods-to-make-you-a-better-developer)

14:02

* What is Big O Notation?

15:28

* What does 0.1 + 0.2 === 0.3 evaluate to?
* [wtfjs](https://wtfjs.com/)

17:44

* What is CSS BEM?

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ecbe89c684f2b0c537143942463226e2932b52dce1aa3b6a67043cc7eed6be44,hasty-treat-stumped-02,/shows/079 - Stumped.md,2023-10-16 20:06:56.164,2023-10-27 15:57:44.357,HASTY
syntax_podcast_show_00080,80,Top 18 New Things in JS - Part 1,2018-10-03 13:00:00.270,https://traffic.libsyn.com/syntax/Syntax080.mp3,"
In this episode Wes and Scott discuss their favorite top 18 new things in Javascript.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Mlab - Sponsor

mLab is the leading Database-as-a-Service for MongoDB, powering over half a million deployments worldwide. Wes and Scott use mLab to host their own databases as well as take care of backups, security, scaling and performance. Try out a sandbox database on your next mongoDB project → [https://mlab.com](https://mlab.com/).

## Show Notes

6:02

* Const / Let

10:00

* Template literals / Template strings
* [Toggle Quotes Extension](https://marketplace.visualstudio.com/items?itemName=BriteSnow.vscode-toggle-quotes)
* [Prettier](https://prettier.io/)

14:29

* Object destructuring

21:28

* Array destructuring

27:25

* Function Param destructuring

30:14

* Promises
* [Wes' Async + Await Talk](https://youtu.be/9YkUCxvaLEk?t=469s)

36:24

* Async + Await
* [Syntax Ep 028 - Async + Await](https://syntax.fm/show/028/async-await)

40:59

* Object Computed Property Name

43:42

* Object Method Syntax

## Links
* [Denver Startup Week](https://www.denverstartupweek.org/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Red Bull BC One World Final 2018](https://www.youtube.com/watch?v=N3jwdh-6Bi0)
* Wes: [Jura Impressa](https://us.jura.com/en)

## Shameless Plugs

* [Scott's Better Javascript Course](https://LevelUpTutorials.com/pro)
* [Wes 1: CSS Grid in 45 Minutes](https://youtu.be/DCZdCKjnBCs?t=1179s)
* [Wes 2: Async + Await Talk](https://youtu.be/9YkUCxvaLEk?t=469s)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",18dc976264503a70e35fa6e619767de059257c5d25b0be3abdab0354c22345bc,top-18-new-things-in-js-part-1,/shows/080 - New JS.md,2023-10-16 20:06:56.199,2023-10-27 15:57:44.401,TASTY
syntax_podcast_show_00081,81,Hasty Treat - Hacktoberfest,2018-10-08 13:00:00.284,https://traffic.libsyn.com/syntax/Syntax081.mp3,"
In this Hasty Treat, Scott and Wes talk about this year's [Hacktoberfest](https://hacktoberfest.digitalocean.com/) - a great way to support open source.

## NativeScript - Sponsor

NativeScript is an open source framework for building truly native mobile apps with Angular, Vue.js, TypeScript, or JavaScript. It's is a great way for front-end developers to get started building native mobile apps. Get started today at [nativescript.org/syntax](https://nativescript.org/syntax).

## Show Notes

2:42

* [Hacktoberfest - The rules](https://hacktoberfest.digitalocean.com/)

7:35

* Things to PR

12:56

* Things *not* to PR

18:05

* How Pull Requests work

21:45

* Some of our repos
  * [Wes' ES6 course blog posts](https://github.com/wesbos/es6-articles)
  * [Syntax Show Notes](https://github.com/wesbos/syntax)
  * [KeyCode.info](http://keycode.info/)
  * [CSSCursor.info](http://csscursor.info/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e6fc58ed325ecacef7d9513f0320fc103a338b5df810c10fd7ef50a91aad33c1,hasty-treat-hacktoberfest,/shows/081 - Hacktoberfest.md,2023-10-16 20:06:56.253,2023-10-27 15:57:44.443,HASTY
syntax_podcast_show_00082,82,Top 18 New Things in JS - Part 2,2018-10-10 13:00:00.685,https://traffic.libsyn.com/syntax/Syntax082.mp3,"
In this episode Wes and Scott continue the discussion of their favorite top 18 new things in Javascript.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Graph CMS - Sponsor

GraphCMS is trying to be the world’s most developer friendly CMS. It's a great way to build a GraphQL API without having to write a custom GraphQL server. Try out the API-first CMS of the future today at [graphcms.com/syntaxfm](https://graphcms.com/syntaxfm).

## Show Notes

3:30

* Spread

```javascript
const array1 = [1, 2, 3]
const array2 = [0, ...array1]
```

8:40

* Rests

```javascript
const teams = [player1, player2, player3]
const [leader, ...members] = teams
```

11:54

* Arrow Functions

```javascript
const add = (x, y) => {
  return x + y
}
// equal to
const add = (x, y) => x + y
```

15:48

* Default Function Arguments

```javascript
function mul(x, y = 1) {
  return x * y
}
mul(2, 3) // 2 * 3 = 6
mul(2) // 2 * 1 = 2
```

19:47

* Named params

```javascript
function ({ array, element }) {
  return [element, ...array]
}
```

21:26

* Modules

```javascript
// @ a.js
export const param = 1
const defaultParam = 2
export default defaultParam

// @ b.js
import defaultParam, { param } from './a'

// rename import module
import newDefaultParam from './a' // rename default export directly
import { param as newParam} from './a' // use `as` for rename
```

35:35

* Classes

```javascript
class Polygon {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }

  get area() {
    return this.calcArea();
  }
  
  calcArea() {
    return this.height * this.width;
  }
}

class Square extends Polygon {
  ...
}
```

41:54

* Things we never use

```javascript
await const users = fetchUser().catch(e => ...)

for(let element of array) { ... }

const set1 = new Set([1, 2, 3, 4, 5]);
```

## Links
* [Jake’s Minesweeper](https://twitter.com/jaffathecake/status/1045055482933768194)
* [parcel](https://parceljs.org/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Trader Joe's Everything by the Bagel Sesame Seasoning Blend](https://www.amazon.com/Trader-Joes-Everything-Sesame-Seasoning/dp/B06W9N8X9H)
* Wes: [Trader Joe's Green Dragon Hot Sauce](https://www.amazon.com/Trader-Joes-Green-Dragon-Sauce/dp/B014E037TM)

## Shameless Plugs

* [Scott's Better Javascript Course](https://LevelUpTutorials.com/pro)
* [Wes' ES6 For Everyone](https://es6.io/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b3a6f973317d72b1c04416e36870c4cd91fa582854344f9b4029b84fdc57f20d,top-18-new-things-in-js-part-2,/shows/082 - New JS Part 2.md,2023-10-16 20:06:56.287,2023-10-27 15:57:44.483,TASTY
syntax_podcast_show_00083,83,"Hasty Treat - Old Browsers, Fallbacks and Polyfills - Part 1",2018-10-15 13:00:00.808,https://traffic.libsyn.com/syntax/Syntax083.mp3,"
In this Hasty Treat, Scott and Wes kickoff a three-part series about old browsers, fallbacks and polyfills. In part one, Scott and Wes talk specifically about old browsers, how best to support them, and whether or not you should support them at all.

## VueSchool.io — Sponsor

Check out [VueSchool.io's](https://vueschool.io/) new subscription plans. Get access to their entire catalog with more than 160 lessons, including The Vue.js Masterclass, for one low monthly fee. New content and courses are added regularly. Visit [VueSchool.io/syntax](https://vueschool.io/syntax) and get your first month for only $5.

## Show Notes

5:10 - How do you decide if you should support an older browser?

* Google Analytics Data
* User base / Money earned from that audience
* IS it worth it? Time vs Money?

11:35 - How do you test your websites and app in older browsers?

* Actual hardware - there's no substitution for the real thing
* [Browser Stack](https://www.browserstack.com/)
* [Virtual Box](https://www.virtualbox.org/)
* [Modern.ie](http://modern.ie)
* [Can I Use](https://caniuse.com/)


18:24 - Supporting and Testing Mobile Browsers

* Resize your browser
* Build a device lab
* Remote Debugging
* Browser device view
* Faking Geolocation
* Emulators in XCode / Android dev tools
* [Browsersync](https://browsersync.io/)
* [Ghostlab](https://www.vanamco.com/ghostlab/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",433f889e81991d13b094fe6e294f641bf6288454689078cdfbee76e4c501aa05,hasty-treat-old-browsers-fallbacks-and-polyfills-part-1,/shows/083 - Old Browsers.md,2023-10-16 20:06:56.333,2023-10-27 15:57:44.523,HASTY
syntax_podcast_show_00084,84,Fitness for Developers,2018-10-17 13:00:00.331,https://traffic.libsyn.com/syntax/Syntax084.mp3,"
In this episode Wes and Scott discuss fitness for developers. As a follow-up to [Episode 20](https://syntax.fm/show/020/fitness-nutrition-and-losing-weight), they talk about the status of their fitness goals from that episode, what's worked, what hasn't, and how you can be more fit yourself in 2018.

## DevLifts — Sponsor

[DevLifts](https://devlifts.io/) - Thad and JC are on a mission to make web developers healthy. They're currently offering two options: The first is [Fit.Start](https://devlifts.io/join) - perfect for beginners or those looking to get back at it. Use the coupon code ""syntax"" to get 50% off the fit.start plan. The second is [DevLifts Premium](https://devlifts.io/join) - for those looking for a laser-focused approach and maximum accountability. Use the coupon code ""tasty"" to get 50% off the premium plan. Check it out today!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

3:30

* Why is fitness important as a developer?

6:08

* Working Out Update: Wes

14:37

* Working Out Update: Scott

25:06

* Nutrition Update: Wes

35:12

* Nutrition Update: Scott

45:40

* Supplement Update: Wes

48:00

* Supplement Update: Scott

52:18

* Plans for the future: Wes

54:53

* Plans for the future: Scott

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Fitness Blender](https://www.fitnessblender.com/)
* Wes: [Dr. Peter Attia - The Drive Podcast](https://peterattiamd.com/podcast/)

## Shameless Plugs

* [Scott's Level Up Pro](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://advancedreact.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9601619e64065ccf4e2f591dbafdc16eddc6fb2e4e929f283128a5db154164a7,fitness-for-developers,/shows/084 - Fitness.md,2023-10-16 20:06:56.377,2023-10-27 15:57:44.564,TASTY
syntax_podcast_show_00085,85,"Hasty Treat - Old Browsers, Fallbacks and Polyfills - Part 2",2018-10-22 13:00:00.399,https://traffic.libsyn.com/syntax/Syntax085.mp3,"
In this Hasty Treat, Scott and Wes continue a three-part series about old browsers, fallbacks and polyfills. In part two, they talk specifically about CSS Grid, Flexbox, new features and fallbacks, and how to use them.

## VueSchool.io — Sponsor

Check out [VueSchool.io's](https://vueschool.io/) new subscription plans. Get access to their entire catalog with more than 160 lessons, including The Vue.js Masterclass, for one low monthly fee. New content and courses are added regularly. Visit [VueSchool.io/syntax](https://vueschool.io/syntax) and get your first month for only $5.

## Show Notes

3:08 - CSS Grid and Flexbox

* Flexbox old spec
* Flexbox new spec
* CSS Grid
* Some popular options for supporting for supporting CSS Grid and/or Flexbox:
  * Just serve the mobile layout
  * Display block
  * Separate layout that you will eventually delete
* [Can I Use](https://caniuse.com/)
* [Do websites need to look exactly the same in every browser?](http://dowebsitesneedtolookexactlythesameineverybrowser.com/)
* [Modernizr](https://modernizr.com/)
* [CSS3, Please!](http://css3please.com/)
* [Autoprefixer](https://github.com/postcss/autoprefixer)

12:38 - CSS Variables

* Double define
* Just like Grid, unknown def will be ignored and fallback to CSS
* [CSS Houdini](https://css-houdini.org)

17:00 - Fallback Code

* @supports
* Display block then display grid
* Feature Testing
* Detect the browser as a last resort

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",143fc1c80210f343bdf2100c402885aa05fa20e6ab0b4b807037e086d9493221,hasty-treat-old-browsers-fallbacks-and-polyfills-part-2,/shows/085 - CSS Grid and Flexbox.md,2023-10-16 20:06:56.423,2023-10-27 15:57:44.603,HASTY
syntax_podcast_show_00086,86,Potluck - Working with designers × Is WordPress Crap? × When to stop working × More,2018-10-26 13:00:00.879,https://traffic.libsyn.com/syntax/Syntax086.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - working with designers, criticisms of WordPress, avoiding burnout, time management, and more.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## .tech Domains - Sponsor

Finding a great domain name is tough with so many names already taken. If you're looking for a domain name for your startup, side project, or anything at all, check out [.tech Domains](https://get.tech). Syntax listeners can get 90% off both one-year, five-year and ten-year registration by visiting [go.tech/syntax](https://go.tech/syntax) and using the coupon code ""syntax"".

## Show Notes

5:05 - How can you help a designer understand how styling works and how layouts work in the web? In other words: How do I explain my boundaries as a front-end developer to a designer?

* Work closely with the designer
* Allow the designer to push your limits
* You can help them understand by:
  * Showing them poor performing websites
  * Showing them things that usually are taxing on the GPU to paint - rotations, background images, drop shadows, etc.
* Don’t be afraid to let a tough design push your boundaries

13:23 - How do you manage your time for learning new things when you have children and a daily full-time job?

* Those who figure out how to make it a priority will win out
* Family first - talk to your spouse
* Ask your boss for time to learn and grow
* Find ways to get paid for learning

19:45 - How do you deal with burnout in this constantly evolving front end tech ecosystem?

* Make time for hobbies away from the computer
* Do projects just for fun
* Solve your own problems
* [Syntax 035: Keeping Up with the Codeashians](https://syntax.fm/show/035/keeping-up-with-the-codeashians-dealing-with-our-fast-paced-industry)
* [Syntax 041: Preventing and Dealing with Burnout in Web Development](https://syntax.fm/show/041/preventing-and-dealing-with-burnout-in-web-development)

25:00 - Do you code at night (past 9pm)?

* Start your wind-down time earlier
* Let your brain wok on problems while you sleep
* Get it out of your head
* Listen to podcasts, audiobooks, etc.

29:23 - How do you compress your videos/audio for your courses/tutorials?

* Handbrake Fast 1080
* Use presets
* Output from video editor, rip from YouTube, or compress directly from video editor

33:10 - It seems like in the web dev community, a lot of people give WordPress crap. Any idea why?

* WordPress is dope - people just like to complain.
* WordPress is often one of the first things people learn and have bad memories of it
* It's easy to write bad code with WordPress
* It can be slow
* It can attract a certain type of developer

33:10 - What are some of the biggest mistakes that people make when they are learning programming and what's the best way to overcome them?

* Don't focus on too many things
* Don't worry about picking the right technology
* Focus on the fundamentals
* Let your curiosity and excitement drive you
* Celebrate wins

40:29 - What are your best tips for writing documentation?

* Start with basic API documentation, them move to more ""article style"" docs
* Use tools like [CodeSandbox](https://codesandbox.io/) and [Swagger](https://swagger.io/)
* [Syntax 073: Reading Documentation](https://syntax.fm/show/073/hasty-treat-reading-documentation)

43:08 - What are some good questions or techniques to better understand a client's requirements?

* How does your business work right now?
* What are people coming to the website for?
* Questionnaires are good - they get people thinking
* It’s your job to understand what a client want out of a website - what problems they have and need solved

45:38 - Do you guys have any tips for taking over maintenance and development of existing websites where the previous developer is no longer reachable?

* Take time to asses the codebase before writing anything
* Learn what’s there any and why
* Don't start ripping out code without understanding what's really going on
* Don't leave it worse than you found it
* It depends on the stack, but it's probably worth giving it an honest go before re-writing the whole thing

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott:
  * [Drillbrush Bathroom Surfaces Tub, Shower, Tile and Grout All Purpose Power Scrubber Cleaning Kit](https://amzn.to/2PASzxK)
  * [iOttie](https://amzn.to/2yOj2B5)
* Wes:
  * [Sabrent Wireless Charger](https://amzn.to/2Eng8ce)
  * [CD Player Mount](https://amzn.to/2pWCB5P)

## Shameless Plugs

* [Scott's Level Up Pro Subscription](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://advancedreact.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2b47bd7e3be5642a06363999ed6f9b89e085b1737216156aa2174425b97575d3,potluck-working-with-designers-is-wordpress-crap-when-to-stop-working-more,/shows/086 - Potluck.md,2023-10-16 20:06:56.464,2023-10-27 15:57:44.644,SUPPER
syntax_podcast_show_00087,87,"Hasty Treat - Old Browsers, Fallbacks and Polyfills - Part 3",2018-10-29 13:00:00.720,https://traffic.libsyn.com/syntax/Syntax087.mp3,"
In this Hasty Treat, Scott and Wes conclude a three-part series about old browsers, fallbacks and polyfills. In part three, they talk specifically about transpiling and polyfilling.

## VueSchool.io — Sponsor

Check out [VueSchool.io's](https://vueschool.io/) new subscription plans. Get access to their entire catalog with more than 160 lessons, including The Vue.js Masterclass, for one low monthly fee. New content and courses are added regularly. Visit [VueSchool.io/syntax](https://vueschool.io/syntax) and get your first month for only $5.

## Show Notes

2:20 - Polyfills and Transpile

5:18 - Back in the day

  * Border-radius htc hack
  * PNG fix for transparent PNGs
  * Flash for custom fonts
  * Cufon and SIFR

10:48 - JavaScript Polyfills

  * Features are polyfilled
  * [MDN Polyfill](https://developer.mozilla.org)
  * [Core-js](https://www.npmjs.com/package/core-js)
  * [Polyfill.io](https://polyfill.io)
  * [HTML5 Cross Browser Polyfills](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-browser-Polyfills)

13:47 - JavaScript Transpile

  * Syntax is transpiled
  * babel-preset-env
  * Babel has plugins and presets
  * Meteor bundle to different browsers on demand
* There are polyfills for most things, but performance can be an issue
  * Resize observer
  * Intersection Observer
* Some things can’t be done with either
  * New browser APIs
  * Service workers, device access, inline video on old iOS, etc.

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",92d3c9b6a84a7412a36823f212fbde0f62e870d9296557c6869fcfe323a2590d,hasty-treat-old-browsers-fallbacks-and-polyfills-part-3,/shows/087 - Polyfills.md,2023-10-16 20:06:56.507,2023-10-27 15:57:44.684,HASTY
syntax_podcast_show_00088,88,Pre-launch Checklist,2018-10-31 13:00:00.680,https://traffic.libsyn.com/syntax/Syntax088.mp3,"
In this episode Wes and Scott discuss their pre-launch checklists. They talk about performance, accessibility, compatibility, SEO, analytics, and more - all the things you should check before launching something to the world.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## .tech Domains - Sponsor

Finding a great domain name is tough with so many names already taken. If you're looking for a domain name for your startup, side project, or anything at all, check out [.tech Domains](https://get.tech). Syntax listeners can get 90% off both one-year, five-year and ten-year registration by visiting [go.tech/syntax](https://go.tech/syntax) and using the coupon code ""syntax"".

## Show Notes

1:45 - Overall

* Let robots do the work for you - use auditing tools
  * [Lighthouse](https://github.com/GoogleChrome/lighthouse)
  * SEO Checkers
  * Accessibility checkers like [axe](https://www.deque.com/axe/)

2:58 - Performance

* Compress those images
  * Build process
  * [Cloudinary](https://cloudinary.com/)
  * [ImageOptim](https://imageoptim.com)
  * [imgIX](https://www.imgix.com/)
* Minify
* Code Splitting
  * Smaller bundles where it makes sense
  * A future where it’s done for us
* Run page speed tests like [Google PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/)
* Don’t service worker on launch
* [Syntax Ep 50 - Progressive Web Apps](https://syntax.fm/show/050/progressive-web-apps)

11:43 - Compatibility

* Test on actual browsers that need to be supported
* Ask people to check on their devices
* Use a service like [Browserstack](https://www.browserstack.com/)
* Browser resolution and ratios
* Cache busters

16:00 - Sales / Credit Cards

* Use package.lock
* Have multiple people test your checkout
* Make sure your company name is listed on customer's credit card bills
* Have a phone number listed for disputes

24:55 - Tips from the Trenches

* Secure API endpoints
* Scale up server just in case
* Early access
* Soft launch
* Make sure URLs are correct - no ""localhost:3000"", etc.

31:25 - Content

* Check spelling and grammar
* A working 404 page
* Check for leftover placeholder text → launching with lorem ipsum is not good

34:39 - Accessibility

* Alt text
* Run color contrast checker
* Run Lighthouse
* Correct tab order
  * Use the site with keyboard only and make sure it’s a good experience

37:35 - SEO

* Sitemap created and uploaded to Google Webmaster Tools
* SEO checkers
* Meta tags
* Correct heading hierarchy

41:55 - Analytics

* Google analytics
* Facebook tracking pixel
* [Drip](https://www.drip.com/)


43:23 - Server config & access

* .htaccess
  * redirects where needed
* robots.txt
  * prevent indexing of some pages
* Enable GZIP
* Caching
* [Cloudflare](https://www.cloudflare.com/) or other CDN

46:12 - Company Processes

* Make sure tests are passing
* Git issues are closed
* Merge pull requests
* Write documentation on processes (readme, etc.)
* Deploy to staging environment and test production build
* No unwanted logs or errors left in production build
* DNS Propagation

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Swindled Podcast](http://swindledpodcast.com/)
* Wes: [FIFO Bottles](https://amzn.to/2R6V2jX)

## Shameless Plugs

* [Scott's Level Up Pro](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://advancedreact.com/) - use the code SYNTAX for $10 off

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",74713e833bb080bcbc945a8b23747814f80df0dcb6b06f4775417b634e0662cc,pre-launch-checklist,/shows/088 - Checklist.md,2023-10-16 20:06:56.548,2023-10-27 15:57:44.734,TASTY
syntax_podcast_show_00089,89,Hasty Treat - Stumped! 03,2018-11-05 14:00:00.602,https://traffic.libsyn.com/syntax/Syntax089.mp3,"
In this Hasty Treat, Scott and Wes are back for another edition of Stumped! where they try to stump each other with interview questions. Today's questions are from [Flashcards for Developers](https://www.flashcardsfordevelopers.com/).

## EmailOctopus - Sponsor

Email marketing for less, via Amazon SES. EmailOctopus sends your emails through Amazon's Simple Email Service (SES), saving money without sacrificing deliverability. With simple setup and all the features you would expect, EmailOctopus is as flexible as you need it to be. Get started today at [emailoctopus.com/syntax](https://emailoctopus.com/syntax) and get your first three months free.

## Show Notes

4:03

* What's the difference between synchronous and asynchronous code?

5:56

* What's the difference between .call and .apply?

7:08

* How do you share code between files?

8:18

* What's the difference between double equals and triple equals?

10:40

* What's the difference between null, undefined, and undeclared?

14:18

* What is the event loop?
* [Philip Roberts - What the heck is the event loop anyway?](https://www.youtube.com/watch?v=8aGhZQkoFbQ)

16:02

* Why is extending built-ins never a good idea?

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",deb46dc9658d392b3ac2115aac7f02e7a038eb611ab3d2627996aaa720f574e6,hasty-treat-stumped-03,/shows/089 - Stumped.md,2023-10-16 20:06:56.587,2023-10-27 15:57:44.779,HASTY
syntax_podcast_show_00090,90,Live at JAMstack_conf,2018-11-07 14:00:00.956,https://traffic.libsyn.com/syntax/Syntax090.mp3,"
This week Scott and Wes are live at JAMstack_conf with games, Spicy JAM Tips, Q&As and more.

## Netlify — Sponsor

[Netlify](https://netlify.com/syntax) is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

7:14 - Spicy JAM Tips

* Set default headers in your request library - this way it comes along for the ride on every request
* Don’t get hung up on “static” - static sites can be as dynamic as needed
* Don’t wait to use new tech - progressively enhance and gracefully degrade where needed
* There are many JAMStack libraries in the sea - there are many different approaches so don't be afraid to experiment
* Side projects are key to learning - test out new tech on smaller projects first and get comfortable with it

10:10 - This, That or Both?

* Evo RX - High end Carbon Fibre Road Bike or Library for composing asynchronous and event-based operations in JavaScript?
* Jumpsuit - A rap/rock group from Flint Michigan or a minimal React/Redux Framework?
* Aphrodite - React Styling Library or Best Selling Erotic novel?
* Yugo - A minimal static site generator built in O-CAML or a super mini hatchback built in the former Yugoslavia?
* C-Control - A modern state management library for web components or studio headphone mixer?
* Yakbak - A recordable HTTP testing interface or a popular 90’s electronic toy?
* Joose - A hip east coast juice bar or a metaobject system for JavaScript?
* Easy Rooter - A client side object oriented router written in modern Vanilla JavaScript or a drain cleaning plumbing apparatus popular among local plumbers?
* Aqueduct - A server-rendered ORM and oAuth 2.0 based framework built in Dart or a early 2000’s pop group hailing from Venice Beach?
* Gort - A 1980’s animated series cartoon villain or a CLI Toolkit for RobotOps written in Go?
* Raptorize - A jQuery plugin that plays a Velociraptor screech or A popular DIY spray on truck bed liner?

21:13 - Stumped!

* Question 1: What does ""age"" console.log to and why?

  let age = 26;
  age /= 2;
  console.log(age); // ??

* Question 2: What are all seven types in JS?
* Question 3: How do you pronounce ""specificity""?
* Question 4: What is event delegation and when might you want to use it?
* Question 5: What is CSS @supports for?
* Question 6: An arrow function takes in an unlimited number of arguments - how would you capture them?
* Question 7: What is the difference between .slice() and .splice()?
* Question 8: How would you calculate the number of milliseconds since midnight of January 1, 1970?
* Question 9: What does ""age"" console.log to and why?

  const age = console.log(100) || 200;
  console.log(age);

31:26 - Overrated or Underrated?

* Arrow Functions
* Downtown scooters
* Using Sass inside Styled Components
* Website that play sound in the interface
* The amount of JS frameworks
* Soft close toilet seats
* GraphQL
* ES6 Destructuring
* Instapots
* Implicit Return
* CSS Houdini
* Service Workers and Offline Applications
* Modern Design Tools - Figma, FramerX, Moudlez, Sketch, Studio
* Decorators
* Optional Chaining Proposal

42:35 - Q+A with Scott and Wes

* Since this is your first time meeting, what was the thing that surprised you the most?
* If you could create any Tycoon game, what would you create?
* In 2018, how concerned should we be about no-JS users?
* How many spaces should a tab be?
* How important is integration testing and the decentralized ecosystem?
* What are your thoughts on the new React Hooks API?
* Are we going to have a serverless function architecture apocalypse?
* Are you ever going to create an online course together?
* How will the future look for component-based design?
* What's your least favorite jam?
* What would be your goto headless CMS?
* What do you disagree on?

## Shameless Plugs

* [Scott's Level Up Pro Subscription](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://advancedreact.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d4811b7ad7948dd8c46415a221a19c52c723f9398b106d341b8b03d6c50fb545,live-at-jamstack_conf,/shows/090 - LIVE.md,2023-10-16 20:06:56.630,2023-10-27 15:57:44.821,TASTY
syntax_podcast_show_00091,91,Hasty Treat - How to become a Sticker Mogul,2018-11-12 14:00:00.406,https://traffic.libsyn.com/syntax/Syntax091.mp3,"
In this Hasty Treat, Scott and Wes talk about stickers and break down Wes' entire process for creating and selling his sticker packs. Check out [Bos.af](https://bos.af/) for more info.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

6:08

* Design

9:23

* Printing

16:08

* Types of Stickers

19:34

* Selling

21:43

* Envelopes, stamps and shipping

30:47

* Returns

32:42

* The future

## Links

* [Bos.af](https://bos.af/)
* [Patrick DePuydt](https://twitter.com/patrickdepuydt)
* [Alibaba](https://www.alibaba.com/)
* [Sticker Mule](https://www.stickermule.com)
* [Shipstation](https://www.shipstation.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",66e5815bb6463fabae950f4819ffbf25196de6ce13c3f6487dfeb7d8e244ec4b,hasty-treat-how-to-become-a-sticker-mogul,/shows/091 - Stickers.md,2023-10-16 20:06:56.665,2023-10-27 15:57:44.863,HASTY
syntax_podcast_show_00092,92,React Hooks,2018-11-14 14:00:00.772,https://traffic.libsyn.com/syntax/Syntax092.mp3,"
In this episode Wes and Scott discuss React Hooks - what they are, why you might want to use them, their differences with regular classes, and more.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:30

* Function components

4:50

* What are React hooks?

8:12

* What problem does this solve?

12:00

* State hooks

21:50

* Context hooks

26:02

* Effect hooks

36:46

* [Reducer hooks](https://reactjs.org/docs/hooks-reference.html#usereducer)

40:40

* Ref Hooks

48:00

* Libraries already using React hooks
  * [Rehooks](https://rehooks.com/) → Listing of hook libraries
  * [React Spring](http://react-spring.surge.sh/)
  * [React Measure](https://github.com/souporserious/react-measure)
  * [Formik](https://jaredpalmer.com/formik)
  * [Immer](https://github.com/mweststrate/immer)

50:30

* Resources
  * [Dan Abramov’s Talk](https://www.youtube.com/watch?v=dpw9EHDh2bM)
  * [Harry Wolf](https://www.youtube.com/watch?v=jd8R0a2Ur8Q)
  * [Use Hooks Newsletter](https://usehooks.com)
  * [Awesome React Hooks](https://github.com/rehooks/awesome-react-hooks)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Bad Blood](https://amzn.to/2JMfowo)
* Wes:
  * [Swindled Podcast](http://swindledpodcast.com/)
  * [Scrub Brush Drill](https://amzn.to/2JMEpHV)

## Shameless Plugs

* [Scott's Pro Gatsby 2 Course](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://advancedreact.com/) - use the code SYNTAX for $10 off

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d963effcfc067e172081fd331c21f8014f9b79eed4e9c77d254bb6b3e81d241b,react-hooks,/shows/092 - React Hooks.md,2023-10-16 20:06:56.699,2023-10-27 15:57:44.907,TASTY
syntax_podcast_show_00093,93,Hasty Treat - How to become well liked at work,2018-11-19 14:00:00.892,https://traffic.libsyn.com/syntax/Syntax093.mp3,"
In this Hasty Treat, Scott and Wes talk about how to be well liked at work - dealing with difficult co-workers, being a better co-worker yourself, and general tips for improving your people skills.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

5:01 - Foster a culture of asking ""why"" and ""how""

7:58 - Show your own mistakes

9:26 - Be understanding of people’s life situations and accommodate them accordingly

11:36 - Be okay with people taking your time

13:10 - Don’t take up other people’s time

15:40 - Be nice

15:57 - Share things

16:50 - Respect personal space

18:08 - Respect people's time

## Links

* [Adam Grant - Give and Take: Why Helping Others Drives Our Success](https://www.amazon.com/dp/B00AFPTSI0/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",6401d6c5de41b255e1ff56bc9448167e21425a35fc306aea1cb078e8c9f66420,hasty-treat-how-to-become-well-liked-at-work,/shows/093 - Liked.md,2023-10-16 20:06:56.740,2023-10-27 15:57:44.949,HASTY
syntax_podcast_show_00094,94,Potluck - $100/hr × Redux Replacements × Full Stack Designers × JWT × VS Code Tips × More,2018-11-21 14:00:00.053,https://traffic.libsyn.com/syntax/Syntax094.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - raising your rates, full stack designers, JWT, VS Code tips, and more.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## React in Action - Sponsor

[React in Action by Mark Thomas from Manning Publications](https://www.manning.com/books/react-in-action) is a great way to learn React. It's a clearly written, example-rich book, introducing front-end developers to the React framework and related tools. Not everyone likes learning from a video. If that's you, [React In Action](https://www.manning.com/books/react-in-action) is a great book that covers everything you need to know. Also be sure to check out this page for [40% off all manning books and videos](http://deals.manning.com/webdev/).

## Show Notes

2:29

* I listened to your episode on Freelancing and I was wondering how to justify an increase in my hourly rate. You mentioned that you just increased it to $100/hr and nobody griped, but I seem to have a steady stream of clients who want things for free or nearly free and I usually have that fear that if I charge them more, then I won't get the business. Thoughts?

6:55

* I've started a YouTube web development channel. Recently, I was approached to produce content for money for another website. For some reason, I immediately thought I might be taken advantage of (I'm pretty new and it's odd to be offered something like this so quickly, no?) if accepting. What do you think? Should I create content for a (small) website that I never heard of or continue with YouTube (or both)?

14:00

* I've read on Twitter that React.Context can be a good replacement for Redux. Why?

18:40

* What's it like running a podcast?!

24:03

* I've seen a rise in the term ""full-stack designer"". Is this a title you think will become a real thing? Someone capable of overseeing a project from concept to prototype? Thanks!

27:36

* What has been the most awkward situation you’ve been in as a dev?

31:20

* Do you have any good resources on JWT? I’m unclear when my front end needs to send what to my back end, to ensure my sites and only my sites can get the data requested from my server. Thanks for everything you do!

35:34

* How do you move selected text horizontally (or vertically) in VSCode? I've seen it in Wes' videos and I tried to ask him on Twitter, but I'm sure that is a chore to keep up with. I've googled a ton, but the only thing I found was an extension that adjusts indentation, which is not really what I'm after.

38:57

* How do you recommend providing feedback on ""bad"" code to a developer more experienced than you, without coming off as an uppity, know-it-all junior who just read a bunch of textbooks??

42:39

* How do you set up an IP whitelist? I am just getting started managing databases and I am using Mongo Atlas. They require an IP whitelist for all connections. Developing from my computer is fine because I can just add my IP to the whitelist, but what do I do if I actually want to make my API or website public? Just whitelist everything? That sounds like a terrible idea...

## Links
* [useReducer](https://reactjs.org/docs/hooks-reference.html#usereducer)
* [Full Stack Radio Ep 98: Ryan Chenkie - Securing Single Page Applications](http://www.fullstackradio.com/98)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Jelle’s Marble Runs](https://www.youtube.com/channel/UCYJdpnjuSWVOLgGT9fIzL0g)
* Wes:
  * [Good Quality Baking Sheet Pans](https://amzn.to/2FjrQVW)
  * [Pre-cut Parchment Paper Sheets](https://amzn.to/2Dzli3F)

## Shameless Plugs

* [Scott's Pro Gatsby 2 Course](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://advancedreact.com/) - use the code SYNTAX for $10 off

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",264270b9ae6b4303fe798d13c7e52e818501992e5415d98c6c3855dafc3515e2,potluck-usd100-hr-redux-replacements-full-stack-designers-jwt-vs-code-tips-more,/shows/094 - Potluck.md,2023-10-16 20:06:56.778,2023-10-27 15:57:44.988,TASTY
syntax_podcast_show_00095,95,Hasty Treat - Should you install a dependency or roll your own?,2018-11-26 14:00:00.404,https://traffic.libsyn.com/syntax/Syntax095.mp3,"
In this Hasty Treat, Scott and Wes talk about installing dependencies vs rolling your own - the advantages and disadvantages, and how to know when to do either.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:15 - Reasons To roll your own

* Learning Experience
* Fun
* Features
* Add your own features
* Lightweight - only use what you need

8:08 - Reasons not to roll your own

* Battle Tested
* Actually Tested
* Time
* Money
* Experience

11:27 - Fork

* Something needs extra features
* Upstream your changes

13:10 - Some Examples

* Fetch + function vs Axios
* Date functions vs Stack Overflow copy/paste
* Lodash vs your own - try it with map/reduce/filter first, but lots of cases need Lodash

## Links
* [React PowerPlug](http://rena.to/react-powerplug/#/)
* [Lodash](https://lodash.com/)
* [Axios](https://github.com/axios/axios)
* [Stack Overflow](https://stackoverflow.com/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b2b61999fed2b198140accc9328696342a2a801de13f25403f36221ca73267ae,hasty-treat-should-you-install-a-dependency-or-roll-your-own,/shows/095 - Dependency.md,2023-10-16 20:06:56.825,2023-10-27 15:57:45.034,HASTY
syntax_podcast_show_00096,96,Holiday Gift Guide,2018-11-28 14:00:00.637,https://traffic.libsyn.com/syntax/Syntax096.mp3,"
In this episode Wes and Scott bring you their holiday gift guide - things, ideas or experiences that would make great gifts for any developer, ranging from a few bucks to a few hundred bucks.

## Contentful - Sponsor

Contentful is a great way to manage your data. Update once and publish everywhere. Contentful gives you a ton of flexibility and reliability and everything you need to build excellent front-end content without having to worry about the back-end of your site. Check out [contentful.com/syntaxfm](https://www.contentful.com/syntaxfm) and get a free pair of socks!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

3:57 - Foodie Gifts

- Hot Sauce
  - [Merfs](https://amzn.to/2Bm9lMl)
  - [Every Cholula Hot Sauce](https://amzn.to/2Qdy3H2)
  - [Jalapeno from Trader Joes](https://amzn.to/2BnC83v)
  - [Blue Top Creamy Buffalo](https://amzn.to/2S4XzeS)
- [Everything but the bagel Spice](https://amzn.to/2Ttt7Nc)
- [Loose leaf Teas from Teahaus.com](https://teahaus.com)
- [Wes’ Tea Steeper](https://amzn.to/2DPA4DQ)
- [Scott’s Tea Mug & Steeper](https://amzn.to/2DR51HN)
- Flavored Salts (No link, just go find them)
- [Savory Spice Shop](https://www.savoryspiceshop.com)
- Rainbeers - make it yourself
- [Beer Making Kit](https://amzn.to/2PK8TAJ)
- [Umai Dry Steak Aging and Charcuterie Bags](https://amzn.to/2DOQEDA)

11:27 - Experiences

- Knife Skills Class
- Butchering Class
- Cooking Class
- Float tank Subscription
- Massages

18:15 - Subscriptions

- [Headspace](https://headspace.com)
- [Spotify](https://spotify.com)
- [HBO Go](https://HBO.com)
- [YouTube TV](https://youtube.com/tv)
- [MeUndies Underwear Subscription](http://getcomfy.in/k4Jlj)
- [Memrise](https://www.memrise.com/)
- [LastPass](https://lastpass.com/f?1384956)
- Magazines
- [Mantry Crates](https://mantry.com/pages/gift-subscriptions)
- [Kids Crates](https://www.kiwico.com/)

23:07 - Books / Audible

- [BadBlood](https://amzn.to/2DOHHdu)
- [Beat the bank - for Canadians Only](https://amzn.to/2S5HpSr)
- [American Kingpin](https://amzn.to/2qTMTnW)
- [Rich Dad / Poor Dad](https://amzn.to/2qYUrpw)
- [Kingpin: How One Hacker Took Over the Billion-Dollar Cybercrime Underground](https://amzn.to/2Q55tYz)
- [Anything You Want](https://amzn.to/2OSOGDf)
- [Essentialism](https://amzn.to/2Fy4bRR)
- [The E-Myth Revisited](https://amzn.to/2DznDe7)

29:47 - Clothes

- Uniqlo Jeans - w/ elastic
- [Carhart Beanie (TOQUE)](https://amzn.to/2FydiSu)
- Naked and Famous Raw Selvedge Denim Jeans
  - [Skinny Guy](https://rstyle.me/n/dbyzzbcdguf)
  - [Weird Guy](https://rstyle.me/n/dbyzw6cdguf)
- [Nudie Raw Selvedge Denim “thin Finn”](https://amzn.to/2OTBH4c)
- [“Unbranded” Raw Denim](https://rstyle.me/n/dby44icdguf)
- [Custom Leather Belt](http://gavereleather.net)
- [TNF Fanorak Windbreaker](https://rstyle.me/n/dby65tcdguf)
- Hoodies
  - [Adidas Black-on-black NMD crewneck](https://amzn.to/2FvB7dp)
  - [Champion Hoodie](https://rstyle.me/n/dby76scdguf)
- Sneakers
  - [Nike Airmax 270](https://rstyle.me/n/dby8becdguf)
  - Jordans DonTrip
- [RayBans with mirrors](https://rstyle.me/n/dby8ircdguf)
  - [Original Wayfarer Sunglasses](https://rstyle.me/n/dby832cdguf)
- [Under Armour Boxer Jock Underwear](https://rstyle.me/n/dby98jcdguf)
- [Reebok Boxer Brief Underwear](https://amzn.to/2DwNGTc)
- [dvlpr.io Merch](https://dvlpr.io)

39:08 - Gadgets

- Mechanical Keyboards
  - [CTRL Keyboard](https://www.massdrop.com/buy/massdrop-ctrl-mechanical-keyboard)
  - [WASD Keyboard](https://amzn.to/2OUPDLn)
  - [Code Keyboard](https://amzn.to/2DNsPMx)
  - [Ergodox](https://amzn.to/2DP4BRT)
- [10W qi Wireless Fast Charger Charging Pad](https://amzn.to/2S5IXMt)
- USB C Gadgets
  - [8-in-1 USB Type-C Hub with HDMI](https://amzn.to/2KnpW5w)
  - [USB C Hub](https://amzn.to/2OWOcMm)
  - [LaCie Rugged USB-C Hard Drive](https://amzn.to/2FveUwo)
- [Koomus Car CD Slot Magnet Mount for your phone](https://amzn.to/2Fx1q35)
- [Anker Portable Battery](https://amzn.to/2DN0Yw3)
- Extra Long Braided Phone Cables
  - [Lightning](https://amzn.to/2KnsX5Q)
  - [Micro USB](https://amzn.to/2S56wVM)
  - [USB-c](https://amzn.to/2Fyg620)
- Anker USB Power Block
  - [4 ports with Fast Charge](https://amzn.to/2DBCAN4)
  - [6 ports with Fast Charge](https://amzn.to/2PFvIp9)
- Wifi Hotspot
  - [SkyRoam Solis](https://www.skyroam.com?rfsn=1346968.ac598)
- [Magnet Breakway USB-C Cable that handles 87w](https://amzn.to/2DRyukT)
- [Tello Programable drone](https://amzn.to/2TvaKYc)
- High end mini screwdrivers
  - [MaxCraft 7-in-1](https://amzn.to/2Kl5Fxj)
  - [iFixIt 64 bit set](https://amzn.to/2DQ4LIG)

48:00 - Smart Home

- [Google Home](https://store.google.com/ca/product/google_home)
- [Ring Doorbel](https://amzn.to/2S5VaRj)
- [Nest Doorbell](https://amzn.to/2QcwzNl)
- [Ring Floodlight Security Camera](https://amzn.to/2KlKWJL)
- [EcoBee](https://amzn.to/2Tt7PPH)
- [WeMo Plugs](https://www.amazon.com/WeMo-4T-T3X2-Y1HT-Light-appliances-Control/dp/B0776YH29B)
- [TP Link Smart Plug](https://amzn.to/2OVh1J5)
- [Leviton Smart Wifi Dimmers](https://amzn.to/2S7uv6L)
- [LIFX Bulbs](https://amzn.to/2OZl1sk)
- [Sonoff $5 wifi Switch](https://amzn.to/2Q5QcGX)

54:40 - Grooming and Wellness

- [Seki clippers](https://amzn.to/2PGeKHa)
- CBD balm
- A nice comb
- [Burts Bees Lip Balm in a tin](https://amzn.to/2KpAb9C)

58:57 - High End

- [Apple AirPods](https://amzn.to/2PINBmG)
- [Bose QC 35 Wireless Headphones](https://amzn.to/2Kkmw3n)
- [Samsung QLED TV - very high end](https://amzn.to/2Q6SuWg)

## Shameless Plugs

* [Scott's Level 1 Typescript Course](https://LevelUpTutorials.com/pro)
* [Wes' updated course platform](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a03b39e2e901a55367e39dbdd8ae65282f418646a76ab35955591f0a9379eb5f,holiday-gift-guide,/shows/096 - Gift Guide.md,2023-10-16 20:06:56.861,2023-10-27 15:57:45.070,TASTY
syntax_podcast_show_00097,97,Hasty Treat - Uses for CSS Variables,2018-12-03 14:00:00.958,https://traffic.libsyn.com/syntax/Syntax097.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS variables, a.k.a CSS Custom Properties - why you might want to use them, why they're better than various preprocessor's variables, and pitfalls to watch out for and avoid.

## Kyle Prinsloo's Freelancing & Beyond — Sponsor

Kyle Prinsloo teaches you everything you need to know about freelancing, including how to quit your job, earn a side-income and start taking control of your life. Check it out at [https://studywebdevelopment.com/freelancing](https://studywebdevelopment.com/freelancing.html) and use the coupon code ""syntax"" at checkout to get 25% off.

## Show Notes

3:25 - What

- `--example-name`, represent custom properties
- called using `var()`
- Overwrite with a more specific style
- Use JavaScript to append .style.setPropert(

- How are they scoped?
  - Just like normal CSS
  - Can be set on :root {}
  - Can be set on any element down

9:10 - Why

- Uses:

  - Can make more sense if used semantically
  - var(--accent) vs var(--yellow)

- Independent values for things that can’t be broken up:

  - box-shadow: 2px 2px 2px 2px red
  - transform: rotate(var(--rotate)) scale(2);

- Inline properties can be picked up by regular CSS (color, size, etc.)

  - `<p style=”--fg:red;”>hey</a>`

- Themes that can easily be changed at runtime for entire app

19:15 - Calculations

- You can use them inside of calc()
- Animations

20:10 - Bummers

- Not super well supported just yet (IE 11)
- No good fallback other than manual fallback
- Syntax - Old Browsers, Fallbacks and Polyfills series
  - [Part 1](https://syntax.fm/show/083/hasty-treat-old-browsers-fallbacks-and-polyfills-part-1)
  - [Part 2](https://syntax.fm/show/085/hasty-treat-old-browsers-fallbacks-and-polyfills-part-2)
  - [Part 3](https://syntax.fm/show/087/hasty-treat-old-browsers-fallbacks-and-polyfills-part-3)
- [PostCSS Custom Properties](https://github.com/postcss/postcss-custom-properties)

## Tweet us your tasty treats!

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f10137aafcb74413f292f0af11bb0b4e8ea1b6dfb92eb798301a324ffef954c3,hasty-treat-uses-for-css-variables,/shows/097 - CSS Variables.md,2023-10-16 20:06:56.895,2023-10-27 15:57:45.110,HASTY
syntax_podcast_show_00098,98,The State of JavaScript 2018,2018-12-05 14:00:00.079,https://traffic.libsyn.com/syntax/Syntax098.mp3,"
In this episode Wes and Scott are joined by their first ever guest on the show: Sacha Greif. Sacha is one of the makers of the [State of Javascript](https://stateofjs.com/) - the topic for today's show. Wes, Scott and Sacha discuss the results of 2018's survey, what they think, and implications for the industry.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Guests

* [Sacha Greif](https://twitter.com/SachaGreif)

## Show Notes

1:48

* What is the State of JS survey

3:58

* The tech behind State of JS

12:55

* How was the data collected?

16:38

* JavaScript Flavors

23:14

* Frameworks

31:49

* DataLayer

34:53

* Backend

40:09

* Other Tools

44:37

* Opinions

47:48

* Awards

49:58

* Criticism

## Links
* [Nivo](https://nivo.rocks/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Netlify](https://www.netlify.com/)
* [Reason](https://reasonml.github.io/)
* [Parcel](https://en.parceljs.org/)
* [Relay](https://facebook.github.io/relay/)
* [Express](https://expressjs.com/)
* [KeystoneJS](https://keystonejs.com/)
* [Ghost](https://ghost.org/)
* [Jest](https://jestjs.io/)
* [GraphQL](https://graphql.org/)
* [VueX](https://vuex.vuejs.org/)
* [Storybook](https://storybook.js.org/)
* [Real Analysis of Angular, React, and Vue](https://youtu.be/UnEPBQvkNrg)

## ××× SIIIIICK ××× PIIIICKS ×××

* Sacha: DIY and woodworking
* Wes: [Alex French Guy Cooking](https://www.youtube.com/user/FrenchGuyCooking)
* Scott: [Silverback Open 2018](https://www.youtube.com/playlist?list=PLipSUxfAla6D257xn14FgxHaFUyKDMY14)

## Shameless Plugs

* [Sacha -  Vulcan.js](http://vulcanjs.org/)
* [Scott - Level Up Pro](https://www.leveluptutorials.com/pro)
* [Wes - All courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",60c338e004ec5046daa21bcb37711cd098087fabf7e01ee623a4b5344164bc0b,the-state-of-javascript-2018,/shows/098 - State of Javascript.md,2023-10-16 20:06:56.934,2023-10-27 15:57:45.154,TASTY
syntax_podcast_show_00099,99,Hasty Treat - Costs of Running a Business,2018-12-10 14:00:00.837,https://traffic.libsyn.com/syntax/Syntax099.mp3,"
In this Hasty Treat, Scott and Wes talk about the costs of running a business when you're a solopreneur or solo founder.

## Contentful - Sponsor

Contentful is a great way to manage your data. Update once and publish everywhere. Contentful gives you a ton of flexibility and reliability and everything you need to build excellent front-end content without having to worry about the back-end of your site. Check out [contentful.com/syntax](https://www.contentful.com/syntax/) and get a free pair of socks!

## Show Notes

3:48 - Email

* [GSuite](https://gsuite.google.com/)
* [Missive](https://missiveapp.com/)
* [Drip](https://www.drip.com/)
* [Postmark](https://postmarkapp.com/)
* [Mailchimp](https://mailchimp.com/)
* [Mandrill](https://mandrill.com/)
* [SendGrid](https://sendgrid.com/)
* [Mailgun](https://www.mailgun.com/)

10:44 - Transactional Costs

* [Stripe](https://stripe.com/)
* [PayPal](https://www.paypal.com)
* [Braintree](https://www.braintreepayments.com/)

12:31 - Software

* [Sketch](https://www.sketchapp.com/)
* [Figma](https://www.figma.com/)
* [Screenflow](https://www.telestream.net/screenflow)
* [iShowU](https://www.shinywhitebox.com/ishowu-studio-2)
* [DaVinci](https://www.blackmagicdesign.com/products/davinciresolve/)
* [Notion](https://www.notion.so/?r=f30ad6f0d28441729bcea76a77549938)
* [Todoist](https://todoist.com/)
* [Things](https://culturedcode.com/things/)
* [Principle For Mac](http://principleformac.com/)
* [Textexpander](https://textexpander.com/)
* [Transmit](https://panic.com/transmit/)
* [Cyberduck](https://cyberduck.io/)

17:03 - Services

* PO Box

17:18 - Domains

* [Hover](https://www.hover.com/)
* [Cloudflare](https://www.cloudflare.com/)
* [Name.com](https://www.name.com/)
* [Gandi](https://www.gandi.net/)

19:30 - Backup

* NAS
* [Dropbox](https://www.dropbox.com)
* [Backblaze](https://www.backblaze.com/)
* [S3](https://aws.amazon.com/s3/)

22:12 - Labor

* Assistant
* Part-time developer
* Contractors for projects

24:53 - Insurance

* Prescriptions
* Dental
* Optical
* Critical illness
* Home insurance is higher because of business

26:51 - Professional

* Accountant
* Lawyer
* Bookkeeper
* [TransferWise](https://transferwise.com/us/)

29:08 - Hosting

* CDNs
* [Galaxy](https://www.meteor.com/hosting)
* [Heroku](https://www.heroku.com/)
* [Dokku](http://dokku.viewdocs.io/dokku/)
* [Netlify](https://www.netlify.com/)
* [Compose](https://www.compose.com/)
* [Vimeo](https://vimeo.com/)
* [Amazon S3](https://aws.amazon.com/s3/)
* [Digital Ocean](https://www.digitalocean.com/)
* [Now.sh](https://now.sh)
* [Bluehost](https://www.bluehost.com/)
* [mlab](https://mlab.com/)

34:16 - Travel

* Taxi / Hotel
* Dinner
* Transportation
* [Uber](https://www.uber.com/)

## Links
* [Codepen Radio - Software We Pay For](https://blog.codepen.io/2018/11/27/201-software-we-pay-for/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5c2e6457e7f7a6f3922f5519d0e060e9209fcf6aa797825633d223bb50357620,hasty-treat-costs-of-running-a-business,/shows/099 - Running a Business.md,2023-10-16 20:06:56.979,2023-10-27 15:57:45.290,HASTY
syntax_podcast_show_00100,100,Not a Clip Show - Episode 100!,2018-12-12 14:00:00.959,https://traffic.libsyn.com/syntax/Syntax100.mp3,"
To celebrate episode 100, Wes and Scott are talking about Syntax - their most popular episodes, stats, Q&A, and a bunch of cool stuff about what it's been like making this show for 100 episodes.  

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

1:45 - Celebrating 100 episodes

04:18 - Our first episode 

* [Syntax001 - React Tools](https://syntax.fm/show/001/react-tools)

06:23 - Our first sponsor 

* [Delicious Brains](https://deliciousbrains.com/)

09:37 - Most popular episodes

* 10 - [Syntax074 - 11 Habits of Highly Effective Developers](https://syntax.fm/show/074/11-habits-of-highly-effective-developers)
* 09 - [Syntax039 - Is jQuery Dead?](https://syntax.fm/show/039/is-jquery-dead)
* 08 - [Syntax046 - What's New in Javascript](https://syntax.fm/show/046/what-s-new-in-javascript)
* 07 - [Syntax048 - VS Code Round Two](https://syntax.fm/show/048/vs-code-round-two)
* 06 - [Syntax050 - Progressive Web Apps](https://syntax.fm/show/050/progressive-web-apps)
* 05 - [Syntax018 - All About CSS Grid](https://syntax.fm/show/018/all-about-css-grid)
* 04 - [Syntax051 - Our Workflows: Design, Development, Git, Deployment](https://syntax.fm/show/051/our-workflows-design-development-git-and-deployment)
* 03 - [Syntax066 - The React Episode](https://syntax.fm/show/066/the-react-episode)
* 02 - [Syntax043 - 20 JavaScript Array and Object Methods to make you a better developer](https://syntax.fm/show/043/20-javascript-array-and-object-methods-to-make-you-a-better-developer)
* 01 - [Syntax044 - How to Learn New Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)

21:35 - Top countries

* Just passed 3 million downloads
* 10 - Poland - 38,731 downloads
* 09 - Brazil - 40,475 downloads
* 08 - Netherlands - 47,601 downloads
* 07 - India - 50,724 downloads
* 06 - Sweden - 55,378 downloads
* 05 - Australia - 80,654 downloads
* 04 - Germany - 109,842 downloads
* 03 - Canada - 138,250 downloads
* 02 - United Kingdom - 231,835 downloads
* 01 - United States - 1,220,519 downloads

27:34 - Top players 

* AppleCoreMedia
* Overcast
* Chrome
* Pocket Casts
* iTunes

30:35 - Lessons learned about sponsors

* Pays the bills - editing, hosting, etc…
  * [Podcast Royale](https://podcastroyale.net) - Podcast production
  * [Libsyn](https://libsyn.com/) - Podcast hosting
* They want hard numbers
* Conversions are hard to track
* It’s really cool companies and users that enjoy the product hook up
* How do we get them?

35:10 - Favorite episodes

* Wes - [Syntax043 - 20 JavaScript Array and Object Methods to make you a better developer](https://syntax.fm/show/043/20-javascript-array-and-object-methods-to-make-you-a-better-developer)
* Scott - [Syntax044 - How to Learn New Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)

38:49 - Q&A 

* Q: What's your favorite soundboard sound?
* Q: What's your recording process like? Do you each record your streams locally then edit them together or are there any ""hax"" you guys have cooked up as developers?
  * A: Pay someone who is good at editing
  * We both have good recording gear
  * We record separate files and send them our production team, [Podcast Royale](https://podcastroyale.net), for editing
  * We do show notes in [Dropbox Paper](https://paper.dropbox.com), which are also edited by [Podcast Royale](https://podcastroyale.net)
* Q: Does Scott practice his segues, or do they just come to him on the fly?
  * A: On the fly 😎
* Q: Although I am all for peace, why did you choose ""peace"" as your outro statement?
  * A: It was a random note from Wes in the first episode and we stuck with it
* Q: how did you meet each other and decided to start the podcast?
  * A: We both released a course around the same time with the same name - we started talking and the rest is history
  * [Syntax007 - Scott Tolinski Origin Story](https://syntax.fm/show/007/scott-tolinski-origin-story)
  * [Syntax008 - Wes Bos Origin Story](https://syntax.fm/show/008/wes-bos-origin-story)

51:20 - Most asked questions

* What episode was it that you  ______ ?
* Can my boss come on the show and talk about bitcoin?
* Can you sick pick my thing?
* Can you do an episode on VueJS?
* Can you do an episode on Angular?
* NO EP TODAY?

54:20 - Random thoughts

* Neat to have community - lots of experts 
* Twitter is great
* Sales of our own products
  * Transformed Level Up Tuts
* Doing fitness, hobbies, and life as a developer is fun
* Learned a lot from researching shows and from community feedback
* Different voices can give different breakthroughs

57:10 - Future of Syntax

* No. 1 goal is to always be a fun, helpful show
* Not going to become a promotional tour stop
* Maybe more interviews
* Easy to listen to and and understand

## Links

* [Netlify](https://netlify.com/)
* [Podcast Royale](https://podcastroyale.net)
* [Adam Clark](https://avclark.com)
* [Libsyn](https://libsyn.com/)
* [Dropbox Paper](https://paper.dropbox.com)
* [Studio 3T](https://studio3t.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Wes: [MongoDB Compass](https://www.mongodb.com/products/compass)
* Scott: [Notion](https://www.notion.so/?r=f30ad6f0d28441729bcea76a77549938)

## Shameless Plugs

* [Scott - Level Up Pro](https://www.leveluptutorials.com/pro)
* [Wes - All courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c3e47bec4387d29955f4268b52ae83359edff614e35e82a1d54f66a6bc38a8cb,not-a-clip-show-episode-100,/shows/100 - Episode 100.md,2023-10-16 20:06:57.014,2023-10-27 15:57:45.333,TASTY
syntax_podcast_show_00101,101,"Hasty Treat - Where are they now?! Gulp, Grunt, Bower, Backbone and Compass",2018-12-17 14:00:00.601,https://traffic.libsyn.com/syntax/Syntax101.mp3,"
In this Hasty Treat, Scott and Wes talk about libraries that have been super hot in the past, but not so much any more. 

## Contentful - Sponsor

Contentful is a great way to manage your data. Update once and publish everywhere. Contentful gives you a ton of flexibility and reliability and everything you need to build excellent front-end content without having to worry about the back-end of your site. Check out [contentful.com/syntax](https://www.contentful.com/syntax/) and get a free pair of socks!

## Show Notes

4:14

* Grunt / Gulp

8:56

* Backbone / Marionette

13:00

* Bower / Components

15:46

* Compass

## Links
* [Grunt](https://gruntjs.com/)
* [Gulp](https://gulpjs.com/)
* [Backbone](http://backbonejs.org/)
* [Marionette](https://marionettejs.com/)
* [Bower](https://bower.io/)
* [Components](http://component.github.io/)
* [Compass](http://compass-style.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",20c7fa1ce5be5d75d084482da6507193d500a6d2bd10a9ab686701323f3b5f88,hasty-treat-where-are-they-now-gulp-grunt-bower-backbone-and-compass,/shows/101 - where are they now.md,2023-10-16 20:06:57.052,2023-10-27 15:57:45.371,HASTY
syntax_podcast_show_00102,102,Potluck - Typescript × E-commerce platforms × Job-hopping × Working for agencies × more,2018-12-19 14:00:00.031,https://traffic.libsyn.com/syntax/Syntaxt102.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - thoughts on Typescript, e-commerce platforms vs custom, working for agencies, job-hopping and more!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Vue.js In Action - Sponsor

[Vue.js in Action from Manning Publications](https://deals.manning.com/webdev) is a great way to learn Vue.js. If you're looking for a book that will teach you Vue.js from start to finish, this is the one. As a Syntax listener, you can get 40% off all their books and courses by visiting [deals.manning.com/webdev](https://deals.manning.com/webdev) and using the coupon code syntax40 at checkout.

## Show Notes

1:20

* How do you distinguish between normal and virtual pixels on high dpi devices. How do you call Pixels? Which tools do you use for optimizing Images?   

5:02

* What are your thoughts on TypeScript (and selfishly, I'd like to learn about using it with React)? Any temptation to try it out if you're not already doing so? Why or why not? Any resources you'd like to share on TypeScript?

8:35

* I have heard you guys say good things about Digital Ocean before, but am reading a lot of bad reviews about them on various websites. Are these just frustrated developers or is there any merit to these claims?

12:48

* If you were to build an eCommerce store, given that your business requirements specify that custom functionality is needed, would it be smart to roll your own solution or use Magento/Shopify/Woocommerce? If the later, what is the developer experience like? Which has the greater ability to implement custom functionality for server and client side code?

19:50

* I feel like I’m pretty ""bos"" at starting projects but so terrible at finishing them. As people who finish courses and projects all the time, what is your advice for getting to that finish line?

23:32

* Could you please explain how you organize your files? What is the folder structure you use for both your projects and other documents/videos and stuff?

31:38

* You guys mention working for ""agencies"" in the past. As a freelance web developer, what's the best way to find these agencies, and to be employed by them? Also, can you explain what ""agencies"" are? 

38:14

* I once read an interview Wes gave in which he mentioned that frequently changing jobs is the best way to get salary increases. Do you both believe that to be true? Is job-hopping a bad thing? Is the criticism of it justified? 

41:53

* If I choose to use Next.js, does that mean I won’t be able to use new React features like hooks and suspense until/if the Next.js team implements those? 

43:12

* When do you use `<React.Fragment>` and when do you use `<div>` to wrap your many returned components from `render()`?

## Links
* [Devon Govett tweet about Typescript](https://twitter.com/devongovett/status/1069317990435311617)
* [Digital Ocean](https://digitalocean.com)
* [Magento](https://magento.com/)
* [Shopify](https://www.shopify.com/)
* [WooCommerce](https://woocommerce.com/)
* [Reaction Commerce](https://www.reactioncommerce.com)
* [Snipcart](https://snipcart.com/)
* [Next.js](https://nextjs.org/)
* [Gatsby.js](https://www.gatsbyjs.org/)
* [True Grit Texture Supply](https://www.truegrittexturesupply.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Undertale](https://undertale.com/)
* Wes: [Ghostly Pixels](https://ghostlypixels.com)

## Shameless Plugs

* [Scott's Level Up Pro](https://LevelUpTutorials.com/pro)
* [Wes' YouTube Channel](https://www.youtube.com/wesbos)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ad091e64e7476b0cc435d5ac65dc751931799c9e3ce14da555ed3c031919dc69,potluck-typescript-e-commerce-platforms-job-hopping-working-for-agencies-more,/shows/102 - Potluck.md,2023-10-16 20:06:57.096,2023-10-27 15:57:45.413,TASTY
syntax_podcast_show_00103,103,Hasty Treat - Where are they now? Part 2,2018-12-24 14:00:00.489,https://traffic.libsyn.com/syntax/Syntax103.mp3,"
In this Hasty Treat, Scott and Wes continue their discussion of libraries and tech that where super hot in the past, but not so much any more. 

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1). 

## Show Notes

3:40 - jQuery UI / jQuery Mobile

* [jQuery UI](https://jqueryui.com/)
* [jQuery Mobile](https://jquerymobile.com/)
* [Sencha Touch](https://www.sencha.com/products/touch/)

6:10 - Flash / Silverlight

* [Flash](https://www.adobe.com/products/flashplayer.html)
* [Cufon](http://cufon.shoqolate.com/generate/)
* [Silverlight](https://www.microsoft.com/silverlight/)
* [Netflix](https://netflix.com/)
* [Happy Gilmore](https://www.imdb.com/title/tt0116483/)
* [The Wedding Singer](https://www.imdb.com/title/tt0120888/)

10:54 - Grid systems

* [960.gs](https://960.gs/)
* [Golden](https://jonikorpi.com/golden-grid-system/)
* [Susy](https://oddbird.net/susy/)
* [Bootstrap](https://getbootstrap.com/)
* [Foundation](https://foundation.zurb.com/)

16:02 - CoffeScript

* [CoffeScript](https://coffeescript.org/)
* [Compass](http://compass-style.org/)

18:18 - Underscore.js

* [Underscore.js](https://underscorejs.org/)
* [Lodash](https://lodash.com/)
* [jsPerf](https://jsperf.com/)

20:04 - Less CSS

* [Less CSS](http://lesscss.org/)
* [Vue.js](https://vuejs.org/)
* [Drupal](https://www.drupal.org/)
* [Cappuccino](http://www.cappuccino-project.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d3a4ec5de4553edfe5298324acb18d7abc0ccd680961e26ab2ecf213527b13fb,hasty-treat-where-are-they-now-part-2,/shows/103 - where are they now part 2.md,2023-10-16 20:06:57.137,2023-10-27 15:57:45.462,HASTY
syntax_podcast_show_00104,104,CSS Layout,2018-12-26 14:00:00.650,https://traffic.libsyn.com/syntax/Syntax104.mp3,"
In this episode Wes and Scott are talking all about CSS layout - how it works, things to watch out for and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## CSS In Depth and In Motion - Sponsor

[CSS in Depth in Motion from Manning Publications](https://deals.manning.com/webdev) is a great way to master CSS. Modern CSS can handle a dizzying array of styles and effects without external frameworks, and this liveVideo course from Manning Publications will get you there. As a Syntax listener, you can get 40% off all their books and courses by visiting [deals.manning.com/webdev](https://deals.manning.com/webdev) and using the coupon code syntax40 at checkout.

## Show Notes

4:15

* When to use position fixed/static/absolute/relative/sticky, etc.

15:18

* When to use height, width, max-height, max-width, top, bottom, left, right, etc.

21:28

* What about relationships between containers and their children?

27:37

* What about positioning behaviors of elements like `<img>`, `<iframe>`, `<video>`, etc.?

30:09

* Floating and clearing

35:55

* Flexbox, Grid and responsive design

36:58

* Mobile-first or desktop-first?

41:20

* Viewport units - vw, vh, vmin, vmax, etc

## Links

* [Keycode.info](http://keycode.info/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Last Seen Podcast](https://www.wbur.org/lastseen)
* Wes: [Flying a DJI Tello Drone with React and Node.js](https://wesbos.com/drone-javascript/)

## Shameless Plugs

* [Scott's Design Systems Course](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",1cccf229a72c51a7cdd7bbaa143bfd5cb1c4d192460b434ee324c2c43239d95b,css-layout,/shows/104 - CSS Layout.md,2023-10-16 20:06:57.173,2023-10-27 15:57:45.507,TASTY
syntax_podcast_show_00105,105,Hasty Treat - CSS and JS Pointer Events,2018-12-31 14:00:00.065,https://traffic.libsyn.com/syntax/Syntax105.mp3,"
In this Hasty Treat, Scott and Wes talk about pointer events in CSS and JS - what they are, their differences, why you may want to use them, potential downfalls and more! 

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1). 

## Show Notes

3:24

* CSS pointer events

10:50

* JavaScript pointer events

14:24

* What are pointer events

17:56

* Browser support

## Links
* [CSS pointer events](https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events)
* [JS pointer events](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events)
* [Pointer events support in WebKit](https://webkit.org/status/#?search=pointer%20events)
* [Pointer events Polyfill](https://github.com/jquery/PEP)
* [Wes' Javascript 30 Course](https://javascript30.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",82847d1b6466cdd999ccc388f9a69a6aa7c9eec026181323c8fc33cfba7e2afb,hasty-treat-css-and-js-pointer-events,/shows/105 - Pointer Elements.md,2023-10-16 20:06:57.205,2023-10-27 15:57:45.549,HASTY
syntax_podcast_show_00106,106,A Look Forward to 2019,2019-01-02 14:00:00.727,https://traffic.libsyn.com/syntax/Syntax106.mp3,"
In this episode Wes and Scott take a look back at 2018 as well as a look forward to what's coming in 2019. 

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## CSS In Depth and In Motion - Sponsor

[Electron in Action from Manning Publications](https://deals.manning.com/webdev) guides you, step-by-step, as you learn to build cross-platform desktop applications that run on Windows, OSX, and Linux. As a Syntax listener, you can get 40% off all their books and courses by visiting [deals.manning.com/webdev](https://deals.manning.com/webdev) and using the coupon code syntax40 at checkout.

## Show Notes

3:00 - What was hot in 2018?

* Tooling got easier
* GraphQL got easier and more accessible
* New GraphQL companies left and right
* CSS has gotten more awesome
* React
* Improvement in React Dev Tools
* JavaScript frameworks overall
* Edge adopting Chrome engine
* Microsoft bought Github
* Vue continues to impress and evolve
* VS Code continued to get amazing

31:29 - Predictions for 2019

* Headless CMS game is going to get really real
* We're gonna see rails for JavaScript start making some noise
* React will continue to see growth
* Design tools will get more code-y (Figma, etc.)
* VueJS will continue to see growth
* Developer Experience Tools will continue to get easier
* Wasm
* Code splitting easier
* ES6 Modules in Node
* Server Side Hot reloading

41:00 - Scott's Year in Review

* Released 12 courses
* Major growth in Level Up as a platform
* Hired first employees to work and grow site
* Greatly improved quality and video production
* Gave first conf talks and spoke internationally

44:03 - Wes' Year in Review

* Released two courses - CSS Grid and Advanced React
* Started work on JavaScript course
* Delegated lots of development to contractor
* Continued to work well with assistant
* Spoke at lots of confs
* Live Syntax!
* Grew Instagram
* Continued hot tips on twitter

47:00 - BIG ANNOUNCEMENT

* We're both having babies!

48:09 - Wes' Goals for 2019

* Keep doing what I'm doing!
* New Website!
* JavaScript course
* Platform upgrades - been in the works for months - working on a faster rollout
* CSS course? VS Code course? More React?
* 8 YouTube Videos
* Instagram to 30k
* Parental Leave

52:26 - Scott's Goals for 2019

* Courses
* First non-Scott LUT courses (big plans / announcements here )
* Parental Leave
* Major platform updates that are stuck in bottleneck
* More hires, more growth
* More free content
* More teaching from real world code
* Codebase to Hooks & Suspense

## Links

* [Next.js](https://nextjs.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Parcel](https://parceljs.org/)
* [Hasura](https://hasura.io/)
* [Prisma](https://www.prisma.io/)
* [TakeShape](https://www.takeshape.io/)
* [GraphCMS](https://graphcms.com/)
* [Contentful](https://www.contentful.com/)
* [WPGraphQL](https://www.wpgraphql.com/)
* [Apollo](https://www.apollographql.com/)
* [Github](https://github.com/)
* [VS Code](https://code.visualstudio.com/)
* [Microsoft Edge](https://www.microsoft.com/en-us/windows/microsoft-edge)
* [WordPress](https://wordpress.org/)
* [Svelte](https://svelte.technology/)
* [Vue.js](https://vuejs.org/)
* [Syntax 067: Goal Setting](https://syntax.fm/show/067/hasty-treat-goal-setting)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Fake or Fortune?](https://en.wikipedia.org/wiki/Fake_or_Fortune%3F)
* Wes: [Heavyweight](https://www.gimletmedia.com/heavyweight)

## Shameless Plugs

* [Scott's new course on design systems](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",060ab1008d9ef17eeec66fd4bba8a140db1a87c760ee8f880c839baa45ea6331,a-look-forward-to-2019,/shows/106 - Year in Review.md,2023-10-16 20:06:57.249,2023-10-27 15:57:45.591,TASTY
syntax_podcast_show_00107,107,Hasty Treat - CSS Units,2019-01-07 14:00:00.660,https://traffic.libsyn.com/syntax/Syntax107.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS units (e.g. rems vs ems, px, ch, vmax), when and why you want to be using them, tips and tricks, and more! 

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free over at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:32

* Typography with CSS units

12:04

* Pixels

15:17

* Viewport units

15:51

* ch units

16:35

* inch/cm for print

17:19

* Percentages

18:10

* Media queries

19:41

* Flexbox (flex-grow)

20:28

* CSS Grid: flexible units: 1fr 2fr

## Links
* [Sentry](https://sentry.io)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",15c7a3be729de8bb012ab9e60d565a6b1b57a25a7bcf8043fead99bc353de7d5,hasty-treat-css-units,/shows/107 - CSS Units.md,2023-10-16 20:06:57.282,2023-10-27 15:57:45.632,HASTY
syntax_podcast_show_00108,108,Potluck - Where to start with JS × Freelancing × Cron jobs × Split testing × Frameworks in 2019 × More,2019-01-10 14:00:00.920,https://traffic.libsyn.com/syntax/Syntax108.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - thoughts on frameworks for 2019, React Native, when should you start freelancing, where to start with JS, cron jobs, split testing and more!

## DevLifts — Sponsor

[DevLifts](https://devlifts.io/) - Thad and JC are on a mission to make web developers healthy. They're currently offering two options: The first is [Fit.Start](https://devlifts.io/join) - perfect for beginners or those looking to get back at it. 
Use the coupon code ""syntax"" to get 50% off the fit.start plan. The second is [DevLifts Premium](https://devlifts.io/join) - for those looking for a laser-focused approach and maximum accountability. Use the coupon code ""tasty"" to get 50% off the premium plan. Check it out today! Just for January their eight-week plan is back. Use the coupon code ""newyear19"" to get $50 off. 

## Kyle Prinsloo's Freelancing & Beyond — Sponsor

Kyle Prinsloo teaches you everything you need to know about freelancing, including how to quit your job, earn a side-income and start taking control of your life. Check it out at [https://studywebdevelopment.com/freelancing](https://studywebdevelopment.com/freelancing.html) and use the coupon code ""syntax"" at checkout to get 25% off.

## Show Notes

1:40

* Where is the best place to start with JS coming from WordPress?

5:36

* How do you set up cron jobs? What are the best tools to use, should they run on their own server or on the application server, etc.?

17:13

* What new skills, frameworks, projects are you look forward to learning in 2019?

21:35

* Do you use any software for tracking analytics on your site and do you ever use this data to run split tests? If so, what is your preferred method for running split tests?

28:24

* What's your best tip for young coders to stay productive and not lose time?

32:08

* I'm 17 and learning web dev. I'm pretty concerned about my skills and feeling some impostor syndrome. Is it ok to start freelancing?

37:26

* What is React Native? How do people tend to use it? If you want a native and web app, do they share code?

## Links
* [WordPress](https://wordpress.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Javascript30](https://javascript30.com/)
* [Dead Man's Snitch](https://deadmanssnitch.com/)
* [Corntab](http://corntab.com/)
* [Syntax106: A Look Forward to 2019](https://syntax.fm/show/106/a-look-forward-to-2019)
* [Drip](https://www.drip.com/)
* [Segment.io](https://segment.com/)
* [Hotjar](https://www.hotjar.com/)


## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Tidying Up on Netflix](https://www.netflix.com/title/80209379)
* Wes: [Capital Gaines by Chip Gaines](https://www.amazon.com/Capital-Gaines-Things-Learned-Stupid/dp/0785216308)

## Shameless Plugs

* [Scott's Level 1 Styled Components Course](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://www.wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a6a67eb326e36bb2f585180c2f34f1262cd1a48f79247abfe2b7a331f31cebf5,potluck-where-to-start-with-js-freelancing-cron-jobs-split-testing-frameworks-in-2019-more,/shows/108 - Potluck.md,2023-10-16 20:06:57.321,2023-10-27 15:57:45.675,SPECIAL
syntax_podcast_show_00109,109,Hasty Treat - CSS Grid Level 2 aka Subgrid,2019-01-14 14:00:00.311,https://traffic.libsyn.com/syntax/Syntax109.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS Grid Level 2 - aka subgrid.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:27 - CSS Grid Level 2 and subgrid

* CSS subgrid will allow you to place grid-items' children along the same lines at the parent grid

5:40 - How it works - Why do we need it? What problem do we have right now?

1. Create your grid as normal - you can create columns, rows, named lines, etc.
2. Your grid-item will also be display grid - this is nothing new - just regular nesting of grid
3. The magic comes in when you want to define the rows and or columns of the sub-item. You can inherit the parent item's grid-rows / columns by simply saying `display: subgrid`

11:19 - Browser support

* It's about a year out

## Links
* [Sentry is hiring](https://sentry.io/careers)
* [Grid Level 2 and Subgrid by Rachel Andrew](https://rachelandrew.co.uk/archives/2018/04/27/grid-level-2-and-subgrid/)
* [Css Grid Level 2 specs](https://drafts.csswg.org/css-grid-2/)
* [CSS Grid Level 2: Here Comes Subgrid](https://www.smashingmagazine.com/2018/07/css-grid-2/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",dd8fcfd624578550d80fe234a9bfeb7cd9adc3dd7bf6ce6b403a3dac4adc31cd,hasty-treat-css-grid-level-2-aka-subgrid,/shows/109 - CSS Grid 2.md,2023-10-16 20:06:57.364,2023-10-27 15:57:45.717,HASTY
syntax_podcast_show_00110,110,Tips for Work Life Balance,2019-01-16 14:00:00.132,https://traffic.libsyn.com/syntax/Syntax110.mp3,"
In this episode Scott and Wes talk about work life balance. These tips aren't hard-and-fast - part of the beauty of being a web developer is that you do get to enjoy some flexibility. Work is a big part of our live and these are tips that will hopefully allow you to get the most enjoyment out of both work and life.

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1). 

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

8:06 - Know when you work best

* The 9-5 isn't for everyone - you know when you work best, so use that to your advantage

9:39 - Work when it's time to work, life when it's time to life

* Don't do laundry during work time

11:08 - Make it clear to family members when you are working

* Wishy-washy in-between can cause tension - are you working? Can I interrupt you?
* Working after hours
* Text if you need me

14:34 - Have a defined space for work

* If I bring my laptop downstairs, I don't bring a charger
* Clean yo nasty desk space
* It's a mental shift when you sit down - ""okay now I am working""

21:14 - Know how to ""zone it""

* Headphones
    * Music or podcasts
* Block all distractions
* Close email
* Pay attention to what gets you there, when it stops working, change it up

24:46 - Keep hobbies

* Away from screens
* Physical or relaxing or both

26:37 - Exercise

* Good for mind and body
* Huge gains long term and short term 

27:31 - Prioritize your to-do list

* One reason many people over-work is that they feel they have too much to do
* Add items to your to-do list when they pop into your head - out of your head, into your system

31:28 - Walk away from difficult problems

* Your brain will chew on problems as time goes on and help you solve them
* Literally take a walk outside

34:04 - Meetups, conferences or tutorials

* Reinvigorate your hunger for coding and make you happier both at home and work
* Easy to get burned out from working too much (or not paying enough attention to your work)

## Links
* [Wes' Head Bob Spotify playlist](https://open.spotify.com/user/wes.bos/playlist/4sFWRZDOmCiR7abKNRmWjr?si=rxXYtC43Q12xS-SEU8w0Yw)
* [Portable Text from Sanity](https://www.sanity.io/blog/introducing-the-new-editor-for-portable-text)
* [Portable Text](https://portabletext.org/)
* [Forget about Gutenberg, no seriously](https://www.sanity.io/blog/creating-custom-content-blocks-gutenberg-vs-sanity)
* [What you need to know about block text](https://www.sanity.io/docs/what-you-need-to-know-about-block-text/presenting-block-text#serialization-tooling)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: 
  * [Todoist](https://todoist.com/)
  * [Notion](https://www.notion.so)
* Wes: [PassSource](https://www.passsource.com/)

## Shameless Plugs

* [Scott's Level Up Tutorials Pro](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://www.wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e4e056b54135fa03907c5b0f2580088442d163b006cbf5b3da792de92861e666,tips-for-work-life-balance,/shows/110 - Balance.md,2023-10-16 20:06:57.400,2023-10-27 15:57:45.763,TASTY
syntax_podcast_show_00111,111,Hasty Treat - Tidying Up Code,2019-01-21 14:00:00.149,https://traffic.libsyn.com/syntax/Syntax111.mp3,"
In this Hasty Treat, Scott and Wes talk about tidying up your code - why it's important and how it can make your (dev) life better.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:24 - Removal

* Unneeded comments
* Unused CSS
* Unused Functions

8:06 - Organizing

* A system that works for you
* Know when to break things out into a new file, components, functions otherwise
* Index file works sometimes - other times it's too much work

11:45 - Tiding Up

* Refactoring bad/old code
* Non-ironically, does this code spark joy?
* Unused Functions
* Add in comments
* Folding - use a code formatter
* CSS

## Links
* [Tidying Up with Marie Kondo](https://www.netflix.com/title/80209379)
* [Better Comments VS Code](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments)
* [Prettier](https://prettier.io/)
* [ESLint](https://eslint.org/)
* [Nicole Sullivan - Object Oriented CSS](https://www.slideshare.net/stubbornella/object-oriented-css)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d8e747968d14c6935e9ac4a0de6fa3c1db2b921a86374973f21da6494bb68c54,hasty-treat-tidying-up-code,/shows/111 - tidying up code.md,2023-10-16 20:06:57.444,2023-10-27 15:57:45.806,HASTY
syntax_podcast_show_00112,112,The Freelance Client Lifecycle - Part 1,2019-01-23 14:00:00.058,https://traffic.libsyn.com/syntax/Syntax112.mp3,"
In this episode Scott and Wes talk about the freelance client lifecycle—from gathering requirements, to project hand-off, and everything in between.

## Techmeme Ride Home Podcast

From Techmeme.com, Silicon Valley's most-read news source, The Techmeme Ride Home podcast is a short daily podcast about the day's tech news. Mark Zuckerberg called Techmeme the one news source he definitely follows. New episodes are published every day at 5p.m. You can [check out the show here](https://itunes.apple.com/us/podcast/techmeme-ride-home/id1355212895), or search for ""Techmeme Ride Home"" in your favorite podcast player.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

03:29 - Gathering Requirements

* Probably the most important part of the process. If you botch this, you'll be dealing with change orders and scope-creep throughout the entire project. Poor planning is why agencies have project managers and why many freelancers hate their clients.
* Ask lots of questions
* Get lots of examples
* Break down each page into functionality
* Ask about budget
* Clarify who will be updating the site
* Do this in person if possible

17:00 - Quote

* Figuring out the quote
* Break it down into major functional areas that don't necessarily depend on each other.
* Multi-staged quotes are great because if it's too expensive, the client knows they can add additional features later in the project.
* Explain the tech you will use in relation to how it will help their business, or how easy it will be for them to manage.
* Presenting the quote
    * List what will be included
    * List what won't be included
    * Make your quote valid for two weeks
    * Create a template that looks professional
        * Our agency had a professional template, printed on heavy paper in an embossed folder with our logo on it.
    * You don't have to go this far, but experience matters. Think Apple. You can quote more if you have a higher perception of quality.

30:20 - Timelines

* Timelines should include hard dates. You should have a ""hard on"" and and ""hard off"".
* Assume 24-hour turnaround on questions
* Be generous with your estimates. Under promise, over deliver.
* Quoting time is a huge skill

35:58 - Contract

* You best have one
* Spell out what the client is getting (from quote)
* At the very least, have the client sign your quote
* Clear communication and a good relationship is extremely important
* Use online templates, or have a lawyer create something specific

41:09 - Setting Expectations

* Don't make yourself available 24/7
* Establish a professional environment by not being too casual
* Your choices will set the course for your relationship
* Don't be too quick to reply to email
* Schedule emails for 10a.m.

## Links
* [Syntax 036: Hasty Treat - Freelancing Hot Tips](https://syntax.fm/show/036/hasty-treat-freelancing-hot-tips)
* [docracy](https://www.docracy.com/)
* [Boomerang for Gmail](https://www.boomeranggmail.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Great Suspender](https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg)
* Wes: [Food Busker YouTube Channel](https://www.youtube.com/foodbusker)

## Shameless Plugs

* [Scott's Level 1 Styled Components Course](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://www.wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b75eb03ff8a5c1b94b6fefbc9c478c4b31fd62692a104e690aa2e4589f90e132,the-freelance-client-lifecycle-part-1,/shows/112 - freelance.md,2023-10-16 20:06:57.484,2023-10-27 15:57:45.860,TASTY
syntax_podcast_show_00113,113,Hasty Treat - Code Quality Tooling,2019-01-28 14:00:00.294,https://traffic.libsyn.com/syntax/Syntax113.mp3,"
In this Hasty Treat, Scott and Wes talk about code quality tooling - how to get your code extra nice and clean, and the tools that will help you along the way.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:11 - ESLint / JSHint / Linters in general

* Eslint took over as a flexible solution for code style and quality
* Use plugins and presets to set your rules for different types of project
* Don't be afraid to tweak rules, they are not the word of god

10:55 - Prettier

* Strictly formatting
* Can work with or without ESLint
* Provides an enforceable standard for teams
* Configurable
* Prettier for CSS, PHP, GraphQL, etc. 

18:46 - VS Code

* Red underlines like spellcheck for code
* Tooltip for lint errors
* Fix on save vs fix on command

## Links
* [ESLint](https://eslint.org/)
* [JSHint](https://jshint.com/)
* [Prettier](https://prettier.io/)
* [Wes' dotfiles](https://github.com/wesbos/dotfiles)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",3d0e74853d5c3073a9cd7afc401b061a66e2addd707d7b9db53ac518f40f07f8,hasty-treat-code-quality-tooling,/shows/113 - code tidying.md,2023-10-16 20:06:57.529,2023-10-27 15:57:45.901,HASTY
syntax_podcast_show_00114,114,The Freelance Client Lifecycle - Part 2,2019-01-30 14:00:00.983,https://traffic.libsyn.com/syntax/Syntax114.mp3,"
In this episode Scott and Wes continue their discussion about the freelance client lifecycle—from design and development, to project hand-off, and everything in between.

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1). 

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

1:47 - Design

* Collect all assets from your client
    * Logo
    * Brand guidelines
    * List of likes and dislikes
* Create initial look and feel
* Don't show client too early—they can be distracted by little unfinished things
* Back up the ""whys"" of what you did. Otherwise, it's just a pretty picture and and the client only thinks about it in terms of taste. Remember, you are the expert they hired, so it's not totally subjective—you have the expertise and you need to flex that.
    * This button is teal because it's your call to action—this is the button that makes you money so we want to highlight that
    * Grey text on white background is hard to read—you'll be leaving people out if you do this.
    * When possible, draw circles or golden ratio lines around everything ;)
* Be prepared for non-standard feedback
    * E.g. this feels cloudy, can it look more sunny? Please make it pop, etc.
* Don't get offended by feedback on creative work
    * Clients didn't go to art school and don't know about good feedback.
    * Clients will ignore all finished aspects of a design and only focus on the one minor thing that's incorrect.
* Revisions

17:58 - Development

* Clear requirements make development much easier.
* Sometimes this starts at the same time or in the process of design.
* Only show dev progress if client is capable of understanding dev process.
   * Showing a developed site too early can cause clients to worry about visual aspects that aren't yet in line with the design.
   * Showing to early is also a recipe for a feedback list of things you already know.
* Give regular progress updates, as previously established. Make it happen on a schedule so expectations are set and so you won't forget. Stick to your timeline!
* Clients don't care about technical jargon.
    * Don't tell clients about Gatsby/React as much as telling them about the benefits, how fast the site is, etc.

23:48 - Feedback and revisions

* Feedback is done in revisions or rounds.
* For smaller projects, have your client email (one email) a list of feedback.
* For larger projects, and more technical clients, use bug tracking software, such as Github issues, Trello, etc.
* Write down everything, and then have a follow-up call to discuss the feedback.

30:08 - Deployment

* Get your client to pay for domains and hosting.
* Make sure their old website has everything off of it, or host the website somewhere else.
* If you're moving servers, best to just point the A records at the new server.
* If changing nameservers for DNS, make sure the client doesn't have email or any other apps on that server that will be nuked or broken when moving.
* Many clients use their server to uploaded PDFs and other files that may still need to be accessible.
* If you are changing URL structure, you'll need to be aware of any redirects.
* Backup strategies
* Restoration strategies

40:05 - Handoff

* Create a video detailing how to do each thing
* Don't give more options than they need in the back end.
* Do in-person training when possible.
    * Only teach them the things that are important for their day to day usage.

44:28 - Bug fixes and support

* Very common for clients with wrong idea of project guidelines to want to add on at the end of a project.
* Not about adding new, non-established features.
* Emergency bugs require an emergency response if they are your fault
    * Set expectations and be careful what you promise.

48:03 - What to do when things go to shit

* There should be a trail of communication leading up to things going awry.
* Project is behind.
* Product is not met with acceptance.
* Client isn't paying.
* When to fire your client.

## Links
* [Syntax 112: The Freelance Client Lifecycle - Part 1](https://syntax.fm/show/112/the-freelance-client-lifecycle-part-1)
* [Syntax 088: Pre-launch Checklist](https://syntax.fm/show/088/pre-launch-checklist)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Synology 4 bay NAS DiskStation DS918+](https://amzn.to/2M94YIq)
* Wes: [Backblaze](https://www.backblaze.com/)

## Shameless Plugs

* [Scott's Level Up Pro](https://LevelUpTutorials.com/pro)
* [Wes' Advanced React Course](https://www.advancedreact.com)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c3ce0fe2cb4aac799e54817f4fe24aa86121cf0e47aa69871b5104677d268b8b,the-freelance-client-lifecycle-part-2,/shows/114 - freelance part 2.md,2023-10-16 20:06:57.571,2023-10-27 15:57:45.938,TASTY
syntax_podcast_show_00115,115,Hasty Treat - Code Quality Tooling Part 2,2019-02-04 14:00:00.743,https://traffic.libsyn.com/syntax/Syntax115.mp3,"
In this Hasty Treat, Scott and Wes continue their discussion about code quality tooling - how to get your code extra nice and clean, and the tools that will help you along the way.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:28

* Typescript and Types

5:42

* Jest and Testing

7:48

* Exceptions & Error Tracking

## Links
* [Sentry](https://sentry.io/)
* [Log Rocket](https://logrocket.com/)
* [Rollbar](https://rollbar.com/)
* [Jest](https://jestjs.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c45226325fbb14a1361412448971a73ea22194376a8afda04cf8fbbcd7e3801b,hasty-treat-code-quality-tooling-part-2,/shows/115 - code quality.md,2023-10-16 20:06:57.648,2023-10-27 15:57:45.982,HASTY
syntax_podcast_show_00116,116,Potluck - Changing careers × Repo organization × CSS Grid × Certifications × Freelancing × Spammers × More,2019-02-06 18:10:00.560,https://traffic.libsyn.com/syntax/Syntax116.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - organizing your Git repos, the difference between freelancing and contracting, changing careers, how to deal with spammers and more!

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1). 

## Techmeme Ride Home Podcast

From Techmeme.com, Silicon Valley's most-read news source, The Techmeme Ride Home podcast is a short daily podcast about the day's tech news. Mark Zuckerberg called Techmeme the one news source he definitely follows. New episodes are published every day at 5p.m. You can [check out the show here](https://itunes.apple.com/us/podcast/techmeme-ride-home/id1355212895), or search for ""Techmeme Ride Home"" in your favorite podcast player.

## Show Notes

1:55

* Q: Do you prefer to have your backend and frontend in separate Git repos or together? What are the trade-offs?

5:12

* Q: In web dev, what's the difference between a freelancer and independent contractor?

9:45

* Q: Default export vs named export?

11:35

* Q: I'm looking to change careers, but I'm 41 this year. Is it too late?

16:12

* Q: Have you guys made much use of multicolumn layout? If so, only for text, or have you come up with (or seen elsewhere) any interesting out-of-the-box uses?

20:11

* Q: Since you publish your courses' source code on Github, what do you think about people using that to learn instead of buying your course? Is it an intentional decision, or is it a compromise you're willing to make?

23:52

* Q: When is a certification needed for both jobs and side-projects?

29:35

* How do you deal with spammers filling out forms?

34:05

* Q: Could you better explain what a slug is? I've heard the term thrown around on a number of your episodes, but I don't really know what it means.

37:44

* Q: I am currently going through some currency conversion stuff for a project, what would you recommend to use for international conversions?

## Links
* [Sanity](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1)
* [Techmeme Ride Home Podcast](https://itunes.apple.com/us/podcast/techmeme-ride-home/id1355212895)
* [Concurrently](https://www.npmjs.com/package/concurrently)
* [Rachel Andrew](https://rachelandrew.co.uk/)
* [CSS Grid auto height of elements?](https://github.com/rachelandrew/cssgrid-ama/issues/19)
* [Cloudflare](https://www.cloudflare.com/)
* [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Voxon Screwdriver Set](https://amzn.to/2RErmzr)
* Wes: [Technology Connections](https://www.youtube.com/channel/UCy0tKL1T7wFoYcxCe0xjN6Q/videos?flow=grid&view=0&sort=p)

## Shameless Plugs

* [Scott's Level Up Pro](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://www.wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",73f8a6e72c8b4c0737f2316f84a8d4a4cafb7440c28f9682e8e945682dc8e110,potluck-changing-careers-repo-organization-css-grid-certifications-freelancing-spammers-more,/shows/116 - Potluck.md,2023-10-16 20:06:57.723,2023-10-27 15:57:46.025,TASTY
syntax_podcast_show_00117,117,Hasty Treat - How To Email Busy People,2019-02-11 14:00:00.896,https://traffic.libsyn.com/syntax/Syntax117.mp3,"
In this Hasty Treat, Scott and Wes tackle email, specifically, how to email busy people — how to write emails that actually get read, and don't just get tossed in the archive.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

4:05

* Subject lines

11:26

* The body

14:33

* Best practices

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",3538a0f8f430413817ca0c608ec4abb54b5c9be9dad6be0812ed7f14d7c3a13b,hasty-treat-how-to-email-busy-people,/shows/117 - email.md,2023-10-16 20:06:57.768,2023-10-27 15:57:46.080,HASTY
syntax_podcast_show_00118,118,The Smart Home,2019-02-13 14:00:00.423,https://traffic.libsyn.com/syntax/Syntax118.mp3,"
In this episode, Wes and Scott talk about the Smart Home — all the different tech available, how it works together, pitfalls to avoid, hardware, software, and more!

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1).

## Stackbit - Sponsor

Build modern JAMStack websites in minutes. Stackbit lets you combine any theme, site generator and CMS without complicated integrations. Join the beta today by visiting [stackbit.com/syntaxfm](https://www.stackbit.com/syntaxfm/).

## Show Notes

2:25 - The tech

* Wifi devices
* [Zigbee](https://www.zigbee.org/)
  * Can operator on low power
  * Usually Cheaper
  * Water Sensor, door sensor, temperature
* iOS
  * HomeKit sucks
  * You need an Apple TV or iPad to access outside of your house

9:13 - Controlling your smart home

* Smart Things
* Home Assistant
  * Host your own
  * Lots of add-ons
  * You need to babysit it
* Android
  * Google Assistant
* Google Pixel squeeze to assistant is way better than saying ""Hey Google"".
* Google Home
  * Google Home is awesome
  * Custom sayings with IFTTT
  * Custom via Routines
* Alexa

23:52 - Software

* [Stringify](https://www.stringify.com/)
* [IFTTT](https://ifttt.com/)
  * Basic automations
  * Makers accounts
  * Web hooks to trigger actions
* [Homebridge](https://homebridge.io/)
  * Make non-iOS stuff work with HomeKit
  * Swipe up control is nice

28:15 - Hardware

* Light Switches
  * [Leviton](https://www.leviton.com/en)
  * [Lutron](https://www.casetawireless.com/)
* Bulbs
  * [LIFX](https://www.lifx.com/)
  * [Philips Hue](http://meethue.com)
    * AMAZING
    * Much cheaper now than before
* Blinds
* [Chromecast](https://store.google.com/product/chromecast) — turn the TV off
* Plugs
  * [Wemo](https://www.belkin.com/us/Products/smarthome-iot/c/wemo/)
  * [Leviton](https://www.leviton.com/en)
  * [Sonoff](https://sonoff.itead.cc/en/)
* Power strip
  * Change each plug or have timers
* Thermostat
  * [Ecobee 3 Lite](https://amzn.to/2MBRAwG)
  * [Ecobee 4 with Alexa](https://amzn.to/2Wylgzw)
  * [Nest](https://amzn.to/2RY0drh)
  * [Nest-E](https://amzn.to/2G6yQ7t)
* Cameras
  * [Ring Doorbells](https://amzn.to/2MAnYja)
  * [Ring Flood Light Camera](https://amzn.to/2B841vD)
    * Super slow to open the app
  * Wyze cameras
    * [Small one](https://amzn.to/2WqCoHi)
    * [Larger Panning Camera](https://amzn.to/2Wl338t)
* Mesh Wifi
  * [Google Wifi](https://store.google.com/us/product/google_wifi)
  * [Amplifi](https://www.amplifi.com/)
* Fire Alarms / CO2
  * [Nest Protect](https://nest.com/smoke-co-alarm/overview/)
  * Dumb
  * Lithium
* Garage Door Opener
* Non-connected ""smart items""
  * Solar powered lights on a timer. No app needed, no WiFi connection needed
  * [Roomba](https://store.irobot.com/default/home) - meh. We play ""find the body"" when it comes home.
  * Locks - Code based lights
  * [Motion Sensor LED Lights](https://www.amazon.com/gp/product/B01HO1FLDI/ref=ppx_od_dt_b_asin_title_s00?ie=UTF8&psc=1)

67:32 - What we want in the future

* Scott
  * Motion sensors
  * Door sensors
  * Locks
  * Blinds
  * More bulbs
* Wes
  * Fireplace
  * Constantly recording cameras
  * Sensors galore
    * Windows open
    * Doors open
    * Garage door
  * Zigbee Hub
  * Xiaomi Sensors
    * Gear Best

## Links

* [Sanity](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1)
* [Stackbit](https://www.stackbit.com/syntaxfm)
* [Google Home Mini](https://store.google.com/us/product/google_home_mini?hl=en-US)
* [Amazon Echo](https://www.amazon.com/all-new-amazon-echo-speaker-with-wifi-alexa-dark-charcoal/dp/B06XCM9LJ4)
* [Google Pixel](https://store.google.com/product/pixel_3)
* [Apple Homepod](https://www.apple.com/ios/home/)
* [Raspberry Pi](https://www.raspberrypi.org/)
* [GearBest](https://us.gearbest.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Philips Hue](http://meethue.com)
* Wes: All the recommendations from above

## Shameless Plugs

* [Scott's Level Up Pro](https://LevelUpTutorials.com/pro)
* [Wes' Courses](https://www.wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",75a99d50339c938f20dfc8119c02bd2ab1ecb261b25637771755c108992bfee9,the-smart-home,/shows/118 - smart home.md,2023-10-16 20:06:57.812,2023-10-27 15:57:46.123,TASTY
syntax_podcast_show_00119,119,Hasty Treat - Better Living Through Side Projects,2019-02-18 14:00:00.321,https://traffic.libsyn.com/syntax/Syntax119.mp3,"
In this Hasty Treat, Scott and Wes talk about side projects — what you can learn, why they're great, how to come up with ideas, and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:17 - Why?

* Keeps you sharp
* It's actually useful
* Try new technology

5:28 - How to come up with ideas

* What sucks in your life?
* How do you get a competitive advantage in life?

12:10 - Quick and dirty tech

* [Next.js](https://nextjs.org/)
* [Express](https://expressjs.com/)
* [diskDB](https://github.com/arvindr21/diskDB)
* [Meteor](https://www.meteor.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",80248d4d6a1c975a4818c2278fd5e6e8d7148cf503c32de0b5619907a6a0b8cc,hasty-treat-better-living-through-side-projects,/shows/119 - side projects.md,2023-10-16 20:06:57.857,2023-10-27 15:57:46.170,HASTY
syntax_podcast_show_00120,120,Gatsby vs Next,2019-02-20 14:00:00.938,https://traffic.libsyn.com/syntax/Syntax120.mp3,"
In this episode, Wes and Scott debate Gatsby vs Next — how they compare, the pros and cons of each, why you might chose one over the other for your next project, and more!

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## The Armoury - Sponsor

The Armoury is a men's clothing and accessories retailer that provides some of the highest quality clothing you can buy. Designed for those of you who want the highest quality clothing that feels great and will last forever. Buy less, buy better. Follow them on Instagram [@thearmourynyc](https://www.instagram.com/thearmourynyc/) and check out their website [TheArmoury.com](https://thearmoury.com).

## Show Notes

5:07 - Server Side Rendering

* Next.js will render on demand — this allows you to have server rendered pages on demand.
  * Think of a blog website — publish a new blog post and it will immediately start working.
  * Authenticated pages can be server rendered, and thus, pre-loaded for better performance.
* Gatsby runs at build time only — so you need to have all of your data ready at build time.
  * Pro: This makes for very fast page load.
  * Con: Large websites can take a long time to build.
  * Con: Gatsby can do network fetches from the client, but these lose the benefit of SSR.
* Ease of SSR:
  * Next.js requires a complicated document.js file if you are fetching data anywhere other than a page component.
    * This will probably get easier with Suspense. Demos are simple, but any real application requires harder config.
  * Gatsby is Easy Peeezy!

11:09 - Data

* Next.js is unopinionated. Like React, it doesn't care where your data comes from.
  * getInitialProps();
* Gatsby has a number of ""source"" plugins which will pull in data from sources — markdown, WordPress, API, file system. Once you have that data sourced, you can query it with GraphQL.

22:50 - Routing and Creating Pages

* Next.js makes you create a page in a pages directory. You can nest these as deep as you like. If you want to pass query params, you must do so with a `?query=string`. There are several third-party options for getting around this that require a node server.
* Gatsby allows you to programmatically create pages with their createPage API.
* For both navigating between pages, they make a Link Component available.

30:49 - Plugins

* In Gatsby, *everything* goes through the Gatsby pipeline. This makes things like image compression, pagination, sass, service workers and many other progressive web app pieces very easy.
* Gatsby makes building a really good website easy.
* Gatsby Image is SOOOOO amazing.
* The scope of Next.js is much smaller. They give you a few things, but you generally bring your own approach for most things
  * Routing
  * Linking and prefetching
  * Dynamic Importing

38:42 - Deploying and Hosting

* Gatsby is just HTML, CSS, and JS at the end of the day, so it can be deployed almost anywhere — Netlify, Github Pages, cheap PHP hosting, etc.
* Next.js is a Node app. It can be integrated into an existing Express app, or run by itself. Requires a Node server to run it.
* Next.js has a static generation option, but you're better off using Gatsby for that.

44:41 - The verdict?

* Use Next.js for Apps, Gatsby for Websites

## Links

* [LogRocket](https://logrocket.com/syntax)
* [The Armoury](https://thearmoury.com/)
* [Next.js](https://nextjs.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Netlify](https://www.netlify.com/)
* [Node](https://nodejs.org/en/)
* [Express](https://expressjs.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Motion LED Lights](https://amzn.to/2DtVNhO)
* Wes: [The Dream Podcast](https://www.thedream.fm/)

## Shameless Plugs

* [Scott's Pro Gatsby 2 Course](https://www.leveluptutorials.com/store/products/tutorials/lut-dd028)
* [Wes' Courses](https://www.wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b47807b0d76ba008a7c3505e3ac375d910a29f1f18590a926d3c9e351b602bf3,gatsby-vs-next,/shows/120 - gatsby-vs-next.md,2023-10-16 20:06:57.896,2023-10-27 15:57:46.213,TASTY
syntax_podcast_show_00121,121,Hasty Treat - Tips to Succeed on YouTube,2019-02-25 14:00:00.787,https://traffic.libsyn.com/syntax/Syntax121.mp3,"
In this Hasty Treat, Scott and Wes talk tips to succeed on YouTube!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

1:55

* How YouTube has affected our careers

3:45

* YouTube money is just OK

6:28

* SEO is king

7:15

* The title is most important

8:59

* Description is important

11:00

* Use Tags. All of them.

12:00

* Scheduled content works

13:26

* Keeping Viewers

15:20

* Pinning comments

15:41

* Liking Comments

17:00

* Practice Finishing Sentences

17:34

* Collaborate when you can

19:00

* Use all the features YouTube has to offer

20:44

* Don't get sucked into the BS

## Links
* [TubeBuddy](https://www.tubebuddy.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c9c78d1c18e049888c57b9662279fb355b2c6d76a83318e6a677748480678834,hasty-treat-tips-to-succeed-on-youtube,/shows/121 - youtube.md,2023-10-16 20:06:57.936,2023-10-27 15:57:46.256,HASTY
syntax_podcast_show_00122,122,"How We Manage Our Lives — Notion, Todos, Notes, Focusing, Calendars, Goal tracking, and more!",2019-02-27 14:00:00.663,https://traffic.libsyn.com/syntax/Syntax122.mp3,"
In this episode, Wes and Scott talk about life management — the systems and tools for managing all the the busy details of life and work. 

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

5:00 - Todos

* GTD philosophy
* Todoist
* Things

12:31 - Focusing

* Focus app
* Turn off all notifications on iOS and desktop
* Rename apps
* Ask yourself why you feel the way you do
  * Should be doing email? Do I need to eat that frog?
  * Why do I not enjoy this?
* Sticky note on screen or desk

21:27 - How we track ideas, thoughts, and notes

* Get everything out of your head
* Markdown files
* Evernote
* Notion

27:23 - Calendar and schedule

* Google calendar
* [USB light switch](https://amzn.to/2NgeOsz) 

33:30 - Goal tracking / Life progression

* Keep concepts and ideas in Notion
* Milestones (bigger ideas) are separated
* Use the system that works best for you

36:58 - Fun things with Notion

* What is Notion?
* Cross-linking/referencing between boards
* Episode calendar and possible episodes kanban

## Links

* [Freshbooks](https://freshbooks.com/syntax)
* [Sentry](https://sentry.io/)
* [Todoist](https://todoist.com/)
* [Things](https://culturedcode.com/things/)
* [Getting Things Done: The Art of Stress-Free Productivity](https://www.amazon.com/Getting-Things-Done-Stress-Free-Productivity/dp/0142000280)
* [Focus](https://heyfocus.com/)
* [Notion](https://notion.so/)
* [Evernote](https://evernote.com/)
* [Bryant Electric USB light switch](https://amzn.to/2NgeOsz)
* [Bear app](https://bear.app/)
* [Airtable](https://airtable.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [LG Ultrawide Monitor](https://amzn.to/2EkdguN)
* Wes: [LG 4k 32"" Monitor](https://amzn.to/2Ipsrqu)

## Shameless Plugs

* [Scott's React Hooks For Everyone Course](https://www.leveluptutorials.com/pro)
* [Wes' Courses](https://www.wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",17a4378f1f994570b4aeffd8fd68179e07eaf635bc333832914365bb0bac899a,how-we-manage-our-lives-notion-todos-notes-focusing-calendars-goal-tracking-and-more,/shows/122 - life management.md,2023-10-16 20:06:57.979,2023-10-27 15:57:46.297,TASTY
syntax_podcast_show_00123,123,Hasty Treat - Authentication - LocalStorage vs Cookies vs Sessions vs Tokens,2019-03-04 14:00:00.946,https://traffic.libsyn.com/syntax/Syntax123.mp3,"
In this Hasty Treat, Scott and Wes talk about authentication — the difference between localStorage, cookies, session, tokens and more!

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

4:20 - How should we track users?

* Token based - generally stored in the client
* Session based - stored on the server 
* Token Based (JWT)

6:00 - Token-based auth

* Stateless - the server does not maintain a list of logged in users
* Scalable - you can use serverless functions easily
* Cross domain
* Data can be stored in JWT
* Easy to use on non-web sites like mobile apps
* Hard to expire tokens — you must maintain a list of blacklisted tokens

7:48 - Session-based auth 

* Stateful - generally you maintain a list of session IDs
* Passive - once signed in, no need to send token again
* Easy to destroy sessions

10:48 - How do we identify the user on each request? localStorage or Cookies?

* A common misconception is that localStorage is for tokens while cookies is for sessions
* With localStorage, we need to grab the token and send them along on each request
* With cookies, the data is sent along on each request

11:25 - Security Issues

* XSS for Tokens - make sure bad actors can't run code on your site
* Sanitize inputs
* XSRF - CSRF tokens are needed

## Links
* [Cookies vs Tokens: The Definitive Guide](https://dzone.com/articles/cookies-vs-tokens-the-definitive-guide)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e599fc89c18d91a87f75827154da1f4544654c107f7fe4bbfd5e9e56c90b3f4c,hasty-treat-authentication-localstorage-vs-cookies-vs-sessions-vs-tokens,/shows/123 - authentication.md,2023-10-16 20:06:58.026,2023-10-27 15:57:46.347,HASTY
syntax_podcast_show_00124,124,Potluck - Are classes dead? × Tutorials vs Real Life × CRA vs Next × Scraping × More,2019-03-06 14:00:00.713,https://traffic.libsyn.com/syntax/Syntax124.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - are classes dead?, tutorials vs real life, the smart home, developers and mental health, and more!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

1:30

* Q: What advice would you give to someone wanting to get involved with the open source community, coming from closed-source full-time work? How do people make time to code on the side and balance a life/family?

5:38

* Q: In [Syntax 060](https://syntax.fm/show/060/the-undocumented-web-scraping-private-apis-proxies-and-alternative-solutions), you mentioned making your life easier as a motivation. How do you get your data from sites that may not have an API? Web scraping? Any tools you'd recommend?

11:34

* Q: Do you think React aims toward a world with functional components only or will class based components always play a role?

17:10

* Q: Just feedback on the recent Smart Home podcast...I really enjoyed it! I have about 48 (color) HUE lights throughout my home, and use an IFTTT applet for my Ring PRO doorbell, so when someone rings the doorbell, all the lights in the home blink (e.g. so I can see when an Amazon Prime package arrives, or know someone is at the front door, etc...while I'm working and wearing my Bose QC35II's, and of course listening to your podcast)! I'm a huge fan of the podcast since early last summer (I rarely comment, but you guys are great)!

21:37

* Q: What would you do in the event your clients sends you a “thank you” card along with cash that is MUCH lower than you are preparing to invoice them? Would you remove it from the invoice, ask them what they would prefer, etc? I’m stuck in an awkward situation and it doesn’t even cover the hosting costs.

24:39

* Q: I've heard a lot of good things about Next.js, but what exactly is it? How does it compare to just using the create-react-app? Is it worth it to migrate a small side project that I have to Next.js?

28:26

* Q: I take tutorials all the time for web dev. I have taken many of both of your courses. Thank you, they are great! I am completely self taught and have zero computer science education whatsoever. As well as your courses and other tutorials have taught me various languages and libraries, they do not prepare me for real work interviews or jobs. No offense. How do I make the jump from tutorials to real life?

34:39

* Q: Do you have exercises to warm up your brain before you start coding? I always find it a bit difficult to jump straight into a project. I would never start working out before warming up and I feel that's also true about development!

36:42

* Q: How should developers deal with depression and mental health?

## Links

* [Sentry](https://sentry.io/)
* [Freshbooks](https://freshbooks.com/syntax)
* [Syntax 060: The Undocumented Wed](https://syntax.fm/show/060/the-undocumented-web-scraping-private-apis-proxies-and-alternative-solutions)
* [Syntax 118: The Smart Home](https://syntax.fm/show/118/the-smart-home)
* [IFTTT Hue/Ring applet](https://ifttt.com/applets/352303p)
* [Syntax 120: Gatsby vs Next](https://syntax.fm/show/120/gatsby-vs-next)
* [Next.js](https://nextjs.org/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Clarity Money](https://claritymoney.com/)
* Wes: [Wyze Camera](https://amzn.to/2Xl4xQs)

## Shameless Plugs

* [Scott's React Hooks For Everyone](https://LevelUpTutorials.com/pro)
* [Wes' CSS Grid Course](https://cssgrid.io/)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ad4b20d8a0caf759c5c4004e32008da1b93c342a5739eaa6cca11d3d4ab0f038,potluck-are-classes-dead-tutorials-vs-real-life-cra-vs-next-scraping-more,/shows/124 - potluck.md,2023-10-16 20:06:58.078,2023-10-27 15:57:46.394,TASTY
syntax_podcast_show_00125,125,Hasty Treat - Communication Skillz,2019-03-11 13:00:00.131,https://traffic.libsyn.com/syntax/Syntax125.mp3,"
In this Hasty Treat, Scott and Wes talk about communication — why it's important, how to improve, building good habits, tools and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:59 - Why it's important

* Projects can live or die by the team's communication
* Project timelines can be disrupted leading to big problems with scheduling

5:53 - How to improve communication skills

* PRACTICE
* Pay attention to what works
* Have a system – standups, weekly meetings, etc.
* Over communicating can be annoying but effective
* Realize that people can't read your mind, so having your intentions and timelines public and known is important

9:12 - Building good habits

* Need to practice
* Build systems to support new habits

11:04 - Tools we use to communicate

* Email / Standups
* [Notion](https://www.notion.so/)
* GitHub Issues
* [Slack](https://slack.com/)
* [Missive](https://missiveapp.com/)

## Links
* [Syntax 075: Hasty Treat - Feedback and Criticism](https://syntax.fm/show/075/hasty-treat-feedback-and-criticism)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",72bc9bdd975f60c4e551019ee832afe95c6d450fd55d28feb7a6ea262dd07c14,hasty-treat-communication-skillz,/shows/125 - communication.md,2023-10-16 20:06:58.128,2023-10-27 15:57:46.459,HASTY
syntax_podcast_show_00126,126,Bootcamps vs School vs Self-learning,2019-03-13 13:00:00.426,https://traffic.libsyn.com/syntax/Syntax126.mp3,"
In this episode Wes and Scott talk about developer education — what to look for, what to avoid, and how to be a life-long learner with good problem solving skills.

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1). 

## The Armoury - Sponsor

The Armoury is a men's clothing and accessories retailer that provides some of the highest quality clothing you can buy. Designed for those of you who want the highest quality clothing that feels great and will last forever. Buy less, buy better. Follow them on Instagram [@thearmourynyc](https://www.instagram.com/thearmourynyc/) and check out their website [TheArmoury.com](https://thearmoury.com).

## Show Notes

3:59 - Our experiences

* Scott:
  * Went to college - Go Blue!
  * Worked odd jobs while self teaching
  * Was mentored and taught more while working at my first job
  * Self directed since then
  * Started teaching via LUT in 2012

* Wes:
  * Went to university for Business Tech - entirely self-taught
  * Led and created part-time HTML + CSS program at HackerYou
  * Led and created first bootcamp at HackerYou
  * Led and created first JS part-time at HackerYou
  * Been offered jobs at colleges + universities

10:02 - School - $$$

* Pros
  * The best thing about school was unrestricted free time to find out what I enjoyed, which lead me to coding
  * Co-ops can help you find what you like and what you don't like
  * Life skills that involve you being on your own and figuring things out more
  * You are exposed to interesting people and ideas
  * CS Degree work can open more career doors
  * Professional networking
  * Many companies wont hire you without some sort of bachelor's degree (this might change)

* Cons
  * Not everyone has the time or money to devote two to five years to school — especially to something they might not end up enjoying
  * Potentially outdated staff and course material
    * Wes was often asked to lead a video editing course, print design course and a web development course
  * Lot's of distractions

23:10 - Bootcamp - $$

* Pros
  * Very fast, lots of info, but can be a bit overwhelming
  * You can get up-to-speed extremely quickly
  * Focused on hire-ability and job-ready skills
  * Focused information
  * Personality is really the deciding factor here - lots of people do well, and some don't

* Cons
  * Hit or miss — quality of bootcamps aren't vetted, so do your research
  * Talk to someone who took it, find out who the instructors are
  * You absolutely must continue learning after the bootcamp
    * The bootcamp is just a push and you are expected to continue learning once you are done
  * Not great for individuals that can't handle the pace
  * You have to quit your job

37:09 - Self-Taught - $

* Pros
  * Self-directed people will prevail here
  * Can be drip-fed while earning money at another job
  * Can be supplemented by a job (e.g. you are front-end and want to go full stack)
  * Can get real world experience as a freelancer while you evolve

* Cons
  * Not for everyone
  * Can be difficult to self-motivate
  * Hard to get help - sometimes you can be stuck for hours on a two-second fix
  * Potentially discouraging
  * You might go down the wrong path without guidance on what you should learn

47:11 - Part Time Programs - $

* Pros
  * Fantastic way to get up to speed with a new tech
  * Goes at a good pace - twice a week usually
  * Offered on weekends and evenings where you can maintain a regular job
  * Very low risk - you can try it out

* Cons
  * Might not be as fast as you like it
  * Quality is all over the map

49:55 - Mentored Self Learning - $

* Pros
  * Best to do with a mentor on the job
  * Mentor can help steer what to learn in your free time
  * Good feedback and a place to ask lots of questions

* Cons
  * Can't be done without someone willing to mentor you
  * Only as good as your mentor

52:55 - What approach would we take?

* Bootcamp > then immediately supplement with courses 

## Links

* [Notion](https://www.notion.so)
* [MindNode](https://mindnode.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Digital Minimalism by Cal Newport](https://amzn.to/2EJGRhi)
* Wes: [American Kingpin](https://amzn.to/2tPFPdp)

## Shameless Plugs

* [Scott's React Hooks For Everyone](https://LevelUpTutorials.com/pro)
* [Wes' All Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",249131c8cf767b2d01e59ec1d5ae061d7ca1f78123ed572dba0bd2a0c70df9dc,bootcamps-vs-school-vs-self-learning,/shows/126 - bootcamps.md,2023-10-16 20:06:58.178,2023-10-27 15:57:46.501,TASTY
syntax_podcast_show_00127,127,Hasty Treat - React Suspense,2019-03-18 13:00:00.479,https://traffic.libsyn.com/syntax/Syntax127.mp3,"
In this Hasty Treat, Scott and Wes talk about React Suspense — what it is, how it works, support and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

Not live yet - it may/will change. Be warned! 

3:59 - The problem we have with React right now

  * API calls
  * Image loading
  * Code splitting

7:16 - What is React Suspense?

1. First we convert our async data fetching functions into **resources**
2. Resources can then be read inside render - above the return
3. Resources can be read from cache
4. Resources can be preloaded into a cache if you anticipate needing them
5. Resources reads are blocking for that function - you can't return JSX until the resource is read
6. In your component that fetches data, there is no need to maintain a loading state
7. Then, anywhere higher up in that tree, you can introduce a suspense component
8. The suspense component can **detect** if any of it's children are currently loading data
9. If they are, we can then choose to show a loader via the **fallback** prop
10. We can also choose to **show nothing via the maxDelay prop** — this is helpful for fast connections that shouldn't see the spinner for a short split-second

15:20 - Support

* React.lazy and suspense for code splitting is already here
* The React.lazy function lets you render a dynamic import as a regular component
* Loadable Components is recommended if you need splitting with SSR
* Data Resources is not here yet

## Links
* [React 16.x Roadmap](https://reactjs.org/blog/2018/11/27/react-16-roadmap.html#react-16x-mid-2019-the-one-with-suspense-for-data-fetching)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",63b205383b7514f6dc5918f6264d7f2c2adeb53b631b60240d23b3b322505958,hasty-treat-react-suspense,/shows/127 - react suspense.md,2023-10-16 20:06:58.225,2023-10-27 15:57:46.562,HASTY
syntax_podcast_show_00128,128,How To Find Freelance Clients,2019-03-20 13:00:00.865,https://traffic.libsyn.com/syntax/Syntax128.mp3,"
In this episode Wes and Scott talk about how to find freelance clients — tangible things you can do to position yourself and set yourself up for success.

## Stackbit - Sponsor

Build modern JAMStack websites in minutes. Stackbit lets you combine any theme, site generator and CMS without complicated integrations. Join the beta today by visiting [stackbit.com/syntaxfm](https://www.stackbit.com/syntaxfm/).

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session replayer and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

1:27 - Question from Andreas Trattner: I am a backend developer with 4+ years experience working on large systems in Europe and am considering moving toward freelancing/contracting. However, I find it difficult to discover quality opportunities. Any tips you can share on how to strategically get projects?

* There isn't a secret trove of work, and there's no one way to do it.

4:50 - Relationships

* Trust and relationships rule all. The best paying gigs are never advertised. 
* Who should you know?
  * Other developers
    * **How?** Meetups, Conferences, Twitter, Slack rooms, Friends
    * Tip: Volunteering is a great way to get in to conferences, plus you often get to know people
    * Tip: If you are friends of a friend who gets a lot of work, as for a introduction
  * Designers and marketers
    * You usually work together
    * **How?** Twitter, Email, Dribbble, Instagram
  * Project managers
    * **How?** Cold emails, tweets
  * Office managers
    * Life blood of the office - they know everyone
    * Often move into other roles
    * **How?** Meetups, previous employees
  * Entrepreneurs
    * Lots of connections, often switching gears
    * **How?** Demo camps, Facebook marketing groups
  * Venture capitalists
    * Have dozens of companies and tons of connections
    * **How?** Demo camps, introductions, cold email

19:08 - Display of expertise

* It certainly is an option to just be really freaking good at what you do
* Speaking at conferences and local meetups
* Working on open source
  * Helping in chat rooms
  * Posting guides
  * Maintaining docs
* Offering reviews / Make things public
  * Performance - [Harry Roberts from CSS Wizardry](https://csswizardry.com/)
  * Accessibility  - [HeydonWorks](http://www.heydonworks.com/)
  * WordPress speed
  * React checking
* Start a podcast
* Blogging
* Volunteering

9:22 - Visibility

* You need to let everyone know what you do. Your mom's uncle's friend's cousin on Facebook might casually ask for recommendations.
* Instagram / Photos. Showing people what you are doing and what you are working on will make a mental note in their head that you do that type of work.
* Facebook / Twitter / Instagram
* Blogging
  * This makes the ""vetting"" process much easier
* Tweeting
* YouTube videos
* Slack channels you are involved in

38:02 - Other tactics

* SEO - Locality (Toronto designer), specific technologies (Redux contractor)
* Craigslist
  * This one sucks, but it can lead to decent work occasionally
  * You need to be more vigilant in screening, most clients will suck
* Cold asks - Just ask people what works well
  * ""Hey, I'm looking to book a few contracts starting June 2019. I love working with ______ and you can see my work here""
* Put a phone number on your website. Seriously.
* UpWork
  * Won't make as much money here because of competition
* Local business listings
  * Find online and offline biz listings
  * Old fashioned — putting your card on bulletin boards

47:29 - Maintaining Relationships

* Check in every few months with non-biz related contact
  * But also just straight up ask for work
* Christmas / Thank-you gifts

## Links
* [Canadian Couch Potato](https://canadiancouchpotato.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Google Drive Scanner](https://support.google.com/drive/answer/3145835?co=GENIE.Platform%3DAndroid&hl=en)
* Wes: [Endy Mattress](https://ca.endy.com/)

## Shameless Plugs
* [Scott's React Hooks For Everyone](https://LevelUpTutorials.com/pro)
* [Wes' All Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",a9c70285f041fcb11fc3b3b8769b6b7e8556ad931a68b7bc434b7eaab9ee3601,how-to-find-freelance-clients,/shows/128 - freelance clients.md,2023-10-16 20:06:58.265,2023-10-27 15:57:46.603,TASTY
syntax_podcast_show_00129,129,Hasty Treat - Why Use a Frontend Framework at All?,2019-03-25 13:00:00.643,https://traffic.libsyn.com/syntax/Syntax129.mp3,"
In this Hasty Treat, Scott and Wes talk about frontend frameworks — what they are, when you need one, how to organize your code for maximum efficiency, and more!

## Stackbit - Sponsor

Build modern JAMStack websites in minutes. Stackbit lets you combine any theme, site generator and CMS without complicated integrations. Join the beta today by visiting [stackbit.com/syntaxfm](https://www.stackbit.com/syntaxfm/).

## Show Notes

3:08 - What is a frontend framework?

* JavaScript based
    * Controls applications such as:
    	* Routing
    	* Rendering
    	* Data Fetching
	* Examples:
    	* React
    	* Angular
    	* VueJS
    	* Ember
    	* Backbone
    	* Svelte

5:54 - When to use a frontend framework

* The Link between your JavaScript data and the DOM (your HTML) isn't live
* The use of frameworks makes re-updating the DOM (after the initial variable update) easy
* You need an opinionated way to handle complexity
    * Example:
    	* You add an item to a shopping cart, send the event to the backend, and update both the number of items in the cart and the ""Add to cart"" button
    	* Event Handlers - binding and un-binding
* Your client wants a fast, modern experience
* Seamless routing and page transitions
* Fast prototyping
* Access to battle-tested libraries
    * Security
    * Perf

14:24 - When not to use a frontend framework

* When using CMS like WordPress and Drupal
* A medium amount of JavaScript is needed - Vanilla JS will work fine
    * Modals
    * Slideshows
    * Form submits
* Static pages, no JS functionality
* Updating an existing project

17:20 - Why can't I just use jQuery?

* Vanilla JS contains all of jQuery's available DOM APIs 
* Frameworks provide structure
* Organizes code for big projects

## Links
* [Syntax 039: Is jQuery Dead?](https://syntax.fm/show/039/is-jquery-dead)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",babc8ef7753e0f1e96c7a2aace34fde97befb6183c323a22df89f5f839adae8a,hasty-treat-why-use-a-frontend-framework-at-all,/shows/129 - Frontend Frameworks.md,2023-10-16 20:06:58.314,2023-10-27 15:57:46.645,HASTY
syntax_podcast_show_00130,130,The VueJS Show (Scott teaches Wes),2019-03-27 13:00:00.675,https://traffic.libsyn.com/syntax/Syntax130.mp3,"
In this episode Wes and Scott talk about VueJS - what it is, how it compares to other frontend frameworks, and how to get the most out of it.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Clubhouse - Sponsor

Clubhouse is the first project management software that brings everyone together so that teams can focus on what matters: creating products that customers love. Clubhouse provides a perfect balance of simplicity and structure for better cross-functional collaboration. Check out [https://clubhouse.io/syntax](https://clubhouse.io/syntax) and get your first two months free. 

## Show Notes

2:22 - What's the deal with VueJS?

* Combines ideas from Angular 1, React and Blaze
* Ease of Angular 1
* App structure of React

8:02 - Components

* Template syntax is similar to handlebars
  * aka {{stuff}}

* v-bind:property
  * v-bind:property or simply :bind allows you to dynamically bind a value to a property

* Props
  * Props must be declared before they can be used in a template.

* Script tag
  * Where imports happen
  * Where props are defined, computed properties, action events and lifecycle

* Actions
  * `v-on:click=""doSomething""`
  * `@click=""doSomething""`
  * These will run a doSomething event defined in your script export via methods

* Lifecycle
  * How does data fetching work?
  
* CSS
  * Can be scoped to file by adding `<style scoped>` to your property

* Global Registration
  * You can register a global component and not have to import it

36:38 - Features

* CLI
  * Easy to use when creating new projects

* Animations
  * Baked in to core
  * A transition component wraps your code and just have a `v-if` on the element you are transitioning
  * There is also more intense javascript options via `v-on`

* Routing
  * 1st party router `vue-router` with support for 3rd party routers

* Global State
  * Vuex

45:57 - Ecosystem

* Nuxt — AKA Next.js for Vue
* Gridsome — AKA Gatsby for Vue
* Native?

## Links
* [Angular](https://angular.io/)
* [React](https://reactjs.org/)
* [Blaze](http://blazejs.org/)
* [What Hooks Mean for Vue](https://css-tricks.com/what-hooks-mean-for-vue/)
* [Nuxt.js](https://nuxtjs.org/)
* [Next.js](https://nextjs.org/)
* [Gridsome](https://gridsome.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [NativeScript](https://www.nativescript.org/)
* [Vue Native](https://vue-native.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Wes: [Modified Power Wheels](http://www.modifiedpowerwheels.com/)
* Scott: [Ezy Jeans by Uniqlo](https://www.uniqlo.com/us/en/men/jeans/ezy-jeans)

## Shameless Plugs
* Wes: [Node.js and React Scraper Tutorial](https://www.youtube.com/watch?v=rWc0xqroY4U&list=PLu8EoSxDXHP4xVFdNGakvzJ1OUQ6S_3l3)
* Scott: [Static Vue with Gridsome Coming Soon](https://www.leveluptutorials.com/pro)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",65ffc9da4cd65a10013476e91d7d247056e05d231e3c111f508df3a2cfc9c4c1,the-vuejs-show-scott-teaches-wes,/shows/130 - vue.md,2023-10-16 20:06:58.356,2023-10-27 15:57:46.694,TASTY
syntax_podcast_show_00131,131,Hasty Treat - Bike Shedding,2019-04-01 13:00:00.740,https://traffic.libsyn.com/syntax/Syntax131.mp3,"
In this Hasty Treat, Scott and Wes talk about bike shedding - issues that are hotly debated, but may not matter that much in the long run.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

3:03 - What is Bike Shedding? 

* Technical disputes over minor, marginal issues conducted while more serious ones are being overlooked. The implied image is of people arguing over what color to paint the bike shed while the house is not finished. 

4:39 - Tabs vs spaces

* Two spaces

5:50 - Single vs double quotes

* Single in JS, double in HTML

7:05 - Semicolons or not

* Semicolons

9:01 - Grouping/ordering CSS properties

* Wes: Format
* Scott: Alphabetical

12:35 - `var` vs `let` vs `const`

* Scott: `const` for life — `let` when needed
* Wes: `const` by default — change to `let` when needed

14:24 - Default vs named exports

* Use both
* Mix-n-match

15:58 - Should designers code?

* If interested, sure

17:58 - Which front-end framework

* Whichever one best suits your needs

19:30 - Vim/Emacs vs Atom/VS Code/Sublime

* VS Code

21:53 - Small perf wins

* Micro optimization often aren't needed

25:14 - Browser support

* If you're required to support it, then support it

25:47 - Block formatting

* Function block
* Else on a new line vs else after block

29:07 - Trailing comma

## Links
* [Law of Triviality](https://en.wikipedia.org/wiki/Law_of_triviality)
* [React](https://reactjs.org/)
* [Vue.js](https://jp.vuejs.org/index.html)
* [AngularJS](https://angularjs.org/)
* [Ember.js](https://emberjs.com/)
* [Vim](https://www.vim.org/)
* [Emacs](https://www.gnu.org/software/emacs/)
* [Atom](https://atom.io/)
* [Sublime](https://www.sublimetext.com/)
* [VS Code](https://code.visualstudio.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",4728be48c7c1e88560e1cc5d737e77d00da8bb422caf64536945f08812697bc1,hasty-treat-bike-shedding,/shows/131 - bike shedding.md,2023-10-16 20:06:58.390,2023-10-27 15:57:46.737,HASTY
syntax_podcast_show_00132,132,Potluck - Interview Qs × Headless CMS × React Hooks × Resume Design × Redux vs Context × More!,2019-04-03 13:00:00.815,https://traffic.libsyn.com/syntax/Syntax132.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - interview questions, headless CMSs, resume design, redux vs context, and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

2:21

* Q: Are there any tutorials you would recommend to learn more computer science related knowledge (algorithms, closures, etc.)?

5:12

* Q: Do you have any suggestions for picking a headless CMS?

8:55

* Q: Do you have any advice for someone in a customer service background seeking a more flexible job with remote work opportunities? Resources? Is this a realistic goal or a good way to approach my job search?

15:13

* Q: How much importance would you place in the design of a resume? Is it worth the cost?

21:09

* Q: With the new React Hooks and Context API, do we still need Redux?

25:37

* Q: If either of you could change anything about your personal tech stack, what would it be and why?

29:07

* Q: Do you prefer to use React's *defaultProps* or plain JS *default function parameters* to give your component's props some default values?

30:44

* Q: You guys chat CMS sometimes - why no love for Umbraco?

35:53

* Q: I'm ready for a new challenge, how do I break this to my employer?

38:16

* Q: What's the difference between `const add = (a, b) => { return a + b }` and `function add (a, b) { return a + b }`?

## Links

* [Udacity](https://www.udacity.com/)
* [Coursera](https://www.coursera.org/)
* [Contentful](https://www.contentful.com/)
* [Ghost](https://ghost.org/)
* [Prismic](https://prismic.io/)
* [Strapi](https://strapi.io/)
* [HeadlessCMS](https://headlesscms.org/)
* [Sanity](https://www.sanity.io/)
* [WordPress](https://wordpress.org/)
* [Drupal](https://www.drupal.org/)
* [Umbraco](https://umbraco.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [J.A. Henckels International 10-piece Capri Granitium Nonstick Cookware Set](https://www.costco.com/J.A.-Henckels-International-10-piece-Capri-Granitium-Nonstick-Cookware-Set.product.100397883.html)
* Wes: [IRWIN VISE-GRIP 2078300 Self-Adjusting Wire Stripper, 8""](https://amzn.to/2WlXRQQ)

## Shameless Plugs

* [Scott's Gridsome Series](https://LevelUpTutorials.com/pro)
* [Wes' YouTube](https://www.youtube.com/user/wesbos)

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c985d783f53c5b85411cc76aefd190900db0ebd9eac213ba145ae02a0acd623c,potluck-interview-qs-headless-cms-react-hooks-resume-design-redux-vs-context-more,/shows/132 - potluck.md,2023-10-16 20:06:58.427,2023-10-27 15:57:46.787,TASTY
syntax_podcast_show_00133,133,Hasty Treat - Tips For A Good Portfolio,2019-04-08 13:00:00.344,https://traffic.libsyn.com/syntax/Syntax133.mp3,"
In this Hasty Treat, Scott and Wes talk about portfolios - best practices, organization, and how to use what people are looking for to stand out in the right ways.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:21 - Include screenshots (or don't). Often clients can ruin a site after you hand it off.

6:19 - Include list of technologies used

7:25 - Include list of problems solved

7:48 - Use company logos (if allowed)

9:13 - Show mockups on modern laptops/phones

10:04 - Show your work (mockups, sketches, layouts, etc.)

11:39 - Keep it updated

12:10 - You don't need a million examples — max out somewhere around five. People just need a few quick examples of the type of stuff you work on.

14:11 - What about using side projects and tutorials?

16:28 - Dribbble, Github and Instagram are all valid portfolio options as well — often that is the first place people look. Don't ignore these.

* A hot stuff profile on any of these will make you more hireable. Make sure it's creative and looks nice.

## Links
* [Wordpress](https://wordpress.com/)
* [Google](https://www.google.com/)
* [Ford](https://www.ford.com/)
* [Air Canada](https://www.aircanada.com/ca/en/aco/home.html)
* [Dribbble](https://dribbble.com/)
* [Github](https://github.com/)
* [Instagram](https://www.instagram.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",cea25b2cf0d22e9ed5d04ef38d23ba5579b1480d5b25e961debc7a01714f29d0,hasty-treat-tips-for-a-good-portfolio,/shows/133 - portfolios.md,2023-10-16 20:06:58.464,2023-10-27 15:57:46.827,HASTY
syntax_podcast_show_00134,134,Syntax Live React Edition,2019-04-10 13:00:00.966,https://traffic.libsyn.com/syntax/Syntax134.mp3,"
It's another live episode of Syntax in which Wes and Scott do Hook'd on Hooks, Who's Snackin' on React, Stump'd, Unpopular Opinions, Q & Eh, and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## The Armoury - Sponsor

The Armoury is a men's clothing and accessories retailer that provides some of the highest quality clothing you can buy. Designed for those of you who want the highest quality clothing that feels great and will last forever. Buy less, buy better. Follow them on Instagram [@thearmourynyc](https://www.instagram.com/thearmourynyc/) and check out their website [TheArmoury.com](https://thearmoury.com).

## Show Notes

6:54 - Who's Snackin' On React

Guess which of these websites have their homepage partially or fully built in React?

* [EltonJohn.com](https://www.eltonjohn.com/) or [ArianaGrande.com](https://www.arianagrande.com/)?
* [Ferrari.com](http://ferrari.com/) or [Lamborghini.com](http://lamborghini.com/)?
* [Starbucks.com](https://app.starbucks.com/) or  [Dunkindonuts.com](http://dunkindonuts.com/)?
* [WayFair.com](http://wayfair.com) or [Ikea.com](http://ikea.com)?
* [Walgreens.com](https://www.walgreens.com/) or [Cvs.com](https://www.cvs.com/)?

10:55 - Hook'd on Hooks

* Wes:
  * useSocket
  * useStaticQuery (gatsby)
  * useKeyPress

* Scott
  * useLocalStorage
  * useClickOutside
  * useMeasure
  * useGesture

17:47 - This, That, Both, or Neither?

* **Gutenborg:** A WordPress GUI plugin for creating react-based gutenberg blocks, or a 90's budget TV show about Cyborgs who read?
* **Nashorn:** A Java based JavaScript engine developed by Oracle, or a popular rock climbing spot in Portland?
* **Easy Peasy:** A React state library, or children's spoon set?
* **Use Boxmen:** A hooks library that gets box model dimension, or a puzzle-based strategy game for children?
* **Toggs:** A lightweight styleable toggle component, or rain resistant outdoor gear?
* **Landwind:** A set of React components for using the Tailwinds CSS Library, or a Chinese Knock-off Land Rover SUV?
* **Freeflow:** A redux-like state management library built on state, context and hooks, or a California-based hot tub company?
* **Ubergrippen:** A popular rock climbing spot in Denver, or a client-side video stabilization framework built on the filereader API?

26:22 - Tag Team Coding React

* Fetch data from the dad jokes API
* Show a loading indicator
* Have a button to fetch a new joke

36:24 - Stump'd

* What is a react PureComponent for?
* Why might you use a callback with setState?
* How would you reverse an array without mutating the original array?
* Can you explain what a ""downtown job"" is?
* When would you use useReducer?
* What makes useLayoutEffect different from useEffect?
* What propType would you use for an object that contains a number and a string

43:11 - Unpopular Opinions. Overrated, Underrated?

* Our own unpopular opinions
  * Scott: React devs like to make things harder than they need to be.
* [Dan Abramov](https://twitter.com/dan_abramov/status/1109461037391187968)
* [Ryan Florence](https://twitter.com/ryanflorence/status/1109513902721634304)
* [Sebastian Markbage](https://twitter.com/sebmarkbage/status/1109481482421067776)
* [Jared Palmer](https://twitter.com/jaredpalmer/status/1109504427562545153)
* [Sean Thomas Larkin](https://twitter.com/TheLarkInn/status/1109516791565303808)
* [Sergey Ryzhov](https://twitter.com/latviancoder/status/1109465342215114752)
* [Sophie Alpert](https://twitter.com/sophiebits/status/1109581621680730113)
* [Parker McMullin](https://twitter.com/_googlemac/status/1109461529055756288)
* Vue does it better _____

52:45 - Q + EH with Wes and Scott

* What where the first apps you worked on?
* What React problem stumped you for the longest time?
* What's your most expensive mistake?
* Do we need classes in Javascript?
* How do you explain what you do to your mom?
* How do you explain React?
* What made you start wanting to code?
* What's the hackiest thing you've ever done?
* Where do you see yourselves in 10 years? 

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",fb74a98ef0012f44564b60558a7fe38949c2aadc9afe5867c409465808d3e681,syntax-live-react-edition,/shows/134 - live.md,2023-10-16 20:06:58.503,2023-10-27 15:57:46.882,TASTY
syntax_podcast_show_00135,135,Hasty Treat - Cranky Developers,2019-04-15 13:00:00.976,https://traffic.libsyn.com/syntax/Syntax135.mp3,"
In this Hasty Treat, Scott and Wes talk about cranky developers — those devs who never seem happy about anything, always mad about tech choices, and constantly writing off any new tech as simply a ""fad"" or unnecessary. 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:20 - How to deal with cranky devs

* Many experienced developers prefer older, stable technology for a reason. They have been through it before. 

7:14 - Questions to ask when considering new tech:

* Is it better for the product?
* Is it better for the users?
* Is it better for the business?
* Is it better for the developer?

16:39 - How to convince them:

* Proof of concept - show them it's better.

18:28 - Things to acknowledge:

* There are risks in changing technologies.
* There are costs - training, tooling, hosting.

21:20 - Some people are not interested in improving themselves

* They got the job they want and are short sighted about the future.
* You can appeal to management about making progressive choices.
* If management isn't interested, you should look for a new job.

## Links
* [Sass](https://sass-lang.com/)
* [Backbone](https://backbonejs.org/)
* [Babel](https://babeljs.io/)
* [Gulp Babel](https://github.com/babel/gulp-babel)
* [ES6](https://es6.io/)
* [React for Beginners](https://reactforbeginners.com/)
* [Missive](https://missiveapp.com/)
* [Swix](https://www.swixsport.com/) --> [Getting Closure on Hooks](https://youtu.be/Wt4kuspJIxY?t=3184)
* [React](https://reactjs.org/)
* [Flux](https://justgetflux.com/)
* [Glamorous](https://glamorous.rocks/)
* [PayPal](https://www.paypal.com/)
* [GraphCool](https://www.graph.cool/)
* [Facebook](https://www.facebook.com/)
* [Netflix](https://www.netflix.com/)
* [MJML](https://mjml.io/)
* [Juice](https://github.com/Automattic/juice)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",dd65464e31d4518c6cebb58b7a72ac942bb685f98fdab14c325b95c14ed3fdaa,hasty-treat-cranky-developers,/shows/135 - cranky devs.md,2023-10-16 20:06:58.547,2023-10-27 15:57:46.931,HASTY
syntax_podcast_show_00136,136,9 Ways to Stay Sane While Working Remotely,2019-04-17 13:00:00.635,https://traffic.libsyn.com/syntax/Syntax136.mp3,"
In this episode of Syntax, Scott and Wes talk about working remotely — problems, challenges, and how to keep yourself sane, productive and efficient.

## LogRocket - Sponsor
[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

4:34 - Find your spots

* Coffee shops
* Cafes
* Library

7:40 - Deal with Distractions

* Log out of Twitter/Facebook/Instagram
* Delete Apps — only use the browser
* Put phone and computer on ""do not disturb""
* Focus App

11:33 - Prioritize your tasks

* Drifting is possible when it isn't clear what you need to do
* If you don't have someone telling you what to do, it can be hard to get started
* Todo lists

17:15 - Make time to be social

* Go to meet ups
* Chat in Slack or Discord rooms
* Talk to people at work spaces

21:48 - Get fresh air

* Go for a walk
* Open the windows

24:03 - Get moving

* Hit the gym
* Do push-ups in your office

28:09 - Have a separate work space

* Designated office
* Don't work from the couch with the TV on
* Clean your damn office 😂

38:16 - Act like you are going to work

* Dress well
* Fix up, look sharp - get yourself ready to go

40:44 - Take Breaks (not too many, not too long)

* Some people like the Pomodoro Technique
* Take a lunch break away from your computer
* Don't make a break longer than 15 minutes or so

## Links
* [Focus](https://heyfocus.com/)
* [Discord](https://discordapp.com/)
* [Todoist](https://todoist.com/)
* [Getting Things Done](https://www.amazon.com/Getting-Things-Done-Stress-Free-Productivity/dp/0143126563/)
* [Eat That Frog](https://www.amazon.com/Eat-That-Frog-Great-Procrastinating/dp/162656941X/)
* [The Life-Changing Magic of Tidying Up: The Japanese Art of Decluttering and Organizing](https://www.amazon.com/Life-Changing-Magic-Tidying-Decluttering-Organizing/dp/1607747308)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Doug DeMuro's YouTube Channel](https://www.youtube.com/channel/UCsqjHFMB_JYTaEnf_vmTNqg)
* Wes: [Yeti Rambler 14 oz.](https://www.amazon.com/dp/B07FPWVVTN/)

## Shameless Plugs
* [Scott's Gridsome Course](https://www.leveluptutorials.com/store/lut-dd033)
* [Wes' YouTube Channel](https://www.youtube.com/user/wesbos)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",89fd0050f36a213304b63366ca67510990210c75335b8df42ab3cbf100c4d8f1,9-ways-to-stay-sane-while-working-remotely,/shows/136 - working remotely.md,2023-10-16 20:06:58.584,2023-10-27 15:57:46.974,TASTY
syntax_podcast_show_00137,137,Hasty Treat - CSS Frameworks,2019-04-22 13:00:00.358,https://traffic.libsyn.com/syntax/Syntax137.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS frameworks - what they are, why they're important, and when (and when not) to use them.

## Stackbit - Sponsor

Build modern JAMStack websites in minutes. Stackbit lets you combine any theme, site generator and CMS without complicated integrations. Join the beta today by visiting [stackbit.com/syntaxfm](https://www.stackbit.com/syntaxfm/).

## Show Notes

 2:52 - What is a CSS framework?

* Pre-written CSS that takes over the basic styling of your app
* Can include just utilities or lots of styles (minimal to overboard)
* Twitter Bootstrap and Zurb Foundation were the pioneers
* Follow different CSS styles from ""functional CSS"" to utility-first to BEM

7:33 - Functional (aka Utility) based

* Tachyons
* Tailwind

9:59 - Preprocessor based

* Bootstrap

11:33 - Styled Components based

* Rebass
* Styled Systems
* Facepaint

15:50 - Why use one?

* Makes styling FAST
* Makes hard things easy
* Some, like Bootstrap, have themes
* Keeps your own CSS minimal and organized
* Built on an established system
* Lots of people use the same CSS

19:22 - Why not use one?

* CSS class hell
* Stops you from learning how CSS works
* Size (not all have this problem)
* Brotli, Purify CSS
* You will be overriding a ton of it
* You like exclusively writing the code you need and nothing else


## Links
* [Jamstack](https://jamstack.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Hugo](https://gohugo.io/)
* [Jekyll](https://jekyllrb.com/)
* [Bootstrap](https://getbootstrap.com/)
* [Foundation](https://foundation.zurb.com/)
* [Tailwind CSS](https://tailwindcss.com)
* [Tachyons](https://tachyons.io/)
* [Styled System](https://github.com/styled-system/styled-system)
* [REBASS](https://rebassjs.org/)
* [Facepaint](https://github.com/emotion-js/facepaint)
* [Brotli](https://github.com/google/brotli)
* [Purify CSS](https://github.com/purifycss/purifycss)
* [Cloudflare](https://www.cloudflare.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",83796f57a32c4382d33f96e0d7eca94ed040a1a03195f842e3db97c74e44a1d2,hasty-treat-css-frameworks,/shows/137 - css frameworks.md,2023-10-16 20:06:58.623,2023-10-27 15:57:47.016,HASTY
syntax_podcast_show_00138,138,"What's New in Web Development",2019-04-24 13:00:00.230,https://traffic.libsyn.com/syntax/Syntax138.mp3,"
In this episode of Syntax, Scott and Wes talk about what's new in web development: new promise static methods, new CSS functions, PWAs and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Clubhouse - Sponsor

Clubhouse is the first project management software that brings everyone together so that teams can focus on what matters: creating products that customers love. Clubhouse provides a perfect balance of simplicity and structure for better cross-functional collaboration. Check out [https://clubhouse.io/syntaxpodcast](https://clubhouse.io/syntaxpodcast) and get your first two months free.

## Show Notes

5:38 - New Promise static methods

* `Promise.all`
* `Promise.race()`
* `Promise.allSettled()`
* `Promise.any()`

10:16 - Lazy loading images

* [Addy Osmani's Lazy-Loading blog post](https://addyosmani.com/blog/lazy-loading/)

14:25 CSS Houdini aka JS in CSS

* * [CSS Houdini Experiments](https://css-houdini.rocks/)

20:32 - Subgrid

* [Syntax 109: Hasty Treat - CSS Grid Level 2 aka Subgrid](https://syntax.fm/show/109/hasty-treat-css-grid-level-2-aka-subgrid)
* Subgrid is coming to Firefox - [Jen Simmons](https://twitter.com/jensimmons/status/1095048538311061504)
* [Bugzilla](https://bugzilla.mozilla.org/show_bug.cgi?id=1240834)

24:31 - Native modules in browser

* `type=""module""`
* dynamic `import()`

27:08 - Node Native Modules update

* package.json will now have a type entry where
* [NodeJS - Plan For New Modules Implementation](https://github.com/nodejs/modules/blob/master/doc/plan-for-new-modules-implementation.md)
* [New ESM Implementation](https://github.com/nodejs/node/pull/26745/commits/b1094dbe19f31f7a69ad16d193748f610b159073)

29:17 - PWA install app and Google PlayStore

* Already shipped in Chrome
* Java API that communicates through services with Chrome
* Trusted Web Activity aka TWA
* All content in TWAs must comply with Play store policy including policies for payments in-app purchases and other digital goods
* Already existing TWAs include Twitter Lite, Google Maps Go, Instagram Lite
* Passing the PWA Criteria
* Performance Score with a minimum of 80/100, tested with [Lighthouse](https://developers.google.com/web/tools/lighthouse/)
* All current Google Play Store rules

35:49 - CSS Scroll Snap

* In many browsers already
* `scroll-padding`

38:17 - Aspect Ratio Unit

* [Designing An Aspect Ratio Unit For CSS](https://www.smashingmagazine.com/2019/03/aspect-ratio-unit-css/)

39:32 - CSS nesting

* Disallows cross-domain cookies unless on the same domain/subdomain

## Links
* [Gatsby](https://www.gatsbyjs.org/)
* [Promise.allSettled()](https://github.com/tc39/proposal-promise-allSettled)
* [Promise.any()](https://addyosmani.com/blog/lazy-loading/)
* [Apollo](https://www.apollographql.com/)
* [CodePen](https://codepen.io/)
* [UC Browser](https://www.ucweb.com/)
* [Parcel](https://parceljs.org/)
* [Node.js](https://nodejs.org/ja/)
* [Myles Borins' Twitter](https://twitter.com/mylesborins)
* [Twitter Lite](https://play.google.com/store/apps/details?id=com.twitter.android.lite&hl=en_US)
* [Google Maps Go](https://play.google.com/store/apps/details?id=com.google.android.apps.mapslite)
* [Instagram Lite](https://play.google.com/store/apps/details?id=com.instagram.lite&hl=en_US)
* [Lighthouse](https://developers.google.com/web/tools/lighthouse/)
* [Opera](https://www.opera.com/)
* [Can I Use - modules](https://caniuse.com/#search=modules)
* [Apple’s ITP](https://www.tune.com/blog/what-apples-intelligent-tracking-prevention-2-0-itp-means-for-performance-marketing/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Finding Drago](https://www.abc.net.au/radio/programs/finding-drago/)
* Wes: [The Punk Rock MBA](https://www.youtube.com/channel/UCjewxGh1Gx5i5Uzxn0v-TPw)

## Shameless Plugs
* [Scott's Gridsome Course](https://www.leveluptutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",88e2ca945b95551f5469ea480dc9230b605d494ceb382028a6d403fabcf7066f,what-s-new-in-web-development,/shows/138 - new in web dev.md,2023-10-16 20:06:58.673,2023-10-27 15:57:47.072,TASTY
syntax_podcast_show_00139,139,Hasty Treat - AMA - Money x Investments x Online Presence x More!,2019-04-29 16:00:00.732,https://traffic.libsyn.com/syntax/Syntax139.mp3,"
In this special Hasty Treat, Scott and Wes answer your questions about money, investments, online presence and more!

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [https://logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:33 - Besides coding/teaching, do you have any another source of income (stocks, bonds, crypto, etc.)?

9:03 - How do I build my online presence?

13:05 - What's your favorite tasty treat (as in actual food)?

16:33 - Wes, lets talk about the + symbol that you use to start the prompt for Cobalt2 — whats up with that?

18:41 - How do you get out of a rut?

## Links
* [Canadian Couch Potato](https://canadiancouchpotato.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c79a1b0c9378eb058a47882fccfe8e351e67748a923a08830dd44f71d54fbb9f,hasty-treat-ama-money-x-investments-x-online-presence-x-more,/shows/139 - ama.md,2023-10-16 20:06:58.709,2023-10-27 15:57:47.119,HASTY
syntax_podcast_show_00140,140,Potluck - Media Queries × NPM Vulnerabilities × Fullstack JS vs JAMstack × Web VR/AR × Switching Jobs × More!,2019-05-01 16:00:00.977,https://traffic.libsyn.com/syntax/Syntax140.mp3,"
It's another potluck episode in which Wes and Scott answer your questions! This month - Media Queries, NPM Vulnerabilities, Web VR and AR, Fullstack JS vs JAMstack for freelancers, switching jobs, and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

2:46

* Q: I recently started a static site so I want as much of the site as possible to change layout with just CSS for responsive design. I am comfortable with media queries but find often times the design is very different between sizes. It is easy to tame the complexity of repeated data for the different component views keeping everything in sync but is it good practice to put two completely different component level views in a single HTML file? Does the repeated data in the static HTML have any effect on SEO?

7:08

* Q: How should a mid developer know when its time to leave the current company? Is tech stack (e.g frameworkless) a decent reason even though he/she is happy at the place, but feels like they are not growing enough?

11:19

* Q: Should I worry about the critical vulnerabilities when installing an NPM package?

14:40

I specifically use an external NPM package called [npm-check-updates](https://www.npmjs.com/package/npm-check-updates) and then I just run `ncu`...

15:06

* Q: I've had the idea for styling one site two different ways (professional/artistic) and giving visitors a button to toggle between the two. Too gimmicky? Secondary: how did you pick your brand colors?

20:19

* Q: Any SICK TIPS on career change? I'm a full-time employee with two kids and a lovely wife, who wants a fulfilling career. I throw as much time in as I can to study, but I feel like it isn't enough to apply for jobs.

24:01

* Q: Within the next two years, how well do you think WebVR and WebXR technologies would fit within mainstream web development (think A-Frame, SparkAR, React 360 in normal websites and applications)?

30:39

* Q: Should I learn Fullstack JS or JAMstack for freelancing?

35:34

* Q: Is front-end development dying?

37:30

* Q: How do you deal with CSS-in-JS when you have one-off stuff, or coupled components/selectors like a [CSS] grid container and a grid child (think `grid-area`)? CSS-in-JS feels very verbose for this use case.

42:07

* Q: Scott always talks about Meteor. I thinks its really cool too. What's the future of it and why didn't it take off? It seems to have slowed down. They seem to have moved on to other projects like GraphQL stuff.

## Links
* [Influx](https://www.influxtechnology.com/)
* [WebVR](https://webvr.info/)
* [WebXR](https://www.w3.org/TR/webxr/)
* [Google Maps will use a core Waze feature to improve public transit](https://news.yahoo.com/google-maps-core-waze-feature-223508153.html)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [The Making of a Manager](https://amzn.to/2Dq9WNG)
* Wes: [DeWalt Oscillating Tool](https://amzn.to/2Iz7jNQ)

## Shameless Plugs
* Wes: [Wes' Courses](https://wesbos.com/courses) — use coupon code ""syntax"" at checkout and get and extra $10 off.
* Scott: [Animating React](https://leveluptutorials.com/pro)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",35e91f806b149bb7417c28968045a3ee0060f40344d42c1e2b4a9348209d0df1,potluck-media-queries-npm-vulnerabilities-fullstack-js-vs-jamstack-web-vr-ar-switching-jobs-more,/shows/140 - potluck.md,2023-10-16 20:06:58.750,2023-10-27 15:57:47.164,TASTY
syntax_podcast_show_00141,141,Hasty Treat - Async + Await Error Handling Strategies,2019-05-06 13:00:00.789,https://traffic.libsyn.com/syntax/Syntax141.mp3,"
In this Hasty Treat, Scott and Wes discuss different error handling strategies.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:07 - Try / Catch

* This can be done at call time or inside the function

4:10 - Higher Order Function

* Makes a function that returns a new function which in turn calls your original function (but with a `.catch` chained on)

7:46 - Handle the error when you call it

* Use async/await but chain a `.catch` onto the end 

9:03 - Node.js Unhandled Rejection Event

* `process.on('unhandledRejectionEvent', callback)`

9:40 - What to do with those errors

* Send to error tracking service
* Possible to give the user a reference number
* Display good error text to user

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e685f455070ea8ce85429d7c2b026f5874fe3dbf47c0e394558e26082f48eae7,hasty-treat-async-await-error-handling-strategies,/shows/141 - async await.md,2023-10-16 20:06:58.787,2023-10-27 15:57:47.204,HASTY
syntax_podcast_show_00142,142,"Travis Neilson on Skills Gap, Design, Focus and Working at Google",2019-05-08 13:00:00.042,https://traffic.libsyn.com/syntax/Syntax142.mp3,"
In this episode of Syntax, Scott and Wes talk to Travis Neilson about his career at Google, the challenges he faced, how to choose projects tips for devs wanting to get better at design, and more.

## Stackbit - Sponsor

Build modern JAMStack websites in minutes. Stackbit lets you combine any theme, site generator and CMS without complicated integrations. Join the beta today by visiting [stackbit.com/syntaxfm](https://www.stackbit.com/syntaxfm/).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get up and running by typing `npm i -g @sanity/cli && sanity init` in your command line. Get an awesome supercharged free developer plan on [sanity.io/syntax](https://sanity.io/syntax?utm_source=syntax-fm&utm_campaign=syntax1).

## Guests

* [Travis Neilson](https://twitter.com/travisneilson)

## Show Notes

2:43 - Career path

- On ambitions and where it all started

23:15 - Being all in

- On how to choose your next project

33:31 - Working at Google

- On the day-to-day at Google, the challenges of a big team, and constraints

43:23 - Design tips for developers

- Advice for devs who want to get better at design but are struggling
- Thoughts on CSS frameworks
- The one thing devs often get wrong about design

## Links

- [Travis Neilson's Website](http://travisneilson.com/)
- [Travis Neilson's Podcasts](http://travisneilson.com/podcasts/)
- [Helvetica — Gary Hustwit](https://www.amazon.com/Helvetica-David-Carson/dp/B079N3Y4C6)
- [How one typeface took over movie posters](https://www.youtube.com/watch?v=yI4shGV1EsM)
- [Just My Type: A Book About Fonts](https://www.amazon.com/Just-My-Type-About-Fonts/dp/1592407463)
- [Work-Life Balance is a Joke](https://us6.campaign-archive.com/?u=2abae111d44df144b3b3986bc&id=43066ab0cb&e=%5BUNIQID%5D)

## ××× SIIIIICK ××× PIIIICKS ×××

- Travis: 
  * [Cults and Extreme Belief](https://www.hulu.com/series/cults-and-extreme-belief-732b89b1-7af0-4bed-9a28-6ca51d2b1e69)
  * [Google Method Podcast](https://design.google/library/method-podcast-episode-1/)
- Scott: [Sony Noise Canceling Headphones WH1000XM3](https://amzn.to/2Gqc7Tt)
- Wes: [Little People Big Dreams Book Series](https://amzn.to/2DfA0Lk)

## Shameless Plugs
* [Wes' Courses](https://wesbos.com/courses) & [Wes' Youtube](https://www.youtube.com/user/wesbos)
* [Animating React](https://www.leveluptutorials.com/tutorials/animating-react)
* [How to Use Adobe XD](https://leveluptutorials.com/pro)

## Tweet us your tasty treats!

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",606ec2987aebcebc187225f93e209f638cfa3fc4f518d403ca3b6682798bf093,travis-neilson-on-skills-gap-design-focus-and-working-at-google,/shows/142 - travis neilson.md,2023-10-16 20:06:58.829,2023-10-27 15:57:47.248,TASTY
syntax_podcast_show_00143,143,Hasty Treat - The SHADOW DOM,2019-05-13 13:00:00.187,https://traffic.libsyn.com/syntax/Syntax143.mp3,"
In this Hasty Treat, Scott and Wes talk about Shadow Doms - what they are, the individual pieces involved with them, why they're important, and how to get started using them.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:41

* What is the shadow DOM?

4:25

* What elements are shadow DOM?
 
5:47

* Styling shadow DOM elements

8:54

* Creating your own

9:22

* Frameworks

## Links
* [Using shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)
* [Shadow DOM v1: Self-Contained Web Components](https://developers.google.com/web/fundamentals/web-components/shadowdom?hl=en)
* [Polymer](https://www.polymer-project.org/)
* [Svelte 3](https://github.com/sveltejs/svelte/projects/3)
* [Wildhoney - ReactShadow](https://github.com/Wildhoney/ReactShadow)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5d778e5a1e72744ec88a48364a162e19ced13cd7cc0b38c23e6374a1bad3753a,hasty-treat-the-shadow-dom,/shows/143 - shadow dom.md,2023-10-16 20:06:58.862,2023-10-27 15:57:47.436,HASTY
syntax_podcast_show_00144,144,Side Hustles with Courtland Allen from Indie Hackers,2019-05-15 13:00:00.608,https://traffic.libsyn.com/syntax/Syntax144.mp3,"
In this episode of Syntax, Scott and Wes talk all about side hustles with special guest Courtland Allen, from Indie Hackers! They talk about the story behind Indie Hackers, how to start your own side hustle, where to find ideas, listener questions, and more.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [LogRocket](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [Freshbooks](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests

* [Courtland Allen](https://twitter.com/csallen)

## Show Notes

1:05 - What's the back story behind Indie Hackers? 

5:30 - What is a side hustle? 

11:21 - How do you validate your idea?

13:15 - What are some different types of side hustles?

31:55 - What about people who don't like marketing?

33:57 - What are some important pieces of side hustles? 

39:04 - How do you sell a business?

42:40 - Listener Questions:

* Q: How do you stop the side hustle from affecting your main job in regards to things like overtime, sleep and commitment?
* Q: Should you frame yourself as a one-man-band or as a company? 
* Q: Have you heard stories of people living in cheap places, making bank? Are there any white whales you have been chasing to interview?

## Links
* [Carrd](https://carrd.co/)
* [Balsamiq Mockups](https://balsamiq.com/)
* [Flickity](https://flickity.metafizzy.co/)
* [Nomad List](https://nomadlist.com/)
* [Evan You](https://evanyou.me/)
* [Evan You Patreon](https://www.patreon.com/evanyou)
* [Park.io](https://park.io/)
* [Making $125,000 a Month as a Solo Founder with Mike Carson of Park.io](https://www.indiehackers.com/podcast/034-mike-carson-of-park-io)
* [Patreon](https://www.patreon.com/)
* [Drift](https://www.drift.com/)
* [Stripe](https://stripe.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Courtland:
  * [Post-it Notes](https://www.post-it.com/3M/en_US/post-it/)
  * [Poor Charlie's Almanack: The Wit and Wisdom of Charles T. Munger](https://www.amazon.com/Poor-Charlies-Almanack-Charles-Expanded/dp/1578645018)
* Scott: [Akimbo](https://www.akimbo.me/)
* Wes: [Elastic Wallet](https://www.amazon.com/s?k=elastic+wallets)

## Courtland's Startup Validation Checklist
* [Validation Checklist](https://docs.google.com/document/d/1e-pmkZCM96V_3FhwYFK5ubY8l52YNk9j4i25HWt6oyY/edit)

## Shameless Plugs
* Courtland: [IndieHackers Podcast](https://www.indiehackers.com/podcast)
* Scott: [Animating React](https://www.leveluptutorials.com/tutorials/animating-react)
* Wes: [CSS Grid Course](https://cssgrid.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bacdbea10c2fc0b60f2951e930d64a277f8cd1767d0c91d05d3f67c74eba8cc0,side-hustles-with-courtland-allen-from-indie-hackers,/shows/144 - side hustles.md,2023-10-16 20:06:58.896,2023-10-27 15:57:47.479,TASTY
syntax_podcast_show_00145,145,"Hasty Treat - AMA - Our Wives, Careers Outside Tech, and Favorites",2019-05-20 13:00:00.178,https://traffic.libsyn.com/syntax/Syntax145.mp3,"
In this Hasty Treat, Scott and Wes are back with another AMA. This time they talk about their spouses, careers outside of tech, lots of favorites (movies, colors, clothes), and more!

## Clubhouse - Sponsor

Clubhouse is the first project management software that brings everyone together so that teams can focus on what matters: creating products that customers love. Clubhouse provides a perfect balance of simplicity and structure for better cross-functional collaboration. Check out [https://clubhouse.io/syntaxpodcast](https://clubhouse.io/syntaxpodcast) and get your first two months free.

## Show Notes

2:58 - What do your wives do?

6:40 - If you had to choose a different career, what would you do?

If you started learning another (programming) language today, what would it be?

11:50 - Favorites (e.g. colors, movies, brands, etc.)

18:08 - Who inspires you? 

26:19 - What’s your ratio of client work, learning new tech, and teaching via your courses, talks or Syntax.fm? You guys seem awfully busy, and it’s making me feel kinda lazy.

## Links
* [Pigeonhole Live](https://pigeonhole.at/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",37879bd1b881ee4eeb259c71550857d4ca17b6131a40d2ab67994ef992288a27,hasty-treat-ama-our-wives-careers-outside-tech-and-favorites,/shows/145 - ama.md,2023-10-16 20:06:58.945,2023-10-27 15:57:47.597,HASTY
syntax_podcast_show_00146,146,CSS the 😎😎😎 Cool Parts,2019-05-22 13:00:00.178,https://traffic.libsyn.com/syntax/Syntax146.mp3,"
In this episode Wes and Scott talk about the cool parts of CSS! From filters to variables, here are some cool (and amazing) things you can do with CSS in 2019.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

2:28 - Clip path

6:35 - Filters

16:24 - Background mix blend mode

21:47 - Border images

25:46 - Multiple background images

27:47 - Multiple background gradients

28:25 - Radial gradients

29:06 - Multiple box-shadows

34:30 - HEX + Alpha

40:41 - Viewport units

42:17 - Calc

44:32 - CSS variables

47:44 - Text decoration

## Links
* [Can I use](https://caniuse.com/)
* [Clippy - CSS clip generator](https://bennettfeely.com/clippy/)
* [CSS Filters](https://developer.mozilla.org/en-US/docs/Web/CSS/filter)
* [Tweet: Using `mix-blend-mode:multiply`](https://twitter.com/wesbos/status/717052613934649344)
* [CSS blend mode generator](https://www.w3schools.com/cssref/playit.asp?filename=playcss_background-blend-mode&preval=multiply)
* [Lea Verou](http://lea.verou.me/)
* [Codepen - Scott's digital text animations](https://codepen.io/stolinski/pen/myQrEr)
* [Steve Schoger](https://www.steveschoger.com/)
* [Mother-effing HSL](https://mothereffinghsl.com/)
* [Diana Adrianne](http://diana-adrianne.com/purecss-francine/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Solar string lights](https://amzn.to/2LsIntR)
* Wes: [Digital Calipers](https://amzn.to/2JkucEn)

## Shameless Plugs
* Wes: [Wes' Courses](https://wesbos.com/courses) — use coupon code ""syntax"" at checkout and get and extra $10 off.
* Scott: [Animating React](https://leveluptutorials.com/pro)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",7d2c7a022ae45d9d4f0bbe3d182bd64496859da2d840634e70c0fa5f6c38843a,css-the-cool-parts,/shows/146 - CSS cool parts.md,2023-10-16 20:06:58.985,2023-10-27 15:57:47.649,TASTY
syntax_podcast_show_00147,147,Hasty Treat - Knowing Your Weaknesses,2019-05-27 13:00:00.031,https://traffic.libsyn.com/syntax/Syntax147.mp3,"
In this Hasty Treat, Scott and Wes talk about how to identify and work on your weaknesses.

## Logrocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [LogRocket](https://logrocket.com/syntax).

## Show Notes

2:45 - Why care about weaknesses?

* If we avoid the things we're afraid of or bad at we'll always grow in lopsided ways

7:32 - As a developer

* What skills / languages are you not good at or afraid of?

14:06 - As an employee

* Communication
* Company and personal goals
* Efficiency
* Compatibility

16:54 - As a human

* How you treat people
* Sharing your time
* What you're neglecting
* Your living space

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6ab3e3de1d90b8af8bff11f8d320278329be17304aa1becd9941fadbe68bacb6,hasty-treat-knowing-your-weaknesses,/shows/147 - weaknesses.md,2023-10-16 20:06:59.040,2023-10-27 15:57:47.692,HASTY
syntax_podcast_show_00148,148,Potluck - CSS × Angular × Dev job preparation × Svelte × File organization × Gear × More!,2019-05-29 13:00:00.777,https://traffic.libsyn.com/syntax/Syntax148.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about CSS, Angular, Svelte, dev job preparation and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [Sanity](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [Sanity](https://www.sanity.io/syntax).

## Show Notes

3:23 - Q: How big is too big for state? I have an object of around 1000 items which will be used in a search box on the frontend of my site, but the list of items won't be updated very often. What is the most efficient way to store these items and deliver them to the browser? Would you use state, a JSON object, a MongoDB document or some other way I haven't thought of? 

7:17 - Q: How much do I need to know before I start applying for dev jobs?

9:26 - Q: Do you folks have any opinions on Skeleton loaders, and any thoughts on how best to implement them? At my day job we've recently implemented skeleton loaders in a way that inherits the parent styles. Would love to know if there's any best practices for this or ways we can improve our setup.

13:01 - Q: Do you think we still need to use CSS resets like normalize and sanitizer?

14:56 - Q: Scott, can you tell the story of how you landed an interview for a job in Japan? I am moving to Japan next year and wondering how that opportunity arose for you.

20:04 - Q: Do you guys have an opinion on angular good or bad? Or is it that you're more comfortable and have used React and Vue more often, so they're largely at the center of any framework discussions?

22:54 - Q: Could you talk about naming and structuring files/folders in your applications? How do you name components and folders? Do you follow some sort of path of how to structure files in a web app?

29:01 - Q: Do you think that Node is almost too powerful to handle some of the simpler tasks (a site that just needs a contact form for instance), or am I just missing some very simple configuration? It seems like other languages, such as PHP, might be better suited for some of these simple tasks and Node is really just meant for larger scale application? I guess what my question really boils down to is, for a freelancer, I understand that I need to have my hands in a lot of different tech stacks, but should I really dive in on PHP (or something else) to handle some of these simpler features a client might need?

33:24 - Q: What do you guys think about Svelte? Before everything goes WASM will Svelte be the future of web programming?

37:24 - Q: What smart phones and laptops do you use for work? (specific model and why)

42:38 - Q: Should I apply for other jobs even if my contract might get renewed? Should I feel loyal to a company?

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [DaVinci Resolve 16](https://www.blackmagicdesign.com/products/davinciresolve/)
* Wes: [Affinity Photo](https://affinity.serif.com/en-us/photo/)

## Shameless Plugs
* Wes: [Wes' Courses](https://wesbos.com/courses) — use coupon code ""syntax"" at checkout and get and extra $10 off.
* Scott: [Scott's Crouses](https://leveluptutorials.com/pro)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f77a9775082fb4895480b27f6df75f08beea7995273b710990bedc2e99b62ecf,potluck-css-angular-dev-job-preparation-svelte-file-organization-gear-more,/shows/148 - potluck.md,2023-10-16 20:06:59.083,2023-10-27 15:57:47.760,TASTY
syntax_podcast_show_00149,149,Hasty Treat - Workshops,2019-06-03 13:00:00.837,https://traffic.libsyn.com/syntax/Syntax149.mp3,"
In this Hasty Treat, Scott and Wes talk about how to give a killer workshop, as well as benefits and best practices!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:00 - Types of workshops

* Public
* Private

4:29 - Choosing a topic

* Create original content
* Create custom content for companies

5:55 - Building content

* Choose seven to eight different little things
    * ES6
    * Progressive web apps
* Build a single application throughout the day, introducing a new feature or two at a time and then implementing it into your own application
    * Gatsby website
    * React Beer application
    * React Notes Application
* Process:
    * Build the app
    * Rewind back to starter files
    * Build it again while writing notes
    * Follow your own notes to see if it makes sense

13:25 - General information

* How long should it be?
* Fixed price vs split cost
* How many people?

16:46 - Other Tips:

* Break away from your app and show other apps using - gives better context
* Stop often and ask if anyone needs help
* Give large breaks
* Give challenges for those who need more to do

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",cc41dc1b5c6299cdb449ed802cc71adaab72f8f173439ca011a7008912070104,hasty-treat-workshops,/shows/149 - workshops.md,2023-10-16 20:06:59.125,2023-10-27 15:57:47.807,HASTY
syntax_podcast_show_00150,150,Gatsby Themes,2019-06-05 13:00:00.837,https://traffic.libsyn.com/syntax/Syntax150.mp3,"
In this episode of Syntax, Scott and Wes talk with Jason Lengstorf from the Gatsby team about Gatsby themes, and the future of Gatsby in general.

## LogRocket - Sponsor

[LogRocket](https://logrocket.com/syntax) lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [LogRocket](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [Freshbook](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests

* [Jason Lengstorf](https://twitter.com/jlengstorf)

## Show Notes

2:18 - Jason Lengstorf - What do you do?

9:37 - Gatsby refresher

* Gatsby is statically generated
* `gatsby-config.js` file determines which plugins you use
* `gatsby-node.js` allows us to hook into Gatsby at different points and do things like source content and dynamically create pages
* `gatsby-browser.js` contains code that should hook into browser events

13:54 - Gatsby themes

* Layouts in Gatsby are done the same way in React - simply create a component with children
* How is this different than a plugin?
* Is it a collection of plugins?
* How do you share themes?
* Can they include functionality (plugins?) Like Markdown rendering?
* What about a theme that needs a UI once activated?
* What about custom fields for Gatsby?
* Do you foresee a marketplace like WordPress themes?
* Are there some themes already out there?
* What will come for themes soon?

34:07 - Questions about Gatsby

* What do you think about WordPress?
* E-commerce?
* How do you make money?
* Suggested way of doing dynamic things
* What is the future of Gatsby?

## Links
* [Gatsby](https://www.gatsbyjs.org/)
* [Jason Lengstorf](https://lengstorf.com/)
* [Livestream](https://www.twitch.tv/jlengstorf)
* [Progressive Disclosure of Complexity](https://lengstorf.com/progressive-disclosure-of-complexity/)
* [Gatsby Themes](https://www.gatsbyjs.org/docs/themes/)
* [Sanity](http://sanity.io/)
* [Gatsby + Sanity.io](https://www.sanity.io/blog/live-coding-with-gatsby-js-and-sanity-io-how-to-make-a-portfolio-website)
* [Snipcart](https://snipcart.com/)
* [Axios](https://www.axios.com/)
* [Algolia](https://www.algolia.com/)
* [Netlify](https://www.netlify.com/)
* [Airtable](https://airtable.com/)
* [Hope in Source - Henry Zhiu](https://hopeinsource.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Jason: [Kamado Joe Grill](https://www.kamadojoe.com/)
* Scott: [Zojirushi Hybrid Water Boiler and Warmer](https://amzn.to/2E5MYf7)
* Wes: [Waterproof Digital Instant Read Meat Thermometer](https://amzn.to/2Yxy09R)

## Shameless Plugs
* [Jason's Weekly Live stream](https://twitch.tv/jlengstorf)
* [Scott's Courses](https://leveluptutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",267d3895ca1bf51f9f06697175ff3dd56b7ef5b3ccc132d5d302f8f2e65552f2,gatsby-themes,/shows/150 - gatsby themes.md,2023-10-16 20:06:59.161,2023-10-27 15:57:47.850,TASTY
syntax_podcast_show_00151,151,Hasty Treat - Std Lib in JavaScript,2019-06-10 13:00:00.514,https://traffic.libsyn.com/syntax/Syntax151.mp3,"
In this Hasty Treat, Scott and Wes discuss the Javascript standard library proposal — what it is, how it could influence dev, and what they'd like to see.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

1:38 - What is a Standard Lib? 

* Still experimental
* Built-in modules don't have to be downloaded because they ship with the browser
* Not exposing built-in modules globally has a lot of advantages:
	* They won't add any overhead to starting up a new JavaScript runtime context (e.g. a new tab, worker, or service worker)
	* They won't consume any memory or CPU unless they're actually imported
	* They don't run the risk of naming collisions with other variables defined in your code

6:47 - Key Value Storage is the first one: 

* [KV Storage: the Web's First Built-in Module](https://developers.google.com/web/updates/2019/03/kv-storage)

8:36 - What do we want to see? 

* Deep clone
    * Basically all of Lodash
* `util.isDeepScrictEqual`
* `Async json.parse()` / `json.stringify`
* UUID
* URL Lib for building and parsing URLs
* Missing Array Methods
    * Most of underscore JS

15:53 - International

* Currency Formatting
* Lists
* DateTimeFormat
* RelativeTimeFormat

## Links
* [JavaScript Standard Library Proposal](https://github.com/tc39/proposal-javascript-standard-library)
* [Add remaining Underscore / Lodash features](https://github.com/tc39/proposal-javascript-standard-library/issues/38)
* [JavaScript standard library contents](https://github.com/tc39/proposal-javascript-standard-library/issues/16#issuecomment-449089197)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",eb145a044b84527bb60245d4693903a11af6ac503c574c1826745e628dc20de3,hasty-treat-std-lib-in-javascript,/shows/151 - std lib.md,2023-10-16 20:06:59.197,2023-10-27 15:57:48.069,HASTY
syntax_podcast_show_00152,152,Debugging Tools + Tips,2019-06-12 13:00:00.254,https://traffic.libsyn.com/syntax/Syntax152.mp3,"
In this episode of Syntax, Scott and Wes talk about debugging — tools, techniques, and the mindset needed to debug a problem and get through it as quickly as possible.

## Netlify - Sponsor

Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [Freshbooks.com](http://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

1:41 - Tools

* CLDD - console.log driven development
* [How To Pause Your Code With Breakpoints In Chrome DevTools](https://developers.google.com/web/tools/chrome-devtools/javascript/breakpoints)
* Other types of break points
  * XHR
  * DOM break on attribute change
  * DOM break on children
  * Conditional break
  * Break on exception
  * Break on event listener

21:49 - Network requests

* Doesn't take place in your site/dom, so might not always have all info in your console, debugger
* Network tab in dev tools shows you all requests going in and out of your app
* Filters by type, sees length in request
* Sees headers, responses and more
* Failed requests will be red

26:50 - Debugging mindset

* Check different browsers
* Check the docs/examples
* Isolate when possible
* ""What has changed?""
* Get minimal working code
* Rubber Duck Debug
* Step back and re-think

## Links
* [Debugging Visual Studio Code (Node) - James Q Quick](https://www.youtube.com/watch?v=yFtU6_UaOtA)
* [CodePen](https://codepen.io/)
* [Spencer Carli's Youtube](https://www.youtube.com/channel/UC_uuod9nde9Hoea8xIVBeZQ)

## ××× SIIIIICK ××× PIIIICKS ×××
* Wes: [DeWALT Lawn Mower](https://amzn.to/2LYJly1)
* Scott: [Cold Brew Coffee Maker](https://amzn.to/2HuzCv8)

## Shameless Plugs
* [Wes' Courses](https://wesbos.com/courses) - Use the coupon code 'Syntax' for $10 off!
* [Level 2 React Native with GraphQL](https://www.leveluptutorials.com/tutorials/level-2-react-native-with-graphql/connecting-apollo-to-our-auth-system)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8f5322bf7b2619fb716d7cfd49d5eda2ebcefe7999c0f3d7bbc8cf27637b0460,debugging-tools-tips,/shows/152 - debugging.md,2023-10-16 20:06:59.231,2023-10-27 15:57:48.134,TASTY
syntax_podcast_show_00153,153,Hasty Treat - New Intl Methods Are Straight Fire,2019-06-17 13:00:00.687,https://traffic.libsyn.com/syntax/Syntax153.mp3,"
In this Hasty Treat, Scott and Wes talk about internationalization - how to deal with different languages, different currencies, and more!

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

5:48 - Intl.NumberFormat

9:17 - Intl.ListFormat

12:17 - Intl.DateTimeFormat / Intl.RelativeTimeFormat

14:27 - Intl.PluralRules

## Links
* [Standard built-in objects](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects#Internationalization)
* [Language Subtag Registry](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d921bc0042e401164211a237b871b42dbcd21fb9a3a0d54ad7dcd6528ccb2db9,hasty-treat-new-intl-methods-are-straight-fire,/shows/153 - intl methods.md,2023-10-16 20:06:59.278,2023-10-27 15:57:48.174,HASTY
syntax_podcast_show_00154,154,SVGs with Sara Soueidan,2019-06-19 13:00:00.687,https://traffic.libsyn.com/syntax/Syntax154.mp3,"
In this episode of Syntax, Wes is joined by Sara Soueidan, a freelance front-end UI developer and trainer. While Scott is taking a break to spend time with his new baby girl, Wes and Sara dive into all things SVG!  

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [Sanity](https://www.sanity.io/syntax).

## Guests

* [Sara Soueidan](https://twitter.com/SaraSoueidan)

## Show Notes

6:05 - What are SVGs?

* It's an image you can edit

16:17 - Icon fonts

* Better tools
* Fails in certain areas 
* SVG sprite icons 
* Grunticon

24:24 - SVG files / Build tools

* SVGO / SVGOMG

31:50 - Where to find SVGs

* Noun project
* Exporting from Sketch/Illustrator/Figma
* Freepik
* Iconmoon

33:48 - What is the viewbox? 

40:39 - Animating SVG

43:41 - Accessibility & text with SVG

45:44 - Graphing with SVG

* D3.js

47:58 - Filters

## Links
* [Font Awesome](https://fontawesome.com/)
* [Grunticon](http://www.grunticon.com/)
* [Grunt](https://gruntjs.com/)
* [gulp.js](https://gulpjs.com/)
* [React](https://reactjs.org/)
* [Vue.js](https://vuejs.org/index.html)
* [Sketch](https://www.sketch.com/)
* [Illustrator](https://www.adobe.com/products/illustrator.html)
* [Figma](https://www.figma.com/)
* [imagemin](https://github.com/imagemin/imagemin)
* [gulp-imagemin](https://www.npmjs.com/package/gulp-imagemin)
* [Gatsby.js](https://www.gatsbyjs.org/)
* [gatsby-plugin-sharp](https://www.gatsbyjs.org/packages/gatsby-plugin-sharp/)
* [jakearchibald/svgomg](https://github.com/jakearchibald/svgomg)
* [Noun Project](https://thenounproject.com/)
* [Freepik](https://www.freepik.com/)
* [Icomoon](https://icomoon.io/)
* [GreenSock](https://greensock.com/)
* [Snap.svg](http://snapsvg.io/)
* [SVG Animations: From Common UX Implementations to Complex Responsive Animation By Sarah Drasner](https://www.amazon.com/SVG-Animations-Implementations-Responsive-Animation-ebook/dp/B06XPVW2PP)
* [Codrops](https://tympanus.net/codrops/)
* [D3.js](https://d3js.org/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Sara: [Netlify](https://www.netlify.com/)
* Wes: [Wise Contact Sensors](https://wisehomesolutions.com/products/door-window-sensor/)

## Shameless Plugs
* [Sara's Website & Workshop Dates](https://www.sarasoueidan.com/)
* [Wes' Courses](https://wesbos.com/courses) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Sara's Twitter](https://twitter.com/SaraSoueidan)
",f7f033897e0bb02d37ff0cbc81cd5be0b1167e5f5e69ed5feba3638c637e1b67,svgs-with-sara-soueidan,/shows/154 - SVGs.md,2023-10-16 20:06:59.322,2023-10-27 15:57:48.216,TASTY
syntax_podcast_show_00155,155,Hasty Treat - Making Yourself Uncomfortable To Grow,2019-06-24 13:00:00.757,https://traffic.libsyn.com/syntax/Syntax155.mp3,"
In this Hasty Treat, Scott and Wes talk about pushing yourself in uncomfortable areas to grow as a programmer, be a better developer, and become more efficient in general.

## Netlify - Sponsor

Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [Netlify](https://netlify.com/syntax) for more info.

## Show Notes

3:50 - CSS Preprocessor parable

6:09 - Efficiency

10:40 - When to learn new systems

13:03 - Common pain points

14:42 - Pushing yourself to foster growth

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d425ba3ebeb0ac19f06296b89094693b302b998407db0e2b034d1f2e3704ced5,hasty-treat-making-yourself-uncomfortable-to-grow,/shows/155 - growth.md,2023-10-16 20:06:59.365,2023-10-27 15:57:48.334,HASTY
syntax_podcast_show_00156,156,Potluck - Career Switch at 33 × Cover Letters × Kids × Learning Quickly × More!,2019-06-26 13:00:00.423,https://traffic.libsyn.com/syntax/Syntax156.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about career changes, preprocessors, moving, ""the gap"", hip hop and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [Sanity](https://www.sanity.io/syntax).

## Show Notes

1:54 - Q: I am 33 with a wife and two young daughters, and am trying to change careers. My job pays $80,000 a year, but I hate it. My wife is ok with me doing university, but she wants me to stay at the job I don't like. Should I stand my ground? Any tips on achieving my goals to make me happy, but also keep my family happy?

10:10 - Q: What is your advice to very junior/junior devs in writing cover letters for jobs? I wonder what to say without sounding canned and fake.

14:35 - Q: Scott, what was the stack you were using at Ford?	

17:09 - Q: Other than reading the docs, how do you guys go about learning/trying out new technologies? Do you rebuild similar applications or pick out individual features you think are ""sIcK""?

22:32 - Q: Is it always necessary to use setState in react when storing data (for example, a form input) even if you don't intend on re-rendering the page, or can you get away without using state?	

25:04 - Q: Development has a stereotype for being a young person's game. As someone who started their career out of university, I often wonder how long I can sling divs for? Do you think you could make it to retirement age or do you think the game will change out from under you?

30:34 - Q: Scott, you've mentioned you love hip hop. Would you be willing to share any playlists of your all-time favorite hip hop artists?

32:08 - Q: What are your thoughts on HTML pre-processors? If you use one, which one(s) do you prefer and why?

36:04 - Q: What advice would you have for someone considering to ""level up"" their career by moving from a city with few tech jobs to a city with more opportunity for tech jobs? What are some of the biggest things to consider when moving possibly cross-country to further a career?	

42:11 - Q: What are your recommendations in terms of resources for first time dads (and moms) like books, podcasts, etc. and generally good co-parenting advice for working professionals?

46:45 - Q: Loved the show with Travis. Had a question about “the gap”. Similar to design ambitions/taste surpassing current skill, when did you feel like your code had “grown up” and that you could actually DO what you envisioned with Javascript? 

## Links
* [Syntax 044: How to Learn New Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)
* [Scott's Spotify playlist - ""Rap Music To Code To = Level Up Tutorials""](https://open.spotify.com/user/torartc/playlist/71NVDjvoMRJ6wfmJuN9iNU?si=7qADFqdxSPGdEq93IY368A)
* [Scott's Spotify playlist - ""Golden Era""](https://open.spotify.com/user/torartc/playlist/42tTDR1B1NbAWihMnxEQ6n?si=EVuF8_h0QlOyiJ1nHHj1mA)
* [Scott's music picks](https://twitter.com/stolinski/status/1129447040931340288)
* [Apache - Apache Ain't Shit](https://open.spotify.com/album/5XuS5DIjel4dghKgwtYNtt?autoplay=true&v=L)
* [MF DOOM - MM...Food](https://open.spotify.com/album/7IvmRtuLsTlRZhRS6KUQRn?autoplay=true&v=L)
* [Kendrick Lamar - To Pimp A Butterfly](https://open.spotify.com/album/7ycBtnsMtyVbbwTfJwRjSP?autoplay=true&v=L)
* [GZA - Liquid Swords](https://open.spotify.com/album/3k8xoyOXkGgZxUKgpmxz4P?autoplay=true&v=L)
* [Gang Starr - Daily Operation](https://open.spotify.com/album/74DwNAuirHLDLVLrBQAnVg?autoplay=true&v=L)
* [Slick Rick - The Ruler's Back](https://open.spotify.com/album/5UWKXx7GvU5YhXx0OBNnhD?autoplay=true&v=L)
* [Redman & Method Man - Blackout](https://open.spotify.com/album/5K9kD50P66neofCR8BoYxg?autoplay=true&v=L)
* [Q-Tip - The Renaissance](https://open.spotify.com/album/3asZSLOAAtCNJz5W2LGuFJ?autoplay=true&v=L)
* [Enter The Wu-Tang (36 Chambers)[Expanded Edition] - Wu-Tang Clan](https://open.spotify.com/album/3tQd5mwBtVyxCoEo4htGAV?autoplay=true&v=L)
* [Pete Rock on Spotify](https://open.spotify.com/artist/3BeQqzKdlARoOd6y30kCO2)
* [Preemo on Spotify](https://open.spotify.com/artist/0Kr4V7oQfFb1rB2nzXKTTb)
* [Codeland Conference](https://codelandconf.com/)
* [Syntax 142: Travis Neilson on Skills Gap, Design, Focus and Working at Google](https://syntax.fm/show/142/travis-neilson-on-skills-gap-design-focus-and-working-at-google)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Oculus Quest All-in-one VR Gaming Headset](https://amzn.to/2EPWTGd)
* Wes: [Marpac Rhom Portable White Noise Sound Machine](https://amzn.to/2MrmknB)

## Shameless Plugs
* [Scott's new course - ""Dev Tools and Debugging""](https://www.leveluptutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",beb0a59da6042359d7aed981d996ed5bab2b9e7b71b827a576e58b587602689b,potluck-career-switch-at-33-cover-letters-kids-learning-quickly-more,/shows/156 - potluck.md,2023-10-16 20:06:59.400,2023-10-27 15:57:48.386,TASTY
syntax_podcast_show_00157,157,Hasty Treat - What is a Headless CMS?,2019-07-01 13:00:00.933,https://traffic.libsyn.com/syntax/Syntax157.mp3,"
In this Hasty Treat, Scott and Wes talk about headless CMSs - why to use them, how they work, pros and cons, examples and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:11 - What is a headless CMS?

* It's a system or CMS that has no front-end (aka head)
* Allows you to use front-end specific tech (static generators/front-end frameworks) instead of the back-end to generate pages

4:37 - Some examples

* Can be used with any type of website that can consume an API
* WordPress API + Gatsby
* Hosted Service + React App 

7:06 - Why?

* Separation of concerns - your data is in a single spot, and can be pulled into any app, website, marketing micro site, etc. 
* Keeps ergonomics of WordPress or $CMSHERE, while developers get to use what they like
* Optimizes for performance with static builds
* Hide the implementation details and back-end from view

10:19 - Live vs statically-generated website

* [Syntax 120 - Gatsby vs Next](https://syntax.fm/show/120/gatsby-vs-next)

10:55 - How?

* Connects to API via normal fetch calls/GraphQL/whatever you use
* Needs to host your back-end either as a service or on a host
* Needs to host your front-end either on the same server as your back-end or on something specialized like Netlify

## Links
* [WordPress](https://wordpress.org/)
* [Sanity.io](https://www.sanity.io/)
* [React](https://reactjs.org/)
* [Syntax 120 - Gatsby vs Next](https://syntax.fm/show/120/gatsby-vs-next)
* [Netlify](https://www.netlify.com/)
* [GraphQL](https://graphql.org/)
* [Cobalt](https://www.cobalt.net/)
* [Gatsby.js](https://www.gatsbyjs.org/)
* [Drupal](https://www.drupal.org/)
* [Next.js](https://nextjs.org/)
* [Nginx](https://www.nginx.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",eb909f922cb280c8828df757f8876e0b9eb9fd31214493fb6d6b4b9f697d22cb,hasty-treat-what-is-a-headless-cms,/shows/157 - headless cms.md,2023-10-16 20:06:59.437,2023-10-27 15:57:48.439,HASTY
syntax_podcast_show_00158,158,The Fundamentals - HTML + CSS,2019-07-03 13:00:00.933,https://traffic.libsyn.com/syntax/Syntax158.mp3,"
In this episode of Syntax, Scott and Wes talk about the ""fundamentals"" of web development and what you need to know - HTML, CSS foundations and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [Freshbooks](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

1:54 - Learning fundamentals vs framework specialists

* Learning vs getting a job
* Abstractions work well until they don't and you need to debug them

**HTML**

7:58 - Semantic markup

9:15 - Accessibility basics

9:57 - Attributes

**CSS** 

16:13 - Specificity

22:42 - Selectors

24:52 - Layouts

27:53 - Box model

32:50 - Positioning

36:42 - Forms and inputs

40:45 - Block vs inline vs inline-block

43:09 - Sizing units

44:40 - Typography

47:53 - Media Queries

## Links
* [Interviewing candidates with a lack of fundamentals - Tweet](https://twitter.com/wesbos/status/1137058712466722816)
* [Jean-Philippe Sirois Tweet](https://twitter.com/veksenn/status/1137187264486944770)
* [Syntax 72: Accessibility](https://syntax.fm/show/072/accessibility)
* [Syntax 107: Hasty Treat - CSS Units](https://syntax.fm/show/107/hasty-treat-css-units)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [I Think You Should Leave with Tim Robinson](https://www.netflix.com/title/80986854?source=35)
* Wes: [Forearm Forklift Lifting and Moving Straps](https://amzn.to/2MD6AxU)

## Shameless Plugs
* [Scott's new course - ""Debugging and Dev Tools""](https://www.leveluptutorials.com/pro)
* [Wes' courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b742d55bffbc9174f3b4f42b27baf8234f68a0f7b6fe61740af3e4cef91f5637,the-fundamentals-html-css,/shows/158 - fundamentals.md,2023-10-16 20:06:59.473,2023-10-27 15:57:48.482,TASTY
syntax_podcast_show_00159,159,Hasty Treat - Front End Security,2019-07-08 13:00:00.835,https://traffic.libsyn.com/syntax/Syntax159.mp3,"
In this Hasty Treat, Scott and Wes talk about front end security and what to do in order to avoid hacking.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:53 - SSL

* Encrypted transfer of information
* Digitally binds a cryptographic key to an organization's details
* Web-cam, geolocation, etc.

6:15 - innerHTML 

* React's dangerouslySetInnerHTML
	* Name intentionally chosen to be frightening
	* Allows you to write HTML to the DOM
	* Data should be sanitized before used in prop
        * Removes unexpected data from string
        * Used to prevent cross site scripting attacks

10:25 - Don't trust the client

* The client can be manipulated to send any info to your server
* E-commerce example — don't take the price total from the front end to make the charge, DB call and calculate on the server
* Validate form inputs via HTML 5 field validation/check data types on the server
    * Don't allow your users to send an object when it should just be a string
    * Get this for free with GraphQL via types

13:41 - PCI Compliance

* Protect card holder data
    * SSL or Secure iFrame
* Encrypt transmission of card data
* Restrict access to card holder data
* Restrict physical access
    * Front of front-end

 16:44 - Tips

* Don't put a name on sensitive fields if you are using JS
* HTTP only cookies
* Local Storage tokens
* XSS

## Links
* [React](https://reactjs.org/)
* [GraphQL](https://graphql.org/)
* [Express](https://expressjs.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",921ae5e1a5c7fc57acdabd99428f4680007bfdcaa05c6d7930eddffd21f896e6,hasty-treat-front-end-security,/shows/159 - front end security.md,2023-10-16 20:06:59.509,2023-10-27 15:57:48.529,HASTY
syntax_podcast_show_00160,160,GraphQL and WordPress,2019-07-10 13:00:00.835,https://traffic.libsyn.com/syntax/Syntax160.mp3,"
In this episode of Syntax, Scott and Wes talk with Jason Bahl (author of WPGraphQL) about GraphQL, headless WordPress, frameworks in WordPress, React in WordPress, and more!

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [LogRocket](https://logrocket.com/syntax).

## Guests

* [Jason Bahl](https://twitter.com/jasonbahl)

## Show Notes

4:55 - Data in WordPress

6:26 - WPGraphQL

10:31 - What were your initial thoughts/first experiences with GraphQL?

16:58 - Does it use MySQL queries or wpQuery?

19:36 - How does authentication work?

24:38 - What does the WP local dev experience look like in 2019?

26:49 - What about deployment? How do you handle migrating data?

30:10 - How does WPGraphQL handle mutations?

32:46 - What are the preferred hosting methods for a headless WordPress setup?

36:44 - Do you see any push back about giving up much of what WordPress gives you out of the box?

41:23 - What are techniques for preventing all of WordPress from loading When you're using it exclusively for the API?

43:40 - How does WPGraphQL support custom post types, taxonomies and fields, etc?

## Links
* [WPGraphQL](https://www.wpgraphql.com/)
* [Kyle Mathews](https://twitter.com/kylemathews)
* [GraphQL](https://graphql.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [WordPress](https://wordpress.org/)
* [Meteor](https://www.meteor.com/)
* [Apollo GraphQL](https://www.apollographql.com/)
* [GraphiQL](https://github.com/graphql/graphiql)
* [WPGraphiQL](https://github.com/jasonbahl/wp-graphiql)
* [WAMP](http://www.wampserver.com/en/)
* [Flywheel](https://getflywheel.com/)
* [Local by Flywheel](https://localbyflywheel.com/)
* [PhpStorm](https://www.jetbrains.com/phpstorm/)
* [Lando](https://docs.devwithlando.io/)
* [Laravel](https://laravel.com/)
* [React](https://reactjs.org/)
* [Netlify](https://www.netlify.com/)
* [Jason Schuller](https://jason.sc/)
* [Leeflets](https://leeflets.com/)
* [Press75](https://press75.com/)
* [Advanced Custom Fields](https://www.advancedcustomfields.com/)
* [WPGraphQL Tax Query](https://github.com/wp-graphql/wp-graphql-tax-query)
* [WPGraphQL Meta Query](https://github.com/wp-graphql/wp-graphql-meta-query)
* [WPGraphQL for Advanced Custom Fields](https://www.wpgraphql.com/acf/)
* [Jason's Twitter](https://twitter.com/jasonbahl)
* [WPGraphQL Twitter](https://twitter.com/wpgraphql)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Figma](https://www.figma.com/)
* Wes: [CalDigit TS3 Plus Thunderbolt 3 Dock](https://www.amazon.com/CalDigit-TS3-Plus-Thunderbolt-Dock/dp/B07CZPV8DF)
* Jason: [Local by Flywheel](https://localbyflywheel.com/)

## Shameless Plugs
* [Scott's new course - Dev Tools & Debugging](https://www.leveluptutorials.com/pro)
* [Wes - All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!
* [Jason - WPGraphQL](https://www.wpgraphql.com/)
* [Jason - Gatsby](https://www.gatsbyjs.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",90812e24370f79e1962263eb0474cbb583abf401de9e73ce5bbf172b3325a716,graphql-and-wordpress,/shows/160 - graphql and wordpress.md,2023-10-16 20:06:59.550,2023-10-27 15:57:48.577,TASTY
syntax_podcast_show_00161,161,Hasty Treat - VSCode Extensions & Themes,2019-07-15 13:00:00.334,https://traffic.libsyn.com/syntax/Syntax161.mp3,"
In this Hasty Treat, Scott and Wes talk about everything they love regarding VSCode: themes, fonts, extensions, techniques and more!

## Netlify - Sponsor

Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [Netlify](https://netlify.com/syntax) for more info.

## Show Notes

3:18 - Theme

* [Cobalt 2](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2)
* [SynthWave '84](https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode)

4:58 - Fonts

* [Dank Mono](https://dank.sh/)
* [Operator Mono](https://www.typography.com/fonts/operator/styles)

7:12 - Five things we love

* Wes: 
	* [Bracket Pair Colorizer](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer)
	* [Permute Lines](https://marketplace.visualstudio.com/items?itemName=earshinov.permute-lines), [Unique Lines](https://marketplace.visualstudio.com/items?itemName=bibhasdn.unique-lines)
	* [Breadcrumbs](https://vscode.pro/tip/15/)
	* [Toggle Quotes](https://marketplace.visualstudio.com/items?itemName=BriteSnow.vscode-toggle-quotes)
	* [Snapshot Tools](https://marketplace.visualstudio.com/items?itemName=asvetliakov.snapshot-tools)

* Scott: 
	* [Better Comments](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments)
	* [Import Cost](https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost)
	* [Ctrl+Click Go To Definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)
	* [Wrap Console Log Simple](https://marketplace.visualstudio.com/items?itemName=WooodHead.vscode-wrap-console-log-simple)
	* [Git History](https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a2a53f3dc20a22de3a18e3787d6520534c365dc8905344d4f9ddb035b5f7004d,hasty-treat-vscode-extensions-and-themes,/shows/161 - vscode.md,2023-10-16 20:06:59.593,2023-10-27 15:57:48.679,HASTY
syntax_podcast_show_00162,162,The Fundamentals — JS,2019-07-17 13:00:00.334,https://traffic.libsyn.com/syntax/Syntax162.mp3,"
In this episode of Syntax, Scott and Wes talk about the fundamentals of JavaScript - the set of core skills you should know before branching off into other frameworks, libraries, etc.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [LogRocket](https://logrocket.com/syntax).

## FreshBooks - Sponsor

Get a 30 day free trial of FreshBooks at [FreshBooks](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

3:07 - Variables + Scoping

* var/let/const
* Block scope
* Function scope
* Scope lookup

6:06 - Types

* Objects
    * Reference vs. copy

7:15 - Functions

* Types of functions
    * Anonymous vs. named
    * Expressions
    * Arrow functions
* Methods

9:33 - DOM

* Selecting
* Updating
* Creating

15:07 - Prototypes + this

* `this`
* Objects

20:16 - Events

* Listening, callbacks
* dispatchEvent
* Bubbling

22:05 - Arrays

* Push, pop, manipulate
* Spread, rest
* Map, filter, reduce
* Arrays vs. objects
* Mutation vs. immutable

26:25 - Flow control

* Looping
* If
* Promises + Async + Await

29:47 - Security and accessibility

* XSS and innerHTML

32:04 - Things you should know, but not necessarily master

* Modules
* Closures
* Ajax requests

35:26 - Clean code

* [Clean Code Javascript](https://github.com/ryanmcdermott/clean-code-javascript)

## Links
* [Syntax 043: 20 Javascript Array and Object Methods to make you a better developer](https://syntax.fm/show/043/20-javascript-array-and-object-methods-to-make-you-a-better-developer)
* [Syntax 141: Hasty Treat - Async + Await Error Handling Strategies](https://syntax.fm/show/141/hasty-treat-async-await-error-handling-strategies)
* [Syntax 072: Accessibility](https://syntax.fm/show/072/accessibility)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [BaseCS](https://www.codenewbie.org/basecs)
* Wes: [Owlet Baby Monitor](https://amzn.to/2Ruf8Ga)

## Shameless Plugs
* [Scott's new E-Commerce and Gatsby Course](https://www.leveluptutorials.com/pro)
* [Wes' Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",a27665009e6d9c5aac52d2b50c5a090ebfec91d593b03dfa24f36766421382ed,the-fundamentals-js,/shows/162 - js fundamentals.md,2023-10-16 20:06:59.640,2023-10-27 15:57:48.747,TASTY
syntax_podcast_show_00163,163,Hasty Treat - Web Dev Resource Sick Picks,2019-07-22 13:00:00.176,https://traffic.libsyn.com/syntax/Syntax163.mp3,"
In this Hasty Treat, Scott and Wes talk about all of their favorite web dev resources — a full episode of sick picks!

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [LogRocket](https://logrocket.com/syntax).

## Show Notes

2:03 - Twitter Accounts

* Scott: [HeyDesigner](https://twitter.com/heydesigner)
* Wes: [Mathias Bynens](https://twitter.com/mathias)

5:00 - Web Dev Resources

* Scott: [Scotch.io](https://scotch.io/)
* Wes: [Webgems.io](https://webgems.io/) 

7:37 - Design Resources

* Scott: [UI Movement](https://uimovement.com/)
* Wes: [Creative Market](https://creativemarket.com/)

11:36 - Desktop Tools

* Scott: [Pock](https://pock.dev/)
* Wes: [MongoDB Compass](https://www.mongodb.com/products/compass)

14:59 - YouTube

* Scott:
	* [JSConf](https://www.youtube.com/user/jsconfeu)
	* [stance](https://www.youtube.com/user/stanceelements)

* Wes: 
	* [Andrew Camarata](https://www.youtube.com/channel/UCUujfNBK9uv3cIW-P5PX7vA) 
	* [dotconferences](https://www.youtube.com/user/dotconferences)

## Links
* [Studio3t](https://studio3t.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",4421979c09b79b429c3087b6584153ffe2f5710007cf664122a622ceb26635a0,hasty-treat-web-dev-resource-sick-picks,/shows/163 - Web Dev Sick Picks.md,2023-10-16 20:06:59.681,2023-10-27 15:57:48.788,HASTY
syntax_podcast_show_00164,164,A Story About Kanye West and Learning to Code,2019-07-24 13:00:00.176,https://traffic.libsyn.com/syntax/Syntax164.mp3,"
In this episode of Syntax, Scott and Wes talk with Harry Dry about the crazy story behind his Kanye West dating site, how he taught himself to code, and how to come up with cool side projects!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Guests

* [Harry Dry](https://twitter.com/harrydry)

## Show Notes

2:30 - How did you get into web dev and come up with the idea for the Kanye West dating website?

10:29 - Do you have a background in design?

13:05 - What's your story?

15:28 - Do you wear yeezys?

36:26 - What made you decide to take this story and make a bit site out of it? What was the plan?

40:45 - How did you learn to code? How did you decide what to learn next?

45:30 - How do you push through hard problems?

48:50 - Any final advice to offer?

## Links
* [The Kanye Story](https://thekanyestory.com/)
* [TheNetNinja](https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg)
* [@rogerfederer](https://twitter.com/rogerfederer)
* [Refactoring UI](https://refactoringui.com/)
* [@GonzoVice](https://twitter.com/GonzoVice)
* [Dang That's Delicious](https://github.com/spences10/dang-thats-delicious)
* [Puck](https://www.puck-js.com/)
* [@joerogan](https://twitter.com/joerogan)
* [Code Academy](https://www.codecademy.com/)
* [ChatKit by Pusher](https://pusher.com/chatkit)
* [@grantimahara](https://twitter.com/grantimahara)
* [Mythbusters](https://www.sciencechannel.com/tv-shows/mythbusters-on-science/)
* [@elonmusk](https://twitter.com/elonmusk)
* [Marketing Examples](https://marketingexamples.com/)
* [@goodmarketinghq](https://twitter.com/goodmarketinghq)
* [@harrydry](https://twitter.com/harrydry)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [BattleBots](https://battlebots.com/)
* Wes: [Logitech MX Master 2S Wireless Mouse](https://amzn.to/2RKtPVU)
* Harry:
  * [Twitter Demetricator](https://bengrosser.com/projects/twitter-demetricator/)
  * [CAMP LIFE: BIG JOHN FURY GIVES TOUR OF VINTAGE CARAVAN](https://www.youtube.com/watch?v=MX58yJt1170)

## Shameless Plugs
* Wes: [All Courses](https://wesbos.com/courses) - Use the coupon code 'Syntax' for $10 off!
* Scott: [Dev Tools and Debugging and Gatsby and E-commerce](https://leveluptutorials.com/pro)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",de276313e452409ac54682795792d5bf5842526e2058890241f538bcdcc19a2f,a-story-about-kanye-west-and-learning-to-code,/shows/164 - Kanye West.md,2023-10-16 20:06:59.714,2023-10-27 15:57:48.829,TASTY
syntax_podcast_show_00165,165,Hasty Treat - VSCode Treats Part 2,2019-07-29 16:00:00.607,https://traffic.libsyn.com/syntax/Syntax165.mp3,"
In this Hasty Treat, Scott and Wes talk about more of their favorite VSCode tasty treats - extensions, features, keyboard shortcuts and more!

## Netlify - Sponsor

Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [Netlify](https://netlify.com/syntax) for more info.

## Show Notes

3:45 - Extensions

* [Git Blame](https://marketplace.visualstudio.com/items?itemName=waderyan.gitblame)
* [Apollo GraphQL](https://marketplace.visualstudio.com/items?itemName=apollographql.vscode-apollo)
* [VS Code Spell Checker](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker)

9:36 - Features

* Indent lines in explorer - Workbench > Tree Indent & Guides
* Breadcrumbs
* Commit all & visual git commands
* Change branch in lower left
* Rename Symbol

## Links
* [Syntax 161: Hasty Treat - VSCode Extensions & Themes](https://syntax.fm/show/161/hasty-treat-vscode-extensions-and-themes)
* [Alfred](https://www.alfredapp.com/)
* [Playlist.js](https://www.npmjs.com/package/playlist-js)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6a1b40dc4c55bf9a4673c4c4d9cb299498b222372ce31adc50cfe7b47272db39,hasty-treat-vscode-treats-part-2,/shows/165 - VS Code Part 2.md,2023-10-16 20:06:59.888,2023-10-27 15:57:48.916,HASTY
syntax_podcast_show_00166,166,"Potluck - What is ""State""? × Web Sockets × Remote Working × Firefox × Machines Taking Our Jobs × More!",2019-07-31 13:00:00.672,https://traffic.libsyn.com/syntax/Syntax166.mp3,"
It's another Syntax potluck! In this episode, Scott and Wes answer your questions about remote work, AI agendas, motivation, fitness, the future of coding, and much more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## FreshBooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

2:03 - Q: I hear you both talk about ""state"" a lot in your podcasts. And while I understand a little about it, I never understand it in the context you both use it. Can you enlighten us?

6:52 - Q: I have an idea for a project that is suited for web sockets, push text/images/documents to a bunch of users in real time. I just learned about Firebase's real-time database, and it looks like it would be pretty easy to implement my idea. What are your thoughts, pros/cons, of these two technologies?

10:42 - Q: How's your fitness going?

12:15 - Q: Let's say both of you gents were junior developers that had basic knowledge and skills in HTML, CSS and JavaScript but you had all the experience and knowledge of how to best master those skills and where the industry was heading. What would be the outline and focus of your road-map knowing what you do now?

17:22 - Q: Is it worth it to find a remote dev job at an early stage of your career? Considering the stuff I learn from my seniors and other devs on the team, I wonder if I will lose the opportunity to learn stuff from my team members?

19:49 - Q: How do I keep myself motivated in coding?

22:47 - Q: What's y'all's opinion on using some obscure (at least in my opinion) features of a language, such as Javascript bitwise operators, in a production app that dozens of other engineers maintain, and will continue to maintain long after you leave the company? It seems hard to read and immediately understand, which possibly makes it harder to debug/refactor in the future. Is it the responsibility of future devs to learn if they don't know, or should you find a different way to code the solution in the first place?

26:00 - Q: Wes, I keep hearing you talk about working from your Dropbox. Do you sync up everything? Even things like your node module folders?

29:26 - Q: Have you talked about Firefox Developer Edition? It looks like it should be very useful, but I can't quite make the transition.

32:58 - Q: Hey guys, what your opinion of CSS naming convention methodologies such as BEM?

35:04 - Q: I would like to refer to the question from ep 140 about fronted development possibly dying. I don't feel satisfied with the answer, so maybe I could state the question differently: With the machine learning being developed rapidly in recent years, will the web change, causing reduction of front-end jobs? Maybe we will just be training smart algorithms and developing them instead? What do you think?

40:32 - Q: How do you deal with anxiety and fear during interviews that might hinder your ability to give the best impression of yourself or solve coding challenges?

## Links
* [FeathersJS](https://feathersjs.com/)
* [Syntax 020: Fitness, Nutrition, and Losing Weight](https://syntax.fm/show/020/fitness-nutrition-and-losing-weight)
* [Syntax 084: Fitness for Developers](https://syntax.fm/show/084/fitness-for-developers)
* [Syntax 164: A Story About Kanye West and Learning to Code](https://syntax.fm/show/164/a-story-about-kanye-west-and-learning-to-code)
* [Syntax 140: Potluck - Media Queries × NPM Vulnerabilities × Fullstack JS vs JAMstack × Web VR/AR × Switching Jobs × More!](https://syntax.fm/show/140/potluck-media-queries-npm-vulnerabilities-fullstack-js-vs-jamstack-web-vr-ar-switching-jobs-more)
* [FireBase](https://firebase.google.com/)
* [Slack](https://slack.com/)
* [Dropbox](https://www.dropbox.com/)
* [Backblaze](https://www.backblaze.com/cloud-backup-b.html)
* [FireFox developer edition](https://www.mozilla.org/en-US/firefox/developer/)
* [Brave](https://brave.com/)
* [Wix](https://www.wix.com/)
* [Squarespace](https://www.squarespace.com/)
* [How you can train an AI to convert your design mockups into HTML and CSS](https://www.freecodecamp.org/news/how-you-can-train-an-ai-to-convert-your-design-mockups-into-html-and-css-cc7afd82fed4/)
* [How AI And Machine Learning Are Transforming Front-End Development?](https://medium.com/@Jessicawlm/how-ai-and-machine-learning-are-transforming-front-end-development-db74523fd46b)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Wyze Sense](https://www.wyze.com/wyze-sense/)
* Wes: [Arthur on CBC kids](https://www.youtube.com/playlist?list=ELpoA-uHf0-f_86wCagoDcsg)

## Shameless Plugs
* Wes: [CSS Grid Course](https://cssgrid.io/)
* Scott: [Gatsby Ecommerce Course, and Dev Tools & Debugging Course](https://www.leveluptutorials.com/pro)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",29f8ac44b4102e611f40b7dd739581a054503176401a044132c086b9e8d16831,potluck-what-is-state-web-sockets-remote-working-firefox-machines-taking-our-jobs-more,/shows/166 - What is State Potluck.md,2023-10-16 20:06:59.931,2023-10-27 15:57:48.957,TASTY
syntax_podcast_show_00167,167,Hasty Treat - VSCode Love Part 3,2019-08-05 13:00:00.295,https://traffic.libsyn.com/syntax/Syntax167.mp3,"
It's another VSCode episode! In this Hasty Treat, Scott and Wes talk all the things they love about VSCode — things to learn, how to get around more quickly, using keyboard commands, being more efficient, using snippets and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:14 - Things to learn

* Jump by word, line
* Select by word
* Command Palette (cmd + shift + p)
* Move and copy lines - option up down or with shift
* Multi cursor
* Find and replace in files
* Use the Insiders build if you like updates every day

11:03 - Keyboard commands

* Cmd + b to hide sidebar
* Cmd + shift + x

13:55 - Snippets

* [Snippet Generator](https://snippet-generator.app/)
* Get to know defaults as well as tabs
* [Mongo Snippets for Node-js](https://marketplace.visualstudio.com/items?itemName=roerohan.mongo-snippets-for-node-js)

## Links
* [VSCode Marketplace](https://marketplace.visualstudio.com/)
* [VSCode Insiders Build](https://code.visualstudio.com/insiders/)
* [React Snippets](https://marketplace.visualstudio.com/items?itemName=xabikos.ReactSnippets)
* [JavaScript (ES6) Code Snippets](https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets)
* [HTML Snippets](https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets)
* [ES7 React/Redux/GraphQL/React-Native snippets](https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets)
* [Vue VSCode Snippets](https://marketplace.visualstudio.com/items?itemName=sdras.vue-vscode-snippets)
* [Atom Snippets](https://atom.io/packages/snippets)
* [Text Expander](https://textexpander.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",0bdb4fea4bbf4549bb78bbe932a6a7c0d5163a280152938f2a895c5bd236079c,hasty-treat-vscode-love-part-3,/shows/167 - VSCode Love Part 3.md,2023-10-16 20:06:59.984,2023-10-27 15:57:49.024,HASTY
syntax_podcast_show_00168,168,Blogging,2019-08-07 13:00:00.295,https://traffic.libsyn.com/syntax/Syntax168.mp3,"
In this episode of Syntax, Scott and Wes talk about blogging — both the specifics of content (how to make great content), as well as the mechanics of where and how to publish blog posts.

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

7:06 - What are some of the different platforms for publishing a blog?

23:41 - How to structure a blog post?

29:10 - How to direct traffic to a blog post?

38:51 - How do you make technical content in-depth and also succinct?

## Links
* [WordPress](https://wordpress.com/create/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Squarespace](https://www.squarespace.com/)
* [Netlify](https://www.netlify.com/)
* [Tumblr](https://www.tumblr.com/)
* [Medium](https://medium.com/)
* [Hacker Noon](https://hackernoon.com/)
* [FreeCodeCamp](https://https://www.freecodecamp.org//)
* [Dev.to](https://dev.to/)
* [Smashing Magazine](https://www.smashingmagazine.com/)
* [Net Magazine](https://www.creativebloq.com/net-magazine)
* [Gridsome](https://gridsome.org/)
* [GraphQL](https://graphql.org/)
* [Vuepoint](https://www.vuepointagency.com/)
* [Next](https://nextjs.org/)
* [Nuxt](https://nuxtjs.org/)
* [Everything I wish I knew running a sole proprietorship business](https://wesbos.com/sole-proprietorship-ontario/)
* [@peterc](https://twitter.com/peterc)
* [JavaScript Weekly](https://javascriptweekly.com/)
* [Cooperpress](https://cooperpress.com/)
* [Seth Godin](https://www.sethgodin.com/)
* [Overreacted - Dan Abramov](https://overreacted.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Business Wars](https://wondery.com/shows/business-wars/)
* Wes: [Spectacular Failures](https://www.spectacularfailures.org/)

## Shameless Plugs
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) — Subscribe before price goes up!
* Wes: [All Courses](https://wesbos.com/courses) — Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",6ae1c82f135903d0431962a96a656793fd2e266b2ce9f4242536fa7c5efc436c,blogging,/shows/168 - Blogging.md,2023-10-16 20:07:00.026,2023-10-27 15:57:49.074,TASTY
syntax_podcast_show_00169,169,Hasty Treat - Remote Internet,2019-08-12 13:00:00.542,https://traffic.libsyn.com/syntax/Syntax169.mp3,"
In this Hasty Treat, Scott and Wes talk about remote internet! Remote internet is an important because it opens up living options to developers as the industry moves toward more remote work.

## Netlify Sponsor

Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [Netlify](https://netlify.com/syntax) for more info.

## Show Notes

4:31 - Remote internet options

7:55 - Modems and routers

10:52 - Antennas

13:47 - Boosters

14:54 - Plans, data and speeds

20:11 - Other things to think about

## Links
* [Deadmau5 house](https://www.youtube.com/watch?v=dBiqFNNfudA)
* [ZTE MF288](https://www.amazon.com/Hotspot-ZTE-Unlocked-Antennas-Caribbean/dp/B07VWKS38P)
* [Netgear LB1120](https://www.netgear.com/home/products/mobile-broadband/lte-modems/LB1120.aspx)
* [Mofi Routers](https://mofinetwork.com/)
* [ZBT WE826T](https://openwrt.org/toh/zbt/we-826)
* [Rogers](https://www.rogers.com/consumer/wireless)
* [Ubiquiti Networks](https://www.ui.com/)
* [Tomato Firmware](https://www.flashrouters.com/learn/router-basics/what-is-tomato)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",10382a50ae8e6b2a38dbe1998ee82a0880ca23af58b6d8657ac26cc5b89e6df8,hasty-treat-remote-internet,/shows/169 - Remote internet.md,2023-10-16 20:07:00.062,2023-10-27 15:57:49.121,HASTY
syntax_podcast_show_00170,170,State In React,2019-08-14 13:00:00.542,https://traffic.libsyn.com/syntax/Syntax170.mp3,"
In this episode of Syntax, Scott and Wes talk about state in React: local state, global state, UI state, data state, caching, API data and more!

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

3:38 - What is state?

4:58 - What kind of things are kept in state?

* Data
    * Temporary client side data
        * From forms, button clicks, etc.
    * Cached server data
    * Data from API
* UI status
    * AKA isModalOpen
    * isToggled

12:48 - Global state vs. Local state

* Ask yourself: does the data need to be accessed outside this component?
	* If data does need to be accessed a little higher, you can simply move where that state lives. React calls this ""lifting state"".
* Do you count Apollo API calls as global state?

21:15 - Managing Local state

* useState, setState
* Passing state & update functions down
* State machines

31:12 - Approaches to Global state

* Redux
    * Complicated, hard to learn
    * Very useful, organized and structured
    * Actions, reducers and more
    * Time traveling do to nature of store
    * Immutability
    * Tons of Redux based hooks libs
* Mobx
    * Based on Observables
        * An Observable is like a Stream and allows to pass zero or more events where the callback is called for each event. Often Observable is preferred over Promise because it provides the features of Promise and more.
* Context
    * Functions just work and update global state.
    * Downside is there are no fancy tools

* Apollo
    * Apollo quires for data in global cache
    * Apollo client for global UI state
        * Not quite there, isn't super elegant

## Links
* [Thinkso](https://thinkso.com/)
* [Learn Node!](https://wesbos.com/learn-node/)
* [Meteor Session](https://docs.meteor.com/api/session.html)
* [xstate-react](https://github.com/davidkpiano/xstate/tree/master/packages/xstate-react#readme)
* [React Context](https://reactjs.org/docs/context.html)
* [Mobx](https://mobx.js.org/)
* [easy-peasy](https://github.com/ctrlplusb/easy-peasy)
* [hype.codes](https://hype.codes/)
* [providerCompose.js](https://gist.github.com/stolinski/2d9545e19dd67bda64143cb1aae04ac0)
* [Relay](https://relay.dev/)
* [React Podcast](https://reactpodcast.simplecast.fm/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Command Line Heroes](https://www.redhat.com/en/command-line-heroes)
* Wes: [Massdrop Ctrl Mechanical Keyboard](https://drop.com/buy/massdrop-ctrl-mechanical-keyboard)

## Shameless Plugs
* Scott: [LevelUpTutorials - Gatsby Ecommerce](https://www.leveluptutorials.com/pro) — Subscribe before price goes up!
* Wes: [All Courses](https://wesbos.com/courses/) — Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6740cb3ea41c5c62fff33b89afe7c8d24707755a1cd0fda5a297a49fb6bdc202,state-in-react,/shows/170 - State in React.md,2023-10-16 20:07:00.100,2023-10-27 15:57:49.167,TASTY
syntax_podcast_show_00171,171,Hasty Treat - How To Publish A React Component To NPM,2019-08-19 13:00:00.892,https://traffic.libsyn.com/syntax/Syntax171.mp3,"
In this Hasty Treat, Scott and Wes talk about documentation libraries, starting and maintaining projects, how to publish React components to NPM, and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:40 - Create React Library

6:55 - Documentation libraries

10:54 - What I'm building

13:13 - Linking library to projects

14:52 - Improvements and community thoughts

## Links
* [Rollup](https://rollupjs.org/guide/en/)
* [testing-library/react-testing-library](https://github.com/testing-library/react-testing-library)
* [transitive-bullshit/create-react-library](https://github.com/transitive-bullshit/create-react-library)
* [leveluptuts/fresh](https://github.com/leveluptuts/fresh)
* [How To Make a React Component Library - Making A React Library](https://www.youtube.com/watch?v=N8d-CLmg3hw)
* [React Styleguidist](https://react-styleguidist.js.org/)
* [Storybook](https://storybook.js.org/)
* [Docz](https://www.docz.site/)
* [DocSource](https://docsource.io/)
* [npm-link](https://docs.npmjs.com/cli/link)
* [Yarn](https://yarnpkg.com/lang/en/docs/cli/link/)
* [wesbos/dump](https://github.com/wesbos/dump)
* [wesbos/Waait](https://www.npmjs.com/package/waait)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",7722cabc7a1fb27b272cd6a641801df251ec202a8cded9d8d3076a4e7298826b,hasty-treat-how-to-publish-a-react-component-to-npm,/shows/171 - How To Publish A React Component To NPM.md,2023-10-16 20:07:00.142,2023-10-27 15:57:49.212,HASTY
syntax_podcast_show_00172,172,Potluck - Deploying Applications × Typescript × Live Coding with Twitch × Fullstack Architecture × More!,2019-08-21 13:00:00.892,https://traffic.libsyn.com/syntax/Syntax172.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about deploying applications, the value of Typescript, live coding via Twitch and more!

## Sentry - Sponsor

If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](http://freshbooks.com/syntax) and put **SYNTAX** in the ""How did you hear about us?"" section.

## Show Notes

1:35 - Q: I prefer using grid-row and grid-column instead of grid-area. But is grid-area more performant? For example, in Flexbox, it's a best practice to use the shorthand flex property instead of writing out flex-grow, flex-shrink and flex-basis.

4:04 - Q: Do you have any advice how to deploy an application? What do you think about AWS, Zeit, Heroku, Firebase? Do you use automation tools like Circle CI or Buddy.works? I also wonder if we should keep whole application on one server, or split it up.

9:36 - Q: A career advice question: I'm best at being a front-end/javascript developer - but in a quest to my make job(s) easier, I've also been getting into fullstack architecture - namely CI/CD (TravisCI, GitlabCI) and Kubernetes. I'm feeling like I'm spreading myself a little thin, and I guess I'm just finding it a bit frustrating (configuring Kubernetes is a lot of bashing your head against the wall). I know that my skills as a front-end developer are already valuable, whereas I can't say the same for my Kubernetes/CICD skillset. I'm wondering whether I should narrow my scope a bit. Maybe this is just the frustrating hump I'm climbing over, and in six months I'll be happy with where I'm at, but interested to hear your thoughts. One thing I've been thinking about is, maybe I should step back from the network architecture type stuff (ie. Kubernetes) and focus more on DevOps that is closer to the front-end stack (ie. writing tests, VSCode tooling, commit hooks, CI tools, etc.).

13:07 - Q: Do you think Typescript adds value to React, or more complexity than value? When should you choose Typescript for a project?

18:09 - Q: I am in a well known Bootcamp, and as of right now (from what they have taught us) this is what I am working with: HTML/CSS, JavaScript, jQuery, Node, Express, SQL, Auth, MVC, APIs, React, Redux. As we finish off the program, they are going over Java. I do want to learn Java, however I feel like my time would be better spent fine-tuning my knowledge on my stack. And I can learn Java at some other time. Do you recommend that I fully engage with Java and try to absorb some of the basics and fundamentals now, or do you recommend that I take this last month we have here and strengthen my current skills so I do better during my technical interviews? And by the way thanks for everything you do, it helps :)

22:02 - Q: Have you seen the live coding going on at Twitch? Thoughts? Maybe a Syntax stream in the future? There's a good list at livecoders.dev. Thanks for all you do. Keep killin' it!

26:11 - Q: How do you handle people (i.e. C# bastards) who think JavaScript is a joke and is going to be overthrown by Blazor or some other C# library framework? Can't we all just get along and live in the same industry? I'm having a hard time being the adult in these kinds of responses around the web, and in random discussions with people I know very well.

29:55 - Q: There are plenty of places saying that it is important to secure API keys by not embedding them in front-end code. Cool. I'm on board! But there is not many that tell you specifically how to do this. How do you safely use an API key in a CRUD project?

34:15 - Q: Do you plan to launch a Syntax.fm app?

45:49 - Q: I was hired as a junior developer at a company in the last year. It's my first development job and I was so excited. The interview and application were all about React and fullstack development. However now that I've been here a while, I have found out the company does primarily dev ops work. None of this was mentioned in the interview or application, but it looks like soon it will be the majority of my workload. I am feeling very discouraged and was wondering what you guys would do in this situation?

## Links
* [Develop Denver](https://developdenver.org/)
* [AWS](https://aws.amazon.com/)
* [Zeit](https://zeit.co/)
* [Heroku](https://www.heroku.com/)
* [CircleCI](https://circleci.com/)
* [Buddy.works](https://buddy.works/)
* [Travis CI](https://travis-ci.org/)
* [Gitlab CI](https://about.gitlab.com/product/continuous-integration/)
* [Kubernetes](https://kubernetes.io/)
* [VSCode](https://code.visualstudio.com/)
* [Typescript](https://www.typescriptlang.org/)
* [Blazor](https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor)
* [Linkedin](https://www.linkedin.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [VIVO Premium Heavy Duty Arm](https://amzn.to/31DHdyJ)
* Wes: [AmazonBasics Pro-Style Spring Sprayer Kitchen Faucet, Oil-Rubbed Bronze](https://www.amazon.com/AmazonBasics-Pro-Style-Spring-Sprayer-Kitchen/dp/B07F2R728S)

## Shameless Plugs
* Scott: [LevelUpTutorials Pro - Gatsby Ecommerce](https://www.leveluptutorials.com/pro)
* Wes: [All Courses - Beginner JS Course](https://wesbos.com/courses/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8d57c45f5c7f1ff99e44d36bb12a949a711af066284998ee730448dd5c654bf7,potluck-deploying-applications-typescript-live-coding-with-twitch-fullstack-architecture-more,/shows/172 - Potluck.md,2023-10-16 20:07:00.179,2023-10-27 15:57:49.254,TASTY
syntax_podcast_show_00173,173,Hasty Treat - Wes & Scott Look At Svelte 3,2019-08-26 13:00:00.550,https://traffic.libsyn.com/syntax/Syntax173.mp3,"
In this Hasty Treat, Scott and Wes talk about Svelte 3 — initial impressions and more!

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

2:16 - What is Svelte?

11:32 - Sapper

13:05 - Svelte Native

14:58 - Questions we have

* What's the Typescript story here?
* How hard would it be to convert a large React app to Svelte?
* Will Svelte be able to capture the market share it needs to grow and compete?
* Would you (Wes & Scott) use this?

## Links
* [https://svelte.dev/examples#hello-world](https://svelte.dev/examples#hello-world)
* [Mustache](http://mustache.github.io/)
* [Webpack](https://webpack.js.org)
* [Rollup.js](https://rollupjs.org/guide/en/)
* [Next.js](https://nextjs.org)
* [Sapper](https://sapper.svelte.dev/)
* [Svelte Native](https://svelte-native.technology/)
* [React Native](https://reactnative.com/)
* [Svelte - Typescript support](https://github.com/sveltejs/svelte/issues/1639)
* [Rethinking Reactivity](https://www.youtube.com/watch?v=AdNJ3fydeao)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f7ad511c7710c26886b8435b202c03e9fc293c81e00f6b202f578788a48ce0a1,hasty-treat-wes-and-scott-look-at-svelte-3,/shows/173 - svelte.md,2023-10-16 20:07:00.218,2023-10-27 15:57:49.294,HASTY
syntax_podcast_show_00174,174,How to Build an API,2019-08-28 13:00:00.488,https://traffic.libsyn.com/syntax/Syntax174.mp3,"
In this episode, Scott and Wes talk about creating APIs — what's happening behind the scenes and why it's important.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:15 - How do you build an API from scratch?

3:54 - Choose an API type

* [REST](https://restfulapi.net/)
* [GraphQL](https://graphql.org/)

8:15 - Setup some sort of server that will accept requests and send responses

* [Express](https://expressjs.com)
* [Koa](https://koajs.com)
* [Meteor](https://www.meteor.com)

11:11 - Document the endpoints

* What is the end point
* What parameters are required
  * Filters
  * Sorting
* Headers required
* What you get back when you hit this endpoint
* Any request limits
* Examples in common languages
  * JS
  * PHP
  * Ruby

21:20 - Naming

* Make it obvious

27:39 - Securing

* Only accept requests from logged-in users
    - oAuth
    - Cookie/Session
    - jwt
* API key
* CORS
* Check roles - access level
* [Syntax 055: Hasty Treat - User Role Systems](https://syntax.fm/show/055/hasty-treat-user-role-systems)

32:42 - Protecting

* Rate limit
* Whitelist / blacklist
* [Cloudflare](https://www.cloudflare.com/)

36:00 - Write resolvers 

* Modify data if needed
* Send back the data requested
* Send back the correct HTTP code
* Log what happened

37:56 - Tools

* [Postman](https://www.getpostman.com/)
* [Swagger](https://swagger.io/)

## Links
* [Stripe](https://stripe.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Hoax Podcast](https://podcasts.apple.com/us/podcast/hoax/id1354226895)
* Wes: [Solar Lights](https://amzn.to/31NFwyH)

## Shameless Plugs
* Scott: [LevelUpTutorials Pro - Advanced Gatsby & Shopify](https://www.leveluptutorials.com/pro)
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b21fe57e20ca8e9db2490a2282fd49cb64c715144a7a0eea131e9553528ec3b0,how-to-build-an-api,/shows/174 - APIs.md,2023-10-16 20:07:00.274,2023-10-27 15:57:49.331,TASTY
syntax_podcast_show_00175,175,"Hasty Treat - Stump'd",2019-09-02 13:00:00.493,https://traffic.libsyn.com/syntax/Syntax175.mp3,"
In this Hasty Treat, Scott and Wes are back with another edition of Stump'd! where they try to stump each other with interview questions. 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:54 - What is the difference between NULL and undefined?

5:40 - What is short circuit evaluation in JS?

7:25 - What is `use strict`?

9:07 - What is the only value not equal to itself in JS?

10:36 - When would you create a static class member?

11:54 - What is a pure function?

13:08 - What is JSONP?

14:24 - Describe the layout of the CSS box model?

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e7b0317e0c6ec049ca022da0fd2085d8958c6fd6c4eb444946ead2e81e8e6255,hasty-treat-stump-d,/shows/175 - stumpd.md,2023-10-16 20:07:00.332,2023-10-27 15:57:49.372,HASTY
syntax_podcast_show_00176,176,Building Steam Games with React,2019-09-04 13:00:00.219,https://traffic.libsyn.com/syntax/Syntax176.mp3,"
In this episode, Scott and Wes talk with Drew Conley about building games with Javascript. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests

* [Drew Conley](https://twitter.com/drewconley13)

## Show Notes

1:58 - What is Danger Crew?

5:25 - Did you have a background in game dev before this?

8:36 - What were the initial resources you went to to make a game in React?

10:27 - How much of it is Canvas?

13:06 - What other libraries are you using?

14:00 - How did you lay out the environments?

16:35 - How is text rendered?

22:40 - How did you do all of the animation?

26:08 - What performance issues did you run into?

27:31 - How do you handle user states and saves?

29:21 - Is there any server side aspect?

30:42 - What was the process for creating the level editor? 

34:38 - How did you publish the game / wrap it as an executable to sell?

38:16 - How do you update it?

39:43 - How difficult was creating the game logic?

41:20 - The dev theme in the game is super prominent, did that make working on it more fun?

## Links
* [Steam](https://store.steampowered.com/)
* [Danger Crew](https://thedangercrew.com/)
* [aseprite](https://www.aseprite.org/)
* [Buy Danger Crew](https://store.steampowered.com/app/1064690/Danger_Crew/)
* [Drew Conley](https://drewconley.org)
* [Pixels to SVG](https://s.codepen.io/shshaw/debug/XbxvNj)
* [GameMaker](https://www.yoyogames.com/gamemaker)
* [Making an editor](https://drewconley.org/2019-08-25-dangercrew-editors/)
* [Electron](https://electronjs.org/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Drew: [Strange Planet Instagram](https://www.instagram.com/nathanwpylestrangeplanet/)
* Wes: [MX Master Config Tweet Thread](https://twitter.com/wesbos/status/1166350577519009793)
* Scott: [Figma](https://www.figma.com/)

## Shameless Plugs
* Drew: [Danger Crew](https://thedangercrew.com/)
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!
* Scott: [LevelUpTutorials Pro - Advanced Gatsby & Shopify](https://www.leveluptutorials.com/pro)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",13dd44c907c65a718b1015568e4f3f129cae48372fb4ce94da97ca05244e2fe0,building-steam-games-with-react,/shows/176 - steam.md,2023-10-16 20:07:00.372,2023-10-27 15:57:49.417,TASTY
syntax_podcast_show_00177,177,Hasty Treat - Moving from PHP to Node,2019-09-09 13:00:00.490,https://traffic.libsyn.com/syntax/Syntax177.mp3,"
In this Hasty Treat, Scott and Wes talk about moving from PHP to Node — pitfalls to avoid, best practices and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:43 - Servers need to be started and baby sat

4:48 - There is no built-in file system based routing

6:34 - Some ""gotchas""

7:02 - Functional programming

8:17 - Async vs sync

11:11 - Event lifecycles

12:09 - Dependencies

14:17 - Keyed arrays

## Links
* [Wes' tweet thread](https://twitter.com/wesbos/status/1166355311126634496)
* [Forever](https://www.npmjs.com/package/forever)
* [PM2](http://pm2.keymetrics.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",dc1c3ee705dfea357f1098e6be2bfea76c6984c5281b03dbbed8943cf0b60a7f,hasty-treat-moving-from-php-to-node,/shows/177 - PHP to Node.md,2023-10-16 20:07:00.417,2023-10-27 15:57:49.525,HASTY
syntax_podcast_show_00178,178,"How We Record, Edit, and Host Our Courses",2019-09-11 13:00:00.490,https://traffic.libsyn.com/syntax/Syntax178.mp3,"
In this episode, Scott and Wes talk about how they make courses — recording, editing, hosting, best practices, and more!  

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

5:42 - Recording

* Wes:
  * [Screenflow](https://www.telestream.net/screenflow/)
  * [Uberlayer](https://apps.apple.com/no/app/uberlayer/id510139938?mt=12)
  * [Loopback](https://rogueamoeba.com/loopback/)
  * [Heil PR40](https://www.amazon.com/PR40-Dynamic-Microphone-Carrying-included/dp/B002OSQ9TC)
  * [Heil PL-2T](https://www.amazon.com/Heil-Sound-PL-2T-Overhead-Broadcast/dp/B000SZVZ74/)
  * [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Channel-Processor/dp/B004LWH79A)
  * [Focusrite Scarlett 2i2](https://www.amazon.com/Focusrite-Scarlett-Audio-Interface-Tools/dp/B01E6T56EA)

* Scott: 
  * [Screenflick](https://www.araelium.com/screenflick-mac-screen-recorder)
  * [iShow HD](https://www.shinywhitebox.com/ishowu-studio-2)
  * [Divvy](https://mizage.com/divvy/)
  * [Principal for Mac](https://principleformac.com/)
  * [EV RE-20](https://www.amazon.com/Electro-Voice-RE-20-Cardioid-Microphone/dp/B000Z7LLQ0)
  * [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Channel-Processor/dp/B004LWH79A)
  * [Focusrite Scarlett 2i2](https://www.amazon.com/Focusrite-Scarlett-Audio-Interface-Tools/dp/B01E6T56EA)
  * [Sony a7 III](https://www.amazon.com/Sony-Full-Frame-Mirrorless-Interchangeable-Lens-ILCE7M3/dp/B07B43WPVK)
  * [Logic](https://www.apple.com/logic-pro/)

33:04 - Editing

* Wes:
  * Screenflow
  * Speed up slow typing
  * Edit out some goof-ups (but not all)
  * Edit immediately after recording so I'm in the same headspace and can easily re-record

* Scott:
  * Hire a video editor
  * Cut out all blank spaces in audio, because I know that pauses are typically where I stop to think
  * Normalize audio
  * [DaVinci Resolve 16](https://www.blackmagicdesign.com/products/davinciresolve)

42:31 - Hosting

* Wes:
  * [Wistia](https://wistia.com/)
  * [Vimeo](https://vimeo.com/)
  * [Rev](https://www.rev.com/)
  * [Backblaze](https://www.backblaze.com/)
  * [Amazon S3](https://aws.amazon.com/s3/)
  * My own course platform, with additional controls added via React

* Scott:
  * [YouTube](https://youtube.com)
  * [Vimeo](https://vimeo.com/)
  * [Plyr Video Player](https://plyr.io/)
  * [Backblaze](https://www.backblaze.com/)
  * [Amazon S3](https://aws.amazon.com/s3/)
  * Custom course platform

52:46 - Common Questions

## Links
* [Syntax 014: Our Stacks Explained](https://syntax.fm/show/014/our-stacks-explained)
* [Adobe Premier Pro](https://www.adobe.com/products/premiere.html)
* [Figma](https://www.figma.com/)
* [VS Code](https://code.visualstudio.com/)
* [Audio-Technica AT2020](https://www.amazon.com/Audio-Technica-AT2020-Cardioid-Condenser-Microphone/dp/B0006H92QK)
* [Blue Bluebird](https://www.amazon.com/Blue-Microphones-Large-Diaphragm-Condenser-Microphone/dp/B01MZBLKN5)
* [BSW](https://bswusa.com)
* [Sweetwater](https://www.sweetwater.com/)
* [Tim Smith - Video Editing](https://ttimsmith.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Hyperdrive](https://www.netflix.com/title/80189648)
* Wes: [PicQuic Screwdriver](https://amzn.to/2Lj7HAg)

## Shameless Plugs
* Scott: [LevelUpTutorials Pro - Advanced Gatsby & Shopify](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",3b850b1dcac2530a8f8c8a58cf9aaa6f913883ce95e622b32e4b47d098be9e99,how-we-record-edit-and-host-our-courses,/shows/178 - courses.md,2023-10-16 20:07:00.459,2023-10-27 15:57:49.564,TASTY
syntax_podcast_show_00179,179,Hasty Treat - The TLD Game,2019-09-16 13:00:00.822,https://traffic.libsyn.com/syntax/Syntax179.mp3,"
In this Hasty Treat, Scott and Wes are playing a game! It's called the TLD game, where Scott and Wes try to stump each other with questions about top level domains.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

1:55 - The rules of the game

We pick a TLD from a list, and the other person needs to guess:

1. Is it for a country or business? -5 points
2. What country, business, or type of business is it for? -5 points
3. How much per year does it cost to register? You may also say ""unregisterable"" +/- off by $$
4. is scott.___ and wes.___ available?  -10 for each

5:40 - .BO

7:51 - .BZH

9:50 - .BANANAREPUBLIC

11:15 - .BABY

14:04 - .KR

16:09 - .MOTO

17:25 - .AW

19:16 - .IM

## Links
* [101Domain](https://www.101domain.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f6d2e5f77d65fe31f416608244e845563bbea3d08b95599d7ff52c5ef6d1fcda,hasty-treat-the-tld-game,/shows/179 - TLD.md,2023-10-16 20:07:00.499,2023-10-27 15:57:49.601,HASTY
syntax_podcast_show_00180,180,Potluck - Why Webpack? × Serverless × Agencies × Recruiters × CSS Grid × MQ in Styled Components,2019-09-18 13:00:00.822,https://traffic.libsyn.com/syntax/Syntax180.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about webpack, serverless, agencies, recruiters, CSS Grid, media queries and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

5:06 - Q: What do you think about webpack vs parcel vs the old way (gulp, etc.)?

11:30 - Q: What is your opinion on AWS Lambda functions?

15:42 - Q: How do you push new Syntax.fm episodes into production? Each episode is written in markdown. Do you have a different branch for each episode and merge into master? What's your strategy to avoid releasing the episode before the intended date?

21:25 - Q: Can Scott share some of his experiences working at an agency? Are there any red flags for when you should jump ship?

30:45 - Q: Whats the deal with recruiters? How do they work, and should you use one to land a new job?

36:46 - Q: What do you think about Upwork? Is it possible to find cool full-time jobs there or is it only 'work for beer'?

41:27 - Q: If my website is already fast, why should I sacrifice my developer experience and learn a new syntax?

44:18 - Q: Will there be a CSS grid inspector on Chrome? Do you use any 3rd party grid inspectors or stick with Firefox's CSS grid inspector?

46:38 - Q: What the best way to handle media queries in Gatsby with styled components?

## Links
* [Webpack](https://webpack.js.org/)
* [Parcel](https://parceljs.org/)
* [Gulp](https://gulpjs.com/)
* [CodeShip](https://codeship.com/)
* [Semaphore](https://github.com/marketplace/semaphore)
* [r/reactjs](https://www.reddit.com/r/reactjs/)
* [r/webdev](https://www.reddit.com/r/webdev/)
* [Wordpress](https://wordpress.org/)
* [Upwork](https://www.upwork.com/)
* [Fiverr](https://www.fiverr.com/)
* [Svelte](https://svelte.dev/)
* [Syntax 173: Hasty Treat - Wes & Scott Look At Svelte 3](https://syntax.fm/show/173/hasty-treat-wes-and-scott-look-at-svelte-3)
* [Firefox CSS Grid Inspector](https://www.mozilla.org/en-US/developer/css-grid/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: DIY Air Filter
  * [Box Fan](https://amzn.to/2HX2ITM)
  * [Air Filter](https://amzn.to/2A5oBfb)
* Wes: [Ripride with Andy Roy - Episode 6 with Steve-O](https://www.youtube.com/watch?v=4z_1IjBVlSc) 

## Shameless Plugs
* Scott: [LevelUpTutorials Pro - Advanced Gatsby & Shopify](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",2461cf78149ccb960b6e83940919b71aa1e6c4948daf3e63f9864c70c080f432,potluck-why-webpack-serverless-agencies-recruiters-css-grid-mq-in-styled-components,/shows/180 - potluck.md,2023-10-16 20:07:00.540,2023-10-27 15:57:49.644,TASTY
syntax_podcast_show_00181,181,Hasty Treat - Automating Stuff,2019-09-23 13:00:00.529,https://traffic.libsyn.com/syntax/Syntax181.mp3,"
In this Hasty Treat, Scott and Wes are talking about automation — apps, workflows, resources, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:16 - Alfred workflows

9:32 - Smart home routines

13:16 - Bash scripts & aliases

17:06 - Remove node_modules

* `find . -name ""node_modules"" -type d -prune -exec rm -rf '{}' +`

18:43 - Other

## Links
* [Alfred](https://www.alfredapp.com/)
* [Wyze Cam](https://www.wyze.com/)
* [Google Home](https://store.google.com/gb/product/google_home)
* [Drip](https://www.drip.com/)
* [Divvy](https://mizage.com/divvy/)
* [Z](https://github.com/rupa/z)
* [Wes' Video on Z](https://www.youtube.com/watch?v=qbNn5zJLZU0)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",28e5091a4e30b8ee48ac04554d39b976511c0497d3abb1dcba6653aaf548afc7,hasty-treat-automating-stuff,/shows/181 - automating stuff.md,2023-10-16 20:07:00.585,2023-10-27 15:57:49.683,HASTY
syntax_podcast_show_00182,182,"Practical - How would we build Airbnb, Twitter, or Reddit?",2019-09-25 13:00:00.529,https://traffic.libsyn.com/syntax/Syntax182.mp3,"
In this episode, Scott and Wes are trying something new! It's called Practical, in which Scott and Wes take a topic and flesh out all the theory into something super practical. Today's topic comes from a listener question asking how they would build a simple version of a modern web app like Twitter, Reddit, or Airbnb. 

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

3:03 - Backend

* [Express](https://expressjs.com/)
* [Node](https://nodejs.org)
* [GraphQL](https://graphql.org/)
* [MongoDB](https://www.mongodb.com/)

14:45 - Frontend

* [React](https://reactjs.org/)
* [Next.js](https://nextjs.org/)
* Styled components
* Stay as close to real CSS as possible

22:39 - Deployment process

* Serverless
* [Now](https://zeit.co/home)
* Ideally one app that handles everything

28:38 - Email

* [Syntax Ep 32: Designing, Templating, Inlining and Sending Email](https://syntax.fm/show/032/designing-templating-inlining-and-sending-email)
* [mjml](https://mjml.io/)
* [Juice](https://github.com/Automattic/juice)
* [Inky](https://github.com/foundation/inky)
* [Nodemailer](https://nodemailer.com)
* [Postmark](https://postmarkapp.com/)
* [Mailjet](https://www.mailjet.com/)
* [Mandrill](https://mandrill.com/)
* Get everyone set up and working in two different systems, so you can switch easily if something goes wrong

33:32 - Users / Auth / Cookies / Permissions 

* Use something like a pre-existing package or service rather than roll your own (though it can get expensive quickly)
* [Passport](http://www.passportjs.org/)
* [Auth0](https://auth0.com/)
* [accounts-js](https://accounts-js.netlify.com/)

38:48 - Images

* [Cloudinary](https://cloudinary.com/)
* [imgIX](https://www.imgix.com/)

41:50 - Other things to be aware of

* Handling cash
  * [Stripe](https://stripe.com/)
  * [PayPal](https://www.paypal.com/us/home)
  * [Braintree](https://www.braintreepayments.com/)
  * [Recurly](https://recurly.com/)
* Queueing

## Links
* [Ruby on Rails](https://rubyonrails.org/)
* [Django](https://www.djangoproject.com/)
* [Meteor](https://www.meteor.com/)
* [MySQL](https://www.mysql.com/)
* [PHP](https://www.php.net/)
* [Postgres](https://www.postgresql.org/)
* [Mongoose](https://mongoosejs.com/)
* [Drip](https://www.drip.com/)
* [ConvertKit](https://convertkit.com/)
* [Feathers](https://feathersjs.com/)
* [David Luecke](https://twitter.com/daffl)
* [Tweetdeck](https://tweetdeck.twitter.com/)
* [Next.js](https://nextjs.org)
* [react-router](https://www.npmjs.com/package/react-router)
* [Reach Router](https://reach.tech/router)
* [Gatsby](https://www.gatsbyjs.org/)
* [Digital Ocean](https://www.digitalocean.com/)
* [Heroku](https://www.heroku.com/)
* [Redux](https://redux.js.org/)
* [Svelte](https://svelte.dev/)
* [Gridsome](https://gridsome.org/)
* [Mailchimp](https://mailchimp.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [K-Safe](https://amzn.to/300gH6l)
* Wes: [Bon Appetit YouTube Channel](https://www.youtube.com/channel/UCbpMy0Fg74eXXkvxJrtEn3w) 

## Shameless Plugs
* Scott: [Svelte Course Coming Soon!](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Flexbox.io Course](https://flexbox.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",04deee0c73a1a4d732856e2242107c15d36b19c11c8139366092655933c57435,practical-how-would-we-build-airbnb-twitter-or-reddit,/shows/182 - practical.md,2023-10-16 20:07:00.637,2023-10-27 15:57:49.724,TASTY
syntax_podcast_show_00183,183,Hasty Treat - Developing Better Habits,2019-09-30 13:00:00.962,https://traffic.libsyn.com/syntax/Syntax183.mp3,"
In this Hasty Treat, Scott and Wes are talking about developing better habits — strategies, avoiding distractions, best practices, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:03 - Habits we're trying to build

* Scott
  * Focus on one project at a time
    * Alfred tasks to quit apps and block sites
  * Not being efficient with my time
    * Daily todo lists and utilizing calendar
  * Too much screen time
    * Listening to music in the background instead of having the TV on
* Wes
  * Flossing
  * Mindless context switching

13:37 - General strategies for building habits

* Make them trackable
  * Easy enough to not ignore them
  * Quantifying them is key
* Make them small enough
* Be accountable
  * Tell other people your habits and have them remind you about them
* Replace bad habits with good things
  * Design a sticker
  * Reply to three emails
  * Drink some water
* Celebrate your wins productively
* Keep the streak alive
* Can't do x until y is done

## Links
* [uhabits](https://github.com/iSoron/uhabits)
* [Done](https://apps.apple.com/us/app/done-a-simple-habit-tracker/id1103961876)
* [Loop](https://play.google.com/store/apps/details?id=org.isoron.uhabits&hl=en_US)
* [K-Safe](https://amzn.to/300gH6l)
* [Alfred](https://www.alfredapp.com/)
* [Codepen](https://codepen.io/)
* [Atomic Habits](https://www.amazon.com/Atomic-Habits-Proven-Build-Break/dp/0735211299)
* [The Power of Habit](https://www.amazon.com/Power-Habit-What-Life-Business/dp/081298160X)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ec071b1baabe1cb5527233d3c4dd2dc1b53208b8f2c23f4df4ffe41660a302fd,hasty-treat-developing-better-habits,/shows/183 - habits.md,2023-10-16 20:07:00.683,2023-10-27 15:57:49.768,HASTY
syntax_podcast_show_00184,184,Desktop & Mobile Apps With a Single Codebase,2019-10-02 13:00:00.962,https://traffic.libsyn.com/syntax/Syntax184.mp3,"
In this episode, Scott and Wes talk with Etienne Lemay, developer of [Missive](https://missiveapp.com/), about his experience building Missive, best practices, and the pros and cons of building desktop and mobile apps with a single codebase.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests

* [Etienne Lemay](https://twitter.com/EtienneLem)

## Show Notes

0:57 - What is Missive?

6:10 - What is the desktop app built in?

9:44 - Did you use any particular libraries for the front-end? 

11:44 - How are you managing state?

13:37 - Is it challenging to do all of this in JS?

15:07 - What was the catalyst for the ""multi-conversation swipe""? 

21:32 - What is the mobile app built in?

24:00 - What are the advantages of Cordova?

30:30 - How do you manage offline/syncing/etc. so well in a JS app?

34:56 - How do you test it?

36:52 - Have you looked into Cypress?

39:35 - How do you style it?

## Links
* [@EtienneLem](https://twitter.com/etiennelem)
* [Missive](https://missiveapp.com/)
* [Spark](https://sparkmailapp.com/)
* [CoffeeScript](https://coffeescript.org/)
* [Backbone](https://backbonejs.org/)
* [Redux](https://redux.js.org/)
* [Typescript](https://www.typescriptlang.org/)
* [Electron](https://electronjs.org/)
* [Webpack](https://webpack.js.org/)
* [Javascript30](https://javascript30.com/)
* [Cordova](https://cordova.apache.org/)
* [React Native](https://facebook.github.io/react-native/)
* [Fastlane](https://fastlane.tools/)
* [Amazon S3](https://aws.amazon.com/s3/)
* [Cypress](https://www.cypress.io/)
* [Sass](https://sass-lang.com/)
* [TailwindCSS](https://tailwindcss.com/)
* [Svelte](https://svelte.dev/)
* [Syntax 176: Building Steam Games with React](https://syntax.fm/show/176/building-steam-games-with-react)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Disgraceland Podcast](https://www.disgracelandpod.com/)
* Wes: [Wagner 590 Spray Gun](https://amzn.to/2l660M9)
* Etienne: [Prettier](https://prettier.io/) 

## Shameless Plugs
* Scott: [Svelte Course Coming Soon!](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!
* Etienne: [Missive](https://missiveapp.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9b0f53d3319923f87563352a3134a25790ef115ad7dc63fec45a1d2855735a0a,desktop-and-mobile-apps-with-a-single-codebase,/shows/184 - single codebase.md,2023-10-16 20:07:00.732,2023-10-27 15:57:49.812,TASTY
syntax_podcast_show_00185,185,Hasty Treat - Feature + Release Planning,2019-10-07 13:00:00.237,https://traffic.libsyn.com/syntax/SFF185.mp3,"
In this Hasty Treat, Scott and Wes talk about feature and release planning — dealing with bugs, task management, best practices, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

4:06 - Wes:

* Features are logged into software (Github, Jira, etc.)
* I use a Kanban board - I bubble them up and down in the order in which I want to release them
* I don't plan for Q1, Q1, etc.. 
* Tear off an issue, tackle it, test and deploy.

10:39 - Scott: 

* All issues/features get a priority tag (e.g. p1 → p4) regardless of the system
* Bugs go in Github
* Features and platform improvements go in Notion
* Table of priorities (with git branch, lead dev, release number, emoji icon, what it contains, etc.)

## Links
* [Github](https://github.com/)
* [Trello](https://trello.com/)
* [Kanban](https://en.wikipedia.org/wiki/Kanban)
* [Jira](https://www.atlassian.com/software/jira)
* [Canny](https://canny.io/)
* [Notion](https://www.notion.so/)
* [Getting Things Done](https://gettingthingsdone.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7810a7eb23e23c67a24caccd51eba83bff01e663bb3aba03b6a42e1866c85fd5,hasty-treat-feature-release-planning,/shows/185 - feature release planning.md,2023-10-16 20:07:00.771,2023-10-27 15:57:50.003,HASTY
syntax_podcast_show_00186,186,Potluck - Terminal Configs × CSS Reset × Flexbox × Freelancing × NPM Dependencies × Project Hand-off × More!,2019-10-09 13:00:00.237,https://traffic.libsyn.com/syntax/Syntax186.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about freelancing, handing off projects to other developers, terminal configs, podcast apps, how much flexbox is too much flexbox, npm dependencies, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

3:49 - Q: I'm interested in freelancing full-time and have some projects, big and small, lined up over the next few months to work on the side. How much work is a good amount of work to transition into freelancing full-time?

9:52 - Q: How much flexbox is too much flexbox? Is it a bad idea to use a dozen flexboxes for a viewport-filling application?

13:19 - Q: Can you explain the ""potential"" benefit of resetting CSS and whether it's necessary? In which circumstances should we use such an approach?

15:26 - Q: I would love to hear an episode, or potluck segment, about your shell/fish/zsh configs. Maybe explain little tweaks you've made and why you've chosen the shell you use.

23:26 - Q: I always get confused on when and how to use .bind() method. Any pointers on when I should use .bind(), like in what situations? I also see it used a lot in React apps, but have no idea why they are using it. Could you explain this in detail?

27:02 - What are your suggestions for handing off client sites for freelance work? I don't take many contracts (I have another full time job) but I'll take one here or there during summer to supplement a little bit. I'm finding it difficult to make a clean hand-off when the project is finished. The contractual requirements are met and like anything, there are always tweaks to be made. I'll handle some minor deployment issues without billing, but I struggle with where to draw the line. What suggestions do you have? 

35:19 - This question is for Wes. I live in Central New York, and every time I go on the highway heading north or south I see several Ontario license plates. Where are ya'll going all the time? Is there a secret Canadian spot down here? 

38:20 - Each time I re-open an old project I lose so much time with npm dependencies being outdated and it drives me mad! I'm starting to dislike npm and everything around it, but is it npm only? How does other languages like php, python or GO handle this mess of dependencies? Are we better today than yesterday and I'm just complaining about nothing?

43:50 - Which podcast player do you use (Android, PC, or other phone/tablet), and why? Where do you listen to them?

## Links
* [Flexbox](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox)
* [React Native](https://facebook.github.io/react-native/)
* [CSS Grid](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)
* [Normalize](https://necolas.github.io/normalize.css/)
* [iTerm2](https://www.iterm2.com/)
* [zsh](https://ohmyz.sh/)
* [Fish](https://fishshell.com/)
* [Hyper](https://hyper.is/)
* [Wes' Command Line Power User Course](https://commandlinepoweruser.com/)
* [Overcast](https://overcast.fm/)
* [Pocket Casts](https://www.pocketcasts.com/)
* [Planet Money](https://www.npr.org/podcasts/510289/planet-money)
* [Joe Rogan](http://podcasts.joerogan.net/)
* [The Indicator](https://www.npr.org/podcasts/510325/the-indicator-from-planet-money)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Untitled Goose Game](https://www.youtube.com/watch?v=9LL2AtHo1gk)
* Wes: [Garmin vivoactive 3](https://amzn.to/2oyCuA3)

## Shameless Plugs
* Scott: [Svelte For Beginners](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Wes' Instagram](https://www.instagram.com/wesbos/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",861064332f26bc7fd87097c89837780fc6d514fcaae2628b92d4cc26257fdee0,potluck-terminal-configs-css-reset-flexbox-freelancing-npm-dependencies-project-hand-off-more,/shows/186 - potluck.md,2023-10-16 20:07:00.815,2023-10-27 15:57:50.045,TASTY
syntax_podcast_show_00187,187,Hasty Treat - Float Tank Experiences,2019-10-14 13:00:00.188,https://traffic.libsyn.com/syntax/Syntax187.mp3,"
In this Hasty Treat, Scott and Wes talk about their experiences with float tanks!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
2:28 - What is a float tank?

6:47 - What are the benefits?

8:50 - How did you feel during the float?

17:28 - Would you do it again?

## Links
* [The Joe Rogan Experience](http://podcasts.joerogan.net/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5ad361ed0b18c481221e9985097a21ef6c7e68185aa849e368f1f936dbc39fe9,hasty-treat-float-tank-experiences,/shows/187 - float tank.md,2023-10-16 20:07:00.867,2023-10-27 15:57:50.088,HASTY
syntax_podcast_show_00188,188,The Fundamentals - Server Side,2019-10-16 13:00:00.982,https://traffic.libsyn.com/syntax/Syntax188.mp3,"
In this episode of Syntax, Scott and Wes talk about server side fundamentals — the important things you should know if you're interested in diving into server side. 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

2:53 - Requests and responses

9:21 - What is a server?

10:33 - Ports

13:50 - Database connection and interaction

15:16 - Cookies and sessions

15:48 - Writing files and directory permissions

19:34 - Headers

22:13 - Error Handling

22:50 - Logs

25:04 - Async data handling

26:33 - Routing

30:44 - Mime types

36:26 - Authentication

37:49 - Environmental variables

40:37 - Deployment

43:24 - Advanced

## Links
* [GraphQL](https://graphql.org/)
* [Node](https://nodejs.org/)
* [React For Beginners](https://reactforbeginners.com/)
* [Next.js](https://nextjs.org)
* [Meteor](https://www.meteor.com/)
* [Papertrail](https://papertrailapp.com/)
* [pjax](https://pjax.herokuapp.com/)
* [jQuery](https://jquery.com/)
* [Github](https://github.com/)
* [iMazing HEIC Converter](https://imazing.com/heic)
* [Now.sh](https://zeit.co/home)
* [Netlify](https://www.netlify.com/)
* [Twitter streaming API](https://developer.twitter.com/en/docs/tutorials/consuming-streaming-data)
* [B is for Build](https://www.youtube.com/channel/UCl4-WBRqWA2MlxmZorKOV7w)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Samcrac YouTube Channel](https://www.youtube.com/channel/UCtn2hU9HKYQAgDtwrhux7Sw)
* Wes: [Wyze Plugs](https://amzn.to/2o2iXZ9)

## Shameless Plugs
* Scott: [Svelte For Beginners](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b7af8c721b5bc0e1f50883ab8d1b27e1e3fc0f864f5a801ca039437b2af2a4be,the-fundamentals-server-side,/shows/188 - server side.md,2023-10-16 20:07:00.907,2023-10-27 15:57:50.131,TASTY
syntax_podcast_show_00189,189,Hasty Treat - React Server Side Rendering,2019-10-21 13:00:00.494,https://traffic.libsyn.com/syntax/Syntax189.mp3,"
In this Hasty Treat, Scott and Wes talk about server side rendering — what it is, how to use it, best practices, things to avoid, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:20 - What is SSR?

4:16 - Why SSR at all?

8:39 - Platforms that do SSR out of the box

11:18 - Gotchas

* useLayoutEffect
`import { useEffect, useLayoutEffect } from 'react'`
`const useIsoLayoutEffect =`
  `typeof window !== 'undefined' ? useLayoutEffect : useEffect`
`export default useIsoLayoutEffect`

18:20 - Tools

## Links
* [Next.js](https://nextjs.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Webpack](https://webpack.js.org)
* [Parcel](https://parceljs.org/)
* [Meteor](https://www.meteor.com/)
* [React](https://reactjs.org/)
* [NoSSR component](https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/NoSsr/NoSsr.js)
* [Syntax 127: Hasty Treat - React Suspense](https://syntax.fm/show/127/hasty-treat-react-suspense)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",bf700f8681b1d05c5ddeb1375b5c1524bf580a0d9eb2a5176d994894a2a80a11,hasty-treat-react-server-side-rendering,/shows/189 - SSR.md,2023-10-16 20:07:00.945,2023-10-27 15:57:50.182,HASTY
syntax_podcast_show_00190,190,"Migrating, Deploying, and Hosting WordPress",2019-10-23 13:00:00.494,https://traffic.libsyn.com/syntax/Syntax190.mp3,"
In this episode of Syntax, Scott and Wes talk with Brad Touesnard of [Delicious Brains](https://deliciousbrains.com/) about migrating, deploying, and hosting WordPress.  

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Hasura - Sponsor
Hasura is an open-source GraphQL engine that helps you instantly setup a scalable and realtime GraphQL backend. Hasura makes your team super productive by dynamically composing a schema backed by databases and services that you can securely query from frontend clients. Get started at [hasura.io](https://hasura.io/) to try it out in 30 seconds!

## Guests

* [Brad Touesnard](https://twitter.com/bradt)

## Show Notes

3:50 - Why did Brad start Delicious Brains?

5:25 - What plugins does Delicious Brains make?

11:40 - Migrating WordPress

16:50 - Migrating databases

24:20 - How do you do version control with WordPress?

37:06 - What's the easiest way to deploy and host WordPress?

40:23 - What are some examples of managed WordPress hosts?

46:58 - What does your deployment process look like from beginning to end?

50:22 - Thoughts on headless WordPress

53:12 - Is serverless WordPress a thing? 

## Links
* [Delicious Brains](https://deliciousbrains.com/)
* [WP Migrate DB Pro](https://deliciousbrains.com/wp-migrate-db-pro/)
* [WP Offload Media](https://deliciousbrains.com/wp-offload-media/)
* [WP Offload SES](https://deliciousbrains.com/wp-offload-ses/)
* [SpinupWP](https://spinupwp.com/)
* [Heroku](https://www.heroku.com/)
* [Now.sh](https://zeit.co/home)
* [WP Engine](https://wpengine.com/)
* [Flywheel](https://getflywheel.com/)
* [Advanced Custom Fields](https://www.advancedcustomfields.com/)
* [Composer](https://getcomposer.org/)
* [WP Packagist](https://wpackagist.org/)
* [WordPress.org](https://wordpress.org/)
* [React](https://reactjs.org)
* [Laravel](https://laravel.com/)
* [Pagely](https://pagely.com/)
* [Kinsta](https://kinsta.com/)
* [GoDaddy](https://www.godaddy.com/)
* [WordPress.com](https://wordpress.com/)
* [SiteFround](https://www.siteground.com/)
* [Buddy](https://buddy.works/)
* [Digital Ocean](https://www.digitalocean.com/)
* [Laravel Forge](https://forge.laravel.com/)
* [npm](https://www.npmjs.com)
* [Codeship](https://codeship.com)
* [Gatsby](https://www.gatsbyjs.org)
* [Laravel Vapor](https://vapor.laravel.com/)
* [Installing via Composer](https://deliciousbrains.com/wp-migrate-db-pro/doc/installing-via-composer/) 
* [WordPress deployment workflow](https://spinupwp.com/wordpress-deployment-workflow-preparing/)
* [Managing your WordPress site with Git and Composer](https://deliciousbrains.com/storing-wordpress-in-git/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Brad: [Teppanyaki Grill](https://amzn.to/2ATU6sY)
* Scott:
  * [Succession](https://www.hbo.com/succession)
  * [The Righteous Gemstones](https://www.hbo.com/the-righteous-gemstones)
* Wes: [Magnatiles](https://amzn.to/3336kMa)

## Shameless Plugs
* Brad: [All Products](https://deliciousbrains.com/)
* Scott: [Svelte For Beginners](https://www.leveluptutorials.com/tutorials/svelte-for-beginners) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2ea15aaf1a4584487f21df584f2e2ea2845cfc0e6896cdd96b0701888e63ad0c,migrating-deploying-and-hosting-wordpress,/shows/190 - WordPress.md,2023-10-16 20:07:01.006,2023-10-27 15:57:50.232,TASTY
syntax_podcast_show_00191,191,Hasty Treat - Scott Moves to iPhone,2019-10-28 13:00:00.974,https://traffic.libsyn.com/syntax/Syntax191.mp3,"
In this Hasty Treat, Scott talks about moving to iPhone — his experiences with both Android and iOS, the advantages and disadvantages of both, and more! 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

1:59 - My device history

* OG Droid → Nexus → Pixel
* Misconceptions of android
  * It's Windows for phones
  * It's cheaper or not as nice

5:03 - Why switch?

6:39 - Who wins what?

* Android
  * Homescreen
  * Low light photography
  * Usability
    * Squeeze assistant
    * Google search integrated everywhere
  * Search
  * Keyboard
  * Notification

* iOS
  * Apps
  * Performance
  * Camera overall
  * Device quality
  * Fun stuff
  * Haptics

## Links
* [1Password](https://1password.com/)
* [LastPass](https://www.lastpass.com/)
* [Gboard](https://play.google.com/store/apps/details?id=com.google.android.inputmethod.latin&hl=en_US)


## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e821df7403f9f43c11d6e496c74c305abc18a2a94b074ee3262d2b2e0b436981,hasty-treat-scott-moves-to-iphone,/shows/191 - iphone.md,2023-10-16 20:07:01.056,2023-10-27 15:57:50.360,HASTY
syntax_podcast_show_00192,192,Spooky Web Dev Horror Stories,2019-10-30 13:00:00.741,https://traffic.libsyn.com/syntax/Syntax192.mp3,"
In this episode of Syntax, Scott and Wes talk about web dev horror stories — things you can only hope will never happen to you!   

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

2:09 - Scott's Disastrous Git Clean

4:35 - Magic Updates the Gathering

8:52 - YAAAAS

9:37 - Token Trouble

12:16 - jQuery Plugins

15:22 - Success!

18:00 - Parental Advisory

21:47 - Students Changing Grades

22:46 - Lorem Sh!tsum

26:22 - Drowning in a Waterfall

28:53 - Magneto Upgrades

30:00 - JOHN CENA

33:24 - Migration Migraine

35:39 - Primary Key Nightmare

36:26 - The $20,000 YAML formatter

## Links
* [Adam J. Sontag](https://twitter.com/ajpiano)
* [jQuery](https://jquery.com/)
* [GitLab](https://about.gitlab.com/)
* [Gitlab Database Incident](https://about.gitlab.com/blog/2017/02/01/gitlab-dot-com-database-incident/)
* [Magento](https://magento.com/)
* [Meteor](https://www.meteor.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Dyson Hand Vacuum](https://amzn.to/2MrI3K3)
* Wes: [/r/ AbsoluteUnits](https://www.reddit.com/r/AbsoluteUnits/)

## Shameless Plugs
* Scott: [Fullstack React with JS9](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",11dbe6838ff78b52676ab5f62cfe2fabc797b170a9d203d643effeb65dc3ab69,spooky-web-dev-horror-stories,/shows/192 - spooky.md,2023-10-16 20:07:01.098,2023-10-27 15:57:50.402,TASTY
syntax_podcast_show_00193,193,Hasty Treat - Spooky Stories,2019-11-04 14:00:00.779,https://traffic.libsyn.com/syntax/Syntax193.mp3,"
In this Hasty Treat, Scott and Wes bring you _more_ web dev horror stories! 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:26 - Perf Woes

3:42 - Always Backup Your Backups

4:54 - Kill Children

6:03 - Robots Don't Eat Food

8:32 - Email Goof Up

9:44 - Hundreds of Thousands of Date Issues

10:46 - Spooky August

12:32 - You're up to .bat

13:17 - Printed Code

15:12 - ThinkGeek

16:12 - It would take a while to Ketchup on all these orders

17:05 - This story makes me want to stick my head in async

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",7ccc4c5a021dbb6bc50c2c1de9d4a7dc8b7801b1db5c42d6c1036862da94577c,hasty-treat-spooky-stories,/shows/193 - spooky.md,2023-10-16 20:07:01.138,2023-10-27 15:57:50.447,HASTY
syntax_podcast_show_00194,194,Potluck - Gatsby vs Next × Is Google Home spying on you? × Flat File CMS × CSS Frameworks × Hosting Client Sites × More!,2019-11-06 14:00:00.779,https://traffic.libsyn.com/syntax/Syntax194.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about Gatsby vs Next, Google Home and privacy, flat file CMS, working with designers, CSS frameworks and more!

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

6:15 - Q: Curious if you would ever consider running your course platform on Gatsby instead of NextJs? If not, what dynamic content would prevent you from doing so?

10:48 - Q: What's the difference between a software developer and a software engineer, in your opinion?

13:11 - Q: How do you deal with designers who design without any thought about how dev will implement it?

15:46 - Q: I saw that Wes has an example in one of his slides where the Array prototype is written onto the Nodelist prototype. Is this safe enough for production as it overrides all regular NodeList behavior? 

19:18 - Q: In a potluck episode you mentioned that you do not host your clients' website. If you don’t host you clients' website how do you usually go about handling clients that are less tech savvy? Or do you avoid those types of clients?

21:30 - Q: I know you guys (especially Wes) have been pretty insistent recently on not hosting clients' sites yourself, but what do you guys think about continuously hosting client sites with a service like Netlify? It's highly unlikely to go down and scales all for you, so it might be a bit of reoccurring income if you bill them yearly for the minimal Netlify fees.

24:44 - Q: I was listening to your episode on ""The Smart Home"" and I'm very interested in buying a Google Home Mini myself. However, I cannot stop thinking about the privacy implications of an always listening device around the house. What are your thoughts on this topic and on privacy related to online services in general?

29:08 - Q: What are your thoughts about using a CMS that uses flat files vs one that uses a traditional MySQL or Postgres database for a company blog that won't have insane traffic? We're currently evaluating Grav CMS and Craft CMS.

32:17 - Q: Have you used data attributes as custom elements in CSS and JS?

37:32 - Q: Why do so many people jump on styled-components/CSS in JS? Are these all people who have never used Sass/SCSS?! It seems like such a PITA to get Sass working with either of these. It feels like coding tables vs HTML 5. To me it seems like a step backwards.

44:26 - Q: When do you, if ever, reach for a component library, like Material or Bootstrap? Currently working a corporate job where it’s almost expected to use one of these for all internal applications. I usually prefer to make my own, but I’m wondering if I’m just making my life more difficult than it needs to be? Any advice?

48:30 - Q: Could you guys chat about Git clients and which ones you guys use and why? Or are you guys hardcore terminal geeks?

## Links
* [Gatsby](https://www.gatsbyjs.org/)
* [Next.js](https://nextjs.org/)
* [Bling.js](https://gist.github.com/paulirish/12fb951a8b893a454b32)
* [Syntax 118: The Smart Home](https://syntax.fm/show/118/the-smart-home)
* [Grav CMS](https://getgrav.org/)
* [Craft CMS](https://craftcms.com/)
* [prismic](https://prismic.io/)
* [Sanity](https://www.sanity.io/)
* [Contentful](https://www.contentful.com/)
* [Tina CMS](https://tinacms.org/)
* [Forestry](https://forestry.io/)
* [Airdale Chemical](http://www.airedalechemical.com/)
* [Material](https://material.io/)
* [Bootstrap](https://getbootstrap.com/)
* [VS Code](https://code.visualstudio.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [HeavySet - Gym Workout Log](https://www.runloop.com/heavyset-gym-workout-log-for-iphone)
* Wes: [Baroness Von Sketch](https://www.cbc.ca/baroness/m_site/)

## Shameless Plugs
* Scott: [FullStack React with NextJS](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript Course](https://www.beginnerjavascript.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a5d55d1bcc609e16e2fefe3bea347b04c67447311fd4fb96669e116cd2e02f15,potluck-gatsby-vs-next-is-google-home-spying-on-you-flat-file-cms-css-frameworks-hosting-client-sites-more,/shows/194 - potluck.md,2023-10-16 20:07:01.188,2023-10-27 15:57:50.489,TASTY
syntax_podcast_show_00195,195,Hasty Treat - Buying and Selling Domain Names,2019-11-11 14:00:00.714,https://traffic.libsyn.com/syntax/Syntax195.mp3,"
In this Hasty Treat, Scott and Wes talk about domain names — buying and selling, best practices and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:50 - Buying a domain

10:47 - Selling a domain

13:50 - Transferring a domain

## Links
* [who.is](https://who.is/)
* [GoDaddy](https://www.godaddy.com/)
* [JavaScript.co](https://javascript.co/)
* [BeginnerJavaScript.com](https://www.beginnerjavascript.com/)
* [LearnNode.com](https://learnnode.com/)
* [BeginnerJS.com](https://beginnerjs.com/)
* [KitBos.com](https://kitbos.com/)
* [Cloudflare](https://www.cloudflare.com/)
* [Learn.li](http://learn.li/)
* [Learnli.co](http://learnli.co/)
* [Escrow.com](http://escrow.com/)
* [Hover](https://hover.com/)
* [Bob.com](http://bob.com)
* [Sedo.com](https://sedo.com/)
* [Park.io](https://park.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",037ad3b5dafc454f3ec03a7b1e6854f9f3caadad57f0dd3a1c5beab3db59c44e,hasty-treat-buying-and-selling-domain-names,/shows/195 - domains.md,2023-10-16 20:07:01.240,2023-10-27 15:57:50.534,HASTY
syntax_podcast_show_00196,196,Design Foundations For Developers,2019-11-13 14:00:00.714,https://traffic.libsyn.com/syntax/Syntax196.mp3,"
In this episode of Syntax, Scott and Wes talk about design foundations for developers — tips to follow that will make your designs better!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

6:35 - Our backgrounds in design

12:41 - Foundations

* Consistency makes a big difference
* Use ""training wheel"" tools until you are confident
* Always work within a system
* Less is more - subtle is better

19:39 - Color

* Color theory
* Complementary colors and shades
* Stick to color pallet generators until you are good enough

28:51 - Spacing

* More spacing than you think you need
* Vertical rhythm
* Letter spacing: -1px
* Consistent margin and padding

34:47 - Typography

* Sans vs serifs
* Finding fonts
* Use proven combinations until you know your way around

41:49 - Interaction

* Design for all states (e.g. standard, visited, active, hover, etc.)
* Animations should be quick
* Interactions should make sense

45:04 - Concerns beyond visuals

* Accessibility via color contrast
* Thin fonts and light grey are awful
* Think about the poor Windows users

48:47 - Inspiration + Resources

* Take inspiration from the best — you'll find your own voice after enough work
* Go easy on trends - blobby characters with purple hair
* Take a trip around the world wide web
* [Stripe](https://stripe.com/)
* [Dribbble](https://dribbble.com/)
* [Site Inspire](https://www.siteinspire.com/)
* [codrops](https://tympanus.net/codrops/)
* [Refactoring UI](https://refactoringui.com/)

## Links
* [Designer Starter Pack - Andrea Crofts](https://twitter.com/andreacrofts/status/1172885155352125441/)
* [LastPass](https://www.lastpass.com/)
* [Colour Lovers](https://www.colourlovers.com/) 
* [Syntax 142: Travis Neilson on Skills Gap, Design, Focus and Working at Google](https://syntax.fm/show/142/travis-neilson-on-skills-gap-design-focus-and-working-at-google/)
* [Bloomberg](https://www.bloomberg.com/)
* [Dropbox](https://www.dropbox.com/)
* [FontPair](https://fontpair.co/)
* [FontJoy](https://fontjoy.com/)
* [Figma - Google Font Pairings](https://www.figma.com/google-fonts/)
* [Type Scale](https://type-scale.com/)
* [Creative Market](https://creativemarket.com/)
* [Radnika Next](https://hanken.co/products/radnika-next/)
* [Stripe](https://stripe.com/)
* [Dribbble](https://dribbble.com/)
* [Syntax 72: Accessibility](https://syntax.fm/show/072/accessibility/)
* [Firefox](https://www.mozilla.org/en-US/firefox/new/)
* [Site Inspire](https://www.siteinspire.com/)
* [codrops](https://tympanus.net/codrops/)
* [Refactoring UI](https://refactoringui.com/)
* [Adam Wathan](https://adamwathan.me/)
* [Steve Schoger](https://twitter.com/steveschoger)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Reelgood](https://reelgood.com/)
* Wes: [Magnesium](https://www.amazon.com/Natures-Bounty-Magnesium-Supplement-Vegetarian/dp/B00H5PJ0HW/)

## Shameless Plugs
* Scott: [FullStack React with NextJS](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",09c35c5806ce390e96834b5a4db1da3a873bd094077f12adfae3e31b0477fd24,design-foundations-for-developers,/shows/196 - design.md,2023-10-16 20:07:01.307,2023-10-27 15:57:50.582,TASTY
syntax_podcast_show_00197,197,Hasty Treat - Tips For Writing Good CSS,2019-11-18 14:00:00.266,https://traffic.libsyn.com/syntax/Syntax197.mp3,"
In this Hasty Treat, Scott and Wes talk about tips for writing good CSS. 

## Sizzy - Sponsor
Sizzy is the browser made for developers and designers. Stop manually resizing your browser window and switching between devices so you can test responsive design. Speed up your workflow by developing and previewing your website on multiple devices at once. Sizzy includes powerful features and plugins that will help you take your web development game to the next level. Check it out at [Sizzy.co](https://sizzy.co/).

## Show Notes

4:08 - Use a system

4:50 - Use overrides and cascading 

* Embrace the cascade
* Don't rewrite the same CSS over and over again
* Understand why scoping is good

9:07 - Nail down typography early

* You can always revisit if it isn't what you need

10:36 - Pick a pattern and stick to it

* BEM
* Functional CSS
* CSS in JS

14:39 - Don't style based on element type (kind of) — a class should describe the component 

17:09 - Good naming techniques

* Describe what it is, not what it looks like
* Thing
  * ThingChild
    * ThingChild-modifier
* Scale sizes (e.g. s, m, l, xl)

21:43 - Other tips

* Group like CSS together
* Chunk into different files
* Write good comments
* CSS properties FTW

## Links
* [Stylus](http://stylus-lang.com/)
* [Webpack](https://webpack.js.org/)
* [Parcel](https://parceljs.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",abb9470016cde45e8421d012ee3cdc6d774bda0e209b7c2f2c1eee553e06f941,hasty-treat-tips-for-writing-good-css,/shows/197 - CSS.md,2023-10-16 20:07:01.374,2023-10-27 15:57:50.626,HASTY
syntax_podcast_show_00198,198,How To Get Better At Problem Solving,2019-11-20 14:00:00.266,https://traffic.libsyn.com/syntax/Syntax198.mp3,"
In this episode of Syntax, Scott and Wes talk about how to get better at problem solving — one of the most important skills to build as a developer.

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Prismic - Sponsor
Prismic is a Headless CMS for your next front end project. Create complex content type, relate data, and have your clients edit it all with the Prismic UI. Then pull the data into your project with their JSON or GraphQL API. Try it out with your next project - Gatsby, React + Apollo, or any other language. Check out their examples to get you started at [prismic.io/syntax](https://prismic.io/syntax). 

## Show Notes

2:43 - Gather info

* What is this thing trying to do? 
* Use tools
* DevTools are your best friend during this phase

8:01 - Know where to look (and use tools)

* Dev tools for client side
* Error logs
* [Sentry](https://sentry.io/)
* [LogRocket](https://logrocket.com/syntax)
* The most experienced people in any field know how to ask the right questions.
* Some of this will come with experience and nothing else. If you've seen a problem before, it's easier to solve.

10:00 - Look at the end game

* What are you really trying to do here? Don't focus so much on the tech that you miss the bigger picture. 

13:17 - Read Again

* Error logs provide the best clues. Read them closely.
* Actually read your code — don't skim it.
* Write comments while reading it, or follow existing comments — good for documenting, but also for structuring your thoughts.

18:08 - Make it simple (break it into smaller parts)

* Limit the number of inputs and outputs
* Get it working in a limited capacity (e.g. safe mode, Codepen, etc.)
* Comment out major sections of code until you have a working example
* Does this problem exist outside of the framework?
* Does this work in a clean environment?

25:35 - Take yourself out of your environment

* You should be able to take a look at the problem at all zoom levels
* Does it work locally but not on the server?
* Does it work in other browsers?

27:32 - Stay calm

* It's easy to get nervous or worked up when the stakes are high
* It won't serve you to panic. If you are panicking, take a 10 min walk to deep breath
* Take a shower, lift weights (seriously)

30:14 - Talk it over

* Getting the perspective of another developer can be invaluable

32:28 - Make things obvious

* Use debugger or label logs — don't let it be ambiguous
* For CSS bugs, use primary colors to make things stand out
* Use the right tool to make the problem stand out
  * Layers for CSS issues
  * Network for network issues
  * Performance tab (etc.)

35:12 - Use Git correctly to free up your techniques

* If you're code commits are up to date, you can heavily modify code without fear of deleting things — just revert to a previous commit once you find the issue and fix.

36:10 - Don't jump at solutions

* Take the time to fully dissect the problem
* Question you assumptions
* It can't possibly be a problem with ____. Well maybe it is.
  * Wes once spent hours trying to diagnose a check engine light when the gas cap was lose.

43:51 - Get good at pattern matching

* This comes with experience
* When did this problem start? 
* Did we deploy any code? Did we change any logic? 

44:54 - Get good at googling

* Being able to describe your problem is key.
* Search the error from Firefox

## Links
* [DevTools](https://developers.google.com/web/tools/chrome-devtools)
* [Sentry](https://sentry.io/)
* [LogRocket](https://logrocket.com/syntax)
* [CodePen](https://codepen.io/)
* [Syntax 154: SVGs with Sara Soueidan](https://syntax.fm/show/154/svgs-with-sara-soueidan)
* [@walpolea](https://twitter.com/walpolea)
* [Syntax 152: Debugging Tools + Tips](https://syntax.fm/show/152/debugging-tools-tips)
* [@bowlendev](https://twitter.com/bowlendev)
* [@dan_abramov](https://twitter.com/dan_abramov)
* [Ryan Dahl on creating Node.js](https://youtu.be/EeYvFl7li9E)
* [@LaurieonTech](https://twitter.com/LaurieonTech)
* [Firefox](https://www.mozilla.org/)
* [DuckDuckGo](https://duckduckgo.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Jeremy Ethier Youtube Channel](https://www.youtube.com/channel/UCERm5yFZ1SptUEU4wZ2vJvw)
* Wes: [Marpac Rohm Sound Machine](https://amzn.to/2Ncp1rw)

## Shameless Plugs
* Scott: [Typescript in React Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript Course](https://beginnerjavascript.com)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",3d89db88d923fa4b94c4592801834d337ffca0db1efc0e7c9af21256df45b2ff,how-to-get-better-at-problem-solving,/shows/198 - problem solving.md,2023-10-16 20:07:01.414,2023-10-27 15:57:50.680,TASTY
syntax_podcast_show_00199,199,Hasty Treat - So you want to make a course... Will people buy it?,2019-11-25 14:00:00.961,https://traffic.libsyn.com/syntax/Syntax199.mp3,"
In this Hasty Treat, Scott and Wes talk about making courses — techniques, best practices, things to avoid, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:07 - Validating your ideas 

4:44 - Generating ideas

6:38 - Figuring out which ideas will stick

10:00 - Show your expertise

14:02 - Pay attention to what's popular

15:50 - Collect email addresses

## Links
* [Microsoft Excel Stream Highlights](https://www.youtube.com/watch?v=xubbVvKbUfY)
* [Refactoring UI](https://refactoringui.com/)
* [Adam Wathan](https://twitter.com/adamwathan)
* [Steve Schoger](https://twitter.com/steveschoger)
* [Scott's Svelte 3 course](https://www.leveluptutorials.com/tutorials/svelte-for-beginners)
* [Wes' Sublime Text articles](https://wesbos.com/category/sublime-text/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c24cf56ed427eb1382abb68e9309365805faf28e71e26413ada047996d2f8e12,hasty-treat-so-you-want-to-make-a-course-will-people-buy-it,/shows/199 - courses.md,2023-10-16 20:07:01.451,2023-10-27 15:57:50.726,HASTY
syntax_podcast_show_00200,200,Show 200!,2019-11-27 14:00:00.961,https://traffic.libsyn.com/syntax/Syntax200.mp3,"
In this episode of Syntax, Scott and Wes celebrate 200 episodes of Syntax with a live Q&A!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

2:27 - With 2020 around the corner, what are your wild predictions for the the future of web design and development?

8:44 - Are site builders going to replace us as web developers?

13:30 - What does the future look like for Syntax?

19:01 - What emerging tech advancements most excite you for the next 5-10 years?

23:27 - What is the future of web hosting? What should hosting companies do differently?

27:40 - Why do you set your base font size to 10px?

32:40 - If you could go back in time, what would you say to yourself?

36:29 - How do you make an iFrame go 100% high?

39:10 - What's one thing you see developers stress out about for no reason?

44:46 - Do you feel overwhelmed with creating new content when there's so much already out there?

48:42 - How do you stay sane with your naming conventions?

51:15 - If Gatsby is best for static websites and Next is best for apps, how does Create React App compare?

54:30 - How much is too much or too little magic in a framework or library?

58:11 - Does Kait ever get tired of you buying a bunch of stuff?

61:45 - What is your office setup?

64:01 - How long until we can use Suspense for data loading with libraries other than Relay?

## Links
* [Pigeonhole](https://pigeonholelive.com/)
* [Keystone](https://www.keystonejs.com/)
* [VulcanJS](http://vulcanjs.org/)
* [NextJS](https://nextjs.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Meteor](https://www.meteor.com/)
* [Wix](https://www.wix.com/)
* [Squarespace](https://www.squarespace.com/)
* [Modulz](https://www.modulz.app/)
* [Figma](https://www.figma.com/)
* [Sketch](https://www.sketch.com/)
* [Framer](https://www.framer.com/)
* [Netlify](https://www.netlify.com/)
* [dnsimple](https://dnsimple.com/)
* [Digital Ocean](https://www.digitalocean.com/)
* [AWS](https://aws.amazon.com/)
* [Heroku](https://www.heroku.com/)
* [Syntax016: Rems vs Ems](https://syntax.fm/show/016/tasty-treats-rems-vs-ems-remote-work-making-money-getting-good-at-design-more)
* [Seth Godin](https://www.sethgodin.com/)
* [Notion](https://notion.so)
* [Laravel](https://laravel.com/)
* [Blaze](http://blazejs.org/)
* [Relay](https://relay.dev/)
* [SWR](https://swr.now.sh/)
* [Suspense](https://reactjs.org/docs/concurrent-mode-suspense.html)
* [Project Farm YouTube Channel](https://www.youtube.com/channel/UC2rzsm1Qi6N1X-wuOg_p0Ng)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [The Missing Crypto Queen](https://www.bbc.co.uk/programmes/p07nkd84/episodes/downloads)
* Wes: [Bosch Wiper Blades](https://amzn.to/33Fjv6O)

## Shameless Plugs
* Scott: [React and Typescript](https://www.leveluptutorials.com/pro)
* Wes: [Beginner Javascript](https://beginnerjavascript.com)
* Black Friday Sale - Get 50% off!
  * [Scott's Courses](https://www.leveluptutorials.com/pro)
  * [Wes' Courses](https://wesbos.com/courses)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6cdf766489896e9e0ea080643093ceebcabf6ab05b05434c0a897b21ed01744c,show-200,/shows/200.md,2023-10-16 20:07:01.504,2023-10-27 15:57:50.778,TASTY
syntax_podcast_show_00201,201,Hasty Treat - New CSS Logical Properties,2019-12-02 14:00:00.678,https://traffic.libsyn.com/syntax/Syntax201.mp3,"
In this Hasty Treat, Scott and Wes talk about new CSS Logical Properties.

## Hasura - Sponsor
Hasura is an open source real-time GraphQL engine. It connects to your databases & microservices and instantly gives you a production-ready GraphQL API. Check it out at [Hasura.io](https://hasura.io/).

## Show Notes

2:27 - The Box Model

5:32 - Grid and Flexbox

10:17 - Widths and Heights

11:20 - Text Align

## Links
* [New CSS Logical Properties!](https://medium.com/@elad/new-css-logical-properties-bc6945311ce7)
* [Elad Shechter](https://twitter.com/eladsc)
* [Adam Argyle](https://twitter.com/argyleink)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",fed37cdabdff772d811338ec96fd30ffe33151299a86a97aed325f58b9270837,hasty-treat-new-css-logical-properties,/shows/201 - CSS.md,2023-10-16 20:07:01.540,2023-10-27 15:57:50.817,HASTY
syntax_podcast_show_00202,202,Potluck - Tabs are better? × Coding Music × SEO × Is Angular good? × Biggie Smalls × Soy Sauce × More!,2019-12-04 14:00:00.678,https://traffic.libsyn.com/syntax/Syntax202.mp3,"
It's another potluck! In this episode Scott and Wes talk about tabs vs spaces, coding music, SEO, React vs Angular vs Vue vs Svelte, Rapping, Soy sauce and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

3:18 - Q: I am potentially starting a job as an Angular developer (modern angular). But I am scared that, even though I will continue to stay on the cutting edge in my personal projects, using Angular in my job will make it harder to get a job after that in more modern tech like React. Do you think there is any truth to this?

5:30 - Q: Yo guys, saw soy sauce stirred up quite the controversy...lol. What are some big developer disagreements you guys have?

11:40 - Q: In JavaScript, ! == is the same as ! =, but I was told there was a slight technical difference. I cannot find what the difference is. Could you elaborate on this?

14:17 - Q: What are the rules on using another dev's repos as a boiler plate? Example: Using Wes's advanced react starter files to utilize his set up for my own project? 

15:35 - Q: What music do you listen to while you code? As an extension, could we crowd source a dev playlist and host it on Spotify?

20:26 - Q: How do you go about working with different technologies and stacks (front-end related) when you have to accommodate for the client or other developers' biases towards specific things. For example, you have to learn a different set of tools because in a new project someone doesn't like what you use and says X is a better tool for the job.

23:11 - Q: I know there is no magic SEO silver bullet, but what are some best practices for implementing SEO into your website or web application?

27:26 - Q: When dealing with responsive sites, how do you go about respecting the request in iOS safari to show desktop sites?

28:45 - Q: I get confused about your usage of the word 'app'. You don't make iPhone or Android apps, but you often through the word around like ""I would create a Node App"", or ""Some of the apps I made"" etc. Is it just website applications, or how exactly should I interpret ""Node App"" or ""Web App"" compared to a mobile app?

31:36 - Q: I wanted to ask your thoughts on transform class properties plugin from Babel? Heard the podcast on react state, I found it mind blowing when setting everything up without constructors.

36:53 - Q: I am a beginner, I have mostly learned front-end so far (HTML/CSS, JavaScript, React). Should I first get pretty good at these before I start learning some back-end? Or, should I actually start learning back-end now and have a basic knowledge of both front-end and back-end?

39:00 - Q: If for some reason React died today and you were no longer able to use it, which framework would you pick up and use full time? Would it be Vue or Angular? Or something new like Svelte?

40:11 - Q: What habits, strategies, or specific tools do you rely on to prevent your hard drives from filling up with useless files?

* `find . -name ""node_modules"" -type d -prune -exec rm -rf '{}' +`

47:20 - Q: Which JS library is most like the Tesla Cybertruck?

## Links
* [Tailwind CSS](https://tailwindcss.com/)
* [Syntax Spotify Playlist](https://open.spotify.com/playlist/061zvEAIbt6ZxVZxtkk3ot?si=R74zdIRyScGYph5UiCHFcg)
* [Head Bob Spotify Playlist](https://open.spotify.com/playlist/4sFWRZDOmCiR7abKNRmWjr?si=Kk0vlHtURFuIsPku1pZ-5A)
* [Retired Scenester Metalcore Spotify Playlist](https://open.spotify.com/playlist/6RnddeJf0fd0kwYrLJbm3U?si=f9SFFYntQJ6buGNH1o0Uxw)
* [DaisyDisk](https://daisydiskapp.com/)
* [CleanMyMac](https://macpaw.com/cleanmymac)
* [Backblaze](https://www.backblaze.com/)
* [Tesla Cybertruck](https://www.tesla.com/cybertruck)
* [RxJS](https://rxjs-dev.firebaseapp.com/)
* [SynthWave '84 VS Code Theme](https://marketplace.visualstudio.com/items?itemName=RobbOwen.synthwave-vscode)
* [RoboCopJS](http://www.pseudobry.com/robocop.js/)


## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Keychron K1 Mechanical Keyboard](https://www.keychron.com/products/keychron-mechanical-keyboard)
* Wes: [Everlane Uniform Crew Neck](https://www.everlane.com/uniform)

## Shameless Plugs
* Scott: [Black Friday Sale on All Courses](https://www.leveluptutorials.com/pro)
* Wes: [Beginner Javascript Course](https://beginnerjavascript.com)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5a9ba9a0437a4cea6f6d28572537cfb7042361c57ca902121e5c5cc6560ed0ec,potluck-tabs-are-better-coding-music-seo-is-angular-good-biggie-smalls-soy-sauce-more,/shows/202 - potluck.md,2023-10-16 20:07:01.574,2023-10-27 15:57:50.884,TASTY
syntax_podcast_show_00203,203,Hasty Treat - What Are Github Actions?,2019-12-09 14:00:00.500,https://traffic.libsyn.com/syntax/Syntax203.mp3,"
In this Hasty Treat, Scott and Wes talk about Gihub Actions — what they do, why you might be interested in them, best practices and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:30 - What are Github Actions?

4:40 - Examples of Github Actions

6:02 - Will Github Actions replace continuous integration services?

9:19 - Libraries

## Links
* [Codeship](https://codeship.com/)
* [Github Actions](https://github.com/marketplace?type=actions)
* [nextdiff](https://github.com/zeit/nextdiff/blob/master/screenshot.js)
* [Figma Action](https://github.com/marketplace/actions/figma-action)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d098ead3ccaf26fc8afb060253a80cec3e9bc79fe9e32c8ba9e4c2a488897fec,hasty-treat-what-are-github-actions,/shows/203 - github actions.md,2023-10-16 20:07:01.611,2023-10-27 15:57:50.921,HASTY
syntax_podcast_show_00204,204,2019 Gift Guide,2019-12-11 14:00:00.500,https://traffic.libsyn.com/syntax/Syntax204.mp3,"
In this episode of Syntax, Scott and Wes bring you an entire episode of sick picks — the 2019 gift guide!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

3:48 - Gadgets

* [Apple Watch](https://www.apple.com/watch/)
* [Sabrent Qi Wireless Charger](https://www.amazon.com/Sabrent-Wireless-Universally-Compatible-WL-QIFC/dp/B079HNYKH9)
* [Sony wh-1000xm3](https://www.amazon.com/Sony-Noise-Cancelling-Headphones-WH1000XM3/dp/B07G4MNFS1/)
* [Bose QC35 II](https://www.amazon.com/Bose-QuietComfort-Wireless-Headphones-Cancelling/dp/B0756CYWWD/)
* [Sabrent 8-in-1 hub](https://www.amazon.com/Sabrent-MicroSD-Multi-Card-Delivery-DS-UHCR/dp/B0797QGK2X/)
* [Satechi Aluminum Multi-Port Adapter](https://www.amazon.com/Satechi-Aluminum-Multi-Port-Adapter-Pass-Through/dp/B075FW7H5J/)
* [Anker 5-in-1 quick charge hub](https://www.amazon.ca/PowerPort-5-Port-Charger-Charge-Samsung/dp/B01IUTIUEA/)
* [3 in 1 charge cable](https://www.amazon.com/Multi-Charging-Cellphone-Tablet-Devices/dp/B07QZJ6F9C/)
* [Elgato Cam Link](https://www.amazon.com/Elgato-Cam-Link-Broadcast-Camcorder/dp/B07K3FN5MR/)

16:59 - Smart Home Automation

* [Google Nest Home Hub](https://store.google.com/product/google_nest_hub)
* [Wyze cams + plugs + bulbs](https://wyze.com/shop.html)
* [Ecobee thermostat](https://www.amazon.com/ecobee-SmartThermostat-Voice-Control-Black/dp/B07NQT85FC/)
* [Google Chromecast](https://store.google.com/us/product/chromecast)
* [Google Home](https://store.google.com/us/product/google_home)
* [Smart Powerstrip](https://www.amazon.com/s?k=Smart+Powerstrip&ref=nb_sb_noss)

27:14 - Laptop Stands

* [12 South](https://amzn.to/2LkvCij)
* [Rain Design mStand](https://www.amazon.com/Rain-Design-mStand-Laptop-Patented/dp/B000OOYECC/)
* [Roost](https://www.amazon.com/Roost-Laptop-Stand-Adjustable-Portable/dp/B01C9KG8IG/)
* [Nexstand](https://www.amazon.com/Nexstand-Laptop-Stand-Portable-MacBook/dp/B01HHYQBB8/)

29:59 - Phone Cases

* [RhinoShield](https://www.amazon.com/stores/page/1C730F0F-4800-4E6C-BA46-36B9505A6549?store_ref=SB_A0045711EN285ULC71SQ&pf_rd_p=44fc3e0f-4b9e-4ed8-b33b-363a7257163d&aaxitk=szjcRbRgDXtrmpSZ9NzUag&hsa_cr_id=8836527440601&lp_asins=B07X9TNC3T,B07XDZY4P1,B07XDYS875&lp_mat_key=rhino%20shield&lp_query=Rhino%20shield&lp_slot=auto-sparkle-hsa-tetris)

30:52 - Mechanical Keyboards

* [Ctrl Keyboard](https://drop.com/buy/drop-ctrl-mechanical-keyboard)
* [Keychron K1](https://www.keychron.com/products/keychron-mechanical-keyboard)
* [Code Keyboard](https://codekeyboards.com/)

34:34 - Mice

* [Logitech MX Master Mouse](https://www.amazon.com/Logitech-Master-Wireless-Mouse-High-Precision/dp/B07DHDFW5V/)

35:27 - Tripods

* [Lammcou Flexible Tripod](http://www.lammcou.com/)
* [GorillaPod](https://www.amazon.com/GorillaPod-Compact-Ballhead-Mirrorless-Charcoal/dp/B074WC9YKL/)

37:04 - Cameras

* [Sony a7 III](https://www.amazon.com/Sony-Full-Frame-Mirrorless-Interchangeable-Lens-ILCE7M3/dp/B07B43WPVK/)

38:06 - Experiential

* Massage
* Float
* Knife Skills Class
* Butcher Class
* Cooking Class

40:08 - Food

* [Cold Brew Coffee Maker](https://amzn.to/383bBqr)
* [Prep Naturals Glass Meal Prep Containers](https://www.amazon.com/dp/B06Y31WGWR?ref=ppx_pop_mob_ap_share)
* [Blue Top Creamy Buffalo](https://www.amazon.com/Blue-Creamy-Sauce-Buffalo-Cayenne/dp/B06XR2ZTRS)
* [Heartbeat Hot Sauce Pineapple Habanero](https://www.heartbeathotsauce.com/)
* [Maldon Salt](https://www.amazon.com/Maldon-Salt-Flakes-1-5kg-3-3lbs/dp/B004SBQYMU/)
* [Weck jars](https://www.amazon.com/s?k=weck+jars&ref=nb_sb_noss_1)
* [Thick sheet pans](https://www.amazon.com/Viking-Culinary-4030-9982C-CCGY-Nonstick-Bakeware/dp/B07KGV2RMR/)
* [Precut parchment](https://www.amazon.com/s?k=Precut+Parchment&i=grocery&ref=nb_sb_noss_2)
* [Instant Read Thermometer](http://misterchefer.com/product/meat-termometer/)
* [Umai Dry Steak Aging](https://www.amazon.com/s?k=Umai+Dry+Steak+Aging&ref=nb_sb_noss)
* [Charcuterie bags](https://www.amazon.com/s?k=charcuterie+bags&gclid=EAIaIQobChMI_Jm_3Oem5gIVBOiGCh0uGQ4CEAAYASAAEgJJcfD_BwE&hvadid=243364158616&hvdev=c&hvlocphy=9013300&hvnetw=g&hvpos=1t1&hvqmt=e&hvrand=16879664618112738747&hvtargid=kwd-409605718499&hydadcr=4821_9338491&tag=googhydr-20&ref=pd_sl_4uu654v3t0_e)
* [Mesh produce bags](https://www.amazon.com/s?k=Mesh+produce+bags&ref=nb_sb_noss)
* [Beeswax wraps](https://www.amazon.com/s?k=Beeswax+wraps&ref=nb_sb_noss)
* [Yeti drinkware](https://www.amazon.com/s?k=Yeti+drinkware&ref=nb_sb_noss)

49:24 - Grooming & Wellness

* [Theragun](https://www.theragun.com/)
* [Foam roller](https://www.amazon.com/AmazonBasics-High-Density-Round-Roller-36-inches/dp/B00XM2MRGI/)
* [Power Blocks](https://www.amazon.com/Power-GF-SPDBLK24-Adjustable-SpeedBlock-Dumbbells/dp/B000A6T9I8/)
* [Japanese nail clippers](https://www.amazon.com/SS-107-Stainless-Steel-Toenail-Clipper/dp/B000F37UNM/ref=sr_1_4?crid=2KLN6E7QJE1DT&keywords=seiko+nail+clippers&qid=1575393921&sprefix=saiko+nai%2Caps%2C167&sr=8-4)

## Links
* [Anker](https://www.amazon.com/stores/page/D24FDA17-DECF-46BB-AF47-AF4647D2B1F8)
* [Deal Extreme](https://www.dx.com/)
* [Prismic YouTube Channel](https://www.youtube.com/channel/UCJq6AEgtWeZt7ziQ-fLKOeA)

## Shameless Plugs
* Scott: [Level Up Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript Course](https://beginnerjavascript.com)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5e2ab36acf164a0efa208a647005b282607dc572b227a1491ccca920a39a9d70,2019-gift-guide,/shows/204 - gift guide.md,2023-10-16 20:07:01.655,2023-10-27 15:57:50.965,TASTY
syntax_podcast_show_00205,205,Hasty Treat - The New MacBook Pro for Web Development,2019-12-16 14:00:00.785,https://traffic.libsyn.com/syntax/Syntax205.mp3,"
In this Hasty Treat, Scott and Wes talk about the new 16"" MacBook Pro and how it performs as a web development machine.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:24 - Why did the old ones suck?

4:43 - What did we get and why?

* Wes
  * 32GB RAM
  * 2.3GHz 8-core i9
  * 
  * 1TB SSD

* Scott
  * 64GB RAM
  * 2.4GHz 8-core i9
  * 8gb AMD Radeon Pro 5500M
  * 2TB SSD

9:40 - Is it still the best?

* The MacBook Pro is the workhorse of developers
* Keyboard is amazing
* Screen is even bigger
* Esc key is back
* Touch ID is very fast
* Heat is good
* Speed is very fast. Great for video editing, recording, etc...
* Trackpad feels great 

15:18 - Still not good:

* Webcam sucks
* Ports

16:09 - Y NAWTS:

* Why not Windows?
* Why not Hackintosh?
* Why not iMac?

## Links
* [16"" MackBook Pro](https://www.apple.com/macbook-pro-16/)
* [Surface Book](https://www.microsoft.com/en-us/p/surface-book-2/8mcpzjjcc98c?activetab=pivot%3aoverviewtab)
* [Alfred](https://www.alfredapp.com/)
* [CalDigit TS3 Plus Thunderbolt 3 Dock](https://www.amazon.com/CalDigit-TS3-Plus-Thunderbolt-Dock/dp/B07CZPV8DF/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f1385f77a982bfb38d8cba440227a559ada282727bb1069babdcf3ac3dc7e7a5,hasty-treat-the-new-macbook-pro-for-web-development,/shows/205 - macbooks.md,2023-10-16 20:07:01.704,2023-10-27 15:57:51.008,HASTY
syntax_podcast_show_00206,206,"State Machines, CSS and Animations with David K Piano",2019-12-18 14:00:00.785,https://traffic.libsyn.com/syntax/Syntax206.mp3,"
In this episode of Syntax, Scott and Wes talk with David K Piano about state machines, CSS, animations and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Guests

* [David K Piano](https://twitter.com/davidkpiano)

## Show Notes

2:30 - Who is David K Piano?

4:00 - Did you have a background in animation prior to web development?

5:45 - How did you build the CSS Responsive House on Codepen?

8:36 - What are state machines?

14:47 - How does it relate to programming?

17:20 - How do you go about changing states?

20:20 - Is this similar to how RxJS works?

21:40 - How would state machine work in CSS?

29:07 - Perspective in CSS

34:47 - How do you like Twitch vs YouTube?

35:48 - How do you add XState to a current project?

41:42 - Visualizing sate machines

46:15 - Do you have a day job as well?

## Links
* [@davidkpiano](https://twitter.com/davidkpiano)
* [David's Codepen](https://codepen.io/davidkpiano)
* [CSS Responsive House](https://codepen.io/davidkpiano/pen/xLKBpM)
* [InVision](https://www.invisionapp.com/)
* [Framer](https://www.framer.com/)
* [Figma](https://www.figma.com/)
* [XState](https://xstate.js.org/docs/)
* [RxJS](https://rxjs-dev.firebaseapp.com/)
* [React](https://reactjs.org/)
* [Apollo](https://www.apollographql.com/)
* [Vue.js](https://vuejs.org/)
* [Javascript30](https://javascript30.com/)
* [Tailwind CSS](https://tailwindcss.com/)
* [GROQ.dev](https://groq.dev/)
* [Keyframe.rs](https://keyframe.rs/)
* [Babel](https://babeljs.io/)
* [Twitch](https://www.twitch.tv/)
* [Keyframe.rs Patreon](https://www.patreon.com/keyframers)

## ××× SIIIIICK ××× PIIIICKS ×××
* David: [Lynn Fisher](https://lynnandtonic.com/)
* Scott: [The Big One](https://the-big-one.scpr.org/)
* Wes: [American Factory](https://www.netflix.com/title/81090071)

## Shameless Plugs
* David: [XState](https://xstate.js.org/docs/) and [Keyframe.rs](https://keyframe.rs/)
* Scott: [React and Typescript for Everyone](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",8e9d1ddd08c82996c67576f6c141a77fa55e27c01bcb69304565193c3ee79399,state-machines-css-and-animations-with-david-k-piano,/shows/206 - state.md,2023-10-16 20:07:01.747,2023-10-27 15:57:51.047,TASTY
syntax_podcast_show_00207,207,Hasty Treat - How We Launch Courses,2019-12-23 14:00:00.835,https://traffic.libsyn.com/syntax/Syntax207.mp3,"
In this Hasty Treat, Scott and Wes talk about launching courses — a behind-the-scenes look at their platforms, processes, best practices, and what it takes to get a course published. 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:13 - Scott's process

8:48 - Wes' process

20:57 - Additional tips

## Links
* [Beginner Javascript](https://beginnerjavascript.com)
* [Level Up Tutorials](https://www.leveluptutorials.com/)
* [Figma](https://www.figma.com/)
* [Tim Smith](https://ttimsmith.com/)
* [YouTube](https://youtube.com)
* [Vimeo](https://vimeo.com/)
* [HandBrake](https://handbrake.fr/)
* [Screenflow](https://www.telestream.net/screenflow/)
* [Backblaze B2](https://www.backblaze.com/b2/cloud-storage.html)
* [VS Code](https://code.visualstudio.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5f902361c1726fba461cb7c212cf3247079f4826eba57d4f3efd86c93ef98f81,hasty-treat-how-we-launch-courses,/shows/207 - courses.md,2023-10-16 20:07:01.801,2023-10-27 15:57:51.168,HASTY
syntax_podcast_show_00208,208,2019 YEAR END Definitely Not a Clip Show,2019-12-25 14:00:00.835,https://traffic.libsyn.com/syntax/Syntax208.mp3,"
In this episode of Syntax, Scott and Wes do a 2019 year in review — the most popular Syntax episodes, what they learned, some personal updates, plans for next year, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

1:40 - Plans for 2020

* Syntax Live March 2019
* Plans for 2020
* Twitter has done really well for [@syntaxfm](https://twitter.com/syntaxfm)
* Community feels great

9:20 - Top 10 Syntax episodes of 2019

* [Syntax162: The Fundamentals - JS](https://syntax.fm/show/162/the-fundamentals-js)
* [Syntax120: Gatsby vs Next](https://syntax.fm/show/120/gatsby-vs-next)
* [Syntax158: The Fundamentals - HTML + CSS](https://syntax.fm/show/158/the-fundamentals-html-css)
* [Syntax126: Bootcamps vs School vs Self-Learning](https://syntax.fm/show/126/bootcamps-vs-school-vs-self-learning)
* [Syntax138: What's New in Web Development](https://syntax.fm/show/138/what-s-new-in-web-development)
* [Syntax130: The VueJS Show (Scott teaches Wes)](https://syntax.fm/show/130/the-vuejs-show-scott-teaches-wes)
* [Syntax146: CSS the Cool Parts](https://syntax.fm/show/146/css-the-cool-parts)
* [Syntax174: How to Build an API](https://syntax.fm/show/174/how-to-build-an-api)
* [Syntax154: SVGs with Sara Soueidan](https://syntax.fm/show/154/svgs-with-sara-soueidan)
* [Syntax106: A Look Forward to 2019](https://syntax.fm/show/106/a-look-forward-to-2019)

25:17 - Personal Stuff

* Scott
  * Brooklyn Tolinksi
  * 2019 was really tough for me
  * Level Up courses for 12 months
  * Huge changes to my production values and office
  * Huge changes to LUT codebase (React hooks, Typescript, Next.js, Mongoose)

* Wes
  * New Baby in June / 3 months Paternity Leave
  * Bought a cottage
  * Hardest course to make was Beginner JS — it was a slog, hard to stay motivated at times, with 80 hours of recording alone
  * Course Platform re-write (Next.js)

39:17 - Stuff we learned

* Scott
  * Better speaker
  * Lots of TypeScript
  * Better debugging
  * Hooks
  * Svelte
  * General improvement in JS writing and programming skills

* Wes
  * Really good at Vanilla.js DOM API
  * React Hooks
  * Suspense
  * Audio Visualization
  * Shape Detection API - Faces, Barcodes, Text
  * Headless CMS: Prismic, Sanity, WordPress GraphQL, Keystone.js, Hasura
  * Very good understanding of the nitty gritty of JS (closures, objects, this, new keyword, classes, etc.)

## Links
* [Reactathon](https://www.reactathon.com/)
* [freeCodeCamp Podcast](https://podcast.freecodecamp.org/)
* [CSS Houdini](https://developer.mozilla.org/en-US/docs/Web/Houdini)
* [Syntax109: Hasty Treat - CSS Grid Level 2 aka Subgrid](https://syntax.fm/show/109/hasty-treat-css-grid-level-2-aka-subgrid)
* [Syntax092: React Hooks](https://syntax.fm/show/092/react-hooks)
* [Dev Mugs](https://shop.devmugs.com/)
* [TypeScript](https://www.typescriptlang.org/)
* [Svelte](https://svelte.dev/)
* [Prismic](https://prismic.io/syntax)
* [Sanity](https://www.sanity.io/syntax)
* [WPGraphQL](https://www.wpgraphql.com/)
* [Keystone.js](https://www.keystonejs.com/)
* [Hasura](https://hasura.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [The Dream Podcast](https://www.stitcher.com/podcast/stitcher/the-dream)
* Wes: [Synology DiskStation DS918+](https://www.amazon.com/Synology-bay-DiskStation-DS918-Diskless/dp/B075N1Z9LT)

## Shameless Plugs
* Scott: [React & TypeScript For Everyone](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",525ba69f9a9ffb2c0ed67e8ebb2bda4e7cc58f1d17b07774bd8dcf77dfece308,2019-year-end-definitely-not-a-clip-show,/shows/208 - year end.md,2023-10-16 20:07:01.877,2023-10-27 15:57:51.217,TASTY
syntax_podcast_show_00209,209,Hasty Treat - Wes Teaches Scott about Keystone.js,2019-12-30 14:00:00.995,https://traffic.libsyn.com/syntax/Syntax209.mp3,"
In this Hasty Treat, Wes teaches Scott about Keystone.js — best practices, things to avoid, why you should check it out, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

3:10 - What is Keystone?

7:38 - How do you handle mutations?

14:26 - What's the hosting situation like?

19:34 - Shortcomings

21:40 - Plugins

## Links
* [KeystoneJS](https://www.keystonejs.com/)
* [Prisma](https://www.prisma.io/)
* [Hasura](https://hasura.io/)
* [Next.js](https://nextjs.org/)
* [GraphQL](https://graphql.org/)
* [Stripe API](https://stripe.com/docs/api)
* [WordPress](https://wordpress.org/)
* [ThinkMail](https://www.thinkmail.com/)
* [Drupal](https://www.drupal.org/)
* [Redux](https://redux.js.org/)
* [Now](https://zeit.co/home)
* [MongoDB](https://www.mongodb.com/)
* [MongoDB Compass](https://www.mongodb.com/products/compass)
* [pm2](https://pm2.keymetrics.io/)
* [TypeScript](https://www.typescriptlang.org/)
* [Apollo Helpers](https://www.keystonejs.com/keystonejs/apollo-helpers/)
* [GraphCool](https://www.graph.cool/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",094619ccd1b5de0badbd2b9d6e4807806dda72ad527eacb1c22c5dea4c9fd7ba,hasty-treat-wes-teaches-scott-about-keystone-js,/shows/209 - Keystone.md,2023-10-16 20:07:01.924,2023-10-27 15:57:51.270,HASTY
syntax_podcast_show_00210,210,Potluck - Fonts × Frameworks × Teas × Coding Subscriptions × Client Work × More!,2020-01-01 14:00:00.995,https://traffic.libsyn.com/syntax/Syntax210.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about fonts, frameworks vs custom, drinking tea, learning to code, client work, and more!

## Kyle Prinsloo Freelancing - Sponsor
Kyle Prinsloo teaches you everything you need to know about freelancing, including how to quit your job, earn a side-income and start taking control of your life. Check it out at [studywebdevelopment.com/freelancing](https://studywebdevelopment.com/freelancing). Use the coupon ""SYNTAX"" and get 25%.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:01 - Q: When you run audits like lighthouse on a website, do you run the audit on each page? Or have you found an app or hack to run the audit over the entire site / multiple pages?

5:30 - Q: What makes a font ""good""? I stumbled upon [haleyfiege.fun/fonts](https://www.haleyfiege.fun/fonts), where she says her first font was not ""good,"" but it looks perfectly usable to me. When you are picking fonts for web apps, how do you judge them? Is it entirely subjective?

9:14 - Q: As a solo founder, speed is essential. What's faster, building your own components, using a theme, or using a framework?

12:05 - Q: I’ve never been a tea drinker, but lately I’ve been wanting to start drinking a hot tea in the afternoon (instead of coffee). I know Scott is the Tea Guru, so what would your suggestions be for starting out?

15:30 - Q: Is it worth bundling JavaScript for websites that aren't using a framework (i.e. WordPress / CMS websites)? The company I work for uses a large enterprise CMS and our JavaScript is just a minified mash of several different JS files, most of which are several hundred lines of spaghetti code. It would be nice to break up all these files in some sort of modular way, plus have the added benefit of using Babel so we can write modern JS. However, the output of the bundled JS file seems massive. Won't that hurt performance and page load?

21:17 - Q: I know both of you put out a ton of content, both together and individually. I’m just curious to hear if you listen to any other podcasts out there in the land, or any other types of content that you consume to hone your skillz to pay the billz. Thanks!

25:14 - Q: What are your thoughts on Blazor? Is it a good move to be an early adopter of a framework like this, or should you focus on the ones that are already in a fully released state like React, Vue etc.?

28:51 - Q: I would like to ask Scott how you make subscriptions in a website? Also, how you give users a lifetime locked yearly subscription?

39:53 - Q: I feel like other developers' code is always shorter, better structured, and easier to read than mine. Any tips (or resources) on writing clean, 'good' javascript code (or any other functional programming language)?

44:02 - Q: Both of you have CMS backgrounds, Scott with Drupal and Wes with WordPress. When you moved to freelancing, did you build for clients using a CMS? Or did you create custom admin interfaces for clients to manage their own site? You've mentioned some headless WordPress in the past, but was that the norm?

47:02 - Q: Hey Scott + Wes, you're obviously very successful with your course creation careers, but do you miss client work? If people for some reason ever stopped buying your courses, would you go back to client work?

## Links
* [Lighthouse](https://github.com/GoogleChrome/lighthouse)
* [Syntax203: Hasty Treat - What Are Github Actions?](https://syntax.fm/show/203/hasty-treat-what-are-github-actions)
* [Lighthouse Batch NPM Package](https://www.npmjs.com/package/lighthouse-batch)
* [Lighthouse Action GitHub Action](https://github.com/jakejarvis/lighthouse-action)
* [Next.js](https://nextjs.org/)
* [haleyfiege.fun/fonts](https://www.haleyfiege.fun/fonts)
* [Radnika Next](https://hanken.co/products/radnika-next)
* [Sipsby](https://www.sipsby.com/)
* [Babel](https://babeljs.io/)
* [Shop Talk Show](https://shoptalkshow.com/)
* [CodePen Radio](https://blog.codepen.io/radio/)
* [Heist Podcast](https://www.heistpodcast.com/)
* [Mixergy](https://mixergy.com/)
* [The Dream](https://podcasts.apple.com/us/podcast/the-dream/id1435743296)
* [React Podcast](https://reactpodcast.simplecast.fm/)
* [Indie Hackers](https://www.indiehackers.com/podcast)
* [Akimbo](https://www.akimbo.link/)
* [Command Line Heroes](https://www.redhat.com/en/command-line-heroes)
* [Blazor](https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor)
* [Braintree](https://www.braintreepayments.com/)
* [Syntax055: Hasty Treat - User Role Systems](https://syntax.fm/show/055/hasty-treat-user-role-systems)
* [Clean Code concepts adapted for JavaScript](https://github.com/ryanmcdermott/clean-code-javascript)
* [codecademy](https://www.codecademy.com/)
* [Javascript30](https://javascript30.com/)
* [CakePHP](https://cakephp.org/)
* [Drupal](https://www.drupal.org/)
* [WordPress](https://wordpress.org/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Aerial America](https://www.smithsonianchannel.com/shows/aerial-america/701)
* Wes: [Streamer for Chromecast](https://apps.apple.com/us/app/streamer-for-chromecast/id1151425002)

## Shameless Plugs
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ce84a222ee79038d5b8ca5f36f6837262f2a6a596a20cdf00c9855fd5647c710,potluck-fonts-frameworks-teas-coding-subscriptions-client-work-more,/shows/210 - potluck.md,2023-10-16 20:07:01.976,2023-10-27 15:57:51.317,TASTY
syntax_podcast_show_00211,211,Hasty Treat - Modules in Node,2020-01-06 14:00:00.102,https://traffic.libsyn.com/syntax/Syntax211.mp3,"
In this Hasty Treat, Scott and Wes talk about modules in Node — what are they, how they're different from browser modules, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:06 - How were they done before?

5:11 - How do they work?

7:07 - How to use Modules in Node

9:57 - Gotchas

13:18 - What should you use? 

## Links
* [Node](https://nodejs.org/)
* [Node Modules](https://github.com/nodejs/modules)
* [Babel](https://babeljs.io/)
* [ESM](https://www.npmjs.com/package/esm)
* [Meteor](https://www.meteor.com/)
* [Keystone](https://www.keystonejs.com/)
* [MJS](http://clive.tries.fed.wiki/view/michael-jackson-script)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",51cae3737ba7b5f63283efef32d2d52c6fd45cbd483db0beb66227c50b634eec,hasty-treat-modules-in-node,/shows/211 - node modules.md,2023-10-16 20:07:02.023,2023-10-27 15:57:51.361,HASTY
syntax_podcast_show_00212,212,Pika Pkg,2020-01-08 14:00:00.511,https://traffic.libsyn.com/syntax/Syntax212.mp3,"
In this episode of Syntax, Scott and Wes talk with Fred Schott about Pika Pkg, a new kind of package registry for the modern web.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests

* [Fred Schott](https://twitter.com/FredKSchott)

## Show Notes

3:24 - What is Pika?

9:40 - What about peer dependencies?

12:53 - What does migration look like? 

17:30 - Are these tools making things easier?

21:25 - What is the Pika Registry?

34:48 - What is the Pika editor?

41:13 - Is it open source?

47:30 - What about security?

## Links
* [Fred Schott](http://fredkschott.com/)
* [@FredKSchott](https://twitter.com/FredKSchott)
* [Pika](https://www.pika.dev/)
* [@pikapkg](https://twitter.com/pikapkg)
* [Snowpack](https://www.snowpack.dev/)
* [Pika Builders](https://github.com/pikapkg/builders)
* [Babel](https://babeljs.io/)
* [Typescript](https://www.typescriptlang.org/)
* [Webpack](https://webpack.js.org/)
* [CSZ](https://github.com/lukejacksonn/csz)
* [Parcel](https://parceljs.org/)
* [Deno](https://deno.land/)
* [VSCode](https://code.visualstudio.com/)
* [Entropic](https://www.entropic.dev/)
* [Homebrew](https://brew.sh/)
* [Plex](https://www.plex.tv/)
* [Synology NAS](https://www.synology.com/)
* [Luke Jackson](https://github.com/lukejacksonn)
* [Toolsday Podcast](https://spec.fm/podcasts/toolsday)

## ××× SIIIIICK ××× PIIIICKS ×××
* Fred: [Idle Supermarket](https://play.google.com/store/apps/details?id=com.codigames.market.idle.tycoon&hl=en_US)
* Scott: [Theragun](https://www.theragun.com/)
* Wes: [Emby](https://emby.media/)

## Shameless Plugs
* Fred: [Pika](https://www.pika.dev/)
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7d9d90b969f4e8db8c1005ad98d1e4c881a4f916f6c18bd9383dbbc54cabd0b6,pika-pkg,/shows/212 - pika.md,2023-10-16 20:07:02.067,2023-10-27 15:57:51.402,TASTY
syntax_podcast_show_00213,213,Hasty Treat - A Month On Firefox,2020-01-13 14:00:00.521,https://traffic.libsyn.com/syntax/Syntax213.mp3,"
In this Hasty Treat, Scott and Wes talk about a month of using Firefox — what they liked, what they didn't, and whether or not they'll keep using it.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
3:42 - Dev tools are really good

19:16 - Browsing experience

22:40 - Setup and switchover tips

26:45 - What we didn't like

29:57 - Will we stay?

## Links
* [Firefox](https://www.mozilla.org/en-US/firefox/new/)
* [Errors in Firefox](https://twitter.com/wesbos/status/1202334015841280003)
* [Debugging messages in Firefox](https://twitter.com/wesbos/status/1202284172351553537/photo/1)
* [Harald Kirschner](https://twitter.com/digitarald) 
* [GraphQL](https://graphql.org/)
* [1Password](https://1password.com/)
* [WhatsApp](https://www.whatsapp.com/)
* [Videostream for Chromecast](https://chrome.google.com/webstore/detail/videostream-for-google-ch/cnciopoikihiagdjbjpnocolokfelagl?hl=en)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",88f2cd38fb8a538a44265663dd5120b27d71daf9f5e4cd78b42fc505d3678dda,hasty-treat-a-month-on-firefox,/shows/213 - firefox.md,2023-10-16 20:07:02.102,2023-10-27 15:57:51.485,HASTY
syntax_podcast_show_00214,214,2020 Fitness,2020-01-15 14:00:00.672,https://traffic.libsyn.com/syntax/Syntax214.mp3,"
In this episode of Syntax, Scott and Wes talk about fitness — how to stay in shape as a developer, nutrition, goals, and more!

## DevLifts - Sponsor
Refactor your body with DevLifts. They have a few different programs: 1) [fit.Start](https://devlifts.io/join/fitstart) (normally $19/month) has a few options (lean, bodyweight, and strong). Workouts are delivered via email each month, with access to a Slack community for questions and accountability. 2) [Premium](https://devlifts.io/join/premium) (normally $199/month) is a custom-tailored option, where you get your workouts and nutrition advice after answering a questionnaire. They also check in with you each week via Slack to see how it's going and make changes if necessary. Get 50% off fit.Start plans with code **SYNTAX** and 50% off Premium with code **TASTY**.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

4:42 - Past year reflections

* Scott
  * Tried several different lifting
  * Breaking didn't happen as much, so my cardio took a hit
  * I finally found a full body plan / bro split that has been very effective
  * Weight belt has really helped my form

* Wes
  * Overcommitted in 2019
  * Feeling great - physically
  * Gained about 12 pounds past where I want to be - rough year!
  * Noticeable loss in energy when I don't hit the gym
  * DevLifts since November
  * Cardio / HIIT up

12:15 - What we're doing now

* Scott
  * 4 day split
  * Chest/Triceps
  * Back/biceps
  * Shoulders
  * Legs
  * Abs every day

* Wes
  * 3 days a week
  * Set A - Chest and back
  * Set B - Legs and chest
  * Set C - Legs and back

* Cardio finisher (BLASTERS)
* At home helpers
  * Kettle bells
  * Foam roller

30:32 - Nutrition

* Scott
  * Nothing too hardcore, salads for lunch - not religiously though
  * Good dinners
  * IF occasionally (e.g. not eating before 10 and not eating after dinner snacks)
  * Desert items allowed

* Wes
  * Macro Tracking - still want to enjoy things
  * Low Carb
  * High on veggies
    * Brussel sprouts
    * Green beans
    * Salads
    * Chickpeas
    * Olives
  * Still super into fermentation, crunchy + sour + fizzy + spicy
  * No sweets either
  * Beer is my downfall

41:04 - Supplements

* Scott
  * Not doing anything right now other than high quality protein
  * On meds for nerve damage
  * Probiotic
  * Fish Oil
  * Psylluim husk

* Wes
  * Megafood Men's Once Daily Multivitamin - they are natural and organic, empty stomach
  * Magnesium
  * Fish Oil
  * Lions Mane
  * Ashwagandha
  * Shilajit

53:49 - Year Looking Forward

* Scott
  * New gym remodel going to help life
  * Yoga once twice a week
  * Breaking once a week
  * Lifting every day
  * Stretching every day
  * VR Gaming (I burned 400 cals last night playing Super Hot)
  * Goals to dead lift 350, weighted GHR, continue to progress at current rate
  * Make cardio a thing

* Wes
  * Lose a Few Pounds + Energy + consistency
  * Kettle Bells in office
  * Consistent Gym before life takes a dive
  * Lock down macros
  * Stretches
  * Less beer
  * HIIT

## Links
* [HeavySet App](https://apps.apple.com/us/app/heavyset-gym-workout-log/id1171500310)
* [Syntax 020: Fitness, Nutrition, and Losing Weight](https://syntax.fm/show/020/fitness-nutrition-and-losing-weight)
* [Syntax 084: Fitness for Developers](https://syntax.fm/show/084/fitness-for-developers)
* [Skinny Taste Recipes](https://www.skinnytaste.com/)
* [Daniel Tiger](https://pbskids.org/daniel/)
* [MegaFood Men's One Daily Multivitamin](https://amzn.to/2uoFRN3)
* [Examine.com](https://examine.com/)
* [Caffeine App](https://apps.apple.com/us/app/caffeine-app-track-caffeine/id1045959983)
* [Superhot VR](https://www.playstation.com/en-us/games/superhot-vr-ps4/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott:
  * [Fitness Blender](https://www.fitnessblender.com/)
  * [Bob & Brad YouTube Channel](https://www.youtube.com/user/physicaltherapyvideo)
  * [Jeremy Ethier YouTube Channel](https://www.youtube.com/channel/UCERm5yFZ1SptUEU4wZ2vJvw)

* Wes: [TechBoss Torch Lighter](https://amzn.to/2QQnBnf)

## Shameless Plugs
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",0b9ec30baf5e00e662eae6ed9f62a34866eeb03ce4cab8faf407571aaa00f54c,2020-fitness,/shows/214 - fitness.md,2023-10-16 20:07:02.142,2023-10-27 15:57:51.531,TASTY
syntax_podcast_show_00215,215,"Hasty Treat - Picking the Stack for uses.tech - Gatsby, React, Context, Styled Components",2020-01-20 14:00:00.890,https://traffic.libsyn.com/syntax/Syntax215.mp3,"
In this Hasty Treat, Scott and Wes talk about Wes' new website uses.tech — the stack he chose for building it, as well as what it does and how to use it!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

2:23 - What is uses.tech?

5:33 - The stack

8:13 - Avatars

10:43 - Filtering

15:51 - Github actions

19:25 - Favicon

21:30 - Search

22:03 - Hosting

## Links
* [uses.tech](https://uses.tech/)
* [awesome-uses repo](https://github.com/wesbos/awesome-uses)
* [Gatsby](https://www.gatsbyjs.org/)
* [React](https://reactjs.org/)
* [Gatsby Node API](https://www.gatsbyjs.org/docs/node-apis/)
* [Clearbit API](https://clearbit.com/)
* [unavatar](https://unavatar.now.sh/)
* [Now.sh](https://zeit.co/home)
* [weserv.nl](https://images.weserv.nl/)
* [country-emoji](https://github.com/meeDamian/country-emoji)
* [Andrew Luca](https://github.com/iamandrewluca)
* [joi](https://github.com/hapijs/joi)
* [Making setInterval Declarative with React Hooks](https://overreacted.io/making-setinterval-declarative-with-react-hooks/)
* [Netlify](https://netlify.com/syntax)
* [Algolia](https://www.algolia.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",48b6257a94047347c1f180907b0ea24206653d00d529a1d24ac44e191f5c540a,hasty-treat-picking-the-stack-for-uses-tech-gatsby-react-context-styled-components,/shows/215 - uses.md,2023-10-16 20:07:02.179,2023-10-27 15:57:51.594,HASTY
syntax_podcast_show_00216,216,Tech To Watch In 2020,2020-01-22 14:00:00.890,https://traffic.libsyn.com/syntax/Syntax216.mp3,"
In this episode of Syntax, Scott and Wes talk about tech to watch in 2020 — things you should keep an eye on and learn this year!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

6:39 - CSS Subgrid

8:10 - CSS Houdini

11:20 - CSS features not supported in older browsers yet

* Scrollsnap - IE 11 and up. Lot's of mobile issues.
* position:sticky - no IE at all

14:24 - NPM tink

* installer-less npm
* Load packages at runtime into a shared cache across all projects
* Intelligently download the parts you need

17:25 - Yarn PnP

* Hard links to eliminate package duplication
* Shared cache across all projects

18:31 - Pika & Snowpack

21:10 - Deno

* New Node?

25:39 - React

* Suspense in more libraries
* Suspense for Server Rendering
* Meteor
  * New ownership. v1.9 just dropped with lots of promise for future growth
* Svelte 3
* Vue 3
* Apollo
* Next.js

36:37 - Serverless

* Going to get easier
* Begin.com
* Next.js / Now Functions

38:14 - Gatsby

* A single useQuery (made possible by suspense)

39:36 - Headless CMS Thunderdome

42:20 - Next Gen Frameworks

* Keystone
* Strapi
* Meteor
* Vulcan.js

43:46 - Cypress

* End to end testing
* Currently no Firefox support, but hopeful for 2020

44:21 - Modulz

* Exports to JS component

45:00 - Figma

* Was already amazing in 2019
* Constantly improving and adding new features
* Can import from Sketch

## Links
* [Syntax 109: CSS Grid Level 2 aka Subgrid](https://syntax.fm/show/109/hasty-treat-css-grid-level-2-aka-subgrid)
* [CSS Houdini](https://developer.mozilla.org/en-US/docs/Web/Houdini)
* [Interactive Introduction to CSS Houdini](https://css-tricks.com/interactive-introduction-to-css-houdini/)
* [Tweetdeck](https://tweetdeck.twitter.com/)
* [Next Generation Package Management](https://blog.npmjs.org/post/178027064160/next-generation-package-management)
* [tink](https://www.npmjs.com/package/tink)
* [Pika](https://www.pika.dev/)
* [Yarn PnP](https://next.yarnpkg.com/features/pnp)
* [Syntax 212: Pika Pkg](https://syntax.fm/show/212/pika-pkg)
* [Snowpack](https://www.snowpack.dev/)
* [Entropic](https://www.entropic.dev/)
* [Deno](https://deno.land/)
* [Ryan Dahl - 10 Things I regret About Node.js](https://www.youtube.com/watch?v=M3BM9TB-8yA)
* [https://github.com/denoland/deno](https://github.com/denoland/deno)
* [Cloudflare](https://www.cloudflare.com/)
* [Hover](https://www.hover.com/)
* [Meteor](https://www.meteor.com/)
* [Meteor roadmap](https://github.com/meteor/meteor/blob/devel/Roadmap.md)
* [tiny](https://www.tinycapital.com/)
* [Svelte 3](https://svelte.dev/)
* [Apollo](https://www.apollographql.com/)
* [Nextjs](https://nextjs.org/)
* [Vue](https://vuejs.org/)
* [Begin](https://begin.com/)
* [Firefox](https://www.mozilla.org/en-US/firefox/new/?redirect_source=firefox-com)
* [Keystone](https://www.keystonejs.com/)
* [Strapi](https://strapi.io/)
* [Vulcan.js](http://vulcanjs.org/)
* [Prisma](https://www.prisma.io/)
* [Hasura](https://hasura.io/)
* [Syntax 209: Hasty Treat - Wes Teaches Scott about Keystone.js](https://syntax.fm/show/209/hasty-treat-wes-teaches-scott-about-keystone-js)
* [Cypress](https://www.cypress.io/)
* [Modulz](https://www.modulz.app/)
* [Framer](https://www.framer.com/)
* [Figma](https://www.figma.com/)
* [Sketch](https://www.sketch.com/)
* [James Quick YouTube Channel](https://www.youtube.com/channel/UC-T8W79DN6PBnzomelvqJYw)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Govee Thermometer](https://amzn.to/2uQYFVz)
* Wes: [Rack Mount Power Bar](https://amzn.to/2QR3eHK) 

## Shameless Plugs
* Scott: [Fullstack React and Firebase](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e439745d58c10cf297d92354cdaee251848660d15ef67f50690b7d9e48542827,tech-to-watch-in-2020,/shows/216 - tech.md,2023-10-16 20:07:02.214,2023-10-27 15:57:51.676,TASTY
syntax_podcast_show_00217,217,"Hasty Treat - Building A Community Slack, Discord, Spectrum, Discourse, Forums",2020-01-27 14:00:00.470,https://traffic.libsyn.com/syntax/Syntax217.mp3,"
In this Hasty Treat, Scott and Wes talk about community building online — some of the different software techniques and things you can do to either get started with a web community or join one.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

7:16 - Chat options

* Slack
* Discord
* [Level Up Tutorials Discord](https://discord.gg/ccMC6kB) 
* Faster communication

9:00 - Forum based

* Indexable
* Searchable
* Slower communication
* Discourse
* Spectrum
* Facebook groups
* Reddit
* [SyntaxFM Reddit](https://www.reddit.com/r/SyntaxFM/)

27:27 - Commenting systems

* YouTube comments
* Comments systems in general

## Links
* [Github](https://github.com/)
* [Slack](https://slack.com/)
* [Discord](https://discordapp.com/)
* [Discourse](https://www.discourse.org/)
* [Spectrum](https://spectrum.chat/)
* [Reddit](https://www.reddit.com/)
* [r/reactjs](https://www.reddit.com/r/reactjs/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",48d82e6a595a7b3cbd0c6f3f904c37031ec10d78293b69d42261afdcf41819c8,hasty-treat-building-a-community-slack-discord-spectrum-discourse-forums,/shows/217 - community.md,2023-10-16 20:07:02.261,2023-10-27 15:57:51.727,HASTY
syntax_podcast_show_00218,218,Potluck - Dev Culture Fit × Slack Communities × Vanilla JS × Backpacks × Raspberry Pi × More!,2020-01-29 14:00:00.470,https://traffic.libsyn.com/syntax/Syntax218.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about dev culture fit, Slack communities, vanilla Javascript, backpacks, Raspberry Pi, beards, and more! 

## .TECH Domains - Sponsor
If you need eyes on your project, you'll need a domain, and .TECH is perfect for representing your brand. Find out if your .TECH domain is available at [go.tech/syntax2020](https://go.tech/syntax2020). Use the coupon code Syntax2020 and get 90% off 1- 5- and 10-year domain names.

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

3:10 - Q: Recently I took a job as a lead dev doing the exact kind of work I've always wanted to do. But after the first week, I really hate it. I feel like I don't fit in and I'm seeing many red flags. There are no processes and there doesn't seem to be any real excitement around what we are building. What should I do? Do I suck it up for a while? Or do I start looking for something else, potentially taking a pay cut (and moving back into doing web dev as opposed to building apps) to work at another creative agency with people who are more my jam?

10:32 - Does Syntax have a Discord or Slack community channel to collaborate on topics?

12:00 - What is one thing that *really* annoys you about Javascript? I'm curious if you could change one thing about the language itself, what would it be?

15:08 - Have you tried Fauna DB?

19:13 - What are your thoughts on including tutorial projects in a portfolio? (For example, putting the Sick Fits site from Wes' Advanced React course in a portfolio.) I'm relatively new to React and have a couple of my own projects, but a bunch of projects from following a course.

23:58 - A site you're maintaining is hacked, how do you handle fixing it?

30:28 - My bookmarks are overwhelming! I just started learning web dev and even though I sort my bookmarks into folders, I end up with so much that I don’t even know how to use them. What do you guys do for managing bookmarks on browsers?

34:15 - How would you recommend integrating React and other modern JS frameworks into (more or less) ""static"" or ""brochure"" websites? Say for instance I have a banking website that has mostly static content, but also has complicated JS pieces such as calculators, location finders and sign-up forms? I currently reach for jQuery & jQuery plugins for these pieces of functionality, but React and Vue sound like they could also help solve these one-off pieces of functionality. Most tutorials and examples are based on creating apps from the ground up, but what if you only want to sprinkle these frameworks in and only use them where JS is necessary? How might the both of you solve for these scenarios?

38:00 - I was wondering whether you could share which backpack, or bag do you use for carrying your laptops? I'm looking for something that would be useful for carrying my 16"" Macbook Pro, but also could hold some other stuff like groceries, clothes, or other various things that one may want to put there.

41:50 - Do you write out a vanilla `fetch()` in your components that need it, or do you use a fetch ""wrapper"" written by yourself or someone else? If so, what does it look like?

46:16 - Have you ever done any automation projects using a Raspberry Pi? I am trying my hand at remote access to the solar power setup at our 'bach' (pronounced 'batch') here in New Zealand, which is the same thing as a 'cottage' in Canada. Finding it hard to find good resources for this online as most get really technical really fast. My idea is to take the RS485 modbus data and just send it up to a DB every 5 minutes or so. 

51:38 - What do Wes and Scott think about beards and have you ever thought about growing one?

## Links
* [Syntax 215: Hasty Treat - Picking the Stack for uses.tech - Gatsby, React, Context, Styled Components](https://syntax.fm/show/215/hasty-treat-picking-the-stack-for-uses-tech-gatsby-react-context-styled-components)
* [r/SyntaxFM/](https://www.reddit.com/r/SyntaxFM/)
* [Fauna](https://fauna.com/)
* [Hasura](https://hasura.io/)
* [neo4j](https://neo4j.com/)
* [Wes' Advanced React Course](https://advancedreact.com/)
* [Pocket](https://getpocket.com/)
* [Full Stack Radio 132: Caleb Porzio - Just Enough JavaScript with Alpine.js](http://www.fullstackradio.com/132)
* [Peak Design Everyday Bag](https://amzn.to/2trxQa8)
* [Raspberry Pi](https://www.raspberrypi.org/)
* [Extreme ironing](https://en.wikipedia.org/wiki/Extreme_ironing)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Shogun Wheel Yoga Wheel](https://amzn.to/37cWPMT)
* Wes: [Velcro Cable Ties](https://amzn.to/2REGVEi)

## Shameless Plugs
* Scott: [How To Make a GraphQL Server](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",588dbd55b22570e4bbfef1f0bd046f8015e81ba60e94a7080b31cffed308c9d5,potluck-dev-culture-fit-slack-communities-vanilla-js-backpacks-raspberry-pi-more,/shows/218 - potluck.md,2023-10-16 20:07:02.306,2023-10-27 15:57:51.787,TASTY
syntax_podcast_show_00219,219,Hasty Treat - Non-Glamorous Skills You Should Have,2020-02-03 14:00:00.816,https://traffic.libsyn.com/syntax/Syntax219.mp3,"
In this Hasty Treat, Scott and Wes talk about the non-glamorous skills that will improve your life as a developer!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

3:13 - Why it's needed

* Make you a better dev
* Make big tasks easier

7:00 - Why we don't do it

* Because it's hard
* It's boring - sometimes
* It's not our focus

7:24 - Good command line skills

* Get around file system
* Copy, move, delete things

8:58 - Keyboard skills

* Jump by word/line/BOL/EOL
* Learn 1 new shortcut per week
* Custom keybindings for common tasks

14:22 - Communication and interpersonal skills

* Check out [Syntax 125: Hasty Treat - Communication Skillz](https://syntax.fm/show/125/hasty-treat-communication-skillz)

14:41 - Time management

* Focus apps to help
* How long will something take?
* Revisit past projects when they are done and see how long it took

16:36 - Good file hygiene 

* Good folder structure
* Delete old cruft
* Clear your recycle
* Desktop and downloads are off-limits
* Create template structures or tools for commonly used structures

## Links
* [Wes' Command Line Power User Course](https://commandlinepoweruser.com/)
* [Synology](https://www.synology.com/)
* [VSCode](https://marketplace.visualstudio.com/)
* [React PropTypes Generate](https://marketplace.visualstudio.com/items?itemName=suming.react-proptypes-generate)
* [Syntax 125: Hasty Treat - Communication Skillz](https://syntax.fm/show/125/hasty-treat-communication-skillz)
* [CleanMyMac](https://macpaw.com/cleanmymac)
* [DaisyDisk](https://daisydiskapp.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f1eeaa9607e1ae2b6af7cd149774c5792ae8b6373705c83b1f18df430a46e364,hasty-treat-non-glamorous-skills-you-should-have,/shows/219 - skills.md,2023-10-16 20:07:02.343,2023-10-27 15:57:51.834,HASTY
syntax_podcast_show_00220,220,The Synology Show - Backups and Home Server,2020-02-05 14:00:00.816,https://traffic.libsyn.com/syntax/Syntax220.mp3,"
In this episode of Syntax, Scott and Wes talk about running backups and a home server — Synology setups, apps, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

2:03 - What is it?

* A little headless computer

5:07 - Drives

* WD Red or Seagate Ironwolf — They are loud, you can put SSDs in them, but it's $$

6:25 - RAID

11:17 - Power

* Backup 
* Time Machine over the network
* You can upgrade the memory
* SSDs

22:40 - Backing up your Backups

* Mirror folders to Backblaze B2
* Slow, but worth it

30:53 - Apps

* Plex + Emby
* Storage Analyzer
* Docker - anything really
* Node js ;)
* Security cameras
* Pi-hole or custom DNS server
* Moments
* Drive

## Links
* [Screenflow](https://www.telestream.net/screenflow/)
* [Synology](https://www.synology.com/en-us)
* [DS918+](https://amzn.to/30WJaag)
* [DS219+](https://amzn.to/36xMQRc)
* [WD Red Drives](https://amzn.to/2GtWd9W) 
* [Seagate Iron Wolf](https://amzn.to/36yho56) 
* [Govee Thermometer](https://amzn.to/2uQYFVz)
* [Now](https://zeit.co/)
* [Squizzy](https://www.sanity.io/blog/introducing-squizzy-our-totally-serverless-kahoot-clone-powered-by-sanity-io)
* [Backblaze B2](https://www.backblaze.com/b2/)
* [Plex](https://www.plex.tv/)
* [Emby](https://emby.media/)
* [Storage Analyzer](https://www.synology.com/en-global/knowledgebase/DSM/help/StorageAnalyzer/StorageAnalyzer_desc)
* [DaisyDisk](https://daisydiskapp.com/)
* [Docker](https://www.docker.com/)
* [Node.js](https://nodejs.org/)
* [Raspberry Pi](https://www.raspberrypi.org/)
* [Dokku](http://dokku.viewdocs.io/dokku/)
* [Synology vs Blue Iris](https://www.reddit.com/r/homedefense/comments/9qwkbr/opinion_on_synology_vs_blue_iris/)
* [Moments app](https://www.synology.com/en-us/dsm/feature/moments)
* [Pi-hole](https://pi-hole.net/)
* [Discourse](https://www.discourse.org/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Lululemon Men's Jogger](https://shop.lululemon.com/p/gift-ideas/Abc-Jogger-Skinny/_/prod9640028?color=32476)
* Wes: [DS918+](https://amzn.to/30WJaag)

## Shameless Plugs
* Scott: [How to Build a GraphQL API](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",bcee3b96e02bfb57dd5ea28d358503fc467a1932d2f83c1174c1491f23644db5,the-synology-show-backups-and-home-server,/shows/220 - synology.md,2023-10-16 20:07:02.393,2023-10-27 15:57:51.881,TASTY
syntax_podcast_show_00221,221,Hasty Treat - The Power of Hobbies,2020-02-10 14:00:00.789,https://traffic.libsyn.com/syntax/Syntax221.mp3,"
In this Hasty Treat, Scott and Wes talk about hobbies — how they can improve your life and make you a better developer, as well as the hobbies they enjoy.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:19 - What are our hobbies?

* Wes: Focus on one thing, learn it, move along
  * Kombucha, Fermentation and Curing Projects
  * Bike flipping
  * Kids ride on repairs + hacks
  * ATV fixing
  * ICE to Battery conversion

* Scott: 
  * Dance - 15+ years
  * Weightlifting / fitness
  * Video games
  * Watching hockey
  * Design
  * Computing / coding
  * Snowboarding
  * Kung fu movies

9:00 - Why are they good?

  * Fuel your coding project
  * Maybe could even become your key to a job you love
  * They keep your mind sharp
  * Good for downtime
  * Good for mental health and mood
    * Can be meditative
    * Be cognizant of what they do to your mental state
  * Promotes creativity and critical thinking
  * Fun man

17:54 - How do you find a hobby?

* Wes
  * I always need an end game
  * I want to grow hot peppers
  * I want a wicked ATV for cheap
  * I think batteries are fascinating but I need something real to do

* Scott - I start with the fascination
  * I think dancing is cool, but I could never learn
  * I think _____ is cool, but I don't know where to start

* Deep dark YouTube holes
  * YouTube has an endless selection of educational content
* Facebooks groups or forums
* Meetups / volunteering
  * Introverts will have a hard time with this, push yourself

22:50 - What is your hobby?

* [Tweet us @syntaxfm](https://twitter.com/SyntaxFM)
* [SyntaxFM Reddit](https://www.reddit.com/r/SyntaxFM/)

## Links
* [Oculus Quest](https://www.oculus.com/quest/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a490fb7e13f1fe1b2ced34031047dd97b3eacdcc1a84e0ab4fdab8b4acc5a47c,hasty-treat-the-power-of-hobbies,/shows/221 - hobbies.md,2023-10-16 20:07:02.435,2023-10-27 15:57:51.925,HASTY
syntax_podcast_show_00222,222,Are Web Dev GUIs Going to Replace Us?,2020-02-12 14:00:00.789,https://traffic.libsyn.com/syntax/Syntax222.mp3,"
In this episode of Syntax, Scott and Wes talk about web dev GUIs — what are they, are they going to replace developers, are they good or bad, and more!

## Hasura - Sponsor
Hasura is an open source real-time GraphQL engine. It connects to your databases & microservices and instantly gives you a production-ready GraphQL API. Check it out at [Hasura.io](https://hasura.io/).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

1:30 - What is ""codeless""?

* The codeless movement is coming in with a force. Are they just selling something? Or is it a real concern? 
* All types of jobs are being replaced by computers
  * Truckers
  * Cashiers
  * Lawn mowers
  * Doctors
  * Why not web developers?

7:22 - First experience building sites with a GUI?

* [Dreamweaver](https://www.adobe.com/products/dreamweaver.html)

10:18 - Entire website builders:

* [Wix](https://www.wix.com/)
* [Squarespace](https://www.squarespace.com/)
* [Webflow](https://webflow.com/)
* [Modulz](https://www.modulz.app/)
* [Grid.io](https://thegrid.io/)
* Wordpress Builders

13:17 - When are GUIs useful?

* Brochure site
* Basic e-commerce 

20:26 - Is a GUI/Codeless always better?

* It depends what you're capable of doing

25:21 - Levels of hell GUI assistance in builders

* CMS - Just modifying content and basic markup
* Access to code, drag blocks into place
* No or minimal access to code
* No modification outside of options

31:36 - Are there GUIs for making applications?

* Native Mobile
* [Zapier](https://zapier.com/)

36:54 - Are jobs at risk?

* Yes
  * I think a lot of WordPress tinkering has already been replaced
  * The guy who knows what buttons to push is at risk?
  * Webmaster jobs where the roll was just occasionally updating HTML and text

* No
  * Government
  * Educational institutions
  * Major corporations that can't have their content stored via a service

39:55 - Our favorite GUIs to help development

* Scott:
  * [Netlify](https://www.netlify.com/)
  * [Heroku](https://www.heroku.com/)
  * [Studio 3T](https://studio3t.com/)
  * [VS Code](https://code.visualstudio.com/)

* Wes:
  * Sketch CSS Export
  * [Digital Ocean](https://www.digitalocean.com/)
  * [Cyberduck](https://cyberduck.io/)
  * [Transmit](https://panic.com/transmit/)
  * [ZSH](https://ohmyz.sh/)
  * [VS Code](https://code.visualstudio.com/)

## Links
* [Roomba's first autonomous lawnmower](https://www.theverge.com/2019/8/30/20839810/irobot-terra-autonomous-lawnmower-roomba-robot-fcc-beta-release-date-2020)
* [Notepad++](https://notepad-plus-plus.org/)
* [Geocities](https://en.wikipedia.org/wiki/Yahoo!_GeoCities)
* [Angelfire](https://en.wikipedia.org/wiki/Angelfire)
* [Sketch](https://www.sketch.com/)
* [Figma](https://www.figma.com/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Excel](https://products.office.com/en-us/excel)
* [Meteor](https://www.meteor.com/)
* [Recurly](https://recurly.com/)
* [Gumroad](https://gumroad.com/)
* [Begin.com](https://begin.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Baron of Botox](https://podcasts.apple.com/us/podcast/the-baron-of-botox/id1493450409)
* Wes: [Owlet Smart Sock](https://www.amazon.com/Owlet-Baby-Monitor-Infants-Ultimate/dp/B06ZZXYD6S)

## Shameless Plugs
* Scott: [How To Build A GraphQL API](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5c49bf4e29aea876d196c8de3c12a8393fdd7dbddc66d18db4f951556c77307c,are-web-dev-guis-going-to-replace-us,/shows/222 - GUIs.md,2023-10-16 20:07:02.478,2023-10-27 15:57:51.969,TASTY
syntax_podcast_show_00223,223,"Hasty Treat - Get Movin' With Framer Motion",2020-02-17 14:00:00.347,https://traffic.libsyn.com/syntax/Syntax223.mp3,"
In this Hasty Treat, Scott and Wes talk about Framer Motion — why it is so cool, and how it can improve animations in your projects.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

4:53 - The 411

* Previous knowns as Pop Motion Pose
* Animation library with focus on ease of use
* Utilizes both spring and duration based animations

7:19 - Pose

* Pose was previously more pose based - aka you made scenes and toggled between them
* This still exists within Motion as variants, but isn't the main way

8:06 - The New New

* motion.div
  * animate prop is basically a live value for the animation
  * initial for initial state
  * exit for animating out with use of animatePresence
* Hard stuff made easy
  * drag prop
* Full control over properties like duration and easing
* Orchestration features, this then that
* Variants
  * Multiple scenes allow you to orchestrate many animations with a single state change
* Handles hover and tap easily
* Scroll values
* SVG path animations

19:45 - Final Thoughts

* Framer Motion is easier
* React Spring is much smaller
* React Spring makes very complex animation possible

## Links
* [Framer Motion](https://www.framer.com/motion/)
* [React Spring](https://www.react-spring.io/)
* [Framer Motion Examples](https://www.framer.com/api/motion/examples/)
* [Framer X](https://www.framer.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3cea815b7a4b5da9d5f675c091b8b0e3f36e3bf3a9dc53ad41c5b24cba936117,hasty-treat-get-movin-with-framer-motion,/shows/223 - framer.md,2023-10-16 20:07:02.523,2023-10-27 15:57:52.029,HASTY
syntax_podcast_show_00224,224,Serverless / Cloud Functions - Part 1,2020-02-19 14:00:00.347,https://traffic.libsyn.com/syntax/Syntax224.mp3,"
In this episode of Syntax, Scott and Wes talk about serverless and cloud providers - the benefits, limitations, providers and more!

## .TECH Domains - Sponsor
If you need eyes on your project, you'll need a domain, and .TECH is perfect for representing your brand. Find out if your .TECH domain is available at [go.tech/syntax2020](https://go.tech/syntax2020). Use the coupon code Syntax2020 and get 90% off 1- 5- and 10-year domain names.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

4:05 - What is Serverless?

* URL driven
* Startup/shut down (Heroku works this way)
* Digital Ocean droplet works differently

8:15 - What are the benefits?

* Scale up specific functions rather than everything - aka potentially cheaper
* Security - your singular server instance being hacked is not a possibility
* Less knowledge overhead required
  * You don't need to manage your own server
  * Empowers front-end devs to do more
* Faster deploys
  * Only re-deploy the code that changed

17:05 - What can you host on Serverless?

- Static Files - SPA (React)
- Single functions
- It can be in JS, Python, GO, PHP

18:07 - What can't you host on Serverless?

* Entire applications
* Large apps have slow coldstarts
* 500mb limit 

23:40 - Raw Providers

* Google Cloud
* Azure
* AWS Lambda 
* SAP
* Red Hat
* IBM Cloud Functions
* Cloudflare Workers 
* Kind of cool because they work like service workers where you can intercept any HTTP request

27:33 - Easy Providers + Frameworks

* Begin + Arc.codes
* Zeit Now + Next.js
* Anything + Serverless 
* Netlify
* AWS Amplify
* Apex Up - TJ Holowaychuk
* Open Faas + Digital Ocean

## Links
* [Heroku](https://www.heroku.com/)
* [Digital Ocean](https://www.digitalocean.com/)
* [Meteor Galaxy](https://www.meteor.com/hosting)
* [Codepen Radio: Preprocessors and Lambda](https://blog.codepen.io/2017/10/03/145-preprocessors-lambda/) 
* [Zeit Now](https://zeit.co/home)
* [Wes' tweet about serverless](https://twitter.com/maxsteenbergen/status/1226994154510725120)
* [@maxsteenbergen](https://twitter.com/maxsteenbergen)
* [uses.tech](https://uses.tech/)
* [Google Cloud](https://cloud.google.com/gcp/)
* [Azure](https://azure.microsoft.com/)
* [AWS Lambda](https://aws.amazon.com/lambda/)
* [SAP](https://www.sap.com/index.html)
* [Red Hat](https://www.redhat.com/)
* [IBM Cloud Functions](https://cloud.ibm.com/functions/)
* [Cloudflare Workers](https://workers.cloudflare.com/)
* [Begin](https://begin.com/)
* [Arc.codes](https://arc.codes/)
* [Severless](https://serverless.com/)
* [Netlify](https://www.netlify.com/)
* [AWS Amplify](https://aws.amazon.com/amplify/)
* [Apex Up](https://apex.sh/docs/up/)
* [Open Faas](https://www.openfaas.com/)
* [@tjholowaychuk](https://twitter.com/tjholowaychuk)
* [Scott tries Begin.com](https://www.youtube.com/watch?v=dpHizW9Ojsg)
* [SyntaxFM Reddit](https://www.reddit.com/r/SyntaxFM/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Matt McMuscles YouTube Channel](https://www.youtube.com/channel/UCiP_FwGyJQ_6P8k5ON5mncQ)
* Wes: [Modern Vintage Gamer](https://www.youtube.com/channel/UCjFaPUcJU1vwk193mnW_w1w)

## Shameless Plugs
* Scott: [Scott's YouTube Channel](https://www.youtube.com/user/LevelUpTuts/videos)
* Wes: [Beginner Javascript Course](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",40ab279f936e509c84a4de02f8011b084397976f1045b9bc07fed1033a3079c7,serverless-cloud-functions-part-1,/shows/224 - serverless.md,2023-10-16 20:07:02.564,2023-10-27 15:57:52.082,TASTY
syntax_podcast_show_00225,225,Hasty Treat - What makes a server fast?,2020-02-24 14:00:00.129,https://traffic.libsyn.com/syntax/Syntax225.mp3,"
In this Hasty Treat, Scott and Wes talk about how to make servers fast!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

3:58 - Ram / Memory

* Things like variables, functions, callstacks, application cache, sessions are all stored in memory
* Large processes can eat up lots of memory
* Reading 1,000,000 lines of a CSV
* npm installing
* Swap Memory
* If your node application is limited by memory, it will crash or wait longer for memory to be freed up (garbage collection)
* Garbage collection can take up CPU resourced
* High-performance databases

7:52 - CPU

* The processor on your server - the brains of the computer
* A task - like 1 + 1, or function handleClick(), takes CPU time - the faster the processor, and the more cores it has, the faster it can think and perform these tasks
* A faster CPU means your node app will start more quickly

9:26 - GPU

* Most servers don't have a GPU
* GPUs are not only good for graphics, but they are great at solving complex tasks
* Bitcoin mining is fast on a GPU
* Machine Learning

11:47 - Disk Space

* SSD vs HDD
* The files have to be read from the hard drive and served up to the web server - the hard drive speed determines how fast they can be read, and how fast they can be written
* SSD is more expensive but makes for a much faster application
* HDD is cheaper and is better for storing larger files that aren't as time-sensitive
* An SSD will mean your node app will start faster and serve up files more quickly

## Links
* [Atlas](https://www.mongodb.com/cloud/atlas)
* [Digital Ocean](https://www.digitalocean.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e9d689e5a57bb40dbcc9f914b4b01d43d1eff35f71ffa6c10596429e1f8d4e97,hasty-treat-what-makes-a-server-fast,/shows/225 - servers.md,2023-10-16 20:07:02.627,2023-10-27 15:57:52.131,HASTY
syntax_podcast_show_00226,226,Potluck - Next vs Gatsby × Headless CMS × Vue.js × Is Ruby on Rails still good? × More!,2020-02-26 14:00:00.129,https://traffic.libsyn.com/syntax/Syntax226.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about Gastby vs everything, Next, Vue, Rails, working with agencies, CSS, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Kyle Prinsloo Freelancing - Sponsor
Kyle Prinsloo teaches you everything you need to know about freelancing, including how to quit your job, earn a side-income and start taking control of your life. Check it out at [studywebdevelopment.com/freelancing](https://studywebdevelopment.com/freelancing). Use the coupon ""SYNTAX"" and get 25%.

## Show Notes

1:39 - This may be a crazy question but I need to build a similar system to Level Up Tutorials where people can access content based on a monthly subscription. Any recommendations where to start with either Next.js or Gastby.js? How do I check to see if a person is up-to-date with payment?

4:14 - What's your favorite new tab page?

6:19: CSS vs SCSS vs Styled Components? When you are developing a React or Next.js application which styling method do you guys use and why? Which one is ""best practice"", or a more efficient way of going about it?

11:14 - What do you think of lit-html?

15:25 - I'm relatively new to React, and primarily learning the create-react-app way. When do you go for the create-react-app approach when building an application, and when do you customize the config? I'm uncertain when it's time to escape the 'create-react-app' approach. Also, when escaping it, which main configurations are you grabbing?

18:19 - Is there a reason hasty treat intros are 2.5x the length of normal episodes? Now that Overcast has intro skipping it’d be nice if the intros were uniform in length.

21:23 - I see Kyle Matthews coming out with a lot of input on how Gatsby can be used for web applications as well. After listening to several of your podcasts, where you talk about Gatsby, it doesn't seem like you agree, and would go for Next.js instead. In your opinion is the development at Gatsby really heading in the direction of SSG and web application?

27:17 - I've hopped on the Vue train from jQuery land, and am loving both Nuxt and Gridsome. However, I keep hearing all these good things about Gatsby. Would you guys say that it is worth it to learn Gatsby (and the whole react ecosystem for that matter) over Gridsome? This is mostly for small-medium-ish side-project web sites that connect to a headless CMS.

30:04 - What are your thoughts on CSS pre-processors nowadays? With all the advance and new features from CSS, do you guys really think that it is still worthy to use it those?

32:11 - Scott, can you talk a bit about why you decided to switch back to Meteor after putting in all the effort to convert LUT to Next.js? I am about to start a new fullstack project and was considering Next until I heard you switched back. Maybe I should consider Meteor instead?

40:21 - I’ve recently started an internship at one of my favorite tech companies where I’m using EmberJS and Ruby on Rails. I love the team I’m on (the people are so nice) but I’m not super passionate about the tech stack. I’d much rather be using something like React and NodeJS/Express in my day-to-day coding. Do you think it’s worth staying in a position (if I were to try and get a full-time gig in this role) if you don’t like the tech stack, but really like the people?

40:51 - I'm thinking of doing a bootcamp that teaches Ruby on Rails for backend. I hear a lot that Ruby is a dying language, but at the same time, I know it's used for a lot of big-timers, such as Airbnb and Shopify. Could you please explain the relevance that Ruby/Ruby on Rails will have in 2020 forward, as well as if it's worth learning for newer web developers at this point?

45:15 - What is the deal with CMSs/headless CMSs? I hear you guys talk about them all the time (Sanity, Keystone, Prisma?) but I'm not sure what they are good for. To me, they just seem like a UI to my database, but isn't that what my application is? It just seems like it would be easier to have my frontend talk to my backend talk to my database instead of learning how each CMS wants things to be done and programming for that? Am I missing the point?

48:11 - What does Svelte needs for each of you to use it instead of React in personal and future developments?

50:38 - I freelance on the side as well as have a 9-5. The other dev I work with mentioned he'd help if I ever needed/wanted help on a client project. What are your thoughts on doing freelance work with someone who you also work with at your job?

52:01 - My team is currently in the design phase for a rewrite of our biggest product. We are switching from perl backend (y i k e s) to node (yay) but for some reason, our tech lead decided on hapi for the node framework. I have spent a little time with hapi and it seems cool but I am not sure about its longevity when compared to more established frameworks like express. How do you feel about hapi and should I push for a different framework?

54:29 - I'm a lead dev that recently joined an agency for the first time. What 🔥tips do you have for livin' and devin' in that agency life? Especially around time management, time estimation and dealing with clients.

## Links
* [Stripe](https://stripe.com/)
* [Braintree](https://www.braintreepayments.com/)
* [Recurly](https://recurly.com/)
* [Firefox](https://www.mozilla.org/en-US/firefox/)
* [lit-html](https://lit-html.polymer-project.org/)
* [Overcast](https://overcast.fm/)
* [@kylemathews](https://twitter.com/kylemathews)
* [Gatsby Build](https://www.gatsbyjs.org/docs/overview-of-the-gatsby-build-process/)
* [Vue.js](https://vuejs.org/)
* [Nuxt.js](https://nuxtjs.org/)
* [Gridsome](https://gridsome.org/)
* [postcss-preset-env](https://preset-env.cssdb.org/)
* [Meteor](https://www.meteor.com/)
* [Ember](https://emberjs.com/)
* [Ruby on Rails](https://rubyonrails.org/)
* [Personal Capital](https://www.personalcapital.com/)
* [Airbnb](https://www.airbnb.com/)
* [Shopify](https://www.shopify.com/)
* [Missive](https://missiveapp.com/)
* [Sanity](https://www.sanity.io/syntax)
* [Keystone](https://www.keystonejs.com/)
* [Prisma](https://www.prisma.io/)
* [Svelte](https://svelte.dev/)
* [hapi](https://hapi.dev/)
* [koa](https://koajs.com/)
* [Express](https://expressjs.com/)
* [Matt Stauffer's Blog](https://mattstauffer.com/blog/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Caffeine by Michael Pollan](https://www.audible.com/pd/Caffeine-Audiobook/B083MVZ91Y)
* Wes: [Matt Stauffer - Setting Up Your Webcam, Lights, and Audio for Remote Work, Podcasting, Videos, and Streaming](https://mattstauffer.com/blog/setting-up-your-webcam-lights-and-audio-for-remote-work-podcasting-videos-and-streaming/) 

## Shameless Plugs
* Scott: [New course on Framer Motion](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",feb69898abed44b08d9119d1e741ab76104417f6342c84d08ade812330286d04,potluck-next-vs-gatsby-headless-cms-vue-js-is-ruby-on-rails-still-good-more,/shows/226 - potluck.md,2023-10-16 20:07:02.664,2023-10-27 15:57:52.197,TASTY
syntax_podcast_show_00227,227,Hasty Treat - The Status of Element Queries / Container Queries,2020-03-02 14:00:00.634,https://traffic.libsyn.com/syntax/Syntax227.mp3,"
In this Hasty Treat, Scott and Wes talk about container queries, what they are and how you can use them.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

4:30 - The General Idea

* [Toward Responsive Elements — Brian Kardell](https://bkardell.com/blog/TowardResponsive.html?1)

6:20 - Problems

* It's not as easy as, ""how do we write them""
* Some of the requirements may need a fundamental change to browser engines
  * May be very impractical and take a long time

> ""Did you know, for example, that there are multiple many year long efforts with huge investments underway already aimed at unlocking many new things in CSS? There are - and I don't mean Houdini!"" ~ Brian Kardell

8:56 - What's been happening?

* Lots of conversations
* Dead ends

> ""How do we make this into more solvable problems?"" and ""How do we actually make some progress, mitigate risk - take a step, and and actually get something to developers?"" ~ Brian Kardell

* 'containment' and ResizeObserver,
  * [Implemented in all browsers in about 2 years](https://webkit.org/blog/9997/resizeobserver-in-webkit/)

12:00 - Progress

* Lot's of discussion
  * Goog, Moz, Apple, smart people
* Not there yet
* Big ideas that could go somewhere

`.foo {
  display: grid;
  grid-template-columns: switch(
    (available-inline-size > 1024px) 1fr 4fr 1fr;
    (available-inline-size > 400px) 2fr 1fr;
    (available-inline-size > 100px) 1fr;
    default 1fr;
    );
  }`

> ""A whole lot of the problems with existing ideas is that they heave to loop back through (expensive) phases potentially several times and make it (seemingly) impossible to keep CSS rendering in the same frame.""  ~ Brian Kardell

* Or a system based on resizeObserver

> ""In the coming months I hope to continue to think about, explore this space and continue discussions with others. I would love to publish some research and maybe some new (functional) experiments with JS that aim to be 'closer' to a path that might be paveable."" ~ Brian Kardell

* [https://github.com/ZeeCoder/container-query](https://github.com/ZeeCoder/container-query)
* [https://github.com/FreddyFY/styled-container-query](https://github.com/FreddyFY/styled-container-query)

## Links
* [uses.tech](https://uses.tech/)
* [Ian Kilpatrick](https://www.linkedin.com/in/ian-kilpatrick-9b68a373/)
* [Jared Palmer's tsdx](https://github.com/jaredpalmer/tsdx)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",12eb6b8c8289bba2347eca9aacd5ba66983cd962d74629e760d8dc312864ed8a,hasty-treat-the-status-of-element-queries-container-queries,/shows/227 - queries.md,2023-10-16 20:07:02.709,2023-10-27 15:57:52.253,HASTY
syntax_podcast_show_00228,228,More on Severless - Databases × Files × Secrets × Auth × More!,2020-03-04 14:00:00.634,https://traffic.libsyn.com/syntax/Syntax228.mp3,"
In this episode of Syntax, Scott and Wes do a part 2 about Serverless — databases, files, secrets, auth, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

2:47 - Wes tried Cloudflare Workers

* Also this is so cool:

> Hey Wes, just listened to the latest Syntax episode on the serverless setup. Not sure if it's an episode idea or not, but if you wanna do a bit of a dive on Cloudflare's service workers, I'm currently leading an ""invisible infrastructure migration"" right now from a legacy WordPress setup to a new Storyblok/Netlify setup. We're using Cloudflare's service workers to basically ""stitch"" the headers/menus/footers from the old WordPress site into our new Netlify pages, but serving the page back as if it was part of the normal domain. This means we can migrate from the old to the new slowly without massively disrupting SEO, doing a lengthy/costly rebuild, etc.

* A word on Digital Ocean
* Kubernetes + FAAS allows you to scale up/down

13:54 - Secret management

* Some have a great UI
* Some have a CLI
* Some only have production
* Some have dev/staging/prod

16:24 - Vendor lock-in

* Two kinds of vendor lock-in
  * Lock into a low-level provider (like AWS, or MongoDB)
  * Lock into a framework
* Questions to ask:
  * Can I go, take my app as-is, and host it on another provider?
  * Can I refactor the config and run my code as-is?
  * Do I need to refactor my code for it to run on other platforms?
* Next.js will only run on Now
* There is a community package
* Begin all runs on Arc.codes
* Firebase is locked in?

25:12 - Sharing dependencies

* Each function will have its own package.json, which can be a pain
* Publish utils a private module
* AWS Layers
* Import/export
* Bundle and tree shake

30:26 - Local development

* Now dev
* NPX sandbox
* Wrangler for Cloudflare workers

36:40 - Existing applications

* Difficult to move with many routes, but easy to move a Graphql API that has one single route
* Maybe do piece by piece instead of all at once
* Begin has http express method

45:21 - Data

* Any DB you want
* Dynamo DB integrated into many
* Firebase
* KV Storage for Cloudflare workers
* [Fauna](https://fauna.com/)

48:14 - File storage

* Generally files go in the associated file place like Amazon S3, Backblaze B2, Cloudinary
* Many also have this integrated as well

52:18 - Auth

* Serverless is ephemeral and stateless
* JWT likely as sessions will work, but doesn't really make sense

## Links
* [Cloudflare Workers](https://workers.cloudflare.com/)
* [Akamai](https://www.akamai.com/)
* [MongoDB Stitch](https://www.mongodb.com/cloud/stitch)
* [Hitler uses Kubernetes](http://youtube.com/watch?v=9wvEwPLcLcA)
* [Digital Ocean](https://www.digitalocean.com/)
* [Kubernetes](https://kubernetes.io/)
* [Firebase](https://firebase.google.com/)
* [Google Cloud](https://cloud.google.com/)
* [Architect](https://arc.codes/)
* [Next.js](https://nextjs.org/)
* [Now.sh](https://zeit.co/home)
* [Begin](https://begin.com/)
* [Netlify](https://www.netlify.com/)
* [Now](https://github.com/zeit/now)
* [Wrangler](https://github.com/cloudflare/wrangler)
* [Apollo Federation](https://www.apollographql.com/docs/apollo-server/federation/introduction/)
* [Monaco](https://microsoft.github.io/monaco-editor/)
* [Postman](https://www.postman.com/)
* [Codesandbox](https://codesandbox.io/)
* [DynamoDB](https://aws.amazon.com/dynamodb/)
* [Amazon S3](https://aws.amazon.com/s3/)
* [Backblaze B2](https://www.backblaze.com/b2/cloud-storage.html)
* [Cloudinary](https://cloudinary.com/)
* [Fauna](https://fauna.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [The Power of Bad by John Tierney](https://www.amazon.com/Power-Bad-Negativity-Effect-Rules-ebook/dp/B07Q3NHPGZ)
* Wes: [Socket Organizer](https://amzn.to/2VhBbUt)

## Shameless Plugs
* Scott: [Animating React with Framer Motion](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4baae8bef40418a9ac3a16b594919dc1a2f20362275092119941c2cd7fab303d,more-on-severless-databases-files-secrets-auth-more,/shows/228 - serverless.md,2023-10-16 20:07:02.757,2023-10-27 15:57:52.301,TASTY
syntax_podcast_show_00229,229,Hasty Treat - Scott asks Wes about Cloudflare,2020-03-09 13:00:00.768,https://traffic.libsyn.com/syntax/Syntax229.mp3,"
In this Hasty Treat, Scott asks Wes about Cloudflare — which services he uses, which ones he doesn't, why, and more! 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:45 - What do you personally use Cloudflare for?

* DNS provider
* Domain registration at cost
* Caching
* DDoS protection
* Hiding server IP address
* Free HTTPS
* Firewall rules
* Scrape shield
* Lightweight stats
* Serverless functions
* DNS
* Cloudflare Warp

16:40 - What are you not using?

* KV storage
* Video streaming
* Deep customization around blocking/errors

19:49 - How do you set it up?

## Links
* [Cloudflare](https://www.cloudflare.com/)
* [Beginner Javascript](https://beginnerjavascript.com/)
* [Digital Ocean](https://www.digitalocean.com/)
* [DNS Simple](https://dnsimple.com/)
* [Let's Encrypt](https://letsencrypt.org/)
* [Syntax Ep 224: Serverless / Cloud Functions - Part 1](https://syntax.fm/show/224/serverless-cloud-functions-part-1)
* [Begin](https://begin.com/)
* [7-Eleven hit ""Dance The Slurp""](https://www.youtube.com/watch?v=px1Tn0LTqcs)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ad15edc945115ec7455c69c6abb0c4abc5d201ce15e6d8de2ddd8b7bbc672cc0,hasty-treat-scott-asks-wes-about-cloudflare,/shows/229 - cloudflare.md,2023-10-16 20:07:02.792,2023-10-27 15:57:52.351,HASTY
syntax_podcast_show_00230,230,Soft Skills Tips,2020-03-11 13:00:00.768,https://traffic.libsyn.com/syntax/Syntax230.mp3,"
In this episode of Syntax, Scott and Wes talk about soft skills tips — productivity, planning, communication, and more. 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

2:20 - Productivity

* Make a todo list and prioritize
* Get ideas out of your brain
* Use a tool like Notion as a second brain
* Batch related things together
* Recharge when you need it
* Have a system and stick to it

16:34 - Finishing projects

* Start
* Do a little every day
* Go all-in for a few days
* Clearly identify what needs to be done (Github issues, todo app)

23:30 - Planning tips

* I use Mind Node
* Whimsical
* Write it down when you have an idea
* Put everything in a calendar

30:24 - Communication

* Be honest and upfront with deadlines
* Give yourself padding — many people are overly optimistic
* Don't let people expect communication from you, at all, or at all times
* Assume good intentions
* Don't be a jerk to clients or coworkers

40:28 - Skill and career advancement

* FDD — fun driven development
* Share what you learn
* Don't let other's progress get you down — there is always someone smarter doing crazier stuff
* Solve your own problems
* Apply and interview for anything that's interesting
* Track your progress
* I want to ___, I wish I could ____, You are lucky that you get to _____
* Just start! Seriously. Plan on doing something.

## Links
* [Todoist](https://todoist.com/)
* [Things](https://culturedcode.com/things/)
* [Notion](https://www.notion.so/)
* [Evernote](https://evernote.com/)
* [Notable](https://notable.md/)
* [Beginner Javascript](https://beginnerjavascript.com/)
* [Level 1 Electron](https://www.leveluptutorials.com/tutorials/level-1-electron)
* [uses.tech](https://uses.tech/)
* [Rework](https://basecamp.com/books/rework)
* [Jason Freid](https://twitter.com/jasonfried)
* [David Heinemeier Hanson](https://twitter.com/dhh)
* [It Doesn't Have To Be Crazy At Work](https://basecamp.com/books/calm)
* [Mind Node](https://mindnode.com/)
* [Whimsical](https://whimsical.com/)
* [Javascript30](https://javascript30.com/)
* [CodeSandbox](https://codesandbox.io/)
* [Streaks](https://streaksapp.com/)
* [Xerf Xpec YouTube Channel](https://www.youtube.com/channel/UCkfmbKrdAH3_NHkbAZhWqIw/videos)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Katsumi Horii Project - Sky Cruisin' Album](https://www.youtube.com/watch?v=ypdnSS0La7s)
* Wes: [AmpliFi ALIEN Router](https://store.amplifi.com/products/amplifi-alien)

## Shameless Plugs
* Scott: [Animating React with Framer Motion](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",9878be683349e4712acdfeea79321cce9f1efe50be65967976af5a2fe3179c64,soft-skills-tips,/shows/230 - soft skills.md,2023-10-16 20:07:02.849,2023-10-27 15:57:52.397,TASTY
syntax_podcast_show_00231,231,Hasty Treat - Hiring an Assistant,2020-03-16 13:00:00.920,https://traffic.libsyn.com/syntax/Syntax231.mp3,"
In this Hasty Treat, Scott and Wes talk about how to hire an assistant — something that can make your life a lot easier as a solo developer.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

2:34 - Finding someone

* Virtual Assistant
  * Offset timezones can be handy
  * Flexible is great - two hours here, two hours there

5:55 - Types of tasks to delegate

* Support
* Email replies
* Mail and shipping items
* Invoicing
* Expenses
* Research - find emails for X
* Blog post edits
* Sponsorships

14:50 - Standard Operating Procedures

* If something happens more than once, make an SOP
* Common questions that come up

18:07 - Tools

* 1Password
* Missive
* Custom backend tools for:
  * Managing courses
  * Issuing refunds
* Chromebook
* Google Docs

21:52 - Hours

## Links
* [1Password](https://1password.com/)
* [Missive](https://missiveapp.com/)
* [Notion](https://www.notion.so/)
* [Freshbooks](https://freshbooks.com/syntax)
* [Syntax Ep 184: Desktop & Mobile Apps With a Single Codebase](https://syntax.fm/show/184/desktop-and-mobile-apps-with-a-single-codebase)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",42acd71cbccb1f6a006514b8e605eedd223d85f60e34a1b8d7b1c2658af32be6,hasty-treat-hiring-an-assistant,/shows/231 - hiring.md,2023-10-16 20:07:02.895,2023-10-27 15:57:52.449,HASTY
syntax_podcast_show_00232,232,React Hooks - 1 Year Later,2020-03-18 13:00:00.920,https://traffic.libsyn.com/syntax/Syntax232.mp3,"
In this episode of Syntax, Scott and Wes talk about React Hooks, one year later — what's changed, how to use them, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

1:26 - Hooks vs Render Props
* Hooks win hands down

3:40 - useState

9:18 - useReducer

12:12 - useRef

15:30 - useContext

21:55 - useEffect

29:35 -  Custom hooks to hide and encapsulate functionality

35:06 - How we use them

* Scott
  * Index that imports all custom hooks
  * Babel alias to hooks folder
  * Import { useHook } from 'hooks'
  * useContextState

* Wes
  * useResizeObserver
  * useForm
  * useGridRower
  * useWickedFavIcon

45:54 - Which built-in hooks do we not use?

* useImperativeHandle
* useCallback
* useDebugValue

48:22 - Are hooks harder to learn?

* Wes: Yes — but easier to maintain after the fact
* Scott: Yes — harder conceptually and initially but easier after concepts are understood

50:29 - Are classes going away?

* Wes: I say yes
* Scott: Double yes

## Links
* [Syntax Ep 092: React Hooks](https://syntax.fm/show/092/react-hooks)
* [Making setInterval Declarative with React Hooks - Dan Abramov](https://overreacted.io/making-setinterval-declarative-with-react-hooks/)
* [babel-plugin-module-resolver](https://github.com/tleunen/babel-plugin-module-resolver)
* [awesome-uses](https://github.com/wesbos/awesome-uses/blob/master/src/components/FavIcon.js)
* [uses.tech](https://uses.tech/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Ars Technica War Stories](https://www.youtube.com/playlist?list=PLKBPwuu3eCYkScmqpD9xE7UZsszweVO0n)
* Wes: [Mpow CH1 Kids Headphones](https://www.amazon.com/Mpow-Headphones-Protection-Function-Tangle-Free/dp/B078YQW26K/)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",82cf2c4abab913c06e6a4baba002fb09d94f0cc327b989c211da91902e934bff,react-hooks-1-year-later,/shows/232 - react hooks.md,2023-10-16 20:07:02.944,2023-10-27 15:57:52.504,TASTY
syntax_podcast_show_00233,233,Hasty Treat - Purchasing Power Parity,2020-03-23 13:00:00.415,https://traffic.libsyn.com/syntax/Syntax233.mp3,"
In this Hasty Treat, Scott and Wes talk about purchasing power parity — what it is, and how Wes has implemented it on his course website.  

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

2:36 - What is it?

5:43 - How do you calculate it? 

* Big Mac Index
* [Purchasing Power Parity](https://github.com/rwieruch/purchasing-power-parity)
* [Spotify Pricing Index](https://mts.io/projects/spotify-pricing/)
* [Glassdoor](https://www.glassdoor.com/)
* Just ask developers what they make

8:04 - How do you implement it?

* Cloudflare headers
* Dealing with VPNs
* Does it work with sales?

16:09 - Is it client-side only? 

## Links
* [country-emoji npm package](https://www.npmjs.com/package/country-emoji)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",92e90e2a555a7d024af1e19ece3f0482aee78dc29d6f24bf3cd84c209365c5bc,hasty-treat-purchasing-power-parity,/shows/233 - purchasing.md,2023-10-16 20:07:02.987,2023-10-27 15:57:52.546,HASTY
syntax_podcast_show_00234,234,Potluck - Bootcamps × Career Change × Figma × Gatsby × AMP × Mongoose × More!,2020-03-25 13:00:00.415,https://traffic.libsyn.com/syntax/Syntax234.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about bootcamps, Figma, Gatsby, AMP, Mongoose, imposter syndrome, and more!

## .TECH Domains - Sponsor
If you need eyes on your project, you'll need a domain, and .TECH is perfect for representing your brand. Find out if your .TECH domain is available at [go.tech/syntax2020](https://go.tech/syntax2020). Use the coupon code Syntax2020 and get 90% off 1- 5- and 10-year domain names.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

3:02 - Q. Scott, you talk a lot about your workflow with Figma. As a designer going to programming it sounds like the workflow was natural to you. As a programmer trying to move into design, I have no idea how to get started. Could you explain your workflow on starting a new project in Figma through starting to implement in VSCode?

5:36 - The dreaded monitor question, flat or curved?

8:34 - I am relatively new to web development and have learned HTML, CSS, Node and Mongo. I planned on taking your GatsbyJS e-commerce course, however, I have no experience in React whatsoever. Should I learn React first?

12:35 - What is AMP and should I be using it?

16:07 - What are the advantages and disadvantages of building a web app using a framework such as Blitz.js?

21:46 - Would you ever consider moving from Mongo / Mongoose?

24:47 - I am very new to the dev world. Went to college 15 years ago for Comp Sci, but dropped out halfway through to become an electrician. (Wasn't sure if I could sit in an office all day.) Long story, but I'm wanting to change my career path and I'm very interested in software development. I've heard about Modern Labor's bootcamp and I'm intrigued. I'd like to know what your take is on their program.

33:15 - Loved your recent episode(s) on serverless functions. I've implemented a few myself, but I always come back to the same question: how exactly do I secure these endpoints? Because you are charged for compute time, and those endpoints are publicly available, couldn't anyone just send requests to them and run up your bill?

36:53 - I've decided to make a career out of coding and programming and I'm an absolute beginner starting out in HTML and CSS. It might be a weird question but how many/what percentage elements and declaratives do I need to memorize? It's not that the info is necessarily difficult to parse, it's the amount of tags that I'm bombarding my brain with is muddying my progress. I'm more of a theory-driven learner so it's not the biggest obstacle in the world but I'm starting to see the breadth of this endeavor and I'm not sure how to focus my mental acuity.

40:39 - Do you have a standard folder structure that you follow for placing ""utility"" function JS files? Is there an ""industry standard""? I've just been using `utils` or `utilities` inside `src`, but curious if there is a more common way.

44:12 - Is figuring out new techs/modules/plugins/whatever really as easy as reading the docs for most people? A common response to ""what's a good way to learn x"" seems to be ""the docs are good"". I then open the docs and am absolutely clueless. Are these people just giving bad advice, or do the docs actually give most people enough to go on? For example, I tried to implement username login with Passport using their docs, and a lot seemed to be left out, implying you're supposed to just already know all this other stuff. It's a bit demoralizing to feel like I can't figure out much of anything on my own, and I've been doing web dev for a few years now, albeit not professionally, but I have done some big projects that are used regularly. So anyway, just wondering what your take on this common advice is, your experience with being able to figure out things on your own without needing an hour-long tutorial, and so on. I know you're both tutorial makers, but I don't get the impression that you two have to take a course to understand something new.

48:19 - Do you have any tips for getting over ""code shyness"" or ""imposter syndrome""? I find myself struggling with this issue from time to time and was curious to know your suggestions for dealing with it.

53:36 - If I rename my GitHub repo, will all the links that are in the wild still work. For instance will github.com/webruin map to github.com/newname?	

## Links
* [Cloudflare](https://www.cloudflare.com/)
* [AMP](https://amp.dev/)
* [Blitz.js](https://blitzjs.com/)
* [Brandon Blitz](https://twitter.com/flybayer)
* [Meteor](https://www.meteor.com/)
* [Mongoose](https://mongoosejs.com/)
* [DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html)
* [uses.tech](https://uses.tech/)
* [Course Report - Modern Labor](https://www.coursereport.com/schools/modern-labor)
* [Passport.js](http://www.passportjs.org/)
* [Syntax 058: Advice For Beginners - Tech Skills, Applying for Jobs, Focus, Imposter Syndrome + More](https://syntax.fm/show/058/advice-for-beginners-tech-skills-applying-for-jobs-focus-imposter-syndrome-more)
* [Syntax 015: Advice for New Developers, Imposter Syndrome and Interviewing at Google](https://syntax.fm/show/015/advice-for-new-developers-imposter-syndrome-and-interviewing-at-google)
* [Syntax 075: Hasty Treat - Feedback and Criticism](https://syntax.fm/show/075/hasty-treat-feedback-and-criticism)
* [Brendan Eich](https://twitter.com/BrendanEich)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Stronger by Science Podcast](https://www.strongerbyscience.com/podcast/)
* Wes: [iStat Menus](https://apps.apple.com/us/app/istat-menus/id1319778037)

## Shameless Plugs
* Scott: [Animating React with Framer Motion](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",fc513c8ba17830e25a5bca7fa36c6368673edd048ac6082016d2668fd870b6b2,potluck-bootcamps-career-change-figma-gatsby-amp-mongoose-more,/shows/234 - potluck.md,2023-10-16 20:07:03.107,2023-10-27 15:57:52.594,TASTY
syntax_podcast_show_00235,235,Hasty Treat - Get Gud at Passwords & Password Management,2020-03-30 13:00:00.493,https://traffic.libsyn.com/syntax/Syntax235.mp3,"
In this Hasty Treat, Scott and Wes talk about security and how to get good at passwords.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

7:35 - Setting passwords

* Absolutely 100% must be unique for EVERY SINGLE WEBSITE

9:38 - Generated passwords

* Make a sentence: lovetoEatPizza
* Decide on casing
* Make your own algorithm:
  * 3rd letter replaced by 4th letter of domain
  * number on end is double the number of chars in the domain

13:52 - Use a password manager

* Have the password manager generate the password for you
* Get it on your phone
* You must go 100% all in
* [1password](https://1password.com/)
* [Dashlane](https://www.dashlane.com/)
* [Bitwarden](https://bitwarden.com/) - open source version of Dashlane
* [LastPass](https://www.lastpass.com/) - awful 

17:45 - Password manager tips

* Turn off your browser password manager - this is a crutch and causes them to become out of sync and this is why I see people annoyed by them
* For the love of god, make you master password something you can remember
* You can add family members to your plan that will approve it
* 1password's Watchtower feature

20:50 - Biometrics

* Face ID, Touch ID
* Blood

21:37 - 2FA codes

* [Authy](https://authy.com/)
* [Google Authenticator](https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en_US)
* [Authenticator +](https://www.microsoft.com/en-us/p/authenticator/9nblggh08h54)
* 1Password for 2FA codes
* Backup codes
* You can also backup the QR code

29:55 - Text message codes

* Don't
* My sister got sim jacked, PayPal drained, phone number was gone for 7 days
* Lock transfer - ask your phone provider - mine has voice recognition

## Links
* [Have I been pwned?](https://haveibeenpwned.com/)
* [Shop Talk Show: One on One with a Hacker](https://shoptalkshow.com/special-one-one-hacker/)
* [Mailchimp](https://mailchimp.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6d79ab918a74bb310b3072401883726983f0dd4d56ee1e572491e334337717b3,hasty-treat-get-gud-at-passwords-and-password-management,/shows/235 - passwords.md,2023-10-16 20:07:03.161,2023-10-27 15:57:52.638,HASTY
syntax_podcast_show_00236,236,"Mental Health and Dev ft Dr. Courtney Tolinski - Depression, Anxiety, Imposter Syndrome, Focus, Motivation, Burnout",2020-04-01 13:00:00.493,https://traffic.libsyn.com/syntax/Syntax236.mp3,"
In this episode of Syntax, Scott and Wes talk with Dr. Courtney Tolinski PhD about mental health and web development.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests

* [Courtney Tolinski](https://twitter.com/DrTolinski)

## Show Notes

3:20 - Depression

* Honestly just explaining depression would be great. Too many times I’ve heard “but you don’t look sad”
* As someone who struggles with depression, what are some things I can do to rekindle and things I enjoy like developing and hobbies? This would greatly benefit me for learning more dev related things outside of doing it for work.
* My depression is due to some other cause in personal life - two years into it.
* Coding has bought me little life back as this is only thing I have to do.
* What can we do from an outsider's view to someone who might have depression? 

12:23 - Anxiety

* Imposter Syndrome x 1000
* How to deal with increased anxiety during these times?
* How to avoid anxiety and feel useless when working products that you don't appeal to you?
* Wanted to ask the Dr about why do I feel that I have to work on 1000 projects that seem to never finish? 😣This is inducing a lot of anxiety sometimes.
* I am on depression medication. Sometimes, I feel scared that I am so slow and don't feel accomplished enough like people working at FANG, etc, being a SE.
* How to deal with the anxiety caused by today’s events around the world and the need to isolate yourself from society even though we crave human interaction?

29:12 - Focus and job performance

* How to keep motivation and focus? I find myself enjoying work but having a hard time focusing on it. All the ""distraction-free"" apps don't work because I can turn them off and I feel they literally have no power over me.
* Hardcore mode
* Pomodoro technique

35:10 - Motivation and remote work

* Bore-out
* Burnout
* How do you deal with loss of focus and happiness in web development (especially on remote jobs)?
* Working for yourself at home, you don't get a chance to bounce ideas and encouragement from others in an office. What're some good ways to compensate for that to ensure you maintain a positive mindset?
* Work on new things
* Find ways to try new things

40:38 - Stress

* Correctly identifying source of (negative?) stress. Not lashing out when under stress.
* How to avoid eating to cope with stress?

## Links
* [Eat That Frog! - Brian Tracy](https://www.amazon.com/gp/product/162656941X/)
* [Pomodoro technique](https://en.wikipedia.org/wiki/Pomodoro_Technique)
* [Healthline](https://www.healthline.com/)
* [How to Talk so Little Kids Will Listen: A Survival Guide to Life with Children Ages 2-7](https://amzn.to/39gWV6i)

## ××× SIIIIICK ××× PIIIICKS ×××
* Courtney: 
  * [Animal Crossing: New Horizons](https://www.nintendo.com/games/detail/animal-crossing-new-horizons-switch/)
  * [How to Talk So Kids Will Listen & Listen So Kids Will Talk](https://amzn.to/39cX1Mb)
  * [The Whole-Brain Child: 12 Revolutionary Strategies to Nurture Your Child's Developing Mind](https://amzn.to/2xheeH6)
* Scott: [The Engineering Mindset YouTube Channel](https://www.youtube.com/channel/UCk0fGHsCEzGig-rSzkfCjMw)
* Wes: [Toca Boca](https://tocaboca.com/)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Eveything is 50% off! Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b0ada1223f180b6cdabeedca48ac299729c2683129ec69b285f66e44c964e301,mental-health-and-dev-ft-dr-courtney-tolinski-depression-anxiety-imposter-syndrome-focus-motivation-burnout,/shows/236 - mental.md,2023-10-16 20:07:03.203,2023-10-27 15:57:52.688,TASTY
syntax_podcast_show_00237,237,Hasty Treat - Abstraction,2020-04-06 13:00:00.870,https://traffic.libsyn.com/syntax/Syntax237.mp3,"
In this Hasty Treat, Scott and Wes talk about abstraction in general as well as javascript programming.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

1:48 - What the heck is abstraction?

* I like to think of it as sweeping under the rug
* Vue and React devs should be very familiar with the concept

4:44 - When to abstract

* When things are getting too heavy
* Personal preference 
* Some people have an arbitrary line limit

7:25 - When not to abstract

* When savings are minimal 
* When it just adds a pointless layer 

9:40 - Personal code abstractions vs public

* My personal focus is on API simplicity and baked-in smart defaults 
* More specific 
* Public APIs need to be more flexible or at least for some components

## Links
* [React](https://reactjs.org/)
* [Vue](https://vuejs.org/)
* [Svelte](https://svelte.dev/)
* [Max MSP](https://www.instructables.com/id/Intro-to-MaxMSP/)
* [chakra UI](https://chakra-ui.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",a49fc752011e53f1f5688e534eab9de02b30ff490f9d79b50683dff136c42b49,hasty-treat-abstraction,/shows/237 - abstraction.md,2023-10-16 20:07:03.412,2023-10-27 15:57:52.848,HASTY
syntax_podcast_show_00238,238,Working From Home During the Pandemic (With or Without Kids),2020-04-08 13:00:00.065,https://traffic.libsyn.com/syntax/Syntax238.mp3,"
In this episode of Syntax, Scott and Wes talk about working from home. How do we do our best in these unprecedented times? Here are our tips for working from home and staying productive and sane! 

## .TECH Domains - Sponsor
If you need eyes on your project, you'll need a domain, and .TECH is perfect for representing your brand. Find out if your .TECH domain is available at [go.tech/syntax2020](https://go.tech/syntax2020). Use the coupon code Syntax2020 and get 90% off 1- 5- and 10-year domain names.

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

2:39 - Your space

* You need a table
  * Card table or dining room table
* Keyboard + monitor
* Don't work from your bed or couch
* Headphones can get you in the zone (noise-canceling ftw)

16:36 - Routine

* Shower, shave, makeup
* Clear start and stop times - even if that means it's 5am to 11am because you are splitting
* Taking breaks is important

25:24 - Focus

* TODO list - write a list of what you hope to do at the start of the day, check things off, feel good about yourself
* Eat That Frog - for the 100th time
* Don't watch or check the news during work hours
* Block the terms related to the pandemic or politics on social media - you don't need that info there
  * DOOM Scrolling

30:11 - Self care

* Video games or relaxing things post work
* Exercise
  * Kettlebells, spin bike, bodyweight workouts
    * Stronger by Science has a great episode about this - [https://www.strongerbyscience.com/podcast-episode-38/](https://www.strongerbyscience.com/podcast-episode-38/)
* Zoom Happy Hours
* Don't overly rely on substances to get you through
* Get your VD (vitamin D)
* Don't stress out yourself at night - don't look up news before bed

43:20 - Managing kids and sharing time with your partner

* First of all, props to you all - this is really hard, mentally and physically
* This will vary greatly depending on your SO's job, number and age of kids
* Our SOs have work and jobs of their own
* Watching young kids is hard work
* Give each other 30 min brakes
* Kids need routine - put something in place
* Some times Uncle Mickey needs to take over, and that's ok
* Communication is key
* Schedule Examples:
  * 6-12 and 12-6
  * 4 hours each
  * 2 hour trade off
  * Focus time (calls, deep work) and half-focus time (emails, etc.)
* Have empathy with everyone: co-workers, SO, kids
* Check in on your peeps
* Keep an eye on your co-workers, even the extroverted ones

## Links
* [Super Strong Neodymium Magnets](https://www.amazon.com/Neodymium-Double-sided-Adhesive-Permanent-Scientific/dp/B076Z81891)
* [Elgato Cam Link 4k](https://www.amazon.com/Elgato-Cam-Link-Broadcast-Camcorder/dp/B07K3FN5MR/)
* [Keychron K1](https://amzn.to/2UzdvZN)
* [Eat That Frog!](https://www.amazon.com/gp/product/162656941X)
* [uses.tech](https://uses.tech/)
* [Animal Crossing](https://animal-crossing.com/)
* [Love Is Blind](https://www.netflix.com/title/80996601)
* [Powerblocks](https://www.amazon.com/POWERBLOCK-50-Set-Pair-10-50/dp/B07BDRZF9D/)
* [Peloton](https://www.onepeloton.com/)
* [Strange Brew](https://www.imdb.com/title/tt0086373/?ref_=fn_al_tt_1)
* [Wes' Twitter thread - How are you managing child care?](https://twitter.com/wesbos/status/1242065134593474561)
* [Syntax Twitter thread - Send us your work from home tips!](https://twitter.com/syntaxfm/status/1237863437721452546)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Oculus Quest](https://amzn.to/39mq5RL)
* Wes: [Slumberpod](https://www.slumberpod.com/) 

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - 50% off!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",021fb4a32eacf26cb966b5fa1c1185a805524feb328dc75bf4837e1b080852b9,working-from-home-during-the-pandemic-with-or-without-kids,/shows/238 - wfh.md,2023-10-16 20:07:03.493,2023-10-27 15:57:52.903,TASTY
syntax_podcast_show_00239,239,Hasty Treat - 5 Things That Make Your Site Slow,2020-04-13 13:00:00.171,https://traffic.libsyn.com/syntax/Syntax239.mp3,"
In this Hasty Treat, Scott and Wes talk about five things that could potentially be making your website slow.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

3:00 - TTFB 

* Slow DNS lookup
* Server on the other side of the world
* Slow server processing
* Network speed back to the browser

6:21 - Requests

* Too many requests
* Too large
* Waterfalling your requests

9:44 - Assets are too large

* Images are the biggest bloat in a site
* Compress and optimize via build tool or ImageOptim
* Make smaller
* Picture fill for mobile

14:48 - Lazy loading

* lazy=""true""
* Intersection observer
* Preload slider images two ahead

18:03 - Not using a CDN

* What is a CDN?
* Cloudflare is free, others are very cheap - we used Cloudfront
* Netlify is free and comes with a CDN

## Links
* [WordPress](https://wordpress.org/)
* [Webpack](https://webpack.js.org/)
* [Gulp](https://gulpjs.com/)
* [gatsby-image](https://www.gatsbyjs.org/packages/gatsby-image/)
* [Cloudinary](https://cloudinary.com/)
* [Cloudflare](https://www.cloudflare.com/)
* [Cloudfront](https://aws.amazon.com/cloudfront/)
* [Netlify](https://www.netlify.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",fce68929f2d69e3b748d83644e35926e787e4d282637f444dd9df7feb7fac11b,hasty-treat-5-things-that-make-your-site-slow,/shows/239 - 5 things.md,2023-10-16 20:07:03.546,2023-10-27 15:57:52.973,HASTY
syntax_podcast_show_00240,240,Thinking Ahead for Emergency UI When Building a Website,2020-04-15 13:00:00.171,https://traffic.libsyn.com/syntax/Syntax240.mp3,"
In this episode of Syntax, Scott and Wes talk about emergency UI when building a website. During an emergency, you need to relay information to your website visitors as quickly and efficiently as possible. How do you do that?  What do you need in place on your website?

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

5:40 - Banners and popups 

* Interfere 
* Static
* Dismissible
* Cookie/localstorage
* When that popup is updated, it should show again. Maybe use a hash of the content? Or length? Something that resets itself every time the content is updated.
* [Private client-side-only PWAs are hard](https://news.ycombinator.com/item?id=22686602)

14:35 - Good styling

* What happens if they add an image?
* Do they have access to the branded fonts and colors in their WYSIWYG?
* Can you revoke 100px red Times New Roman?

18:32 - Page alerts

* Yellow, green, red
* Alerts on existing pages

21:08 - New pages

* Is there a good template for new pages?
* Can they easily set the slug?
  * [whatever.com/covid19](http://whatever.com/covid19)
* Can they add it to the nav?

23:52 - Google's ""Hours of Operation""

* Is that easy to change?
* Meta tags: [https://schema.org/OpeningHoursSpecification](https://schema.org/OpeningHoursSpecification)

25:43 - Other 

* Own your audience!
* Email newsletter ready to rock
* Online pickup? Basic scheduling software
  * [https://www.cityhive.net/](https://www.cityhive.net/)
  * [https://snipcart.com/](https://snipcart.com/)
* Live streaming - have a YouTube account ready to go, even if empty

34:38 - Deployment

* Detail how to deploy everything
* It might have been years and the CSS will only compile on Node 6 and Gulp 3
* Do any caches need clearing?
* Does the CSS need to be cache busted?

## Links
* [1Password](https://1password.com/)
* [Cloudflare](https://www.cloudflare.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott:
  * [Mellow Groovy Sounds YouTube Channel](https://www.youtube.com/user/Jeffreyhansful)
  * [Mellow Grovvy AOR / West Coast Mix #4](https://www.youtube.com/watch?v=wrNIj10un9o)
* Wes: Used projectors are cheap and can be a great deal

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - 50% everything!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5f16da988ae8d99625811089f1f431cf83a28bede71cdc367ccf15ddeb427e3a,thinking-ahead-for-emergency-ui-when-building-a-website,/shows/240 - emergency ui.md,2023-10-16 20:07:03.626,2023-10-27 15:57:53.036,TASTY
syntax_podcast_show_00241,241,Hasty Treat - 5 More Things That Make Your Site Slow,2020-04-20 13:00:00.416,https://traffic.libsyn.com/syntax/Syntax241.mp3,"
In this Hasty Treat, Scott and Wes continue their discussion of website page speed — five more things that make your site slow!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

03:01 - Shipping too much JS

* Code splitting
* [Webpack Bundle Analyzer](https://www.npmjs.com/package/webpack-bundle-analyzer)
* Look at dependencies of libraries
* Use fewer libraries

06:38 - Not bundling code

* Build process

08:24 - Not compressing code

* [Google Closure Compiler](https://developers.google.com/closure/compiler)
* Gzip via your server serving assets
* Minify CSS + JS

11:45 - Loading JS asynchronously

* [Where should I put script tags in HTML markup?](https://stackoverflow.com/questions/436411/where-should-i-put-script-tags-in-html-markup)
* Solution: Lazy load JS as needed
* Solution: Show HTML first, load JS in the footer
* Solution: Use Async + Defer

16:42 - Missing indexes on DB

* What is a DB index?
* Where should you add them?
* [MongoDB Compass](https://www.mongodb.com/products/compass)

## Links
* [Syntax 239: Hasty Treat - 5 Things That Make Your Site Slow](https://syntax.fm/show/239/hasty-treat-5-things-that-make-your-site-slow)
* [Google PageSpeed](https://developers.google.com/speed/pagespeed/module)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",545deec00e4aa29918f0456eb0887014964d03328e0bdae65460a17587547eb6,hasty-treat-5-more-things-that-make-your-site-slow,/shows/241 - 5 more things.md,2023-10-16 20:07:03.696,2023-10-27 15:57:53.085,HASTY
syntax_podcast_show_00242,242,Potluck - Mobile First × Arrow Functions × Deno × JSON APIs × Refactoring Tips × More!,2020-04-22 13:00:00.416,https://traffic.libsyn.com/syntax/Syntax242.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about mobile first development, ES6 arrow functions, Deno.js, tips for refactoring your code, best e-commerce platforms and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

02:50 - Q: Wondering about your take on mobile first design and implementation? Do you throw the desktop styles or the mobile styles in media queries? Any opinions about that? I'm switching a lot between projects that do it differently, and it really makes my head melt.

08:24 - Q: What is the difference between the ES6 arrow functions and a normal function? When would you use a normal function instead of an arrow function or the other way around?

13:54 - Q: What are your opinions or experiences on developing 360/VR experiences on the web? There are a few frameworks out there for building such experiences, like [A-Frame](https://aframe.io/) and [React 360](https://facebook.github.io/react-360/). I was wondering if you had any experience using such frameworks or building these types of things, and do you think that this could become a big thing for web development in the future?

19:02 - Q: How do you define senior developer? What is the difference between intermediate and senior developers?

21:37 - Q: I was curious knowing your opinions regarding [json:api](https://jsonapi.org/) and its consumption in React. Is it still a good pick compared to [GraphQL](https://graphql.org/) or normal rest/json?

27:30 - Q: What's your take on [Blitz.js](https://blitzjs.com/) and [RedwoodJS](https://redwoodjs.com/)? Would you use a framework like this to build a large & scalable web app?

30:54 - Q: What do you think of [Deno.js](https://deno.land/) reaching version 1.0? Is it really going to be a Node successor, or is that just marketing hype?	

34:34 - Q: When you are looking to refactor code, do you have a process you like to follow? 

41:35 - Q: Which technology stack would you choose in 2020 for an e-commerce website and why?

46:32 - Q: I'm confused about developing a website for a client. I feel like most, if not all, clients want to take administrative control at the end of the project to be able to handle things themselves. Does this mean the only option for client projects is WordPress? I got really excited about making a client's site in Gatsby, but they would need to be a coder to be able to edit the content of the site or maintain it. Am I missing something here?

49:52 - Q: How do I use prop types to check a component when getting the props from context instead of passing them down?

51:51 - Q: Should I use the [mongoDB](https://www.mongodb.com/) or [mongoose node module](https://www.npmjs.com/package/mongoose) in my project? What are the differences?

55:48 - Q: Is it a bad practice if I mix up [React Bootstrap](https://react-bootstrap.github.io/) and [Material UI](https://material-ui.com/) in one React project?

## Links
* [gqless](https://gqless.dev/)
* [Prisma](https://www.prisma.io/)
* [The Blitz.js Manifesto (A New Fullstack React Framework)](https://dev.to/flybayer/the-blitz-js-manifesto-a-new-react-framework-1gg7)
* [Begin](https://begin.com/)
* [Shopify](https://www.shopify.com/)
* [Snipcart](https://snipcart.com/)
* [Magento](https://magento.com/)
* [Sanity](https://www.sanity.io/syntax)
* [Gatsby](https://www.gatsbyjs.org/)
* [Syntax 157: Hasty Treat - What is a Headless CMS?](https://syntax.fm/show/157/hasty-treat-what-is-a-headless-cms)
* [@dog_rates](https://twitter.com/dog_rates)
* [Wondery - Joe Exotic](https://wondery.com/shows/joe-exotic/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Jackbox Games - Murder Party Two](https://www.jackboxgames.com/trivia-murder-party-two/)
* Wes: [Tiger King](https://www.netflix.com/title/81115994)

## Shameless Plugs
* Scott: [Custom React Hooks](https://www.leveluptutorials.com/tutorials/custom-react-hooks) - Currently 50% off! - Use the coupon code 'Syntax' for an additional 10% off!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",bf1cce5ef17f6ac31d6ab5bb9394d10e3b7750d7664140aa2129dd7e5a302f44,potluck-mobile-first-arrow-functions-deno-json-apis-refactoring-tips-more,/shows/242 - potluck.md,2023-10-16 20:07:03.748,2023-10-27 15:57:53.137,TASTY
syntax_podcast_show_00243,243,Hasty Treat - Getting Buy-in for a Tool Like Prettier From Your Team,2020-04-27 13:00:00.312,https://traffic.libsyn.com/syntax/Syntax243.mp3,"
In this Hasty Treat, Scott and Wes talk about getting buy-in from your team when using new tools. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:53 - Q: ""I wrote a long message to our architect asking if I could install prettier into our component generator for new projects moving forward, and the response I got was: ""Don't auto-format, not all devs want that and prettier doesn't always format the way I like, I don't want to enforce that on devs.""

This sucks because I know the codebase would benefit so much. Right now every time I visit a project so much of the code is not spaced out that it makes it hard to read quickly for me, lots of the React code is bunched up with no spacing - it's a mess to read for me especially because I am very organized. If this was your situation where you know a new tool/standard is something that can help a lot but it's shot down, do you just give up? I don't know how to respond to this because I am the only dev who has ever proposed this at my company and I just started here.

05:03 - Lots to unpack here

1. Some senior devs don't like getting suggestions from other devs. There is a sense that these things change quickly and I bet there is some anxiety over that at play here.
2. Senior devs know better than to slap new tools into the codebase because they have probably done it and regretted it. What if it broke your code.

08:20 - So what can you do?

1. Ask for their thoughts on a tool instead of suggesting it - it seems you have done this already
2. Show the dev that even though it looks weird, it's better for readability. 
3. Look at existing guidelines and try to match the settings as close as possible (not always an option with prettier).
4. Put together a solid argument for it, written down.
5. Use it in a smaller project. Everyone is against prettier at first, but once they use it, they realize how amazing it is.
6. Can you just Prettier the code yourself and then format it otherwise before you check it in? This depends on if you have existing formats.

## Links
* [Prettier](https://prettier.io/)
* [js-beautify](https://github.com/beautify-web/js-beautify)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8cc4be1033e4b7795fce1d7e97b351a5505a4dfd9d2304e0f02fdcc7331eb0cf,hasty-treat-getting-buy-in-for-a-tool-like-prettier-from-your-team,/shows/243 - prettier.md,2023-10-16 20:07:03.798,2023-10-27 15:57:53.187,HASTY
syntax_podcast_show_00244,244,Potluck Part 2 - Magic GQLess × Are classes dead? × Custom Hooks × Staying Up To Date × CSS × More!,2020-04-29 13:00:00.312,https://traffic.libsyn.com/syntax/Syntax244.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about custom hooks, static site generators, code management, CSS, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

04:02 - Q: Could you do a quick overview of how to effectively use a platform like [Cloudinary](https://cloudinary.com/)? I have a [Gatsby](https://www.gatsbyjs.org/) site with a lot of images and want to use something like Cloudinary to help with optimization, but the docs aren't completely clear to me how to get the most out of their service.

10:58 - Q: What kind of CSS pre/post-processor you usually use? What are the pros and cons of pre-processor (SASS, SCSS, LESS) and post-processor (PostCSS)?

16:22 - Q: What is the most effective way to share a project with the internet and get feedback? I'm in a phase right now where I'm building loads of new web things with React and JavaScript, but the only place I can think to share them is my Twitter, where only like 3 people will see them.

18:35 - Q: What are your thoughts on classes in JavaScript? Do we still need them in 2020, or has the functional programming paradigm made them largely unnecessary? Does the answer change based on the size of the project and/or team?

23:56 - Q: Does ES2020 have `var`? Also, is ES2020 a real spec or just a term people are using?

27:37 - Q: Have you tried [gqless](https://gqless.dev/), a graphql client alternative to something like Apollo client? Very interesting idea for clean and maintainable code.

29:15 - Q: What are the main differences in working for a software agency and a software product company? Pros and cons of each?

33:53 - Q: Advice for having static blog with minimal moving parts? I used to have a static blog but I eventually got sick of touching it because instead of writing content I often got stuck keeping up with all the dependencies involved.

38:18 - Q: Micro Frontends—is it the solution to rewriting legacy components?

42:16 - Q: I am relatively new to web development and I feel like it is very difficult to ""catch up"" with JavaScript. It seems like whenever I try to contribute an open source, I can't figure out the code because they're using newer (and presumably better) ways of doing things. How can I get up to date with everything that's going on in the JavaScript world? Also, at what point should I start learning a front-end framework?

46:56 - Q: My team and I are starting to write pretty complicated custom hooks gathering data from a number of different endpoints and/or polling certain endpoints on a continuous interval timer before returning it to the component that needs the data. Since this is the case some hooks have gotten fairly large with multiple functions inside of them getting called to get/manipulate all the data, or multiple hooks using those same functions to get slightly different data. Is it a best practice to keep all those hooks together in one file if they support all the hooks? Or should we break the hooks into separate files and move the helper functions into another file and just have one hook per file?

51:10 - Q: Any tips for navigating projects with bad project managers? Working with non-technical agency project managers makes it pretty difficult to effectively plan and allocate time to ensure that all of the projects are done on time, on budget, and done well. It's important to me to maintain an optimistic attitude in the organization, but sometimes I'd love to just hit 'em with the 'ol ""Peace out"" and go smoke some pork butt. Wondering if you guys have any good experience managing these types of projects?

55:45 - Q: I'm committing often and early, but this means that I end up writing the same vague git commit message over and over again. I know the solution to the problem is to just be more verbose, but it's a difficult habit to break. Any advice?

## Links
* [imgIX](https://www.imgix.com/)
* [Netlify](https://www.netlify.com/)
* [Sass](https://sass-lang.com/)
* [Less](http://lesscss.org/)
* [Bootstrap](https://getbootstrap.com/)
* [Stylus](https://stylus-lang.com/)
* [PostCSS](https://postcss.org/)
* [WordPress](https://wordpress.org/)
* [Reddit](https://www.reddit.com/)
* [StaticGen](https://www.staticgen.com/)
* [Gridsom](https://gridsome.org/)
* [Vue](https://vuejs.org/)
* [Laravel](https://laravel.com/)
* [Hugo](https://gohugo.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Jelle's Marble Runs](https://www.youtube.com/channel/UCYJdpnjuSWVOLgGT9fIzL0g)
* Wes: [Hyundai HHC2GNK Vertical Style Electric Air Compressor](https://www.amazon.ca/Hyundai-HHC2GNK-Vertical-Electric-Compressor/dp/B00ISLYLKI/ref=sr_1_4?keywords=nail%2Bgun%2Bcompressor&qid=1586882118&sr=8-4&th=1)

## Shameless Plugs
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",3ff58766d2c384d84c7696ebc03b95033a98862921ed8906e32d12e57ffb026d,potluck-part-2-magic-gqless-are-classes-dead-custom-hooks-staying-up-to-date-css-more,/shows/244 - potluck.md,2023-10-16 20:07:03.835,2023-10-27 15:57:53.243,TASTY
syntax_podcast_show_00245,245,Hasty Treat - Things You Should Know About Javascript Events,2020-05-04 13:00:00.626,https://traffic.libsyn.com/syntax/Syntax245.mp3,"
In this Hasty Treat, Scott and Wes talk about javascript events, and how to avoid some common pitfalls!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

02:23 - Event bubbling

* Some events bubble, some don't
* Clicks bubble
* Mouseevents bubble
* Focus doesn't bubble

04:10 - Event capturing

* Capture: down, bubble up
* Canceling: prevent default
* target` vs currentTarget
* currentTarget is what got clicked
* target is what you listened for the click on
* event.isTrusted
* addEventListener once: true

## Links
* [Javascript30](https://javascript30.com/)
* [BeginnerJavascript](https://beginnerjavascript.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",1b18df8027001c29ebac342f40458e4f18fcc54446b7d3cdfb7a33f08ea3ed72,hasty-treat-things-you-should-know-about-javascript-events,/shows/245 - js events.md,2023-10-16 20:07:03.871,2023-10-27 15:57:53.291,HASTY
syntax_podcast_show_00246,246,"Bootcamps, Getting a Job, and Income Share Agreements with Heather Payne",2020-05-06 13:00:00.626,https://traffic.libsyn.com/syntax/Syntax246.mp3,"
In this episode of Syntax, Scott and Wes talk with Heather Payne about bootcamps — how to get the most out of them and what to look out for!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Guests
* [Heather Payne](https://twitter.com/heatherpayne)

## Show Notes

07:52 - Bootcamps

* What do you teach in the bootcamp? 
* How long is it? 
* How do you validate and pick topics?
* What makes a good bootcamp student?
* Do bootcamps work?
* How do you get the most out of a bootcamp?

20:45 - Finding a job

* How do you prepare for an interview?
* What qualities, outside of technical skill, do you see in developers who get jobs easily out of the bootcamp?
* Do you see any common traits in the few that don't get jobs?
* What about getting a job in the current climate?

43:30 - Other

* How do income share agreements work?
* Pay what you can income share agreements
* How do you tell if a bootcamp is good? 

## Links
* [Heather Payne](https://twitter.com/heatherpayne)
* [Juno College](https://junocollege.com/)
* [WordPress](https://wordpress.org/)
* [React](https://reactjs.org/)
* [Council on Integrity in Results Reporting](https://cirr.org/)
* [Zoom](https://zoom.us/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Heather: [Whereby](https://whereby.com/)
* Scott: [Original Grind Coffee Co. Cold Brew Coffee Maker (1 Gallon)](https://amzn.to/2wWC37c)
* Wes: [iStat Menus](https://apps.apple.com/us/app/istat-menus/id1319778037?mt=12)

## Shameless Plugs
* Heather: [Juno's Continuing Education Online Courses](https://junocollege.com/)
* Scott: [Design Systems In Figma](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Wes' New Website](https://wesbos.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",867971c19d9e8d782e11af9e9b2a7af211a55db878548086add94f0a08f37dac,bootcamps-getting-a-job-and-income-share-agreements-with-heather-payne,/shows/246 - bootcamps.md,2023-10-16 20:07:03.949,2023-10-27 15:57:53.344,TASTY
syntax_podcast_show_00247,247,"Hasty Treat - Wes' New Personal Website",2020-05-11 13:00:00.345,https://traffic.libsyn.com/syntax/Syntax247.mp3,"
In this Hasty Treat, Scott and Wes talk about Wes' new website - its first update since 2014!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

05:04 - The stack

* Gatsby
* Styled components
* React
* MDX

07:04 - The content

* Blog posts
* Twitter Hot Tips

09:54 - Styling

* Styled components
* Less

16:54 - MDX

17:45 - Serverless functions

## Links
* [wesbos.com](https://wesbos.com/)
* [bos.af](https://bos.af/)
* [WordPress](https://wordpress.org/)
* [ACF](http://advancedcustomfields.com/)
* [Netlify](https://www.netlify.com/)
* [Gatsby](https://www.gatsbyjs.org/)
* [React](https://reactjs.org/)
* [MDX](https://mdxjs.com/)
* [My New Website! Here are the deets](https://wesbos.com/new-wesbos-website/)
* [Next](https://nextjs.org/)
* [Operator Mono](https://www.typography.com/fonts/operator/styles)
* [Mono Lisa](https://www.monolisa.dev/)
* [Puppeteer](https://pptr.dev/)
* [gatsby-image](https://www.gatsbyjs.org/packages/gatsby-image/)
* [Jason Lengstorf](https://lengstorf.com/)
* [gatsby-plugin-prettier-build](https://www.gatsbyjs.org/packages/gatsby-plugin-prettier-build/)
* [Cloudinary](https://cloudinary.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",abe80190ab8510923d5cbc9be4d660db035b907ab2687cf252b56e3b89a51441,hasty-treat-wes-new-personal-website,/shows/247 - new website.md,2023-10-16 20:07:03.988,2023-10-27 15:57:53.527,HASTY
syntax_podcast_show_00248,248,"What's New in Javascript",2020-05-13 13:00:00.345,https://traffic.libsyn.com/syntax/Syntax248.mp3,"
In this episode of Syntax, Scott and Wes talk about what is new in Javascript — a whole bunch of new stuff that you can use now and in the next sixth months or so.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

### ES2019

04:03 - Array.flatMap()
05:30 - Array.flat()
07:37 - Array.fromEntries()
09:50 - String.trimStart() and String.trimEnd()
11:23 - Function.toString()
11:57 - Object Key Order

1. Integer keys in ascending order (and strings like ""1"" that parse as ints)
2. String keys, in insertion order (ES2015 guarantees this and all browsers comply)
3. Symbol names, in insertion order (ES2015 guarantees this and all browsers comply)

### ES2020

14:50 - Big int
18:09 - Nullish coalescing
20:57 - Optional Chaining
24:55 - promise.allSettled
25:33 -  Dynamic import
27:14 - string.matchAll(regex) and string.replaceAll
29:30 - globalThis
30:44 - Module Namespace Exports
33:11 - Navigator.share() API
36:34 - Async Hooks
37:39 - Pipline Operator 
39:59 - Top Level Await 

## Links
* [https://twitter.com/wesbos/status/1181584047144878080](https://twitter.com/wesbos/status/1181584047144878080)
* [https://twitter.com/wesbos/status/1238472679893671938](https://twitter.com/wesbos/status/1238472679893671938)
* [https://twitter.com/wesbos/status/1230515254687301635](https://twitter.com/wesbos/status/1230515254687301635)
* [Regex101](https://regex101.com/)
* [Regexr](https://regexr.com/)
* [https://developer.mozilla.org/en-US/docs/Web/API/Navigator/canShare](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/canShare) 
* [Sketch](https://www.sketch.com/)
* [CloudApp](https://www.getcloudapp.com/)
* [Figma](https://www.figma.com/)
* [https://nodejs.org/api/async_hooks.html](https://nodejs.org/api/async_hooks.html)
* [Gulp](https://gulpjs.com/)
* [https://v8.dev/features/top-level-await](https://v8.dev/features/top-level-await)
* [https://github.com/tc39/proposal-pipeline-operator](https://github.com/tc39/proposal-pipeline-operator)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Sapper](https://sapper.svelte.dev/)
* Wes: [Dewalt Oscillating Multitool](https://amzn.to/2RR9f7B)

## Shameless Plugs
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",2ca8260a90431548f3e4627bdb08639960691d7349eb72294cd021b42ab0ab87,what-s-new-in-javascript,/shows/248 - new in JS.md,2023-10-16 20:07:04.024,2023-10-27 15:57:53.569,TASTY
syntax_podcast_show_00249,249,"Hasty Treat - Scott's New Personal Website",2020-05-18 13:00:00.555,https://traffic.libsyn.com/syntax/Syntax249.mp3,"
In this Hasty Treat, Scott and Wes talk about Scott's new website!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

02:25 - Relaxed fit development

* Not concerned with it being perfect
* Will act as a loose digital garden, so it needs to be flexible
* Keep my talks and podcast appearances somewhere 

04:40 - The stack

* Svelte / Sapper
* CSS variables 
* Static generation with markdown
* No API 
* Hosted on Netlify

08:15 - Why?

* I dropped that db life in 2015 and never looked back
* I'm a developer - markdown is good for me
* I like a playground for ideas, so the new site throws out any idea of formality and dives into being a playground for myself.
* Full page animations. Orchestration. Fully SSG.
* Code is painless to add to — adding a blog post is as easy as creating a markdown file

## Links
* [ScottTolinski.com](https://www.scotttolinski.com/)
* [Svelte](https://svelte.dev/)
* [Sapper](https://sapper.svelte.dev/)
* [Maggie Appleton](https://maggieappleton.com/)
* [Shawn Swyx](https://www.swyx.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6d15a620ae5390568306c226763e056f64bc584bbff4bc827c8584882d73d813,hasty-treat-scott-s-new-personal-website,/shows/249 - new website.md,2023-10-16 20:07:04.057,2023-10-27 15:57:53.611,HASTY
syntax_podcast_show_00250,250,Scott Teaches Wes Svelte and Sapper,2020-05-20 13:00:00.555,https://traffic.libsyn.com/syntax/Syntax250.mp3,"
In this episode of Syntax, Scott teaches Wes about Svelte and Sapper — general premise, best practices, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Stackbit - Sponsor
Stackbit offers developers tools that enable things like inline content editing, live previewing of content changes, and collaboration features on your Jamstack site, without code changes. That's why Stackbit is the best way to Jamstack. [stackbit.com](stackbit.com)

## Show Notes

03:14 - General premise

* Sapper compiles away, removing framework code from build
* Component & Props based
* Easy reactivity
* Built-in tools like animation
* Template-based

07:57 - Svelte 101

* .svelte files
* Files can include `<script>`, `<style>`, and straight-up CSS
* Variables are used in templates via {var} - `<img {src} />` even works
* Import component and use just like React and Vue

10:49 - Stylin'

* All styles are scoped by default
* global() to wrap around global declarations
* Language type sass to use sass

12:22 - Reactivity

* Baked in
  * let count = 0
  * count = count + 1 will reactively update in template
  * variables are essentially state
  * $:  double = count + 2  - to create a reactive variable that updates when another variable updates
  * $: console.log(count) = will run whenever count is update a-la useEffect
  * $: if (count >10) = same... reactive if
  * `<input bind:value={name} >` updates let name in script

15:55 - Props

* Same was React, but need to be exported before they can be used
* Seems counterintuitive, but you get over it quickly
* EZ defaults `export let answer = 'a mystery';`

```jsx
<script>
import Nested from './Nested.svelte';
</script>

<Nested answer={42}/>
```

```jsx
<script>
	export let answer = 'a mystery';
</script>

<p>The answer is {answer}</p>
```

20:08 - Template logic

* If statements
{#if user._id}
{/if}

* Loops
{#each cats as kittens}

* Promise tags
```
{#await promise}
	<p>...waiting</p>
{:then number}
	<p>The number is {number}</p>
{:catch error}
	<p style=""color: red"">{error.message}</p>
{/await}
```

23:12 - Events

* `<button  on:click={func} />`
* On directive
* Functions can also be inline
* Modifiers 

```
<button on:click|preventDefault={handleClick}>
	Click me
</button>
```

26:11 - Baked-in goodies

* Animation
* Dimensions 

```
<div bind:clientWidth={w} bind:clientHeight={h}><span style=""font-size: {size}px"">{text}</span></div>
```

* Lifecycle methods
* Advanced State Via Stores
  * A store is simply an object with a subscribe method that allows interested parties to be notified whenever the store value changes.
* import { writable } from 'svelte/store';
* export const count = writable(0);
* count.update(0)
* Slots
* React helmet like stuff, ie <svelte:head>

36:39 - Sapper

* Similar to Next.js
* Folder routes
* Static export with all of the good stuff like service workers and preloading

## Links
* [Svelte](https://svelte.dev/)
* [Sapper](https://sapper.svelte.dev/)
* [r/webdev](https://www.reddit.com/r/webdev/)
* [Vue.js](https://vuejs.org/)
* [ScottTolinski.com](https://www.scotttolinski.com/)
* [WesBos.com](https://wesbos.com/)
* [Next.js](https://nextjs.org/)
* [ScottTolinski.com Github Repo](https://github.com/stolinski/scott-2020)
* [Gatsby.js](https://www.gatsbyjs.org/)
* [Shawn Swyx](https://www.swyx.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Lewisia Battery Backup Solar Fountain Pump](https://amzn.to/35awXAS)
* Wes: [Firefox Containers](https://support.mozilla.org/en-US/questions/1201060)

## Shameless Plugs
* Scott: [LevelUpTuts YouTube Channel](https://www.youtube.com/user/LevelUpTuts)
* Wes: [Wes' New Website](https://wesbos.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b4553b516f3bee91fea24cad795fb50b50e204444b5378b36deb1bf2b3b9c9c1,scott-teaches-wes-svelte-and-sapper,/shows/250 - scott teaches wes.md,2023-10-16 20:07:04.093,2023-10-27 15:57:53.653,TASTY
syntax_podcast_show_00251,251,Hasty Treat - Should You Support IE11?,2020-05-25 13:00:00.446,https://traffic.libsyn.com/syntax/Syntax251.mp3,"
In this Hasty Treat, Scott and Wes talk about IE11 — should you support it, what to be aware of if you do, and what data is important in making that decision. 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

03:21 - When was IE11 made?

03:48 - When is it deprecated?

04:44 - How to make the decision?

* Look at your analytics
* Look at your users
* Is a 2% drop in sales worth it?

09:00 - What doesn't IE11 have? What can you start using now that IE11 is gone?

* Modern Flexbox
* CSS Grid
* CSS Variables

10:26 - Can you partially support it?

* Major features
* Progressive enhancement
* Gracefully degrade
* Polyfill

11:16 - What about testing?

## Links
* [wesbos.com](https://wesbos.com/)
* [VirtualBox](https://www.virtualbox.org/)
* [modern.ie](http://modern.ie/)
* [IE11](https://support.microsoft.com/en-us/help/17621/internet-explorer-downloads)
* [Surface Book](https://www.microsoft.com/en-us/p/surface-book-3/8xbw9g3z71f1)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d98358b2439b2b503bb3cc258b5ca137d3170655cf61957fb581ce51cee6f974,hasty-treat-should-you-support-ie11,/shows/251 - IE11.md,2023-10-16 20:07:04.131,2023-10-27 15:57:53.697,HASTY
syntax_podcast_show_00252,252,Potluck - Courses for Kids × Sub-Components × Recursion × DB Hosting × Frameworks × Data Structures & Algorithms × More!,2020-05-27 13:00:00.446,https://traffic.libsyn.com/syntax/Syntax252.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about kids learning to code, React sub-components, why it's so hard to scale, new frameworks, data structures, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

03:11 - Q: Do you think Selenium could get replaced by Cypress in the future?

16:16 - Q: When blogging about code, you need a good way to display snippets of code in your blog post. What are good ways to do that? Should you embed something like a GitHub Gist, or setup something specific for your blog?

11:13 - Q: Do my students NEED to understand recursion to be effective JS devs?

15:41 - Q: What do you think about developing using just an iPad + keyboard + external monitor? To try this, I just moved all my environment to a VM on the cloud and configured code-server (a VSCode accessed by the web https://github.com/cdr/code-server). Works pretty well! The only problem now is that the iPad has a bad resolution on the external monitor when I'm using the browser.

22:43 - Q: I often find myself refactoring sub-components out of a component once it gets too big. This however is very tedious, especially if the sub-component is tightly coupled with the component and thus needs to take a lot of props. Do you have any suggestions? Do you just let the component grow bigger in a case like that?

26:15 - Q: [Insert Hoser related greeting here], during quarantine I've tried to come up with an outline for creating a goofy Pokémon app with my boys (age 8 and 5). They're obsessed with Pokémon right now and I figure this could be a fun little group activity. I see how much they struggle focusing on some of the online instruction they have through school, and they're a bit fatigued with ""learning"" right now. We tried doing a bit of scratch/scratch jr. I figured a fun-themed project could help them stay engaged with learning, but I'm struggling with where to start. How would you go about creating a course/activities (like Wes' Javascript 30 course) specifically designed for primary/elementary aged kids?

30:52 - Q: How much should someone who wants to work as a web developer (starting in a junior position) know about data structures and algorithms? Should I practice algorithms and do questions before applying for jobs?

33:53 - Q: I'm working with a friend to start up a website for our YouTube channel, and we're getting into podcasts too (not tech-related so no competition, no worries). I'm thinking about trying to host my own RSS feed for podcasts to save some bucks. Am I crazy?

36:27 - Q: Do you guys name your colors in terms of the color or the use of the color. For example, say you styled all your links to be purple. Would you name that color ""purple"" or ""link""?

41:00 - Q: I've been listening to you for about a month and really dig it. I'm working on an app that will require a couple of different databases. I'll need a database for user information, and a larger database for application data. The app does some analytics stuff, so data is critical. I'm getting lost in the world of hosted database options (mLab, Digital Ocean, etc.) and big cloud providers (AWS, Google, etc.). Could you guys talk a little bit about how you choose database hosting? Bonus question - have you ever used Auth0 or Okta for user authentication?

45:09 - Q: I'm a bit confused about using GitHub. What happens to the files that are ignored, but required for development? What's the best practice for backing up both? I have used .env files, but not too sure how it works if it's in the gitignore and the site is deployed via GitHub (like with Netlify). Right now I have a backup folder on my hard drive and I back up both the dev and the live versions with a timestamp, whenever I do a new 'release'. Also, you spoke about Jetpack, and I'd be curious what's the best way to do this with a cronjob for example.

48:50 - Q: I was laid off in early April because of COVID-19. I've been trying to file unemployment since then. The state unemployment office said they were launching an updated website for filing claims on Friday, April 24th. At 9:00am that day, they ran a banner saying demand has been so high that it's affecting the process 'despite rigorous testing.' Why is this so hard to scale?

55:57 - Q: What is your take on all of these rails-like server side rendered React and GraphQL frameworks? Here is another one built by Michael Jackson, Ryan Florence and some others: https://twitter.com/remix_run. This of course is in addition to Redwood and Blitz.

## Links
* [Prism](https://prismjs.com/)
* [VS Code](https://code.visualstudio.com/)
* [gatsby-remark-vscode](https://www.gatsbyjs.org/packages/gatsby-remark-vscode/)
* [CodeSandbox](https://codesandbox.io/)
* [vscode-textmate](https://github.com/microsoft/vscode-textmate)
* [System76 Linux Laptop](https://system76.com/)
* [JS Refactor](https://marketplace.visualstudio.com/items?itemName=cmstead.jsrefactor)
* [ScratchJr](https://www.scratchjr.org/)
* [Javascript30](https://javascript30.com/)
* [GraphiQL Pokedex](https://sevinf.github.io/graphql-pokedex/)
* [AWS](https://aws.amazon.com/products/databases/)
* [Auth0](https://auth0.com/)
* [Okta](https://www.okta.com/)
* [mLab](https://mlab.com/)
* [Jetpack Backup](https://jetpack.com/support/backup/)
* [Remix](https://remix.run/)
* [Redis](https://redis.io/)
* [Redwood](https://redwoodjs.com/)
* [Blitz](https://blitzjs.com/)
* [Next.js](https://nextjs.org/)
* [Encarta](https://en.wikipedia.org/wiki/Encarta)


## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [EGO battery-powered lawn gear](https://egopowerplus.com/power-mowers/)
* Wes: [AmazonBasics Notebook Laptop Stand Arm Mount Tray](https://amzn.to/35tH7Na)

## Shameless Plugs
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",7bfa927ac476f852083ae0d166ce7f786b63f0869afe32090f5e104b073c0831,potluck-courses-for-kids-sub-components-recursion-db-hosting-frameworks-data-structures-and-algorithms-more,/shows/252 - potluck.md,2023-10-16 20:07:04.166,2023-10-27 15:57:53.739,TASTY
syntax_podcast_show_00253,253,Hasty Treat - Developing for Slow and Spotty Connections,2020-06-01 13:00:00.405,https://traffic.libsyn.com/syntax/Syntax253.mp3,"
In this Hasty Treat, Scott and Wes talk about how to develop for slow internet connections. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:26 - Types of Slow connections

* Slow upload
* Slow download
  * This could be that your kids are watching a show and your partner is on a zoom call
* High latency
* Intermittent

07:47 - Loading UI 

* Show loading UI for everything, but after X seconds
* Page transitions on SPAs
* Form switches - enter country, get list of provinces/shipping/whatever

11:58 - Account for XHR failures 

* Sometimes I'm in a loading state forever
* State machines will account for this

13:26 - ""Still working"" timeouts

* Some sort of timeout so the user can get feedback

## Links
* [Sentry](https://sentry.io)
* [Sapper](https://sapper.svelte.dev/)
* [Backblaze](https://www.backblaze.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",39bed9371a491911ed84fec2472b02fb946836d106d687be44b4950451678f7a,hasty-treat-developing-for-slow-and-spotty-connections,/shows/253 - slow connection.md,2023-10-16 20:07:04.203,2023-10-27 15:57:53.790,HASTY
syntax_podcast_show_00254,254,Headless CMS Break Down & Roundup,2020-06-03 13:00:00.405,https://traffic.libsyn.com/syntax/Syntax254.mp3,"
In this episode of Syntax, Scott and Wes talk about headless content management systems — why you might want to use one, things you should take into account, and more! 

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

02:38 - What and why

* A headless CMS doesn't mean you have to use a static site generator
* A headless CMS has an API:
  * REST
  * GraphQL
  * GROQ
* A headless CMS can pipe its content into:
  * Static Site on build - like [Gatsby](https://www.gatsbyjs.org/)
  * An app on run/refresh
  * An existing website - widget
* What makes a CMS? Do you need a UI?
* What is the threshold?
* Is a hotdog a sandwich?
* Things to think about when choosing an API
  * Auth - Rules + roles + levels
* How easy is it to create new data types?
  * Is it code or UI?
  * Can my mom use it?
* Can you create one-off content types? (e.g. settings pages)
* Custom workflows
  * dRafts, revisions, roll backs
* How are images handled? Do you need another service for that?
* Pre-determined UI
  * Is custom UI possible?
  * Two-way relationships?
  * Tags?
* Data validation?
  * UI + API?
* Hosting?
* Pricing?
* Content movability?
  * Can you get your data out?
  * Schemas
  * Users
  * Revisions
* CORS or realtime API?
* APIs
  * Can you insert data via the API? (or just pull)
  * [Node](https://nodejs.org/en/) API
  * Importing data

24:37 - Hosted

* [Sanity](https://www.sanity.io/)
* [Prismic](https://prismic.io/)
* [Contentful](https://www.contentful.com/)
* [Dato CMS](https://www.datocms.com/)
* [Storyblok](https://www.storyblok.com/)
* [8Base](https://www.8base.com/)
* [Agility CMS](https://agilitycms.com/)
  * Seems to be making a big corporate play

36:59 - Self-Hosted

* [WordPress](https://wordpress.org/)
  * WordPress REST API
  * GraphQL API
  * [WP GraphQL](https://www.wpgraphql.com/)
  * [Advanced Custom Fields](https://advancedcustomfields.com/) for custom UI
  * Most things in WordPress are custom post types and taxonomies, so data from plugins can often be surfaced
  * The theme UI from plugins is often lost
* [Drupal](https://www.drupal.org/)
  * [contentacms.org](http://contentacms.org/)
* [Craft CMS](https://craftcms.com/)
* [Ghost](https://ghost.org/)
* [Strapi](https://strapi.io/)
* [Keystone](https://www.keystonejs.com/)
* [Joomla](https://www.joomla.org/) (JK!)

44:33 - API (BYOUI)

* [Hasura](https://hasura.io/)
* [Prisma](https://www.prisma.io/)
* [Firebase](https://firebase.google.com/)

47:37 - Git Based

- [Netlify](https://www.netlify.com/)
- [Forestry](http://forestry.io/)

50:30 - Other

* [Google Sheets](https://www.google.com/sheets)
  * [Sheety](https://sheety.co/)
* [Airtable](https://airtable.com/)
* [Tina CMS](https://tinacms.org/)
  * Not a CMS
* Markdown under the hood
* [Notion](https://www.notion.so/)

## Links
* [https://twitter.com/wesbos/status/1254772936935739393](https://twitter.com/wesbos/status/1254772936935739393)
* [Pixel & Tonic](https://pixelandtonic.com/)
* [GraphCool](https://www.graph.cool/)
* [GraphCMS](https://graphcms.com/)
* [Sapper](https://sapper.svelte.dev/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [DEWALT Random Orbit Sander](https://amzn.to/2WnUgo0)
* Wes: [Shelf Brackets](https://www.amazon.com/s?k=black+shelf+brackets&ref=nb_sb_noss_1)

## Shameless Plugs
* Scott: [New course on Sapper](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Wes' YouTube Channel](https://www.youtube.com/wesbos)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b63e177cefae75214b8601f3aae165fca7f6572c007271aaa8844f8194843c8c,headless-cms-break-down-and-roundup,/shows/254 - headless cms breakdown.md,2023-10-16 20:07:04.240,2023-10-27 15:57:53.842,TASTY
syntax_podcast_show_00255,255,Hasty Treat - Slow Connections Part 2,2020-06-08 13:00:00.494,https://traffic.libsyn.com/syntax/Syntax255.mp3,"
In this Hasty Treat, Scott and Wes are back with part 2 on how to develop for slow internet connections. 

## Kyle Prinsloo Freelancing - Sponsor
Kyle Prinsloo teaches you everything you need to know about freelancing, including how to quit your job, earn a side-income and start taking control of your life. Check it out at [studywebdevelopment.com/freelancing](https://studywebdevelopment.com/freelancing). Use the coupon ""SYNTAX"" and get 25%.

## Show Notes

03:27 - Images

* Resize client-side when uploading
* Lazy load or progressive JPG
* Width + height so the content doesn't shift with placeholders
* Compress your images - lossless and lossy
* Use SVG where possible

08:33 - Scripts + CSS assets

* [Hasty Treat - 5 Things That Make Your Site Slow](https://syntax.fm/show/239/hasty-treat-5-things-that-make-your-site-slow)
* [Hasty Treat - 5 More Things That Make Your Site Slow](https://syntax.fm/show/241/hasty-treat-5-more-things-that-make-your-site-slow)

08:51 - Video

* Variable-rate video is key

09:13 - Connections that go in-n-out a lot

* Save form state on page refresh
* Show UI when user goes offline
  * `window.addEventListener('offline', updateOnlineStatus);`
  * `window.addEventListener('online', updateOnlineStatus);`
* Retrying in _____

10:27 - Service workers! 

* Serves up local cache initially

12:05 - Fonts

* Font-display CSS [https://css-tricks.com/font-display-masses/](https://css-tricks.com/font-display-masses/)
* Sometimes possible: tree shake your fonts - load only the characters you need
* `font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;`

14:04 - CSS tricks

* Text over background image — make sure you also set a color so the text will show while the image is loading

14:37 - Testing slow connections

* Dev tools
* Mimic a speed, or 3G

## Links
* [ImageOptim](https://imageoptim.com/)
* [Slack](https://slack.com/)
* [Discord](https://discord.com/)
* [Cloudflare](https://www.cloudflare.com/)
* [Workbox by Google](https://developers.google.com/web/tools/workbox)
* [Chrome Dev Tools](https://developers.google.com/web/tools/chrome-devtools)
* [Firefox Dev Tools](https://developer.mozilla.org/en-US/docs/Tools)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",eb3d55bd195d269f06669c4e5066b89058fd127a1256b89006ee7e02db32cd3f,hasty-treat-slow-connections-part-2,/shows/255 - slow connection 2.md,2023-10-16 20:07:04.294,2023-10-27 15:57:53.886,HASTY
syntax_podcast_show_00256,256,WebRTC and Peer-to-Peer Video Calling with Ian Ramzy,2020-06-10 13:00:00.494,https://traffic.libsyn.com/syntax/Syntax256.mp3,"
In this episode of Syntax, Scott and Wes talk with Ian Ramzy about ZipCall.io — how he built it, why, and some of the surprising choices he made along the way.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Stackbit - Sponsor
Stackbit offers developers tools that enable things like inline content editing, live previewing of content changes, and collaboration features on your Jamstack site, without code changes. That's why Stackbit is the best way to Jamstack. [stackbit.com](https://stackbit.com)

## Guests
* [Ian Ramzy](https://ianramzy.com/)

## Show Notes

02:08 - Who are you and what's your background?

05:34 - Why did you build this?

13:55 - What is it built in?

* Express server
* Web sockets

16:10 - Why is there no tooling?

* GetUserMedia
* WebRTC
* Twilio STUN/TURN/ICE infrastructure
  * [https://www.twilio.com/docs/stun-turn/faq](https://www.twilio.com/docs/stun-turn/faq)

```jsx
VideoChat.peerConnection = new RTCPeerConnection({
        iceServers: token.iceServers,
      });
```

24:31 - How does your server deal with an influx of users?

27:11 - How do each of these features work?

* Auto-scaling video quality
* Text chat
* Screen sharing
* Picture in picture
* Live captions
* Loading animation
* No download required, entirely browser based
* Direct peer to peer connection ensures lowest latency
* Single use disposable chat rooms

41:32 - Have you looked into any of the recording APIs?

## Links
* [ZipCall](https://github.com/ianramzy/decentralized-video-chat)
* [Zoom](https://zoom.us/)
* [jQuery](https://jquery.com/)
* [WebTorrent](https://webtorrent.io/)
* [Heroku](https://www.heroku.com/)
* [Adopter.js](https://github.com/webrtc/adapter)
* [Figma](https://www.figma.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Ian: [Notion](https://www.notion.so/)
* Scott: [Summoning Salt](https://www.youtube.com/channel/UCtUbO6rBht0daVIOGML3c8w)
* Wes: [4 Channel WiFi Momentary Inching Relay Self-Lock Switch Module](https://amzn.to/3e4WfE4)

## Shameless Plugs
* Ian [ZipCall](https://zipcall.io/)
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b6de4782b983e6fa59bb79ac9e40b3ed5685b7d8093e831d4a5aed303284bf61,webrtc-and-peer-to-peer-video-calling-with-ian-ramzy,/shows/256 - webrtc.md,2023-10-16 20:07:04.352,2023-10-27 15:57:53.935,TASTY
syntax_podcast_show_00257,257,Hasty Treat - Scott Goes Linux with Pop OS,2020-06-15 13:00:00.818,https://traffic.libsyn.com/syntax/Syntax257.mp3,"
In this Hasty Treat, Scott tells Wes about his new Linux laptop — what it is, why he did it, pros and cons, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

01:38 - Why?

04:20 - What is System76?

* [System76 Lemur Pro](https://system76.com/laptops/lemur)

08:53 - What is Pop OS?

* [Pop OS](https://pop.system76.com/)

09:41 - How has Linux compared to Mac?

* Pop OS is a great distro with lots of features, but command line knowledge is still necessary

10:07 - I can still run:

* [Albert (alfred)](https://github.com/albertlauncher/albert)
* [Figma](https://www.figma.com/)
* [VSCode](https://code.visualstudio.com/)
* [DaVinci Resolve](https://www.blackmagicdesign.com/products/davinciresolve/)
* [Zoom](https://zoom.us/)
* [Brave](https://brave.com/)
* [Chrome](https://www.google.com/chrome/)
* [Firefox](https://www.mozilla.org/en-US/firefox/new/)

10:43 - I can't run:

* [ScreenFlow](http://www.telestream.net/screenflow/overview.htm)
* [Logic](https://www.apple.com/logic-pro/)
* [Sketch](https://www.sketch.com/)

13:46 - What do I miss?

* Trackpad gestures
* It's not as polished of an experience

## Links
* [Dell](https://www.dell.com/en-us/shop/dell-laptops/sc/laptops)
* [Toughbook](https://na.panasonic.com/us/computers-tablets-handhelds/computers/laptops/toughbook-31)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ba906940cad44a8a1a51e896415efedcbebb1afcbdb48c17c97f2d4fa83c8833,hasty-treat-scott-goes-linux-with-pop-os,/shows/257 - scott goes linux.md,2023-10-16 20:07:04.389,2023-10-27 15:57:54.066,HASTY
syntax_podcast_show_00258,258,"The Fundamentals Leftovers - Terminal, Shortcuts, View Source, Github + More!",2020-06-17 13:00:00.818,https://traffic.libsyn.com/syntax/Syntax258.mp3,"
In this episode of Syntax, Scott and Wes continue their discussion of fundamentals — Bash, text editors, Regex, Github, Dev tools, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

03:17 - Typing

* Take an online typing test or skills - [https://www.keybr.com/](https://www.keybr.com/)

07:02 - Bash / Terminal

* [WSL](https://docs.microsoft.com/en-us/windows/wsl/about)
* What directory am I in?
* SSH
* How to copy / paste / remove files and folders
* z
* Nice prompt ([ZSH](https://ohmyz.sh/) or [fish](https://fishshell.com/))
* Know how to get out of VIM/VI and how to use it for fast editing
* Know how to make an alias

13:19 - Text editors

* Command Palette
* Keyboard shortcuts (just look them up!)
* Click through to source
* Multiple cursors
* Find/replace master
* Find and replace across files

18:37 - Regex

* Regex101
* [https://regexone.com](https://regexone.com/) will teach you just enough

22:03 - OS Basics

* Switching apps
* Unzipping
* File organization
* Searching for/in files

28:50 - Googling

* Learn how to google well
* What words to use and what not to
* Basic operators ""-"", "",
* Use [Reddit](https://www.reddit.com/): for opinions
* Add dates - example: Library has been out for 6 months, and you can filter out

33:08 - Navigating GitHub

* Explore for finding interesting projects and creators
* Know how to clone a repo
* Create repo and push to it
* [https://octolinker.now.sh/](https://octolinker.now.sh/) to click through to files
* Use [Octotree](https://www.octotree.io/) to navigate

36:20 - Navigating source

* View source
* Where to start in a repo (ie the entrance to a project)
* Most code repos are easier to read and understand than you give yourself credit for - it will improve your code reading and parsing skills
* Access to the minds of other developers

37:31 - Knowing how to pick the right dev tools pane

* Is it network based?
* Does it happen once you click something?
* Toggling CSS on/off
* When console logging makes sense vs using a better tool

## Links
* [TypingTest.com](https://www.typingtest.com/)
* [Wes' Command Line Power User](https://commandlinepoweruser.com/)
* [Karabiner](https://karabiner-elements.pqrs.org/)
* [BetterTouchTool](https://folivora.ai/)
* [Alfred](https://www.alfredapp.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [The Fabric of the Cosmos](https://www.pbs.org/wgbh/nova/series/the-fabric-of-the-cosmos/)
* Wes: [Cosmonaut Stylus](https://www.studioneat.com/products/cosmonaut) 

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",95509fa682d989ab5b72e9631af899a093162e31ff31a40ec085eff0daa68ba2,the-fundamentals-leftovers-terminal-shortcuts-view-source-github-more,/shows/258 - fundamentals leftovers.md,2023-10-16 20:07:04.429,2023-10-27 15:57:54.107,TASTY
syntax_podcast_show_00259,259,Hasty Treat - Some Neat CSS Functions That You Should Know About,2020-06-22 13:00:00.219,https://traffic.libsyn.com/syntax/Syntax259.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS functions, what they are, how to use them, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:13 - attr()

04:14 - calc()

06:05 - :is()

07:20 - sin, cos, tan, acos, asin, sqrt, pow

08:52 - clamp()

12:13 - minmax()

14:24 - fit-content()

15:35 - filter

* blur()
* grayscale()
* sepia()
* opacity()
* contrast()
* url()

## Links
* [https://twitter.com/wesbos/status/1256229763225657348/photo/1](https://twitter.com/wesbos/status/1256229763225657348/photo/1)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b63f8eab35efad4cde35aab8e52bbd28df301cc7395962e0d360297e8a83f613,hasty-treat-some-neat-css-functions-that-you-should-know-about,/shows/259 - css functions.md,2023-10-16 20:07:04.469,2023-10-27 15:57:54.149,HASTY
syntax_podcast_show_00260,260,Potluck - Libraries vs Frameworks × Firefox × Career Advice For Teenagers × Who Would Win a Thumb War? × More!,2020-06-24 13:00:00.219,https://traffic.libsyn.com/syntax/Syntax260.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about libraries vs frameworks, Firefox, who would win a thumb war, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

01:37 - Q: Why does React bill itself as a library instead of a framework?

03:14 - Q: Are y'all still using Firefox now that it has been six months?

06:30 - Q: Is it possible to do a hasty treat regarding the Brave browser? Would love to hear your opinion on the tech, view on the approach and why we could need another browser in 2020. Peace!

09:34 - Q: Who would win in a thumb war, Wes or Scott?

10:56 - Q: What are your thoughts on XState and state machines for managing state in apps? I've been super interested in trying to use it, eager to hear what you both think. Also, wondering if you'd have any recommendations on how to use it with Apollo, whether to use XState's internal context to store app state, or use the Apollo cache.

14:53 - Q: Should I start a new project with jQuery or React?

17:21 - Q: I'm a young teen (<16) with a passion for all things web dev. However, without being able to legally have a job, I'm unable to make any money and am therefore running on a $50 Raspberry Pi and a 10+ year old monitor. As much as I love my Pi, just running `npm install` can be agonizing sometimes, not to mention the amount of space node_modules take up on a device with 16GB of storage! So basically, any pointers on getting income (and practice!) in the web development field when your under 16? And just in general, what advice do you have to young teen learning to code? Thanks in advance! P.S. You know you've got something going when a teenaged boy would rather listen to your podcast than watch Star Wars or Marvel with his friends! ;) So keep up the amazing work.

22:12 - Q: Is it worth my time to learn design patterns in JavaScript?

24:28 - Q: I have a question regarding Figma design to HTML/CSS conversion. When translating the design into code, do you keep the font-size, padding, height of images the same as defined in design or do you take something different? Let's suppose top nav bar is 115px, then do you make it the same as well, or something else?

29:03 - Q: You both are great at technical communication — how do you get better at technical communication when self-learning?

33:06 - Q: What tools (or other methods) do y'all use to manage spinning up new projects with all the assorted directory structures, tools, and configs, you prefer? For example, when I start a new project, these days I like TS, Prettier, ESLint, and want those to play nicely together. I find I'm constantly copying files from one project to the other but haven't found a good abstraction that allows me to setup a new project with the assorted files. Bonus points for a solution that can keep shared configs and deps up to date.

36:10 - Q: I am 26 years old and working a full-time job. I am currently looking at the possibility between work and spending time with my partner. I get maybe an hour a week (maybe two) to focus on learning Javascript. I feel like it is taking me literally forever to get anywhere, and when I do learn something, there is always a better way of doing it! And then when I do sit down and get the time I just feel like I have no direction. Your podcast has been giving me small boosts of motivation, so thanks for that. But is 26 too old to make a move into development?

39:39 - Q: How do you step up a web development project to an enterprise-level? There are so many simple tutorials and quick wins all over the internet, but how do you get more knowledge about bigger enterprise-ready technical stuff. E.g. How to organize a Vue app with >60 different pages? How do you organize the REST-ful API? How do you resolve dependencies between API endpoint 1 and API endpoint 2? How do you share information between multiple components in VUE-State-Management?

42:44 - Q: I've done Wes' NextJS course and he uses Styled Components instead of Next's own styled-jsx. What are your opinions on styled-jsx, and why you do (or do not) use it?

## Links
* [React](https://reactjs.org/)
* [Firefox](https://www.mozilla.org/en-US/firefox/)
* [Brave](https://brave.com/)
* [CodeSandbox](https://codesandbox.io/)
* [VS Code in the browser](https://github.com/cdr/code-server)
* [CodePen](https://codepen.io/)
* [Source Making Design Patterns](https://sourcemaking.com/design_patterns)
* [Figma Auto Layout](https://www.figma.com/blog/announcing-auto-layout/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott:
  * 1: [Myths and Legends Podcast](https://www.mythpodcast.com/)
  * 2: [Fictional Podcast](https://www.fictional.fm/)
* Wes: [Parchment Paper Baking Sheets](https://amzn.to/2A9c5P0)

## Shameless Plugs
* Scott: [Sapper For Beginners](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner JavaScript Course](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",28996e5b3e9f3137edf794e4eaf6d2a227505eca3474c95baf9c1a90b8303f85,potluck-libraries-vs-frameworks-firefox-career-advice-for-teenagers-who-would-win-a-thumb-war-more,/shows/260 - potluck.md,2023-10-16 20:07:04.507,2023-10-27 15:57:54.187,TASTY
syntax_podcast_show_00261,261,Hasty Treat - Rural and Mobile Internet Revisited,2020-06-29 13:00:00.843,https://traffic.libsyn.com/syntax/Syntax261.mp3,"
In this Hasty Treat, Scott and Wes talk about rural and mobile internet — options, tools, and things to be aware of.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

05:04 - Satellite

* High latency
* Satellite congestion
* [Oneweb](https://www.oneweb.world/)
* [Starlink](https://www.starlink.com/)

08:43 - WISP

* Can be different techs - LTE, LOS, Long range WiFi
* Local towers put up in town
* 900mhz, 5 + 2.5gz
* Pretty cowboy

12:09 - Cellular LTE

* Goes over the cell signal
* Can be super fast or slow depending on your reception
* Cell plans can be rate limited

12:52 - Routers

* [WE826-T2](https://www.amazon.com/WE826-Router-Gigabit-Wireless-Routers/dp/B08BLMD955/)
  * Rooter /  Golden Orb / Wifix
  * Based on Open WRT
  * [https://www.ofmodemsandmen.com/](https://www.ofmodemsandmen.com/)
* [Nighhawk M1](https://www.amazon.com/Netgear-NIGHTHAWK-Hotspot-External-Periodic/dp/B06XBNVVCN/)
* [ZTE MF288](https://www.amazon.com/Replacement-Battery-MF288-Li3930T44P4h794659-3000mAh/dp/B083SQSZHR/)

17:03 - Modem

* Two types of modems:
  * Host modems
  * PCI-e / M2 Cards
* [Sierra Wireless](https://www.sierrawireless.com/)
* AT Commands
* Band locking
* Enable carrier aggregation
* Get detailed values on modem power
* See cell tower IDs

23:16 - Antennas

* [Omni](https://www.amazon.com/s?k=Omni+Antenna&ref=nb_sb_noss_2)
* [Yagi](https://www.amazon.com/stores/page/32A4E5CB-E026-40E0-93FE-FEFD26C6374A?store_ref=SB_A07709221LB29FD582NYA&pf_rd_p=0695bfd4-f098-403d-ad0f-7db64c30b506&aaxitk=MczmU8WqAxMV-4qwgw6TSg&hsa_cr_id=3364331140501&lp_asins=B07YGPDPW8,B008Z4I7WQ,B008Z5QB96&lp_mat_key=outdoor%20omni%20antenna%202.4%205ghz&lp_query=Omni%20Antenna&lp_slot=auto-sparkle-hsa-tetris&ref_=sbx_be_s_sparkle_td_brand)
* Gotta get them high
* Lots of connectors - Type N, SMA, RP SMA

25:47 - Boosters

* Adds noise

26:04 - Plans

* Some plans are phone only
* Some plans are tower restricted
* Most Hot spot plans are a rip off
* [Calyx Institute](https://calyxinstitute.org/)
* Canada:
  * [Bell Internet Five](https://www.bell.ca/Bell_Internet)
  * [Telus Smart Hub](https://www.telus.com/en/bc/internet/smart-hub)

29:27 - Speeds

* Depends on tower, congestion
* Depends on pre paid, post paid or first responder
* Depends on if you hit the cap or not

30:15 - Tools:

* [Cell Mapper](https://www.cellmapper.net/map)
* [LTE Hacks Facebook group](https://www.facebook.com/groups/LTE.HACKS/)
* [LTE Fix website](https://ltefix.com/)

## Links
* [Syntax 169: Hasty Treat - Remote Internet](https://syntax.fm/show/169/hasty-treat-remote-internet)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",98b7bd8d7a18e6144abc368c41ae1ac71697589ff65fa77faaec8fd6a05d13e5,hasty-treat-rural-and-mobile-internet-revisited,/shows/261 - rural internet.md,2023-10-16 20:07:04.547,2023-10-27 15:57:54.232,HASTY
syntax_podcast_show_00262,262,Our React Wish List,2020-07-01 13:00:00.843,https://traffic.libsyn.com/syntax/Syntax262.mp3,"
In this episode of Syntax, Scott and Wes talk about what they wish existed in React!

## DevLifts - Sponsor
Refactor your body with DevLifts. They have a few different programs: 1) [fit.start](https://devlifts.io/join/fitstart) (normally $19/month) has a few options (lean, bodyweight, and strong). Workouts are delivered via email each month, with access to a Slack community for questions and accountability. 2) Premium (normally $199/month) is a custom-tailored option, where you get your workouts and nutrition advice after answering a questionnaire. They also check in with you each week via Slack to see how it's going and make changes if necessary. Get 50% off fit.Start plans with code SYNTAX and 50% off Premium with code TASTY.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

### React

03:53 - Unmount delay for animation

06:20 - Suspense with SSR released (or not because I think they are shelving it)

* Dan's tweet: [https://twitter.com/dan_abramov/status/1259614150386425858](https://twitter.com/dan_abramov/status/1259614150386425858)

09:24 - File based components

* Like Svelte and Vue
* This would look like a file with a special scoped `<style>` tag per page.

11:50 - Prevent Default shortcuts

13:00 - No more useIsoLayoutEffect

* useLayoutEffect on SSR should just work without a custom hook
* Simple data fetching strategy based on promises

15:52 - Recommended hooks

* E.g. ""here is the best way to do things""
* Official list of best practice hooks

18:25 - A good form strategy

* Bind inputs to state directly without any change handlers
* Inputs and forms all around need more magic - it's painful

20:43 - Write once deploy everywhere

* Not likely ever
* E.g. automatic transformation into react-native (obviously not going to happen)

22:28 - Compile time directives

* [https://github.com/bukharim96/directive-x](https://github.com/bukharim96/directive-x)

25:11 - Slots instead of children

* Allows for things like named slots more explicit than children

### JSX

26:44 - Removal of htmlFor, className and all other abominations of html

29:09 - Import Raact from React for JSX to work

* Soon will be fixed [https://github.com/babel/babel/pull/11154](https://github.com/babel/babel/pull/11154)
  * [react-require](https://www.npmjs.com/package/babel-plugin-react-require)

32:31 - Better conditional / if statement syntax

33:09 - Fragments by default

* Just do it for us - the error message already knows

33:54 - Automatic key ids

* If mapping an object, check for common `_id` or id

36:36 - Simple scoped CSS built in

37:29 - Short hand for props with same name is prop={prop}

39:00 - Prop interpolation without backticks: name=""$first $last""

* Or just backticks without brackets name=`${first} ${last}` instead of name={`${first} ${last}`}

### Tooling

39:43 - Story for typescript/prettier/babel

40:11 - Automatic a href client side routing

41:51 - Scaffolding and component generation

## Links
* [Svelte](https://svelte.dev/)
* [Vue](https://vuejs.org/)
* [React Native](https://reactnative.dev/)
* [NativeScript](https://nativescript.org/)
* [react-spring](https://www.react-spring.io/)
* [Paul Henschel](https://twitter.com/0xca0a)
* Scream Sneeze: [https://twitter.com/morganc_smith/status/1235332301044801538](https://twitter.com/morganc_smith/status/1235332301044801538)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Software Engineering Daily Podcast](https://softwareengineeringdaily.com/)
* Wes: [PicQuic Screwdriver](https://amzn.to/2MEQiC7)

## Shameless Plugs
* Scott: [Sapper For Everyone](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Wes' New Gatsby Course](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8eee3c1aa8442daa17bd5fd5cb3f5c43cd7b5dedd8c707c81587753184d90ac5,our-react-wish-list,/shows/262 - react wish list.md,2023-10-16 20:07:04.593,2023-10-27 15:57:54.274,TASTY
syntax_podcast_show_00263,263,"Hasty Treat - Forms, Captchas, Honeypots, Dealing With Malicious Users and the Sad State of Contact Forms",2020-07-06 13:00:00.843,https://traffic.libsyn.com/syntax/Syntax263.mp3,"
In this Hasty Treat, Scott and Wes talk about forms, captchas, dealing with malicious users, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:00 - So you made a form:

1. Contact form
2. Sales form
3. Email signup for newsletter
4. Bug report
5. Sign up for an account
6. Password reset

03:00 - Now someone is going to:

1. Have a bot that submits it
2. Maliciously write a bot that submits thousands

04:14 - So what can you do?

4:54 - Honey pot

* This is a field that is either hidden or you tell the user not to fill in
* Can goof up autofill
* Works in many cases

07:37 -  IP Throttle

* Only allow each IP to do an action a certain number or times inside a window
* You may only try signing up once per 10 mins

09:48 Block known ASN

12:37 - Captcha

* Soft captcha: ""What is 1 plus 1?""
* Annoying captcha: Type these letters
* Google captcha: Train our self driving cars
* Hidden captcha
* Cloudflare hCaptcha

## Links
* [Cloudflare](https://www.cloudflare.com/)
* [Digital Ocean](https://www.digitalocean.com/)
* [Google reCaptcha](https://www.google.com/recaptcha/intro/v3.html)
* [Cloudflare hCaptcha](https://blog.cloudflare.com/tag/hcaptcha/)
* [Cloudinary](https://cloudinary.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",a22e1bbff16a961d4cd59fb0b6ed6f2ba768241fb3f632909c3bb7898b30d219,hasty-treat-forms-captchas-honeypots-dealing-with-malicious-users-and-the-sad-state-of-contact-forms,/shows/263 - forms.md,2023-10-16 20:07:04.642,2023-10-27 15:57:54.314,HASTY
syntax_podcast_show_00264,264,Jerome Hardaway + Vets Who Code,2020-07-08 13:00:00.843,https://traffic.libsyn.com/syntax/Syntax264.mp3,"
In this episode of Syntax, Scott and Wes talk with Jerome Hardaway about web dev, vets who code, diversity in tech, and more!

## .TECH Domains - Sponsor
If you need eyes on your project, you'll need a domain, and .TECH is perfect for representing your brand. Find out if your .TECH domain is available at [go.tech/syntax2020](https://go.tech/syntax2020). Use the coupon code Syntax2020 and get 90% off 1- 5- and 10-year domain names.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Guests
* [Jerome Hardaway](https://twitter.com/JeromeHardaway)

## Show Notes

01:50 - Captain America of Tech

03:25 - Where do you work and what type of stuff do you work on?

08:03 - What was your introduction to programming?

15:46 - When did you start Vets Who Code?

24:13 - What is the stack behind Vets Who Code?

29:56 - How do you help prep vets to get jobs?

41:32 - How can you be an ally and amplify black voices in tech?

50:05 - Everybody against racism

## Links
* [Vets Who Code](https://vetswhocode.io/)
* [Quicken Loans](https://www.quickenloans.com/)
* [Eventbrite](https://www.eventbrite.com/)
* [Animate.css](https://animate.style/)
* [Laws of UX](https://lawsofux.com/)
* [react-spring](https://www.react-spring.io/)
* [General Assembly Code Bootcamps](https://generalassemb.ly/)
* [uses.tech](https://uses.tech/)
* [keycode.info](http://keycode.info/)
* [Tech Talent Pipeline](https://www.techtalentpipeline.nyc/)
* [@vetswhocode](https://twitter.com/vetswhocode)

## ××× SIIIIICK ××× PIIIICKS ×××
* Jerome:
  * 1: [HBO's Watchmen](https://www.hbo.com/watchmen)
  * 2: [https://vidr.io/](https://vidr.io/)
* Scott: [Explained on Netflix](https://www.netflix.com/title/80216752)
* Wes: [Jeremy Fielding YouTube Channel](https://www.youtube.com/channel/UC_SLthyNX_ivd-dmsFgmJVg)

## Shameless Plugs
* Jerome: [Vets Who Code](https://vetswhocode.io/)
* Scott: [Design Systems with CSS Variables](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0dd0ff4d3502b531a36d599016d87816fd5c77429d2fa6d0d67a730758d0f932,jerome-hardaway-vets-who-code,/shows/264 - jerome hardaway.md,2023-10-16 20:07:04.698,2023-10-27 15:57:54.352,TASTY
syntax_podcast_show_00265,265,Hasty Treat - The Domain Name Game,2020-07-13 13:00:00.954,https://traffic.libsyn.com/syntax/Syntax265.mp3,"
In this Hasty Treat it's another edition of the Top Level Domain Game! 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:25 - How it works

We pick a TLD from a list, and the other person needs to guess:

1. Is it for a country or business? +5 points
2. What country, business, or type of business is it for? +5 points
3. How much per year does it cost to register? You may also say ""unregisterable"" +/- off by $$ [https://www.101domain.com/](https://www.101domain.com/)
4. Is scott.**_ and wes._** available? -10 points for each

04:00 - .sd

* Scott: 5 + -5 + -126 + -10 + 10 = -126

05:46 - .ong

* Wes: 5 + -5 + -30 + 20 = -10

07:53 - .koeln

* Scott: 5 + -5 + -20 + 20 = -126

09:23 - .co.ke

* Wes:  10 + -15 + 0 = -15

11:00 - .tr 

* Scott: 5 + -5 + 0 + 0 = -126

12:25 - .ist

* Wes: -5 + 5 + -10 + 0 = -25

13:57 - .xn—45q11c

* Scott: 5 + 5 + -295 + 10 =  20 = -401

16:40 - .reit

* Wes: 10 + -1460 + 10 = -1465

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5374e4f724e67f2e0739b1a79733bbce1e6f30770493196149233435f1ec1ab5,hasty-treat-the-domain-name-game,/shows/265 - domains.md,2023-10-16 20:07:04.822,2023-10-27 15:57:54.452,HASTY
syntax_podcast_show_00266,266,Video for the Web 2020 and Beyond,2020-07-15 13:00:00.954,https://traffic.libsyn.com/syntax/Syntax266.mp3,"
In this episode of Syntax, Scott and Wes talk about the future of video for the web!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

08:19 - Scott's Background in video

* Started editing in middle school
* Worked professionally as an editor and production assistant for magazine
* Created specialty flash video players
* Have been hosting video content since the start of my web career

09:12 - Terminology

* Transcoding - digital to digital conversion of one format to another
* Ingest - bringing a video to a new facility (ie uploaded video file or data stream to server)

10:51 - Streaming vs Downloading

* Streaming is basically chunks of content at a time, while download is waiting for the entire file to be downloaded before playing.

11:16 - Formats

* MP4
* WebM
* DASH
* HLS (HTTP Live Streaming)
* m3u8

21:35 - Players

* shaka-player - [https://github.com/google/shaka-player/](https://github.com/google/shaka-player/)
* hls.js - [https://hls-js.netlify.app/demo/](https://hls-js.netlify.app/demo/)
* dash.js - [https://github.com/Dash-Industry-Forum/dash.js](https://github.com/Dash-Industry-Forum/dash.js)
* video.js - [https://videojs.com/](https://videojs.com/)
* jw player - [https://www.jwplayer.com/](https://www.jwplayer.com/)
* Bit Movin player - [https://bitmovin.com/docs/player](https://bitmovin.com/docs/player)
* Ooyala Brightcove - [https://www.brightcove.com/en/](https://www.brightcove.com/en/)

27:48 - Services Roundup 🐴 

* YouTube - free
* Vimeo - $
* MUX - $$
* Wistia - $$$$
* Cloudflare - $$
* JW Player - $
* Cloudinary - $$$
* Brightcove - $$$
* Azure - $$
* Bit Movin - $$
* AWS - $$

46:59 - What Scott did and how/why

* upchunk
* Mux
* Video.js
* Custom uploader
* Using polling

## Links
* [Basecamp](https://basecamp.com/)
* [Hey](https://hey.com/)
* [Inbox](https://arstechnica.com/gadgets/2019/04/here-lies-google-inbox-a-radical-rethink-of-how-email-should-work/)
* [YouTube](http://youtube.com/)
* [Wistia](https://wistia.com/)
* [Drip](https://www.drip.com/)
* [ConvertKit](https://convertkit.com/)
* [Vimeo](https://vimeo.com/)
* [https://fronteers.nl/congres/2015/sessions/jsmpeg-by-dominic-szablewski](https://fronteers.nl/congres/2015/sessions/jsmpeg-by-dominic-szablewski)
* [https://www.vidbeo.com/blog/hls-vs-dash](https://www.vidbeo.com/blog/hls-vs-dash)
* [HLS Can I Use](https://caniuse.com/#search=hls)
* [youtube-dl](https://ytdl-org.github.io/youtube-dl/index.html)
* [Syntax Ep 254: Headless CMS Break Down & Roundup](https://syntax.fm/show/254/headless-cms-break-down-and-roundup)
* [Cloudflare](https://www.cloudflare.com/)
* [Mux](https://mux.com/)
* [Framer Motion](https://www.framer.com/motion/)
* [Cloudinary](https://cloudinary.com/)
* [upchunk](https://github.com/muxinc/upchunk)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Flexibility Focus Podcast](https://anchor.fm/flexibility-focus)
* Wes: [Mustie1 YouTube Channel](https://www.youtube.com/user/mustie1)

## Shameless Plugs
* Scott: [CSS Variables Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5a4b8244e9190601dcb1f85dc840922a88fe93564f4e467a683db01f3708846c,video-for-the-web-2020-and-beyond,/shows/266 - video.md,2023-10-16 20:07:04.861,2023-10-27 15:57:54.495,TASTY
syntax_podcast_show_00267,267,Hasty Treat - Turbolinks + Server Generated HTML + JS Sprinkles,2020-07-20 13:00:00.426,https://traffic.libsyn.com/syntax/Syntax267.mp3,"
In this Hasty Treat, Scott and Wes talk about turbolinks — what it is, how to use is, popular apps using is, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

02:50 - What is turbolinks?
* Generate HTML on the server
* Send it over the ajax request
* Load it in the page

03:55 - Who is using Turbolinks?
* [GitHub](https://github.com/)
* [Basecamp](https://basecamp.com/)
* [Hey.com](https://hey.com)

05:24 - Turbo Links javascript browser bundle
* Intercepts any link click
* Fetches the page HTML

09:19 - JS Sprinkles
* Vanilla JS
* [jQuery](https://jquery.com/)
* [Stimulus](https://stimulusjs.org/)
* [Alpine JS](https://github.com/alpinejs/alpine)

## Links
* [Turbolinks](https://github.com/turbolinks/turbolinks)
* [Syntax 254: Headless CMS Break Down & Roundup](https://syntax.fm/show/254/headless-cms-break-down-and-roundup)
* [pjax](https://pjax.herokuapp.com/)
* [Svelte](https://svelte.dev/)
* [Next.js](https://nextjs.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ae284640381059f6c6105a952821d6620352b2ebf28eeb4a6687594b9851c6b5,hasty-treat-turbolinks-server-generated-html-js-sprinkles,/shows/267 - turbolinks.md,2023-10-16 20:07:04.910,2023-10-27 15:57:54.540,HASTY
syntax_podcast_show_00268,268,Potluck - Beating Procrastination × Rollup vs Webpack × Leadership × Code Planning × Styled Components × More!,2020-07-22 13:00:00.426,https://traffic.libsyn.com/syntax/Syntax268.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about transitioning to backend dev, tips for beating procrastination, Rollup vs Webpack, code planning, growing as a leader and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

02:33 - I am a junior dev, coming up on two years at my current agency. I have been primarily on the frontend using Angular and templating with Handlebars and other HTML and CSS. I have been asked if I would be interested in moving more into backend, with a focus on Node.js. Outside of creating APIs, what else should I do to learn ""backend""?

06:08 - I work as a web master and would like to be a frontend developer someday. Currently I am working on a MERN stack app on my own to enhance my skills, but have problems focusing and tend to procrastinate a lot. How do you tackle distractions and get things done? I would appreciate some tips.	

11:00 - Rollup or Webpack? Webpack 5 still doesn't seem to support ES6 module output, [as described by Philip Walton](https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/), so instead of upgrading to Webpack 5, this might be a good time to think about switching to Rollup (or Parcel).

13:46 - I have been learning web development (HTML, CSS and JS) and am at a place where I can build simple websites for small businesses, but I feel like a beginner and am wondering if you have any recommendations on courses to get to a more intermediate/advanced level?

18:01 - Why should you choose Styled Components over other ways of writing CSS?

22:56 - What are your thoughts on companies that make senior developer roles require leadership responsibilities? A great technical person does not always make a great leader or visa versa.

26:36 - I am often not good at planning out code from the start. I find that it's easier to start coding, write a few lines, run it to see where I'm at, and carry on. This technique doesn't work when I need to wait for a deploy to finish before I can view the result, as it greatly increases dev time. Do you have any advice for what I can do better?

31:43 - I have a very random question. for context I'm a Mac and Linux user myself. However, recently while building our company application I've noticed that Windows does extremely weird things with font sizes. Since we have a pretty decent Windows user base, obviously this is something my partner and I want to solve. However I'm very unsure of the best way to handle it. It seems entirely different from user to user. How in the world do we as developers account for these inconsistencies? We have tried vertical media queries that more or less kick them to tablet mode. Obviously this is less than optimal.

37:50 - Are side projects common among developers? I recently mentioned to my boss that I have a few side projects - nothing serious, just for learning mostly - and he said he would rather I didn't, and instead focus on my work. He said he hadn't really heard of developers doing side projects, and that if I want to work on things that aren't our work he has other things I can do.

## Links
* [inputmag.com](https://inputmag.com)
* [Focus app](https://apps.apple.com/us/app/focus-time-management/id777233759?mt=12)
* [TSdx](https://www.npmjs.com/package/tsdx?activeTab=readme)
* [Rollup](https://rollupjs.org/)
* [Webapck](https://webpack.js.org/)
* [Parcel](https://parceljs.org/)
* [Beginner Javascript](https://beginnerjavascript.com/)
* [Typescript](https://www.typescriptlang.org/)
* [Darknet Diaries](https://darknetdiaries.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Malicious Life Podcast](https://malicious.life/)
* Wes: [LaCie Rugged USB-C External HDD](https://www.amazon.com/s?k=LaCie+Rugged+USB-C&ref=nb_sb_noss)

## Shameless Plugs
* Scott: [Modern CSS Design Systems](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",fb40d9169da3b8c8ade733398d0d71ed6e7e5f12e0ce511bdc18ba992fd1e57d,potluck-beating-procrastination-rollup-vs-webpack-leadership-code-planning-styled-components-more,/shows/268 - potluck.md,2023-10-16 20:07:04.948,2023-10-27 15:57:54.582,TASTY
syntax_podcast_show_00269,269,"Hasty Treat - Target=_blank security issue? What's the deal with noopener and noreferrer?",2020-07-27 13:00:00.426,https://traffic.libsyn.com/syntax/Syntax269.mp3,"
In this Hasty Treat, Scott and Wes talk about noopener and noreferrer and why you should use them with links that have blank targets.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

03:35 - What's the big deal?

* If you have a link that is target=""_blank"" you should add rel=""noopener"" and rel=""noreferrer""
* Retail Me Not uses it
* Valid use cases:
  * Same domain change the page from a popup
  * Cross domain changing page data
* Example: [https://mathiasbynens.github.io/rel-noopener/](https://mathiasbynens.github.io/rel-noopener/)

05:39 - Why doesn't the browser just fix it?

* Safari did - You can use rel=""opener"" to allow it
* Firefox did
* Chrome hasn't yet
* [https://twitter.com/KittyGiraudel/status/801475801397030912](https://twitter.com/KittyGiraudel/status/801475801397030912)

10:48 - Does this hurt SEO?

* It breaks analytics of the recipient site, turning a referral visit from your site into direct traffic, unless the link has UTM or similar tracking parameters. If you have a site where passing traffic offsite is part of the business model, links need an affiliate id instead.

## Links
* [@argyleink](https://twitter.com/argyleink)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f873297f0a67c82dff4d05960bf3b3f855315a7ac20471639ddcc5c2bb384c48,hasty-treat-target-_blank-security-issue-what-s-the-deal-with-noopener-and-noreferrer,/shows/269 - target.md,2023-10-16 20:07:04.989,2023-10-27 15:57:54.622,HASTY
syntax_podcast_show_00270,270,"Meteor's 2nd Life",2020-07-29 13:00:00.426,https://traffic.libsyn.com/syntax/Syntax270.mp3,"
In this episode of Syntax, Scott and Wes talk with Filipe Névola about Meteor and the exciting things happening in the Meteor world!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Guests
* [Filipe Névola](https://blog.meteor.com/@filipenevola)
* [@filipenevola](https://twitter.com/filipenevola)

## Show Notes

01:20 - What is your background?

03:41 - What exactly is Meteor?

12:00 - What are the biggest misconceptions of modern meteor?

18:20 - What do you say to people who think Meteor is dead?

21:33 - How does data get from your Meteor into your React app?

* Example of getting data on client side

```jsx
import { useTracker } from 'meteor/react-meteor-data'

// Hook, basic use, everything in one component
const MyProtectedPage = (pageId) => {
  const { user, isLoggedIn, page } = useTracker(() => {
    // The publication must also be secure
    const subscription = Meteor.subscribe('page', pageId)
    const page = Pages.findOne({ _id: pageId })
    const user = Meteor.user()
    const userId = Meteor.userId()
    const isLoggingIn = Meteor.loggingIn()
    return {
      page,
      isLoading: !subscription.ready(),
      user,
      userId,
      isLoggingIn,
      isLoggedIn: !!userId
    }
  }, [pageId])
  
  if (!isLoggedIn) {
    return <div>
      <Link to=""/register"">Create an Account</Link>
      <Link to=""/login"">Log in</Link>
    </div>
  }
  
  return <div>
    <h1>{page.title}</h1>
    <p>{page.content}</p>
    <a href=""#"" onClick={(e) => { e.preventDefault(); Meteor.logout(); }}>Log out ({user.username})</a>
  </div>
}
```

27:50 - What do you think is the ideal usecase for Meteor?

31:09 - Why did Meteor 1.0 fail to maintain hype?

36:41 - What does Meteor's future look like?

45:27 - Are there any plans to integrate serverless into Meteor?

46:55 - Any little known features of Meteor that people might be interested in?

## Links
* [Meteor](https://www.meteor.com/)
* [Tiny Capital](https://www.tinycapital.com/)
* [Deno](https://deno.land/)
* [Meteor Galaxy](https://www.meteor.com/hosting)
* [Mongoose](https://mongoosejs.com/)
* [Parcel](https://parceljs.org/)
* [Apollo](https://www.apollographql.com/)
* [MongoDB](https://www.mongodb.com/)
* [Svelte](https://svelte.dev/)
* [Meteor repo](https://github.com/meteor/meteor)
* [Meteor Up](http://meteor-up.com/)
* [https://howtocreateanapp.dev/](https://howtocreateanapp.dev/)
* [https://www.youtube.com/channel/UC8A0hHUaCBvuBs0eA5g_q3A](https://www.youtube.com/channel/UC8A0hHUaCBvuBs0eA5g_q3A)
* [Cordova](https://cordova.apache.org/)
* [Missive](https://missiveapp.com/)
* [Meteor Forums](https://forums.meteor.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Filipe:
  * 1: [Galaxy](https://www.meteor.com/hosting)
  * 2: [Terere](https://www.196flavors.com/paraguay-terere/)
* Scott: [Amplifi Alien Router](https://amplifi.com/alien)
* Wes: [Parcel - Global Package Tracking](https://parcelapp.net/)

## Shameless Plugs
* Filipe: [@filipenevola](https://twitter.com/filipenevola)
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c662c229fa9575d7e081dadf8ddbfc7f0dbf8a89db8f2356bfb3f25a1363cbaf,meteor-s-2nd-life,/shows/270 - meteor.md,2023-10-16 20:07:05.032,2023-10-27 15:57:54.663,TASTY
syntax_podcast_show_00271,271,Hasty Treat - Upgrading Next.js Syntax Site,2020-08-03 13:00:00.595,https://traffic.libsyn.com/syntax/Syntax271.mp3,"
In this Hasty Treat, Scott and Wes talk about their experience upgrading Syntax.fm and some of the site's big changes. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:26 - The old Syntax site

* Next.js
* Custom server for
  * API - shows, Latest shows, sick picks
  * On-demand page builds
  * Custom routing

06:41 - The new Syntax site

* Next.js has solved those things now, no need for a custom server. 
  * API Routes
  * On-demand page builds: SSG with Next.js. It's a server, but caches the page builds. Releasing the shows happens with revalidation. It's statically generated like Gatsby, but you can also choose 
  * Custom routing is now done with [pages]
* Very fast to load
* Very fast to build
* Very fast to deploy
* It's now a ""dynamic static site""
* Zeit Now 1 to ""Vercel""
* Huge thanks to [Tim Neutkens](https://twitter.com/timneutkens) and [Luis Alvarez](https://twitter.com/luis_fades) from Vercel for making it happen.

13:23 - Why not:

* Gatsby
  * Entire site would need to be regenerated exactly at 9am eastern
  * API of the site would need to be done with something else like Netlify Functions - not nearly as nice as Next API routes
* Sapper

## Links
* [Next.js](https://nextjs.org/)
* [Gatsby](https://www.gatsbyjs.org/)
* [Sapper](https://sapper.svelte.dev/)
* [Vercel](https://vercel.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",9b93725c820fbb8804e7dacf376e6fc5fcfa3d9f6f985453ef5d357da729d346,hasty-treat-upgrading-next-js-syntax-site,/shows/271 - upgrading.md,2023-10-16 20:07:05.075,2023-10-27 15:57:54.774,HASTY
syntax_podcast_show_00272,272,React State Round Up,2020-08-05 13:00:00.603,https://traffic.libsyn.com/syntax/Syntax272.mp3,"
In this episode of Syntax, Scott and Wes talk about React State libraries, should you use them, pros, cons, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

01:24 - [Context](https://reactjs.org/docs/context.html)

* Have we used?
  * Scott: Yes
  * Wes: Yes 
* Pros
  * Built into React
  * As simple or complex as you want
* Cons
  * Takes effort to optimize
  * Takes effort to plan and organize aka can get out of hand quickly

08:49 - [Redux](https://react-redux.js.org/)

* Have we used?
  * Scott: Yes
  * Wes: Yes
* Pros 
  * Huge user base
  * Legacy of growth and improvements
  * Modern API
  * Even though it's hard to learn, it has a clear ""how to build with it"" path
  * Dev tools
* Cons
  * Complex
  * Thing that calls a thing that calls a thing that calls a thing
  * Confusion around what additional packages are needed, e.g. ducks, saga, whatever

17:08 - [XState](https://xstate.js.org/)

* Have we used?
  * Scott: Yes
  * Wes: No
* Pros
  * Enforces solid design patterns
  * Very safe
  * Awesome tooling like UI to see state machines
  * [https://xstate.js.org/viz/](https://xstate.js.org/viz/)
* Cons
  * Knowledge overhead - having to understand state machines
  * Complex syntax

23:26 - [Zustand](https://github.com/react-spring/zustand)

* Have we used?
  * Scott: Yes
  * Wes: No
* Pros
  * Fast, scalable, easy to use
  * Simpler
  * No context providers
* Cons
  * Smaller community 2.6k stars on Github
  * Can inform components transiently (without causing render)

27:04 - [Apollo Client](https://www.apollographql.com/docs/react/)

* Have we used?
  * Scott: Yes
  * Wes: Yes
* Pros 
  * Fits in well with your GraphQL API
  * Dev tools
* Cons
  * Complex, large syntax for simple operations
  * Dev tools
  * SSR story is really complex. It's hard because they aren't also the framework. 

31:35 - [RXJS](https://github.com/ReactiveX/rxjs)

* Have we used?
  * Scott: No
  * Wes: No
* Observable based

33:02 - [React Query](https://github.com/tannerlinsley/react-query)

* Have we used?
  * Scott: No
  * Wes: 
* Pros
  * Fast growing community
  * Awesome dev tools
* Cons
  * Not sure if this can be used for application state or just data

35:37 - [Recoil](https://recoiljs.org/)

* Have we used?
  * Scott: Yes
  * Wes: No
* Pros
  * Very good for complex, splintered state needs
* Cons
  * Overly complex for most use cases

38:34 - [MobX](https://mobx.js.org/)

* Have we used?
  * Scott: No
  * Wes: No
* Pros
  * Big community
  * Not just React
  * Powerful
  * Observable capabilities
* Cons
  * Uses decorators, but doesn't have to? 

43:15 - [Easy Peasy](https://easy-peasy.now.sh/)

* Have we used?
  * Scott: No
  * Wes: No
* Pros
  * Simple API (easy peasy)
  * Redux dev tools supported

45:06 - [Meteor ReactiveDict](https://docs.meteor.com/api/reactive-dict.html) / [ReactiveVar](https://docs.meteor.com/api/reactive-var.html)

* Have we used?
  * Scott: Yes
  * Wes: No
* Pros
  * Very simple
  * Get, set
  * Is Reactive
* Cons
  * Lock-in to Meteor

46:19 - Final Thoughts On State

* Wes: Go for simpler solutions
* Scott: I think application state should be separate from application data, but maybe that's because there isn't a solution that does both how I want

## Links
* [Svelte](https://svelte.dev/)
* [Meteor](https://www.meteor.com/)
* [Syntax 206: State Machines, CSS and Animations with David K Piano](https://syntax.fm/show/206/state-machines-css-and-animations-with-david-k-piano)
* [Syntax 268: Potluck - Beating Procrastination × Rollup vs Webpack × Leadership × Code Planning × Styled Components × More!](https://syntax.fm/show/268/potluck-beating-procrastination-rollup-vs-webpack-leadership-code-planning-styled-components-more)
* [Zustand CodeSandbox](https://codesandbox.io/s/v8pjv251w7)
* [swr](https://github.com/vercel/swr)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Becoming Bond](https://www.imdb.com/title/tt6110504/)
* Wes: [IRWIN VISE-GRIP GrooveLock Pliers Set](https://amzn.to/2ZjPybo) 

## Shameless Plugs
* Scott: [Modern CSS Design Systems](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",09bc7cade51710ac5a9606ed27620db832f2b3981e5dc28fc76f4fb10239778c,react-state-round-up,/shows/272 - react roundup.md,2023-10-16 20:07:05.119,2023-10-27 15:57:54.816,TASTY
syntax_podcast_show_00273,273,Hasty Treat - How To Refine Your Process,2020-08-10 13:00:00.502,https://traffic.libsyn.com/syntax/Syntax273.mp3,"
In this Hasty Treat, Scott and Wes talk about refining your processes, how to evaluate them, make them better, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

04:18 - Find slow process
* Getting through email
* Cleaning my desk

06:29 - Set clear goals (smart goals)
* Is my inbox less crazy?
* Don't spend too much time
* Do a 30-day challenge

09:46 - Ask around
* What are people you know using and why
* Time-blocking
* Batching
* Eat that frog

## Links
* [Streaks](https://streaksapp.com/)
* [Matt Cutts — Try something new for 30 days](https://www.ted.com/talks/matt_cutts_try_something_new_for_30_days)
* [1Writer](https://1writerapp.com/)
* [Notable](https://notable.app/)
* [Dropbox](https://www.dropbox.com/)
* [Notion](https://www.notion.so/)
* [Obsidian](https://obsidian.md/)
* [Todoist](https://todoist.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",0df60545f589c661d64d76f8b24db02f08fa58ffb4bae055a94f22e1a05dac96,hasty-treat-how-to-refine-your-process,/shows/273 - process.md,2023-10-16 20:07:05.164,2023-10-27 15:57:54.860,HASTY
syntax_podcast_show_00274,274,How does stuff get added to CSS? Adam Argyle answers!,2020-08-12 13:00:00.502,https://traffic.libsyn.com/syntax/Syntax274.mp3,"
In this episode of Syntax, Scott and Wes talk with Adam Argyle about how stuff gets added to CSS.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests
* [Adam Argyle](https://twitter.com/argyleink)

## Show Notes

01:48 - Who are you and what do you do?

04:13 - How does stuff get added to CSS?

06:44 - Github issue proposal or public document
* Shares use case
* Problem made succinct
* StrawMan solution
* JS demo

10:12 - Time
* Multiple proposals
* Comments
* Back and forth
* Bikeshedding

20:00 - Editor’s draft spec (Stage 1)
* CSS typed
* Examples
* Provided code logic
* Implementor interest
  * Can go stale
  * Explainer
* Implementor
  * Prototype behind flags in browser
  * Intent to Prototype (I2P)

24:42 - Working Draft (Stage 2)
* WPTs
* Prototype behind flags in browser
* Needs two or more to graduate
* Intent to Ship (I2S)

24:54 - Conference Calls
* Around 10 items to discuss
  * Issues or proposals
* Flexible list
  * Things can be injected as emergency
  * Things can get punted to the next call

25:26 - Face 2 Face (F2F)
* Four times a year
* Presentations
* Breakout sessions
* Houdini focus groups, etc
* Try to resolve as many Github issues as possible

27:34 - Candidate Recommendation (Stage 3)
* Could still be behind a flag
  * Edge cases are being worked through
  * WPTs and standards are being nudged into a final state

44:20 - Roles
* Spec author
* Community Member
  * Print
  * Color
  * Internationalization
  * Box Model
  * AOM
  * JS APIs
  * Renderers
  * etc
* Implementor
* It’s like pub/sub, where spec authors pub and implementors sub, and the community tries to help shape the message that’s published while supporting the subscribers who need to implement and make it real

46:32 - Questions
* What language is CSS written in?
* What's the deal with Houdini?


## Links
* [https://github.com/w3c/csswg-drafts](https://github.com/w3c/csswg-drafts)
* [@rachelandrew](https://twitter.com/rachelandrew)
* [@hj_chen](https://twitter.com/hj_chen)
* [Incomplete List of Mistakes in the Design of CSS](https://wiki.csswg.org/ideas/mistakes)
* [10 Things I Regret About Node](https://www.youtube.com/watch?v=M3BM9TB-8yA)
* [https://ishoudinireadyyet.com/](https://ishoudinireadyyet.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Adam [Wok](https://www.amazon.com/s?k=wok)
* Scott: [Balance Pad](https://amzn.to/2YLNFVN)
* Wes: [Security Bit Set](https://amzn.to/2VtFaww)

## Shameless Plugs
* Adam: [The CSS Podcast](https://thecsspodcast.libsyn.com/)
* Scott: [CSS Design Systems](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e178e4519b4c255b20419b2a53cb59f4041d51212d095598c5d6814d932fabde,how-does-stuff-get-added-to-css-adam-argyle-answers,/shows/274 - css.md,2023-10-16 20:07:05.211,2023-10-27 15:57:54.903,TASTY
syntax_podcast_show_00275,275,Hasty Treat - Gatsby Tips,2020-08-17 13:00:00.031,https://traffic.libsyn.com/syntax/Syntax275.mp3,"
In this Hasty Treat, Scott and Wes talk about tips and tricks for using Gatsby in your projects

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:02 - React Helmet
* Make a re-usable SEO component that sets defaults. Spread children to override.

04:27 - When in doubt, stop the build and restart
* Gatsby clean
* Nuke node_modules + package-lock

05:34 - Use ESM to use ES Modules everywhere - share functions between gatsby-node and gatsby-browser

06:44 - Run the build command locally to troubleshoot prod
* Dev mode isn't SSG'd - people overlook this

08:06 - Wrap your layout automatically in gatsby-ssr and gatbsy-browser
* wrapPageElement and wrapRootElement

09:50 - Consider just adding the layout component manually to each page
* This will allow you to skip the layout if you need to have a page that isn't typical 

11:21 - Layout is not suitable for unmount animations
* Orchestrating individual component animations in Gatsby isn't easy, use wrapPageElement to write your animations or delays for internally unmounted components.

12:59 - use onCreatePage to pass context to the layout

```jsx
exports.onCreatePage = ({ page, actions }) => {
  const { createPage } = actions;

  if (page.path.match(/thumbnail/)) {
    page.context.layout = 'thumbnail';
    createPage(page);
  }
};
```

14:03 - You don't have to query for everything
* Hard-coding data in html/jsx is super valid

15:32 - Gatsby Parallel Runner
* For lots of images

## Links
* [Gridsom](https://gridsome.org/)
* [Google Cloud](https://cloud.google.com/)
* [Cloudinary](https://cloudinary.com/)
* [Sanity Image](https://www.sanity.io/docs/presenting-images)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c57e7af983fb0ad2e08264f5a39035be33d117b1f6d6ecd3d31bf6dd02958942,hasty-treat-gatsby-tips,/shows/275 - gatsby.md,2023-10-16 20:07:05.261,2023-10-27 15:57:55.023,HASTY
syntax_podcast_show_00276,276,Potluck - Subscriptions × ES Modules in Node × Chicken Thigh × Being a Good Dad × Refactoring × More!,2020-08-19 13:00:00.031,https://traffic.libsyn.com/syntax/Syntax276.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about React subscriptions, ES Modules in Node, how to cook a chicken thigh, being a good dad and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Stackbit - Sponsor
Stackbit offers developers tools that enable things like inline content editing, live previewing of content changes, and collaboration features on your Jamstack site, without code changes. That's why
Stackbit is the best way to Jamstack. [stackbit.com](https://www.stackbit.com/).

## Show Notes

02:11 - What are ""subscriptions"" in React, or in programming in general? The React docs mention that setting up a subscription is an example of a side effect, but what exactly is a subscription, and how do you set one up?	

05:43 - Using the latest node esm imports, is it possible to use aliases? Using the old require() syntax I used the npm package module-alias (https://www.npmjs.com/package/module-alias), but I cannot seem to find a solution for node v14 imports. In a deeply nested file, I find the import '../../../some/folder' syntax to be awful compared to require('@/some/folder').

09:20 - I've been a full-time developer for over 10 years and my company has a fairly flat hierarchy. I want to take on more responsibility (and salary) but my company doesn't have anything like a ""lead developer"" position. Any ideas for how to move up without switching companies? I know my boss would be receptive if I came to him with a pitch, but we work full stack so it feels like I'm already doing it all.

12:59 - In Wes’ website episode, he mentioned using Gatsby Parallels for images. Why not git LFS?	

17:25 - For Wes: Any Big Green Egg tips for beginners? I just ordered a kamado style grill and I'd appreciate any tasty tips you've got.	

22:45 - Inline code is considered harmful because of potential XSS attacks. Lighthouse recommends inlining critical CSS to improve page speed. What do you think about this tradeoff?

26:30 - What advice would both of you have for being a first-time father, and how can I best prepare? My wife is pregnant, and we are both very excited! I want to do the best I can at being a good father. Our baby is due in January. As both of you are fathers (multiple times), I would love to hear your thoughts.

32:58 - Are present web developers merely crud bastards for corporate culture? If not, What entrepreneurial opportunities are open with Javascript and hooking up React with backend Node/Laravel and reading the Google Map docs? Of course the list isn't exhaustive but you get my point right? Note: I'm not interested in selling courses and creating frameworks.

37:08 - Do you have any use for ES6 Generators and `yield`? It seems that they are a mechanism for async-await ""under the hood,"" so using 'async-await' is probably sufficient.	

39:10 - With a legacy project that has old build dependencies how do you decide when to retool and fix all the npm audit issues?

46:10 - In what instances do you prefer to use rem vs em vs pixels for font size? I usually think about it like so: if I'm okay with an element's font size being sized based on the parent, then I'll use em. If not, then I'll use rem. I almost never use pixels anymore except sometimes on the html element. But even then, I usually use a percentage. In practice, I've found it a bit hard to gauge what to expect with ems because of nesting issues. So, I've mostly been leaning towards rem. Though I also understand that using rems can be less modular. How do you guys make the decision?

52:49 - Hello chaps. Thank you so much for the show, I've learned an awful lot through listening. I've been dabbling in development for some time now and have taken on a project for an Express site which aside from a few static pages will include a shop with a small number of items (<5), customer dashboard (order tracking and submitting supplementary order info), and an image centric journal/blog section. I've listened and re-listened to your CMS roundup which is great, but having worked through Wes' Node course I'm kinda thinking why would I spend the time integrating a CMS when I can just build an 'Add Post' page for admin users, save the posts in Mongo, upload images to my server, and use Cloudflare's free tier CDN. Please explain why this is (or isn't🤷‍♂️) a bad idea, and more generally share your wisdom on when a CMS is or isn't actually necessary. PEAACE!

## Links
* [Meteor](https://www.meteor.com/)
* [Babel](https://babeljs.io/)
* [https://nodejs.org/api/esm.html#esm_transpiler_loader](https://nodejs.org/api/esm.html#esm_transpiler_loader) 
* [Gatsby Parallel Runner](https://github.com/netlify/gatsby-parallel-runner)
* [Git LFS](https://git-lfs.github.com/)
* [Syntax 247: Hasty Treat - Wes' New Personal Website](https://syntax.fm/show/247/hasty-treat-wes-new-personal-website)
* [Big Green Egg](https://biggreenegg.com/)
* [Mongoose](https://mongoosejs.com/)
* [Obsidian](https://obsidian.md/)
* [Notion](https://www.notion.so/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Foam](https://foambubble.github.io/foam/)
* Wes: [How to use a multimeter](https://www.youtube.com/watch?v=TdUK6RPdIrA)

## Shameless Plugs
* Scott: [Modern Design Systems](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ad36d57ac10acf46483dbce41bcc9f91933dc1f2925f9ef5b0ceccc4ce181698,potluck-subscriptions-es-modules-in-node-chicken-thigh-being-a-good-dad-refactoring-more,/shows/276 - potluck.md,2023-10-16 20:07:05.314,2023-10-27 15:57:55.064,TASTY
syntax_podcast_show_00277,277,"Hasty Treat - Stump'd",2020-08-24 13:00:00.463,https://traffic.libsyn.com/syntax/Syntax277.mp3,"
In this Hasty Treat, Scott and Wes are back with another edition of Stump'd! where they try to stump each other with interview questions. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

03:28 - What is the difference between HTML and React event handling?

05:55 - What are JavaScript data types?

07:00 - In which states can a Promise be?

07:48 - Discuss the differences between an HTML specification and a browser’s implementation thereof.

09:14 - What is a stateless component?

10:10 - What is a pure function?

10:51 - What is the output of the following code?

```
const a = [1, 2, 3]
const b = [1, 2, 3]
const c = ""1,2,3""

console.log(a == c)
console.log(a == b)
```

13:35 - What is memoization?

15:15 - How do you pass an argument to an event handler in React?

15:59 - What is HTML5 Web Storage? Explain localStorage and sessionStorage.

## Links
* [30 Seconds of Interviews](https://30secondsofinterviews.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",a27e20d79b1012dcd01fb055c27da217999d9f5447a622f97886bff0f3a75dbb,hasty-treat-stump-d,/shows/277 - stumpd.md,2023-10-16 20:07:05.373,2023-10-27 15:57:55.115,HASTY
syntax_podcast_show_00278,278,Potluck - MDX × Portfolio Projects × Code Commenting × CSS Properties × Reusable Components × More!,2020-08-26 13:00:00.463,https://traffic.libsyn.com/syntax/Syntax278.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about MDX, portfolio projects for junior devs, code commenting, CSS property order, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

02:18 - I'm curious to know what you guys think of [MDX](https://mdxjs.com/). I'd love to learn more about pros and cons, if you guys had a chance to use it.	

08:49 - Where would you put business logic in Vue.js middle- or large-scale applications? I try to put business logic in store but it makes hard to maintain such store, even with splitting to actions/getters/mutations files. I ended up using vanilla JavaScript files, where each file is a class singleton. I was wondering: is it a good solution or do you have better alternatives in mind?

12:07 - I commonly find myself engineering complex programs and left flabbergasted on how to express these ideas to other people when the need arises that I need to explain them and remember why I did them a certain way. How can I get better at conceptualizing intricate design patterns or functions as well as have better memory recall for these abstractions?

18:02 - Can I get recommendations for a junior dev portfolio? What five projects you would recommend to build that will significantly help in getting a job as a front-end web dev and why?

21:13 - I am now working on building a minesweeper game with React. You know how on a computer you right click to flag and disable a cell? I am thinking of doing a press and hold on a mobile device instead. I am not sure how to do either (the right click logic or the press and hold). How can you listen for these events in React? Can you help with some guidance or resources? :)	

30:00 - What are your thoughts on [SailsJS](https://sailsjs.com/) as a Rails-equivalent framework in Javascript? They recently released version 1.0 and I'm wondering if I should start using it in projects or if I should wait to see if it pans out.

34:35 - How do you go about creating reusable React components (reusable from project to project)? Do you create packages and publish them to NPM? Or do you have another method for storing code for components that you will likely need to use again?	

38:33 - Thoughts on shadow dom / custom elements? Would you use them in your own projects?

40:49 - How do you organize CSS properties within a rule and why? Random, alphabetical, logical groupings, etc.	

46:04 - Have u ever used the 2nd parameter of JSON.stringify for anything useful?	

48:00 - Getting my first dev job at an actual software company a year ago opened my eyes to the vast difference between educational repos and the absolute jungle that can be enterprise code bases. I've also learned the importance of writing code that will be readable later - ensuring any hacky workaround is replaced with a pattern seen elsewhere in the code base, etc. My question is - are there resources on these sorts of topics for folks trying to break into the industry? A lot of tech topics revolve around how to get your code to run, which feels to me like only half the battle. Where can juniors find resources on robustness?

## Links
* [https://github.com/jxnblk/mdx-deck](https://github.com/jxnblk/mdx-deck)
* [https://mdsvex.com/](https://mdsvex.com/)
* [Spectacle](https://formidable.com/open-source/spectacle/)
* [MDsveX](https://github.com/pngwn/MDsveX)
* [Vue.js](https://vuejs.org/)
* [Redux](https://redux.js.org/)
* [VueX](https://vuex.vuejs.org/)
* [Better Comments](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments)
* [Kap](https://getkap.co/)
* [Redwood.js](https://redwoodjs.com/)
* [Blitz.js](https://blitzjs.com/)
* [GraphQL](https://graphql.org/)
* [https://github.com/ryanmcdermott/clean-code-javascript](https://github.com/ryanmcdermott/clean-code-javascript)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Easy Snippet](https://marketplace.visualstudio.com/items?itemName=inu1255.easy-snippet)
* Wes: [WOW Pool Noodles](https://www.amazon.com/17-2062LG-Foam-Pool-Noodle-Green/dp/B01N5USCX3/)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",96d485d093e364970e2c489d787a37786bbe06f2a9ff1c77ff2fef5f1ffc9d4f,potluck-mdx-portfolio-projects-code-commenting-css-properties-reusable-components-more,/shows/278 - potluck.md,2023-10-16 20:07:05.418,2023-10-27 15:57:55.152,TASTY
syntax_podcast_show_00279,279,Hasty Treat - End of Season Wrap Up,2020-08-31 13:00:00.529,https://traffic.libsyn.com/syntax/Syntax279.mp3,"
In this Hasty Treat, Scott and Wes wrap up season one of the podcast and talk about what's coming.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

01:32 - Plans for the Fall

06:59 - Fav Hasty
* Scott
  * [Ep 161: Hasty Treat - VSCode Extensions & Themes](https://syntax.fm/show/161/hasty-treat-vscode-extensions-and-themes)
  * [Ep 165: Hasty Treat - VSCode Treats Part 2](https://syntax.fm/show/165/hasty-treat-vscode-treats-part-2)
  * [Ep 167: Hasty Treat - VSCode Love Part 3](https://syntax.fm/show/167/hasty-treat-vscode-love-part-3)
  * [Ep 277: Hasty Treat - 5 Things That Make Your Site Slow](https://syntax.fm/show/239/hasty-treat-5-things-that-make-your-site-slow)
* Wes
  * [Ep 211: Hasty Treat - Modules in Node](https://syntax.fm/show/211/hasty-treat-modules-in-node)

08:55 - Fav Tasty
* Scott
  * [Ep 236: Mental Health and Dev ft Dr. Courtney Tolinski - Depression, Anxiety, Imposter Syndrome, Focus, Motivation, Burnout](https://syntax.fm/show/236/mental-health-and-dev-ft-dr-courtney-tolinski-depression-anxiety-imposter-syndrome-focus-motivation-burnout)
  * [Ep 250: Scott Teaches Wes Svelte and Sapper](https://syntax.fm/show/250/scott-teaches-wes-svelte-and-sapper)
* Wes
  * [Ep 224: Serverless / Cloud Functions - Part 1](https://syntax.fm/show/224/serverless-cloud-functions-part-1)
  * [Ep 256: WebRTC and Peer-to-Peer Video Calling with Ian Ramzy](https://syntax.fm/show/256/webrtc-and-peer-to-peer-video-calling-with-ian-ramzy)

10:22 - Top Episodes of 2020
* 10: [Ep 214: 2020 Fitness](https://syntax.fm/show/214/2020-fitness)
* 09: [Ep 228: More on Severless - Databases × Files × Secrets × Auth × More!](https://syntax.fm/show/228/more-on-severless-databases-files-secrets-auth-more)
* 08: [Ep 220: The Synology Show - Backups and Home Server](https://syntax.fm/show/220/the-synology-show-backups-and-home-server)
* 07: [Ep 222: Are Web Dev GUIs Going to Replace Us?](https://syntax.fm/show/222/are-web-dev-guis-going-to-replace-us)
* 06: [Ep 210: Potluck - Fonts × Frameworks × Teas × Coding Subscriptions × Client Work × More!](https://syntax.fm/show/210/potluck-fonts-frameworks-teas-coding-subscriptions-client-work-more)
* 05: [Ep 212: Pika Pkg](https://syntax.fm/show/212/pika-pkg)
* 04: [Ep 224: Serverless / Cloud Functions Part 1](https://syntax.fm/show/224/serverless-cloud-functions-part-1)
* 03: [Ep 218: Potluck - Dev Culture Fit × Slack Communities × Vanilla JS × Backpacks × Raspberry Pi × More!](https://syntax.fm/show/218/potluck-dev-culture-fit-slack-communities-vanilla-js-backpacks-raspberry-pi-more)
* 02: [Ep 226: Potluck - Next vs Gatsby × Headless CMS × Vue.js × Is Ruby on Rails still good? × More!](https://syntax.fm/show/226/potluck-next-vs-gatsby-headless-cms-vue-js-is-ruby-on-rails-still-good-more)
* 01: [Ep 216: Tech to Watch in 2020](https://syntax.fm/show/216/tech-to-watch-in-2020)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",62d5cfe4a061a5a4db739137f1964be6b48b97bbdf92928b6b3b1c96145cfab4,hasty-treat-end-of-season-wrap-up,/shows/279 - season wrap.md,2023-10-16 20:07:05.464,2023-10-27 15:57:55.189,HASTY
syntax_podcast_show_00280,280,Potluck - RIP Firefox? × Safari × Changing Careers × Regression Testing × Google Analytics Alternatives × Malicious Github Users? × Mac vs Windows × More!,2020-09-02 13:00:00.439,https://traffic.libsyn.com/syntax/Syntax280.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about the recent Mozilla layoffs, Safari, finding time to learn coding, Google Analytics alternatives, malicious Github users, and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

01:15 - What are your guy's thoughts on Mozzila's layoffs and how it will affect developers?

08:42 - Right now I am a math teacher. I am married with 2 kids (3 and 1) so finding time to code is difficult. My current situation includes waking up at 4:30 am everyday just to get in some time before the kids wake up. Do either of you have any tips about finding a balance between raising kids, getting stuff done around the house, having a full time job and trying to teach yourself web development to transition into a different career?

13:23 - If you had to use a drag-n-drop framework using React, which one would you choose?

15:49 - E2E vs Visual Regression Testing? At which web-app development cycle to implement each? Best tools open source vs purchase?

20:36 - I teach a Highschool course in web development. For a group of students who have a solid knowledge of HTML/CSS and a decent understanding of JavaScript, would Svelte be a good framework for entering into component-based development for the first time?

22:33 - What's a good Google Analytics alternative in 2020? I have a site on Netlify that the $9/mo seems a bit steep for, for what the site is, and flipping the domain through Cloudflare just for the analytics seems crazy; but is it worth it? Alternatives would be awesome, as I'd love to get off the Google overlords.

29:22 - I have noticed about a dozen to 100 unique clones of my git repos after each push. It doesn’t matter if the repo is initialized, picture added or the readme updated. The repos are still cloned. The traffic section shows the views to my repo at 1 sometimes 2. Is this normal? Is this how interested employers keep tabs on you? Are there a lot of malicious git users? What is happening?

32:30 - With Apple switching to their own processors is it silly for anyone to buy a Mac for development before that releases? Do you guys have experience with Windows, and which would you still prefer today if you needed to buy?

40:28 - Have you ever been approached by or heard of GitAds.io? They're trying to pay developers to put ads onto popular open source libraries on Github, and they approached me recently, and I wasn't sure what to think about them. What do you think?

45:16 - I just listened to your TLD game. It made me wonder your opinions on personal site domain names? Should it always try to be yourname.dev? What about .me or other domains?

47:53 - What's the best way to introduce new technology or processes to a team?

## Links
* [Rust](https://www.rust-lang.org/)
* [Firefox](https://www.mozilla.org/en-US/firefox/)
* [MDN](https://developer.mozilla.org/)
* [Jen Simmons](https://twitter.com/jensimmons)
* [Safari](https://www.apple.com/safari/)
* [React DnD](https://react-dnd.github.io/react-dnd/about)
* [React Beautiful DnD](https://github.com/atlassian/react-beautiful-dnd)
* [React Spring](https://www.react-spring.io/)
* [Framer Motion](https://www.framer.com/motion/)
* [Cypress](https://www.cypress.io/)
* [Percy.io](https://percy.io/)
* [Svelte](https://svelte.dev/)
* [Heap](https://heap.io/)
* [Fathom](https://usefathom.com/ref/2XTH1G)
* [GitAds.io](https://www.gitads.io/)
* [.TECH](https://get.tech/)
* [Syntax 179: Hasty Treat - The TLD Game](https://syntax.fm/show/179/hasty-treat-the-tld-game)
* [Javascript30](https://javascript30.com/)
* [Syntax 206: Hasty Treat - The New MacBook Pro for Web Development](https://syntax.fm/show/205/hasty-treat-the-new-macbook-pro-for-web-development)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Turbo Boost Switcher for Mac OS X](http://tbswitcher.rugarciap.com/)
* Wes: [Roller Blade Wheels for your chair](https://amzn.to/34sAtIB)

## Shameless Plugs
* Scott: [React 3D](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby](https://mastergatsby.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",1acbd83fbbfb242c002b5407f24423a62b446342ec75ad3e1900e5e3b0cd514a,potluck-rip-firefox-safari-changing-careers-regression-testing-google-analytics-alternatives-malicious-github-users-mac-vs-windows-more,/shows/280 - potluck.md,2023-10-16 20:07:05.514,2023-10-27 15:57:55.229,TASTY
syntax_podcast_show_00281,281,Hasty Treat - Backyard Offices,2020-09-07 13:00:00.709,https://traffic.libsyn.com/syntax/Syntax281.mp3,"
In this Hasty Treat, Scott and Wes talk about home offices, backyard offices, costs, and pros and cons!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

03:40 - Structure options: 
* Existing sheds
* Build your own
  * likely not allowed
* Drop in offices 
* Rubbermaid shed 

07:18 - Electrical

07:58 - Insulation

09:01 - Heating

11:30 - Cooling

16:01 - Interior

16:42 - WiFi

17:12 - Costs ~ $4k
* Electrical - $2k
* Flooring - $600
* Paneling- $900
* AC - $1000
* Fan - $100 

## Links
* [https://twitter.com/bradwestfall/status/1284299864210210817](https://twitter.com/bradwestfall/status/1284299864210210817)
* [https://bradfrost.com/blog/post/brad-frost-web-headquarters/](https://bradfrost.com/blog/post/brad-frost-web-headquarters/)
* [Technology Connections - Space Heater Nonsense](https://www.youtube.com/watch?v=V-jmSjy2ArM)
* [Technology Connections - Personal ""air conditioners"" aren't what they seem](https://www.youtube.com/watch?v=2horH-IeurA)
* [Technology Connections - Cassette adapters are remarkably simple](https://www.youtube.com/watch?v=dH4n8fUjtLQ)
* [Caldigit](https://www.caldigit.com/)
* [Ubiquity Outdoor Access Point](https://store.ui.com/collections/unifi-network-access-points/products/unifi-ac-mesh-ap)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",9667adc01f7e8071c006de11a29e74c282525a7a18cb495294c8729902a09360,hasty-treat-backyard-offices,/shows/281 - backyard offices.md,2023-10-16 20:07:05.563,2023-10-27 15:57:55.267,HASTY
syntax_podcast_show_00282,282,Tales from Webdev Past - Clearfix × Floats × Cufon × Guestbooks × PNG Fix × More!,2020-09-09 13:00:00.709,https://traffic.libsyn.com/syntax/Syntax282.mp3,"
In this episode of Syntax, Scott and Wes talk about tales from web dev past — clearfix, floats, flash, cufon, guestbooks, hit counters, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

04:28 - Float-based layouts
* Clearfix
* ☠️ Killed by [Flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox), and then [Grid](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout)

09:29 - Loading Screens:
* Two websites - one flash and one HTML
* Splash screen

11:22 - Hit counters

12:28 - Guestbooks

13:28 - Flash
* 3rd party player
* Media dragged its feet FOREVER
* ☠️ Killed by Steve Jobs

18:46 - Fonts
* The Golden Layout
* [Cufon](http://cufon.shoqolate.com/generate/) / [sIFR](https://en.wikipedia.org/wiki/Scalable_Inman_Flash_Replacement) / Images of text
* [Typekit](https://typekit.com/)
* ☠️ Killed by font-face

24:15 - Folder-based version control
* ☠️ Killed by Git

26:22 - FTP
* ☠️ Killed by Git, then many other things

28:40 - CSS Zen Garden
* [CSS Zen Garden](http://www.csszengarden.com/)
* ☠️ Killed by CSS being better

32:02 - TextMate
* [Coda](https://panic.com/coda/)
* [Notepad++](https://notepad-plus-plus.org/)
* [Adobe GoLive](https://en.wikipedia.org/wiki/Adobe_GoLive)
* [FrontPage](https://en.wikipedia.org/wiki/Microsoft_FrontPage)
* [Macromedia](https://en.wikipedia.org/wiki/Macromedia) / [Dreamweaver](https://www.adobe.com/products/dreamweaver.html)
* ☠️ Killed by [Sublime Text](https://www.sublimetext.com/), then [VSCode](https://code.visualstudio.com/)

33:58 - Sliding doors
* A technique for rounded corners on buttons
☠️ Killed by CSS

35:29 - PNG Fix
* ☠️ Killed by the death of IE6

37:53 - 9-Panel layouts
* ☠️ Killed by CSS

39:20 - CSS 3 Please
* [CSS 3 Please](https://css3please.com/)
* [Paul Irish](https://www.paulirish.com/)
* ☠️ Killed by modern CSS

## Links
* [Silverlight](https://www.microsoft.com/silverlight/)
* [Chris Coyier](https://chriscoyier.net/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Fancierstudio 600 LED Light Panel Kit](https://amzn.to/3beDZYz)
* Wes: [Allen Key Drill Bit Set](https://amzn.to/3juGFnJ) 

## Shameless Plugs
* Scott: [React 3D and Advanced Animating React with Framer Motion](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby Course](https://mastergatsby.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",129e05293aa7b3e1423ae4561b15c87777de9c0cc861a85dd4e8e41af59f1319,tales-from-webdev-past-clearfix-floats-cufon-guestbooks-png-fix-more,/shows/282 - webdev past.md,2023-10-16 20:07:05.624,2023-10-27 15:57:55.307,TASTY
syntax_podcast_show_00283,283,Hasty Treat - Time Block Planning,2020-09-14 13:00:00.352,https://traffic.libsyn.com/syntax/Syntax283.mp3,"
In this Hasty Treat, Scott and Wes talk about time block planning — what it is and how it can help you increase your productivity!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

01:50 - What is time block planning

03:12 - How TBP has helped Scott stay focused

04:46 - How it helps family life

05:57 - How to plan your week

11:00 - How to deal with setbacks

## Links
* [Cal Newport](https://www.calnewport.com/)
* [Todoist](https://todoist.com/)
* [Deep Work](https://www.amazon.com/Deep-Work-Focused-Success-Distracted/dp/1455586692)
* [Deep Questions](https://www.calnewport.com/podcast/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d003ce4169e3a74d17530edf0eee137aed42e40d3316b6d9d8cc208ebd886915,hasty-treat-time-block-planning,/shows/283 - timeblock.md,2023-10-16 20:07:05.712,2023-10-27 15:57:55.344,HASTY
syntax_podcast_show_00284,284,Writing Good CSS,2020-09-16 13:00:00.352,https://traffic.libsyn.com/syntax/Syntax284.mp3,"
In this episode of Syntax, Scott and Wes talk about writing good CSS. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

02:11 - Frameworks
* Utility: [Tailwind](https://tailwindcss.com/), [Taycons](https://tachyons.io/), [Bulma](https://bulma.io/)
* Frameworks: [Foundation](https://get.foundation/), [Bootstrap](https://getbootstrap.com/)
* Classless base starters: [https://github.com/dbohdan/classless-css](https://github.com/dbohdan/classless-css)
  * [HTML5 UP](https://html5up.net/) / a template

13:37 - Preprocessors
* [Sass](https://sass-lang.com/)
* [Stylus](https://stylus-lang.com/)
* [Less](http://lesscss.org/)
* Regular CSS
  * Variables
  * Color functions - not yet

19:42 - Tools
* [PostCSS](https://postcss.org/) is like Babel for CSS. Some good plugins:
  * [https://github.com/postcss/postcss#plugins](https://github.com/postcss/postcss#plugins)
* CSS min/max for clamp
* [Autoprefixer](https://github.com/postcss/autoprefixer)
* [Autoreset](https://github.com/maximkoretskiy/postcss-autoreset) - reset a component
* Gap instead of grid-gap
* [Simple-vars](https://github.com/postcss/postcss-simple-vars)
* [Postcss-modules](https://github.com/outpunk/postcss-modules)
* [SugarSS](https://github.com/postcss/sugarss)
* Preset env

34:19 - Stylint
* [Stylint](https://stylelint.io/) 
* More than just a basic linter
* Capable of complex rules in your CI process - i.e. if you are using a color, make sure it's a CSS variable

36:37 - Removing unwanted CSS
* [PurgeCSS](https://purgecss.com/) - Tailwind uses this
* [PurifyCSS](https://purifycss.online/)

41:17 - Writing maintainable CSS / scoping solutions
* Component-based
  * CSS Modules
* Naming Convention Based
  * [BEM](http://getbem.com/)
  * [SMACSS](http://smacss.com/)
* CSS Variables
  * Powerful when utilized with things like calc() to avoid out of sync values
* Know which browsers you need to support

## Links
* [Syntax 197: Hasty Treat - Tips For Writing Good CSS](https://syntax.fm/show/197/hasty-treat-tips-for-writing-good-css)
* [Compass](http://compass-style.org/)
* [Susy](https://www.oddbird.net/susy/)
* [Grunt](https://gruntjs.com/)
* [Gulp](https://gulpjs.com/)
* [Linaria](https://github.com/callstack/linaria)
* [Astroturf](https://github.com/4Catalyzer/astroturf)
* [Houdini](https://developer.mozilla.org/en-US/docs/Web/Houdini)
* [Svelte](https://svelte.dev/)

## Syntax Highlight
* Dhanish Gajjar - [https://www.instagram.com/dhanishgajjar/](https://www.instagram.com/dhanishgajjar/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Rustlings](https://github.com/rust-lang/rustlings)
* Wes: [Class Action Park Documentary](https://www.hbomax.com/feature/urn:hbo:feature:GX0P9SwLUP4vDIQEAAAAe?utm_id=sa%7c71700000071882016%7c58700006290539048%7cp56854383918&gclid=EAIaIQobChMIvOO7mrvk6wIVA77ACh0AlAJDEAAYASAAEgLZPfD_BwE&gclsrc=aw.ds)

## Shameless Plugs
* Scott: [Advanced Animating React with Framer Motion](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby](https://mastergatsby.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",776060582c21612dee0771f074209cd336163223317d40e17c537e0dcd524fe8,writing-good-css,/shows/284 - good CSS.md,2023-10-16 20:07:05.767,2023-10-27 15:57:55.388,TASTY
syntax_podcast_show_00285,285,"Hasty Treat - Our First Bucks Made From Web Dev, Teaching, YouTube and Tutorials",2020-09-21 13:00:00.882,https://traffic.libsyn.com/syntax/Syntax285.mp3,"
In this Hasty Treat, Scott and Wes talk about their first steps in the word of entrepreneurship and web dev specifically.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

Wes: 
* First money: check for $300
* First website: Pool company
* First ad sense income: Craigonomics
* First YouTube: import large SQL database with bigdump
* First online Product: Sublime Text - Ryan Christiani
* First in-person teaching: HackerYou
* First project at agency: Jet Cooper

Scott:
* First dev gig: parents tea store
* First design gig: Perpetual
* First YouTube video: [Adobe Premier 101](https://www.youtube.com/watch?v=oK_kpyj1R-g&feature=youtu.be)
* First BIG YouTube video: Sass Tutorials
* First ad sense income: [scotttolinski.com](https://www.scotttolinski.com/) blog post about music promotion sites
* First online product: Sass Mastery
* First project at agency: Nu Step

## Links
* [https://twitter.com/wesbos/status/1276500155789910016](https://twitter.com/wesbos/status/1276500155789910016)
* [Audiojungle](https://audiojungle.net/)
* [Themeforest](https://themeforest.net/)
* [Juno College](https://junocollege.com/company/)
* [@steveschoger](https://twitter.com/steveschoger)
* [Smashing Mag](https://www.smashingmagazine.com/)
* [Css Tricks](https://css-tricks.com/)
* [Packt Publishing](https://www.packtpub.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f6b17f17ebce7b6cfe75cfdcfebbb694fed435accd7ab5492135fbc8dd6adde9,hasty-treat-our-first-bucks-made-from-web-dev-teaching-youtube-and-tutorials,/shows/285 - first bucks.md,2023-10-16 20:07:05.814,2023-10-27 15:57:55.426,HASTY
syntax_podcast_show_00286,286,Git Fundamentals,2020-09-23 13:00:00.882,https://traffic.libsyn.com/syntax/Syntax286.mp3,"
In this episode of Syntax, Scott and Wes talk about Git fundamentals — what it is, why you need it, best practices and more!

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

03:12 - What is Git?

04:16 - Why do you need it?

06:31 - UI vs command line

09:03 - Commands 101
* [https://git-scm.com/](https://git-scm.com/)
* `init`
  * `.gitignore` file is key right off the bat
* `add`
  * `add -p` - quick review of all the changes you've made
* `commit`
  * Multiple adds and commits
  * Commit messages should be descriptive
* `push`
  * What are origins?
* `pull`
* `clone`
* `checkout`
* `merge`
* `fetch`
* `stash`
* `fork`
* Merge vs pull request
* Git vs GitHub / Alternatives
  * Bitbucket
  * GitLab

44:25 - Common issues
* Merge conflicts
* Files being tracked unintentionally
* ""How do I delete file from Github?""
  * `git rm -r`
  * `alias gri=""git ls-files --ignored --exclude-standard | xargs -0 git rm -r""`
* Databases in Git?

49:10 - Git clients
* [https://git-scm.com/downloads/guis](https://git-scm.com/downloads/guis)
* CLI
* ""Hub""
* Github CLI
* Github desktop app
* VS Code integration
* Source tree
* Kraken
* Tower

## Links
* [VS Code](https://code.visualstudio.com/)
* [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)
* [GitHub](https://github.com/)
* [Bitbucket](https://bitbucket.org/)
* [GitLab](https://gitlab.com/)
* [Drupal](https://www.drupal.org/)
* [GitKraken](https://www.gitkraken.com/)
* [Tower](https://www.git-tower.com/mac)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [What Had Happened Was Podcast](https://podcasts.apple.com/us/podcast/what-had-happened-was/id1520209791)
* Wes: [Yeti Products](https://www.yeti.com/)

## Shameless Plugs
* Scott: [React For Everybody](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby](https://mastergatsby.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",a2bb95ff6acb4f3d1b99b30a095cb1dd7a9aec81bb581445e89a832bd6e1b362,git-fundamentals,/shows/286 - git fundamentals.md,2023-10-16 20:07:05.854,2023-10-27 15:57:55.471,TASTY
syntax_podcast_show_00287,287,Hasty Treat - Records and Tuples in JavaScript,2020-09-28 13:00:00.368,https://traffic.libsyn.com/syntax/Syntax287.mp3,"
In this Hasty Treat, Scott and Wes talk about records and tuples in javascript — what they are, why you might want to use them, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:42 - Immutability

05:08 - Records
* Immutable object
* Syntax `#{x: 1, y: 2}`

05:56 - Tuples
* Immutable array
* Syntax `#[1,2,3,4]`

07:18 - For both
* Referred to as a compound primitive
* Can contain only primitives, not objects
* They are compared deeply by their contents rather than their identity

    ```jsx
    assert(#{ a: 1 } === #{ a: 1 });
    assert(#[1, 2] === #[1, 2]);
    assert(#{ a: 1, b: 2 } === #{ b: 2, a: 1 });
    ```

* Potential for optimizations
  * Optimizations for making deep equality checks fast
  * Optimizations for manipulating data structures
* Works well with type systems
* Better integration with the debugger
* Accessed through normal record.scott object like syntax

13:39 - Stage 2

## Links
* [https://github.com/tc39/proposal-record-tuple](https://github.com/tc39/proposal-record-tuple)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ff23b50fd7367cdd8af67057bf027f94b1b4c3fab06577b95ce9b2abbb37f39d,hasty-treat-records-and-tuples-in-javascript,/shows/287 - records.md,2023-10-16 20:07:05.899,2023-10-27 15:57:55.532,HASTY
syntax_podcast_show_00288,288,Tales from Web Dev Past - Part 2,2020-09-30 13:00:00.368,https://traffic.libsyn.com/syntax/Syntax288.mp3,"
In this episode of Syntax, Scott and Wes are back with part 2 of Tales from Web Dev Past — this time looking at iFrames, layout trends, icon fonts, web rings, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

03:00 - iFrames
* Sidebar menu
* target

05:42 - JavaScript image hovers
* [Dreamweaver](https://www.adobe.com/products/dreamweaver.html)
* [Photoshop](https://www.adobe.com/products/photoshop.html) Slice and Select Tool

08:24 - [CSS Pie](http://css3pie.com/)

09:42 - Animated gifs of people and construction
* [http://textfiles.com/underconstruction/](http://textfiles.com/underconstruction/)

11:20 - CSS Zoom 1 / IE CSS Hacks
* Forced IE 7 to redraw floats

13:42 - Layout trends
* 800x600 fixed websites
* [960gs](https://960.gs/)
* [Golden Grid](https://goldengridsystem.com/)
* 12-col grid creators

16:26 - Sprite maps
* [Spritecow](http://www.spritecow.com/)
* ☠️ Killed icon fonts
  * ☠️ Killed by SVG icons

18:40 - [Firebug](https://getfirebug.com/) and Firebug Lite
* Lite was a bookmarklet

20:14 - Image maps / Background gradients
* 1px wide and 2000px tall image to make repeating gradients
* [Squidfingers](http://www.squidfingers.com/patterns/)
* [Subtle Patterns](https://www.toptal.com/designers/subtlepatterns/)
* [Hero Patterns](https://www.heropatterns.com/)
* [CSS3 Patterns](http://projects.verou.me/css3patterns/)

25:53 - Web rings

27:41 - Glossy buttons

28:09 - Flaming text
* [FlamingText.com](https://flamingtext.com/)

30:01 - Marquee tags
* Staggered
* Speed attribute

31:26 - Spacer gifs

34:30 - [AngelFire](https://en.wikipedia.org/wiki/Angelfire) / [GeoCities](https://en.wikipedia.org/wiki/Yahoo!_GeoCities)

36:11 - [Xanga](http://xanga.com/) / [LiveJournal](https://www.livejournal.com/)

37:29 - Above the fold content
* [Abovethefold.fyi](http://abovethefold.fyi/)

39:36 - [Homestar Runner](https://homestarrunner.com/)

## Links
* [Drupal Omega theme](https://www.drupal.org/project/omega)
* [Syntax 032: Designing, Templating, Inlining and Sending Email](https://syntax.fm/show/032/designing-templating-inlining-and-sending-email)
* [Mailchimp](https://mailchimp.com/)
* [Litmus](https://www.litmus.com/)
* [Email on Acid](https://www.emailonacid.com/)
* [Herman Miller Aeron](https://www.hermanmiller.com/products/seating/office-chairs/aeron-chairs/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [New Rustacean Podcast](https://newrustacean.com/)
* Wes: [Autonomous Ergo Chair](http://autonomous.ai/) 

## Shameless Plugs
* Scott: [Advanced Animating React with Framer Motion](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby](https://mastergatsby.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c1f7ceeb83fbd3a7f47ac912cce5c0b12f3284d6e1bc376fdbd5e11b1466171d,tales-from-web-dev-past-part-2,/shows/288 - web dev past.md,2023-10-16 20:07:05.952,2023-10-27 15:57:55.603,TASTY
syntax_podcast_show_00289,289,Hasty Treat - Enums in JS (GraphQL and Typescript),2020-10-05 13:00:00.592,https://traffic.libsyn.com/syntax/Syntax289.mp3,"
In this Hasty Treat, Scott and Wes talk about enums in JS — what they are, what they do, and how they work in JavaScript. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

03:11 - What are enums?
* A type restricting variables to one value from a predefined set of constants
* Direction = UP / DOWN / LEFT / RIGHT
* Role = ADMIN EDITOR AUTHOR VIEWER
* Day of the Week

05:12 - In GraphQL
* enum Role { ADMIN EDITOR AUTHOR VIEWER}
* Then

07:05 - In TypeScript
* First, declare the type:
  * enum direction = { UP, DOWN, LEFT, RIGHT }
* Then when you defined your function, use that type
  * type User { role: Role } or type User { role: [Role] } 

08:49 - In JavaScript
* Not in JS yet
* There is a proposal in stage 1
  * [https://github.com/rbuckton/proposal-enum](https://github.com/rbuckton/proposal-enum)
* And a babel plugin:
  * [https://www.npmjs.com/package/babel-plugin-const-enum](https://www.npmjs.com/package/babel-plugin-const-enum)
* Can use case/switch
* Can use Object or Map keys

## Links
* [Syntax 287: Hasty Treat - Records and Tuples in JavaScript](https://syntax.fm/show/287/hasty-treat-records-and-tuples-in-javascript)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b519a8842da868b977212cc2742feea9b54cb41e64bea2d496e15197f1f22486,hasty-treat-enums-in-js-graphql-and-typescript,/shows/289 - enums.md,2023-10-16 20:07:06.021,2023-10-27 15:57:55.652,HASTY
syntax_podcast_show_00290,290,Potluck - Is Angular good? × Stencil.js × Self XSS × SVGs in React × Social Platforms for Devs × Project Handoff × Cleaning Knives × More!,2020-10-07 13:00:00.592,https://traffic.libsyn.com/syntax/Syntax290.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about getting your first web dev job, what makes a software engineer senior, handing off projects to clients, Angular vs React, the best social platforms for devs, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

01:58 - You've talked a couple times in the past about the security concerns around `target=""_blank""`. You mentioned how adding `rel=""noopener""` and / or `rel=""noreferrer""` can secure this functionality, but what's to stop a savvy person from going into the dev tools and deleting these attributes before clicking a link? Does this defeat the entire purpose or what? Surely browsers have thought of this and it's not so easy to hack?

03:48 - Why did you not mention [Stencil](https://stenciljs.com/) when talking about web-component in the last Potluck? Can I presume you have not heard of it? It is quite successful and Ionic proves it. We've been using it for two years in production. This is the only library that thought web-components through to the end. If you know it, what do you think about it and would you use it?

* Example of a stencil component:

```jsx
import { Component, Prop, h } from '@stencil/core';

@Component({
  tag: 'my-first-component',
})
export class MyComponent {

  // Indicate that name should be a public property on the component
  @Prop() name: string;

  render() {
    return (
      <p>
        My name is {this.name}
      </p>
    );
  }
}
```

06:12 - Is [https://www.syntax.fm](https://www.syntax.fm/) supposed to not work? I get a 404.

07:34 - I’m wondering what advice you’d have for someone self-taught switching from a totally non-tech industry (non profit arts, in my case) where I work in a tech role. I’ve hustled and built a portfolio of projects and learned a ton from both of your courses, but I feel that my experience is seen as less valuable because I don’t work in a traditional software/web development environment. Any tips for getting over the final hurdle of getting a dev job?

11:11 - What makes a software engineer senior?

13:08 - I have a Gatsby / Netlify client project about to launch. What’s the best approach in handing over to the (non technical) client? Do I keep in my Github account and just give the client the Netlify CMS login, or create the a Github account for the client that I can access for any maintenance? What do other devs do?

17:55 - I recently blocked all cookies on my mobile browser (Google Chrome), and I noticed something weird. A couple of sites that I know for a fact to have been built using NextJS weren't working as expected (surprise surprise). They would load as usual, and after a second or so, all the content on the page disappeared, with the error message ""sorry: an unexpected error has occurred"". In some cases, the error was printed in the site's font, and with the same background color on the body. Why does blocking cookies do this to NextJS sites?

21:21 - How often do you make commits? I always hear, ""commit often"", but I am hesitant because I feel like I may change my code later on before I make a pull request? I really liked your episode on Git Fundamentals, I would love to see a tutorial/deep dive into Git workflows and practices (when to commit / how often) Should I commit even though I know what I'm working on isn't complete or I need to refactor it?? What is code review etiquette?

26:59 - Wes, how do you handle captioning and transcripts on your courses? Do you use some tool or service for that or do you do it by hand?	

31:11 - I am a recent graduate of a code school that focused on React and Rails. The company that I currently work for uses Angular for part of their stack. I eventually would like to move into a dev spot, but I am finding that Angular feels a bit stuffy and I am not as excited about it as React, Svelte, Vue, etc. I am afraid that if I dive into Angular, I will become less relevant down the road. I want to learn everything, but I only have so much time and don't want to stunt my growth as a developer. Any thoughts or advice on this would be sick!

36:38 - How do you handle SVGs in React? I know that SVGR exists, but I'd like to avoid adding another dependency if it's something I can roll on my own. In the past, I've created functions that take parameters like fill or stroke to control color, and return a string of SVG code with the arguments interpolated in. Then I place that string into a component using dangerouslySetInnerHTML. I haven't seen this method used anywhere else, and is probably not best practice. But also, it works, so maybe it's fine?

39:52 - What social media platforms should you use as a Dev? What is cool to have? What are their benefits?

48:14 - Have you tried an ultrawide monitor for coding, such as 34"" or 38""? I feel the extra width would be great for a single monitor setup, but haven't been able to see one live where I live.

## Links
* [Syntax 269: Hasty Treat - Target=_blank security issue? What's the deal with noopener and noreferrer?](https://syntax.fm/show/269/hasty-treat-target-_blank-security-issue-what-s-the-deal-with-noopener-and-noreferrer)
* [Syntax 280: Potluck - RIP Firefox? × Safari × Changing Careers × Regression Testing × Google Analytics Alternatives × Malicious Github Users? × Mac vs Windows × More!](https://syntax.fm/show/280/potluck-rip-firefox-safari-changing-careers-regression-testing-google-analytics-alternatives-malicious-github-users-mac-vs-windows-more)
* [8 Mile](https://www.imdb.com/title/tt0298203/)
* [Syntax 286: Git Fundamentals](https://syntax.fm/show/286/git-fundamentals)
* [Rev](https://www.rev.com/)
* [Angular](https://angular.io/)
* [React](https://reactjs.org/)
* [Svelte](https://svelte.dev/)
* [SVGR](https://react-svgr.com/)
* [LevelUp Tuts Discord](https://discord.gg/ccMC6kB)
* [Dev.to](https://dev.to/)
* [freeCodeCamp](https://www.freecodecamp.org/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott:
  * 1: [Knife Cleaner](https://amzn.to/3cFraY8)
  * 2: [Scraper](https://amzn.to/336AvVA)
  * 3: [Chainmail Scrubber](https://amzn.to/3mZtfCY)
* Wes: [Scriptable App](https://scriptable.app/)

## Shameless Plugs
* Scott: [ReactJS For Everyone](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby Course](https://mastergatsby.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",1b8b0d1a901a45a3f29c487020f7895bf5c74d5bf8b73b0c300469c0bfc5a75d,potluck-is-angular-good-stencil-js-self-xss-svgs-in-react-social-platforms-for-devs-project-handoff-cleaning-knives-more,/shows/290 - potluck.md,2023-10-16 20:07:06.076,2023-10-27 15:57:55.699,TASTY
syntax_podcast_show_00291,291,Hasty Treat - Updating / Restarting Long-Running Web Apps,2020-10-14 13:00:00.281,https://traffic.libsyn.com/syntax/Syntax291.mp3,"
In this Hasty Treat, Scott and Wes talk about updating web apps that have running for a long time — the problems to look out for and how to avoid them.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

01:54 - The problem
* This only affects the client-side

05:28 - What are some solutions:
* Do nothing and hope the  user refreshes.
* Have a list of assets, or commit hashes. Poll the server periodically, and when there is a new version available:
    * Prompt the user to refresh
    * Just refresh the user (store current state in localstorage and restore)
* Do a custom <Link> component, that checks the last time the user has refreshed (or if new version if available). When they click the link, render a regular <a> instead of a pushstate link.
* Use a service worker. They will emit an event when a new version is available. Use the above methods to refresh the user.
* Hot code push.
    * Vuepress has ""hot reloading"" baked in.

## Links
* [https://twitter.com/wesbos/status/1306969658751361024](https://twitter.com/wesbos/status/1306969658751361024)
* [Notion](https://notion.so)
* [Vuepress](https://vuepress.vuejs.org/)
* [Meteor](https://www.meteor.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f3726a441ccf8c3ac4291c7bc08c3b6c9b3248990e554585640e5a553d4a3d35,hasty-treat-updating-restarting-long-running-web-apps,/shows/291 - restarting.md,2023-10-16 20:07:06.124,2023-10-27 15:57:55.778,TASTY
syntax_podcast_show_00292,292,How to Make Freelancing Easier,2020-10-12 13:00:00.281,https://traffic.libsyn.com/syntax/Syntax292.mp3,"
In this episode of Syntax, Scott and Wes talk about how to make freelancing easier — how to avoid burnout, and tips and tricks to make it successful. 

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

02:15 - Code
* Use starters and resets and component libraries
* Don't build in something you don't know, unless you have time and budget to do so — WP is good enough for most projects
* Feel free to go over time on projects if you are learning something new
* Re-use code from project to project
* Target similar types of clients

13:09 - Communication
* Often, clear and frequent
    * People won't be mad for being too informed — just know when to leave out the technical jargon
* Clients typically don't care about Git, React, etc. — they care about results
* Don't overwhelm them
* Train your clients that you aren't available 24/7

22:19 - Time management
* Set calendar alerts early and often to not miss communications
* Set meetings at 9am, don't wait around all day for meetings
* Block off large amounts of time for dev — you won't be able to get meaningful work done in one-hour slots

27:54 - Contracts + quoting
* Have a boilerplate contract that you can just fill in
    * Same for a quote
* Value-based billing

33:47 - Billing + taxes
* Don't be shy when talking about money. Be clear on what you need, when you need it, and on what terms. This is business.
    * This is your art, but it's also your business
* Pay quarterly taxes - most likely
    * Or don't and take the small hit — then you can pay once a year
* Put taxes into another account if you aren't good with money
* Get a billing management system or get an accountant — you need to focus on working on code
    * Wave Apps, Xero, Freshbooks

42:03 - Marketing
* Be loud — people need to know what you offer
* The best marketing is a referral from a previous client
* If you show up, return emails and do a good job, you'll kill it
* Show people what you are excited about: blog posts, videos, tweets, etc.
* Go where your clients are:
    * Do you want to be serving small businesses? Family and friends
    * Do you want to be a hired gun for a technical team? Conferences/Twitter, blog posts

48:25 - Final thoughts
* Scott — It's ok if freelancing isn't for you. Not everyone is great at all of these factors, myself included. However, with practice, you can be your own boss, work on your own terms, and make money. Also, don't be afraid to take on longer contracts with established teams and companies.
* Wes — Freelancing can be a great filler between jobs or career transitions.

## Links
* [Syntax 117: Hasty Treat - How To Email Busy People](https://syntax.fm/show/117/hasty-treat-how-to-email-busy-people)
* [Freshbooks - Breaking the Time Barrier](https://www.freshbooks.com/fbstaticprod-uploads/public-website-assets/other/Breaking-the-Time-Barrier.pdf)
* [Design Is a Job - Mike Monteiro](https://abookapart.com/products/design-is-a-job)
* [Wave](https://www.waveapps.com/)
* [Xero](https://www.xero.com/)
* [Freshbooks](https://www.freshbooks.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Displaced Gamers YouTube Channel](https://www.youtube.com/c/DisplacedGamers)
* Wes: [Battery Adapter for DeWALT 20V Max 18v Dock Power Connector](https://www.amazon.com/battery-adapter-DeWALT-connector-robotics/dp/B07HKGM78H) 

## Shameless Plugs
* Scott: [React For Everyone](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",3714955650b0b40d8a069dfd93fa534cb26bdd8d4b080073f7f6fe869d62252a,how-to-make-freelancing-easier,/shows/292 - freelancing.md,2023-10-16 20:07:06.162,2023-10-27 15:57:55.824,HASTY
syntax_podcast_show_00293,293,Hasty Treat - Stretching For Developers with Scott,2020-10-19 13:00:00.482,https://traffic.libsyn.com/syntax/Syntax293.mp3,"
In this Hasty Treat, Scott and Wes talk about stretching for developers — techniques, misconceptions, and how to feel better. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

03:21 - Devs do the following
* Head forward looking at screen
* Shoulders forward
* Sitting a lot
* Weak core
* Carpel tunnel from typing

06:02 - Stretching misconceptions
* Static holds
* Dynamic controlled movements first and foremost

07:52 - Stretches to help
* Dynamic twists
* Cat / Cow
* Flat down / Curl up spine
* Arm hang to decompress spine
* Wrist stretches and strengthening for carpel tunnel
* Horse stance at standing desk to be office weird person
* Shoulder circles
* Doorway stretches

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b2991d1a0f3fb527698154ed91edb19e8c7da177a110565e4e832691ebf20c07,hasty-treat-stretching-for-developers-with-scott,/shows/293 - stretching.md,2023-10-16 20:07:06.200,2023-10-27 15:57:55.868,HASTY
syntax_podcast_show_00294,294,Spooky Web Dev Stories — Part 1,2020-10-21 13:00:00.659,https://traffic.libsyn.com/syntax/Syntax294.mp3,"
In this episode of Syntax, Scott and Wes talk about spooky web dev stories — listener-submitted stories about web dev gone wrong.

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

03:12 - The Most Expensive Boolean Ever

06:19 - An Actual Logging Issue

09:37 - Snitches Get Stitches

10:41 - The Spooky Office Skeleton

12:04 - Prevent the Default of Making Money

13:52 - Computer Magic Trick

14:42 - Update Score

15:59 - Change Reaction

19:30 - Personal Mongodb

20:26 - Hello Rob!

22:08 - SSN Regex

23:06 - WordPress Plugins

23:52 - Loggin Ya In, Ya F'in Dummy

24:58 - A Hostel Coding Environment

25:59 - A Graceful Exit

27:27 - Favicon DDOS

28:07 - Common Cents

29:03 - Open Source Vendors

33:04 - Don't Leave the Country

35:09 - Apostrophe Catastrophe

35:43 - Env

36:05 - A Christmas Miracle

36:43 - The One Million Dollar Bill

39:00 - The Hacker Who Dropped the DB

40:19 - The Tech Lead Who Uses Alert Statements

46:14 - Lorem Ipsum

46:58 - Malicious Compliance

## Links
* [Indigo.ca](https://t.co/8oXjfTcJa7)
* [r/MaliciousCompliance](https://www.reddit.com/r/MaliciousCompliance/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Hades Game](https://www.supergiantgames.com/games/hades/)
* Wes:
  * [LED Flame Bulb](https://amzn.to/2IjBVE6)
  * [Smaller LED Flame Bulbs](https://amzn.to/2STm558) 

## Shameless Plugs
* Scott: [Animating Svelte](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby](https://mastergatsby.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",0144b66926454a652b73343166e33636096ec885df4cc99063b49cb8388b1d3c,spooky-web-dev-stories-part-1,/shows/294 - spooky.md,2023-10-16 20:07:06.239,2023-10-27 15:57:55.907,TASTY
syntax_podcast_show_00295,295,Hasty Treat - Temporal Date Objects in JavaScript,2020-10-26 13:00:00.713,https://traffic.libsyn.com/syntax/Syntax295.mp3,"
In this Hasty Treat, Scott and Wes talk about Temporal Date Objects in JavaScript — a WICKED AWESOME API for working with times and dates.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

05:11 - Temporal Now
* You can get now
  * `Temporal.now.___`

07:58 - Temporal Instants
* A `Temporal.Instant` represents a fixed point in time, without regard to calendar or location.
  * Most common way to show it is nanoseconds since unix epoch.
  * Can be formatted a few different ways.

09:59 - Calendar
* Support for different types of calendars

11:43 - Durations
* Temporal.Duration
  * There are .from and .add and subtract() methods

12:47 - Other interesting parts
* Timezones
  * Temporal.ZonedDateTime
* Temporal.YearMonth - represents a ym = new Temporal.YearMonth(2019, 6) // => 2019-06

14:51 - Polyfill (unstable)

## Links
* [Fixing JavaScrip Date - Maggie Pint](https://maggiepint.com/2017/04/09/fixing-javascript-date-getting-started/)
* [https://github.com/tc39/proposal-temporal](https://github.com/tc39/proposal-temporal)
* [https://github.com/tc39/proposal-temporal/blob/main/docs/calendar.md#methods](https://github.com/tc39/proposal-temporal/blob/main/docs/calendar.md#methods)
* [https://github.com/tc39/proposal-temporal/blob/main/docs/duration.md](https://github.com/tc39/proposal-temporal/blob/main/docs/duration.md)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e96733db1102d485698c71317bf271717a77ccfdd6e370275e8ea9e2791c07b5,hasty-treat-temporal-date-objects-in-javascript,/shows/295 - temporary date.md,2023-10-16 20:07:06.291,2023-10-27 15:57:55.951,HASTY
syntax_podcast_show_00296,296,Spooky Web Dev Stories — Part 2,2020-10-28 13:00:00.713,https://traffic.libsyn.com/syntax/Syntax296.mp3,"
In this episode of Syntax, Scott and Wes are back for another episode of spooky web dev stories — listener-submitted stories about web dev gone wrong.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

03:28 - Jack Rhysider Story

06:28 - Dirty Dicks JSON

08:23 - CMS Disaster

10:58 - Oh No Hotel

11:19 - FTP

12:19 - Push Notification Hell

13:16 - DVD Nightmare

15:15 - Bad Words Again

16:23 - Mo Money

17:01 - Bass Ackwards

18:17 - Taxi Coding

19:36 - Bad Env

21:30 - Login As

21:50 - Email Subscribers Plugin

22:33 - 1 in 300 Chance of the C-Word

24:24 - Production Target

26:12 - A Happy SEO Ending

28:26 - Just Oof

29:48 - I've Fallen and I Can't Get Up

30:54 - Crypto

32:34 - rm -rf

33:42 - Never Deploy on Fridays

35:31 - Million Dollar Scramble

36:22 - Deleting Production

37:11 - 500,000 Concurrent Problems

39:14 - Deleting a Government Website

40:36 - You Ruined the Surprise!

45:23 - Mr. D Hole

46:48 - One Expensive Race Condition

48:43 - Yikes

51:11 - Always Be Closing

51:44 - Adidas - All Day I Delete A Site

## Links
* [@JackRhysider](https://twitter.com/JackRhysider)
* [Darknet Diaries Podcast](https://darknetdiaries.com/)
* [ExpressionEngine](https://expressionengine.com/)
* [#ghosts](https://twitter.com/search?q=%23ghosts)
* [chefkoch.de](http://chefkoch.de/)
* [Sendgrid](https://sendgrid.com/)
* [Magento](https://magento.com/)
* [Evite](https://www.evite.com/)


## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Fastify](https://www.fastify.io/)
* Wes:
  * [🇨🇦 Mr Chefer Meat Thermometer](https://amzn.to/3kgQLt6)
  * [🇺🇸 Mr Chefer Meat Thermometer](https://amzn.to/3j9NURD)

## Shameless Plugs
* Scott: [Level Up Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",59ee116800b533461e85eea7e72bbeff5a056f74f2722723c72e3850dcccecb6,spooky-web-dev-stories-part-2,/shows/296 - spooky.md,2023-10-16 20:07:06.350,2023-10-27 15:57:55.990,TASTY
syntax_podcast_show_00297,297,Hasty Treat - Certifications? Government Specified JavaScript Skills?,2020-11-02 14:00:00.713,https://traffic.libsyn.com/syntax/Syntax297.mp3,"
In this Hasty Treat, Scott and Wes talk about web dev certifications — are they worth it, or a waste of time?

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

02:12 - Certifications

05:30 - We have standards, and people move faster than standards.
* jQuery moved faster than vanilla JS
* Typescript is sometimes preferred over regular JS
* We have universities that offer web developer certs and many of them are a joke
* The point is that programming is the wild west — it's far too broad and moves far too fast for us to try and fit it in a box

10:28 - Do certifications mean anything?

14:30 - How do you know if you have enough skills (when you're job hunting)?

19:04 - Some jobs do require a certification
* AWS
* Google

## Links
* [https://openjsf.org/certification/](https://openjsf.org/certification/)
* [https://www.sentiatechblog.com/imposter-syndrome-how-to-display-front-end](https://www.sentiatechblog.com/imposter-syndrome-how-to-display-front-end)
* [https://twitter.com/wesbos/status/1318192217824124928](https://twitter.com/wesbos/status/1318192217824124928)
* [https://twitter.com/photonstorm/status/1318193404312944641](https://twitter.com/photonstorm/status/1318193404312944641)
* [https://twitter.com/Ky1e_S/status/1318193954085634048](https://twitter.com/Ky1e_S/status/1318193954085634048)
* [https://twitter.com/ArleyM/status/1318194323821912067](https://twitter.com/ArleyM/status/1318194323821912067)
* [https://twitter.com/ajitbohra/status/1318194600335470592](https://twitter.com/ajitbohra/status/1318194600335470592)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",39c5cf8658a420944fc811382fc027b80caf3cce729a25c5f0e05c4517148411,hasty-treat-certifications-government-specified-javascript-skills,/shows/297 - certifications.md,2023-10-16 20:07:06.421,2023-10-27 15:57:56.037,HASTY
syntax_podcast_show_00298,298,Voice Coding is Really Good with Josh Comeau,2020-11-04 14:00:00.713,https://traffic.libsyn.com/syntax/Syntax298.mp3,"
In this episode of Syntax, Scott and Wes talk with Josh Comeau about coding with your voice, accessibility, bootcamps, animation, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Guests
* [Josh Comeau](https://twitter.com/joshwcomeau)

## Show Notes
01:48 - What is your background?

04:33 - Coding with your voice

08:32 - How do you code for a living if you can only do it for a few minutes a day?

21:56 - How has it impacted your productivity?

22:46 - Is it easier with a typed language like Typescript?

26:05 - What about accessibility?

27:14 - How good is the eye tracker?

29:30 - What got you into animation?

35:29 - Favorite app for animations?

40:12 - Being a teacher

41:44 - Is it worth going to a bootcamp?

44:57 - Interactivity in teaching

## Links
* [joshwcomeau.com](https://joshwcomeau.com/)
* [@concordia_btcmp](https://twitter.com/concordia_btcmp)
* [@gatsbyjs](https://twitter.com/gatsbyjs)
* [@khanacademy](https://twitter.com/khanacademy)
* [@unsplash](https://twitter.com/unsplash)
* [Talon](https://talonvoice.com/)
* [Using Python to Code by Voice](https://www.youtube.com/watch?v=8SkdfdXWYaI)
* [Neuralink](https://neuralink.com/)
* [Tobii 5](https://us.tobiidynavox.com/pages/communicator-5-ap)
* [Moleskine Apps](https://us.moleskine.com/moleskine-/apps/0302-2)
* [VLC](https://www.videolan.org/index.html)
* [VSCode](https://code.visualstudio.com/)
* [freeCodeCamp](https://www.freecodecamp.org/)
* [Syntax 246: Bootcamps, Getting a Job, and Income Share Agreements with Heather Payne](https://syntax.fm/show/246/bootcamps-getting-a-job-and-income-share-agreements-with-heather-payne)
* [https://joshwcomeau.com/css/full-bleed/](https://joshwcomeau.com/css/full-bleed/)
* [Nintendo Switch](https://www.nintendo.com/switch/)
* [Navigator.vibrate](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/vibrate)
* [Voice Driven Development](https://www.youtube.com/watch?v=YKuRkGkf5HU)

## ××× SIIIIICK ××× PIIIICKS ×××
* Josh: [The Utterly Uninteresting and Unadventurous Tales of Fred, the Vampire Accountant](https://www.amazon.com/Utterly-Uninteresting-Unadventurous-Vampire-Accountant/dp/B00TIXW5AI/)
* Scott: [The Neighborhood Listen](https://www.earwolf.com/show/the-neighborhood-listen/)
* Wes: [Every Tool's a Hammer by Adam Savage](https://www.amazon.com/Every-Tools-Hammer-Adam-Savage-audiobook/dp/B07L3BRW4T/)

## Shameless Plugs
* Josh: [CSS for Javascript Developers | An online course that teaches the fundamentals of CSS for React/Vue devs](https://css-for-js.com/)
* Scott: [Animating Svelte](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Master Gatsby](https://mastergatsby.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",058cabf6af58d57b435c91f869151cd54f6e8eee60bac74ff4707e81ccb75bf2,voice-coding-is-really-good-with-josh-comeau,/shows/298 - voice coding.md,2023-10-16 20:07:06.491,2023-10-27 15:57:56.077,TASTY
syntax_podcast_show_00299,299,Hasty Treat - Bundlers in 2020,2020-11-09 14:00:00.984,https://traffic.libsyn.com/syntax/Syntax299.mp3,"
In this Hasty Treat, Scott and Wes talk about the state of bundlers in 2020 — Rome, Snowpack, Parcel, Webpack, Rollup, Vite, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

02:39 - What is a bundler?
* On the one hand, you can write HTML, CSS and JavaScript and open it in the browser
* On the other hand, your build could be super complex

03:24 - What goes into configuring a bundler?
* Templating language you use (Jsx, Pug, Vue, etc.)
* JavaScript you write and compile to:
    * ES6/7/8/9
    * Typescript
    * CoffeeScript
* Polyfills
* Environmental variables
* CSS loading
* Image compression
* Asset Chunking
* Tree shaking

05:12 - [Webpack](https://webpack.js.org/)
* Hardest to learn, most used currently

07:38 - [Rollup](https://rollupjs.org/guide/en/)
* Scott's pick as best option for most features vs ease of use
* Very powerful
* Mmmr, tree shaking, plugins, esm

09:52 - [Parcel](https://parceljs.org/)
* Scott's simplicity winner pick
* Easiest to get started with
* It's a bundler, but also a dev tool
    * Hot reload
    * Local server
* Config is done via your package.json
* Lots of plugins available 

12:01 - [Npm](https://www.npmjs.com/), [Yarn and Yarn 2](https://yarnpkg.com/)
* It's a dependency installer rather than a bundler

13:27 - [Snowpack](https://www.snowpack.dev/)
* Scott's speed pick of the week
* Uses ESM by default
* Like Sonic after a triple shot of espresso
* HRM
* Perfect for dev builds, as well as production builds

15:51 - [Isobuild / Meteor](https://www.meteor.com/)
* Scott's underdog pick of the litter

16:48 - [Rome](https://rome.tools/)
* Scott's mystery pick of the week
* New tool to do it all
* Bundler, but also a linter

17:54 - [Deno](https://deno.land/)
* Linter
* Typescript formatter
* Bundler (bundle into a single .js file)

20:44 - Let your tool take care of it
* [Gatsby](https://www.gatsbyjs.com/) (webpack)
* [Next.js](https://nextjs.org/) (webpack)
* [Gridsome](https://gridsome.org/)
* [Create React App](https://reactjs.org/docs/create-a-new-react-app.html)
* [Vite](https://github.com/vitejs) (Rollup)
* [Broccoli.js](https://broccoli.build/)

## Links
* [Babel](https://babeljs.io/)
* [Gulp](https://gulpjs.com/)
* [Syntax 212: Pika Pkg](https://syntax.fm/show/212/pika-pkg)
* [Fred Schott](https://twitter.com/FredKSchott)
* [Pika](https://www.pika.dev/)
* [Rust](https://www.rust-lang.org/)
* [Go](https://golang.org/)
* [Software Engineering Daily: Deno and TypeScript with Elio Rivero](https://softwareengineeringdaily.com/2020/09/28/deno-and-typescript-with-elio-rivero/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",31ff15180938178f7a0c1266b314b15646deef43b7fb962d86302a7df6e3d00c,hasty-treat-bundlers-in-2020,/shows/299 - bundlers.md,2023-10-16 20:07:06.626,2023-10-27 15:57:56.192,HASTY
syntax_podcast_show_00300,300,300th LIVE SHOW SPECTACULAR!,2020-11-11 14:00:00.460,https://traffic.libsyn.com/syntax/Syntax300.mp3,"
It's the 300th episode of Syntax! To celebrate, Scott and Wes do a special live call-in episode with Syntax listeners.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

03:30 - How is this going to work?
* Ask a Potluck Question
* Do a Sick Pick
* Take on a Stump'd Question
* Do a Shameless Plug

04:45 - [Brad Garropy](https://twitter.com/bradgarropy)
* [https://bradgarropy.com](https://bradgarropy.com)
* Potluck Question: Are GraphQL Playgrounds in production considered insecure due to introspection?
* Sick Pick: [5.11 TacTec Plate Carrier](https://roguefitness.com/5-11-tactical-vests)
* Shameless Plug: [MURPHY](https://play.google.com/store/apps/details?id=com.bradgarropy.murphy.twa)

11:54 - Brittney
* Shameless Plug: [ZTM Academy](https://academy.zerotomastery.io/?affcode=441520_gjue7n-1)
* [Andrei Neagoie](https://zerotomastery.io/about/instructor/andrei-neagoie/)
* [@brittneypostma](https://twitter.com/BrittneyPostma)

16:43 - Jesse
* Stump'd Question: What are portals in React?
* Shameless Plug: [codeSTACKr YouTube Channel](https://www.youtube.com/codestackr)
* Shameless Plug: [VS Code Hero Course](https://vscodehero.com/) - Use coupon code ""Syntax"" for discount

23:44 - Henri
* Shameless Plug: [https://twitter.com/HenriHelvetica](https://twitter.com/HenriHelvetica)
* Shameless Plug: [JamstackTORONTO](https://twitter.com/JAMstackTORONTO)

31:27 - Jason
* Stump'd Question: What does ""use strict"" do and what are the benefits?

36:48 - Spence
* [mdx-embed](https://www.mdx-embed.com/)
* [https://github.com/PaulieScanlon/mdx-embed](https://github.com/PaulieScanlon/mdx-embed)

41:33 - James
* Potluck Question: How do you keep people engaged in a workshop?
* Stump'd Question: What is the difference between the postfix i++ and the prefix ++i increment operators?
* Shameless Plug: [YouTube for Developers](https://www.youtubefordevelopers.com/)
* Shameless Plug: [James Q Quick YouTube Channel](https://www.youtube.com/jamesqquick)

54:24 - Austin
* Potluck Question: Problems with ESLint, Prettier and VS Code playing nicely together
* Shameless Plug: [https://erickka.art/](https://erickka.art/)

66:21 - Dave
* Sick Pick: [mmhmm](https://www.mmhmm.app/)
* Stump'd Question: What is the difference between the + and ~ sibling selectors in CSS?

78:56 - Gareth
* Potluck Question: What do you think about the future of mobile development vs traditional mobile app development?
* Sick Pick: [https://darkreader.org/](https://darkreader.org/)
* Shameless Plug: [Level Up Tutorials Discord](https://discord.com/invite/ccMC6kB)

89:51 - Ackzell and Lewis
* Ackzell:
  * Sick Pick: [JSConf Mexico](https://jsconf.mx/)
  * Shameless Plug: [Ackzell YouTube Channel](https://www.youtube.com/ackzell)
* Lewis:
  * Potluck Question: What is your daily routine like, and you do you decide to prioritize projects?

## Links
* [What Syntax 300 live on Twitch](https://www.twitch.tv/videos/786606195)
* [Discord](https://discord.com/)
* [Mux](https://mux.com/)
* [React HLS Player](https://www.npmjs.com/package/react-hls-player)
* [https://30secondsofinterviews.org/](https://30secondsofinterviews.org/)
* [https://dev.to/bdesigned/vscode-setup-with-eslint-and-prettier-1gek](https://dev.to/bdesigned/vscode-setup-with-eslint-and-prettier-1gek)
* [https://madewithsvelte.com/mdsvex](https://madewithsvelte.com/mdsvex)
* [OBS](https://obsproject.com/)
* [Streamlabs](https://streamlabs.com/)
* [ESLint](https://eslint.org/)
* [Prettier](https://prettier.io/)
* [Missive](https://missiveapp.com/)

## Shameless Plugs
* Scott: [Level Up Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9833f5c3762cd829f46adb052dfe471dbea18adc3b3cd4e9c48d318d4946febd,300th-live-show-spectacular,/shows/300.md,2023-10-16 20:07:06.669,2023-10-27 15:57:56.235,TASTY
syntax_podcast_show_00301,301,Hasty Treat - CSS Grid Masonry (Grid Level 3),2020-11-16 14:00:00.919,https://traffic.libsyn.com/syntax/Syntax301.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS Grid Level 3 — why it's such a cool thing and why they've been waiting for it for so long.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

04:33 - The spec
* [https://drafts.csswg.org/css-grid-3/](https://drafts.csswg.org/css-grid-3/)
* [https://twitter.com/wesbos/status/1320735900343668738](https://twitter.com/wesbos/status/1320735900343668738)

06:10 - How it works
* `masonry-auto-flow: next;`
  1. It first puts all the items that are explicitly placed onto the grid. Items that you have a set start/stop value for are first put down.
  2. Then it takes the next item that it to be placed and finds a spot for it. This is different because with CSS Grid you normally have to place the next item on the next row or column.
  3. `grid-template-columns` and `grid-template-rows` can now be marked as masonry and this specifies which axis will be masonry.

09:06 - The implicit grid
* [https://drafts.csswg.org/css-grid-3/#%23implicit-grid](https://drafts.csswg.org/css-grid-3/#%23implicit-grid)
* The implicit grid is formed in the same way as a regular grid container. However, it’s only used in the grid axis.
* Interesting in a column situation (see images).

13:25 - Thoughts
* Power tools for layout in CSS — opens up a ton of possibilities and completes the functionality we use to dream of in CSS.

## Links
* [David DeSandro](https://desandro.com/)
* [https://metafizzy.co/](https://metafizzy.co/)
* [Chris Coyier](https://chriscoyier.net/)
* [https://caniuse.com/](https://caniuse.com/)
* [Isotope](https://isotope.metafizzy.co/)
* [Flickity](https://flickity.metafizzy.co/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6540accaa3808f185e77291532638460856518cf4fbe103070d1252fff0546bc,hasty-treat-css-grid-masonry-grid-level-3,/shows/301 - css grid.md,2023-10-16 20:07:06.727,2023-10-27 15:57:56.284,HASTY
syntax_podcast_show_00302,302,How to Run a Conference with Benjamin Dunphy,2020-11-18 14:00:00.919,https://traffic.libsyn.com/syntax/Syntax302.mp3,"
In this episode of Syntax, Scott and Wes talk with Benjamin Dunphy about running conferences — what to do, what not to do, and what makes a good online conference in a post-Covid world!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Guests
* [Benjamin Dunphy](https://twitter.com/benghamine)

## Show Notes
03:48 - How do you get started running a conference?

10:05 - Which conferences have you run?

18:05 - How do you get speakers?

23:21 - What about paying speakers?

28:26 - Speaker goody bags?

32:40 - You started your own catering company?

35:32 - How has Coronavirus affected the conference space?

43:06 - Should online conferences try to replicate live conferences?

## Links
* [Reactathon](https://twitter.com/reactathon)
* [Jamstackconf](https://twitter.com/jamstackconf)
* [Epicodus](https://www.epicodus.com/)
* [Meetup](https://www.meetup.com/)
* [Flutter](https://flutter.dev/)
* [Lifted Plate](https://www.liftedplate.com/)
* [DevRelCon](https://sf2019.devrel.net/)
* [EventLoop](https://www.eventloop.app/)
* [Modern Web Summit](https://modernwebsummit.com/)
* [@Swizec](https://twitter.com/swizec)
* [Sanity Review Changes](https://www.sanity.io/blog/review-changes) 
* [@tylermcginnis](https://twitter.com/tylermcginnis)
* [Syntax 250: Scott Teaches Wes Svelte and Sapper](https://syntax.fm/show/250/scott-teaches-wes-svelte-and-sapper)

## ××× SIIIIICK ××× PIIIICKS ×××
* Ben: [Serverless Handbook for Frontend Engineers](https://serverlesshandbook.dev/)
* Scott: [Tineco Pure One S12](https://amzn.to/2IHWydn)
* Wes: [Chromecast](https://store.google.com/us/product/chromecast)

## Shameless Plugs
* Ben:
  * [EventLoop](https://www.eventloop.app/)
  * [Modern Web Summit](https://modernwebsummit.com/)
* Scott: [Animating Svelte](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0a5b29c3478c4f24d37bf59698808646dae4ff931b07bb96e97ed7a5c05671d2,how-to-run-a-conference-with-benjamin-dunphy,/shows/302 - conferences.md,2023-10-16 20:07:06.793,2023-10-27 15:57:56.343,TASTY
syntax_podcast_show_00303,303,Hasty Treat - Client vs Server Data Validation,2020-11-23 14:00:00.666,https://traffic.libsyn.com/syntax/Syntax303.mp3,"
In this Hasty Treat, Scott and Wes talk about client- and server-side validation, and what each is used for!

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Show Notes

02:49 - Wes' story

06:28 - What is the role of client-side validation?
* Help the user input the correct data as they type it.
* Show correct data in UI.
* Show correct UI.
* Just about all of these things are for the user's benefit, and how they feel when using the site.

11:10 - What is the role of server-side validation?
* Validate that all the data is correct before it's saved to the database
* Security first and foremost

15:03 - What process should a store follow to validate on the server?
1. Check that correct types are coming in. Very easy with Graphql.
2. Get current stock and price information from unique ids from the database.
3. Confirm that this information is what the user is expecting — if the UI said the user will be charged $40, don't charge them $50 just because of the updated info. In that case, send back to the user.

17:17 - What do you do if you don't want people messing with your React state?
* `@fvilers/disable-react-devtools`
* `if (process.env.NODE_ENV === 'production') disableReactDevTools()`
* We do this on LUT. Why? Because it's a deterrent.

## Links
* [uses.tech](https://uses.tech/)
* [Flipp App](https://flipp.com/home)
* [GraphQL](https://graphql.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ccc372e20a601c60bcee75a0b9e0f8dd7d007cceebcdf5caea9036737166d6a9,hasty-treat-client-vs-server-data-validation,/shows/303 - validation.md,2023-10-16 20:07:06.916,2023-10-27 15:57:56.434,HASTY
syntax_podcast_show_00304,304,Potluck - Frameworks vs Libraries × Debugging × CSS Modules vs Styled Components × Resumes × Stress Management × More!,2020-11-25 14:00:00.666,https://traffic.libsyn.com/syntax/Syntax304.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about frameworks vs libraries, improving your debugging skills, building a component library, CSS modules vs styled components, writing a good resume, stress management, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes
01:27 - How do you implement WebRTC? Please tell us more about online streaming, screen sharing, data flow. 

03:20 - Which JS library/framework do you think beginners might find the easiest to understand?

05:06 - How do you deal with different case types between different systems in your project? For example, I store records in a Postgres database which typically uses snake_case and then I render them with React, where props are typically camelCase. Is it better to convert the cases back and forth between frontend and backend or just pick one case and use it everywhere?	

09:23 - My question is about the difference between a framework and a library. Should we have two separate words?

12:39 - How can I work on improving both my generic problem-solving skills and my debugging skills? I feel like there have got to be some more proactive things I can do to improve in these areas.

17:22 - I just listened to your podcast on making freelancing easier and enjoyed it. You talk about making your own component library. Do you have tips on how to store and manage a component library?

21:39 - What projects do you use Rust for, and do you have any ideas where Rust might be the thing to do when talking web projects?

29:10 - I've recently joined a great-paying full-time gig at a big enterprise-level company as a Senior Javascript Engineer (React, Node, etc). I'm humbled to be here - but at times the pace is slow, tickets are scarce, and I feel like I'm not able to really utilize or hone my skillset. I've been looking at potentially moving into contracting/agency work - the money seems comparable with the added benefit of new and exciting projects and having more control over them. Do you think contract work would be more fulfilling, or is crazy to leave a cushy job solely because I'm in a sense, bored?

35:26 - I'm currently working on a Next.js project and trying to decide which CSS system to use. What is your take on CSS modules? I know you like styled components a lot, but since there is built-in support for CSS modules with scoped CSS, I find it hard to motivate bringing in styled components. Am I missing something?

38:15 - Regarding Episode 290, you fielded a question regarding Angular and I appreciated your balanced response since I'm primarily an Angular developer at my job. If you could, would you please update the link to the Angular website to point to [Angular.io](http://angular.io/) (v10) instead of the AngularJS (v1) website?

40:43 - I really need advice on how to write a good resume, or any tips you may have for getting noticed in the hiring process with only a couple years of experience. I have been applying to many jobs as a front-end developer but I seem to get no response EVER.

45:17 - How do I dynamically assign subdomain/wildcard/slug dynamically during signup process with React and Node? (Like the way Freshbooks does — i.e tenant1.domain.com, tenant2.domain.com, etc.)

48:44 - Wes, I've been taking your Mastering Gatsby course, and I'm loving the course so far. My only complaint would be I wish you added a module for CSS. I think it's just because I personally struggle with styling websites. Do either of you have any suggestions on how I can improve in that aspect of web dev?

50:35 - For web developers just starting out in freelancing/building e-commerce sites — from a business perspective, do you recommend we first 1) just code and worry about business stuff later? or 2) go through the government paperwork and be a sole proprietorship? or 3) incorporate (though this costs more)?

54:20 - What's your approach for handling padding + margin with components?

57:43 - How do you back up sensitive files that do NOT get added to source control (env files, for example)? I have off-site computer backups, and I have .env files on a small thumb drive on my keychain. What do you do?

59:56 - Do you guys have stress management techniques? How do you cope with stressful situations at work, like unexpected tight deadlines?

## Links
* [Syntax 002: Webcam and audio access with WebRTC and getUserMedia()](https://syntax.fm/show/002/webcam-and-audio-access-with-webrtc-and-getusermedia)
* [Syntax 256: WebRTC and Peer-to-Peer Video Calling with Ian Ramzy](https://syntax.fm/show/256/webrtc-and-peer-to-peer-video-calling-with-ian-ramzy)
* [Daily.co](http://daily.co) 
* [Twilio](https://www.twilio.com/)
* [Svelte](https://svelte.dev/)
* [https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case](https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case)
* [Master Gatsby](https://mastergatsby.com/)
* [Syntax 292: How to Make Freelancing Easier](https://syntax.fm/show/292/how-to-make-freelancing-easier)
* [https://github.com/formium/tsdx](https://github.com/formium/tsdx)
* [https://nx.dev/react](https://nx.dev/react)
* [https://github.com/lerna/lerna](https://github.com/lerna/lerna)
* [https://www.npmjs.com/package/babel-plugin-module-resolver](https://www.npmjs.com/package/babel-plugin-module-resolver)
* [https://storybook.js.org/](https://storybook.js.org/)
* [Deno](https://deno.land/)
* [Rust](https://www.rust-lang.org/)
* [wasm-pack](https://rustwasm.github.io/wasm-pack/)
* [https://rocket.rs/](https://rocket.rs/)
* [Syntax 290: Potluck - Is Angular good? × Stencil.js × Self XSS × SVGs in React × Social Platforms for Devs × Project Handoff × Cleaning Knives × More!](https://syntax.fm/show/290/potluck-is-angular-good-stencil-js-self-xss-svgs-in-react-social-platforms-for-devs-project-handoff-cleaning-knives-more)
* [Modern CSS Layouts](https://www.leveluptutorials.com/tutorials/modern-css-layouts)
* [Modern CSS Design Systems](https://www.leveluptutorials.com/tutorials/modern-css-design-systems)
* [Digital Ocean App Platform](https://www.digitalocean.com/products/app-platform/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Eating Out Loud: Bold Middle Eastern Flavors for All Day, Every Day: A Cookbook](https://amzn.to/31JTjZQ)
* Wes: [Levi's Barstow Western Shirt](https://rstyle.me/cz-n/enxwrncdguf) 

## Shameless Plugs
* Scott: [Animating Svelte](https://www.leveluptutorials.com/pro) - Black Friday Sale: Sign up for the year and save 50%!
* Wes: [Master Gatsby](https://mastergatsby.com/) - Black Friday Sale: All courses 50% off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",23342fac07f8dcf1aa974356448c9a7adf233be70182af54640dbf35e9734b42,potluck-frameworks-vs-libraries-debugging-css-modules-vs-styled-components-resumes-stress-management-more,/shows/304 - potluck.md,2023-10-16 20:07:06.953,2023-10-27 15:57:56.485,TASTY
syntax_podcast_show_00305,305,Hasty Treat - Writing Good Commit Messages,2020-11-30 14:00:00.101,https://traffic.libsyn.com/syntax/Syntax305.mp3,"
In this Hasty Treat, Scott and Wes talk about a system for writing good commit messages.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes
03:46 - What are conventional commits?
* [https://www.conventionalcommits.org/en/v1.0.0/](https://www.conventionalcommits.org/en/v1.0.0/)

04:55 - How do you keep track of all the details?
* [https://commitizen-tools.github.io/commitizen/](https://commitizen-tools.github.io/commitizen/)
* [https://github.com/commitizen/cz-cli](https://github.com/commitizen/cz-cli)
* [https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits](https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits)

07:42 - How does it relate to SemVer?

## Links
* [https://github.com/conventional-changelog/conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)
* [https://github.com/netflix/unleash](https://github.com/netflix/unleash)
* [Deno](https://deno.land/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ce720dac3ea5d78cb720621e5da035a6c8fff3f2e92be6dfa8fd51ed8be68564,hasty-treat-writing-good-commit-messages,/shows/305 - commits.md,2023-10-16 20:07:06.995,2023-10-27 15:57:56.552,HASTY
syntax_podcast_show_00306,306,Sickpickisode - 2020 Web Developer Gift Guide,2020-12-02 14:00:00.101,https://traffic.libsyn.com/syntax/Syntax306.mp3,"
It's an entire episode of Sick Picks! In this episode of Syntax, Scott and Wes talk about their 2020 developer gift guide!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes
03:17 - Home + Cooking
* Cold Brew Maker 
  * 1 Gal - [https://amzn.to/3pcKkKM](https://amzn.to/3pcKkKM)
  * 2 Quart - [https://amzn.to/3eIV921](https://amzn.to/3eIV921)
* Nordic Ware Half Sheet / Quarter Sheet Pans - [https://amzn.to/3pbCWit](https://amzn.to/3pbCWit)
* Precut parchment - [https://amzn.to/35dtWld](https://amzn.to/35dtWld)
* Gaffers Tape - [https://amzn.to/3lfH7aG](https://amzn.to/3lfH7aG)
* Tineco Pure S12 - [https://amzn.to/3kelPsX](https://amzn.to/3kelPsX)
* Instant Read Thermometer - [https://amzn.to/3k9VNHf](https://amzn.to/3k9VNHf)
* Tea Haus - [https://teahaus.com/](https://teahaus.com/)
* Whetstone - [https://amzn.to/32nYi2z](https://amzn.to/32nYi2z)
* Re-usable Silicone Mats - [https://amzn.to/35dtWld](https://amzn.to/35dtWld)
* Air Fryer - [https://amzn.to/38uX4X1](https://amzn.to/38uX4X1)

13:27 - Games
* [Baba Is You](https://store.steampowered.com/app/736260/Baba_Is_You/)
* [Untitled Goose Game](https://goose.game/)
* [Hades](https://www.supergiantgames.com/games/hades/)
* [Jackbox Party Pack](https://www.jackboxgames.com/party-pack/) 

17:16 - Tech
* Headphones
  * Sony WH1000XM4 - [https://amzn.to/37yb1Bm](https://amzn.to/37yb1Bm)
  * Bose QC35 - [https://amzn.to/3lrKrQp](https://amzn.to/3lrKrQp)
  * Wyze Noise-Cancelling Headphones - [https://wyze.com/wyze-headphones.html](https://wyze.com/wyze-headphones.html)
* USB-C Hub - [https://amzn.to/3keljem](https://amzn.to/3keljem)
* Black Camo Wicked Cushions - [https://amzn.to/3eGQA8q](https://amzn.to/3eGQA8q)
* Mech Keyboard - [https://www.keychron.com/products/keychron-k3-wireless-mechanical-keyboard?utm_source=navi%20to%20K3&utm_medium=navi%20bar&utm_campaign=navi%20to%20K3](https://www.keychron.com/products/keychron-k3-wireless-mechanical-keyboard?utm_source=navi%20to%20K3&utm_medium=navi%20bar&utm_campaign=navi%20to%20K3)
* Braided USB Cables
  * Lightning: [https://amzn.to/2IkqLiT](https://amzn.to/2IkqLiT)
  * USB-C:  [https://amzn.to/3lfrBeX](https://amzn.to/3lfrBeX)

25:24 - Smart Home
* Wyze Cams - [https://amzn.to/2UmPINf](https://amzn.to/2UmPINf)
* Light Switches
  * Lutron Dimmer - [https://amzn.to/2U7OBk2](https://amzn.to/2U7OBk2)
  * Leviton Dimmer: [https://amzn.to/3pbzaFZ](https://amzn.to/3pbzaFZ)
* [Google Nest Hub](https://store.google.com/us/product/google_nest_hub)

33:22 - Desk Stuff
* Fatigue Mat - [https://amzn.to/3eIXXw5](https://amzn.to/3eIXXw5)
* Rollerblade Gang Chair wheels - [https://amzn.to/3nbNLPJ](https://amzn.to/3nbNLPJ)
* MX3 Mouse - [https://amzn.to/3lg8SQn](https://amzn.to/3lg8SQn)
* Wireless Charger Pad - [https://amzn.to/36gIdNj](https://amzn.to/36gIdNj)
* Anker USB charging Hub - [https://amzn.to/3n7IGYV](https://amzn.to/3n7IGYV)

36:43 - Live Streaming / Sick WFH Setups
* Elgato Stream Deck - [https://amzn.to/35ehXnk](https://amzn.to/35ehXnk)
* Elgato Camlink - [https://amzn.to/3kih6Gl](https://amzn.to/3kih6Gl)
* Knockoff Camlink - [https://amzn.to/3eIX0Ux](https://amzn.to/3eIX0Ux)
* Husky Adjustable Desk: [https://www.homedepot.com/p/Husky-62-in-Adjustable-Height-Work-Bench-Table-HOLT62XDB12/301810799](https://www.homedepot.com/p/Husky-62-in-Adjustable-Height-Work-Bench-Table-HOLT62XDB12/301810799) 
* Neewer Dimmable Bi-Color LED Studio Key - [https://amzn.to/32rYAVX](https://amzn.to/32rYAVX)
* RGB LED - [https://amzn.to/3kg1LWZ](https://amzn.to/3kg1LWZ) 
* Vivo Pneumatic Mic Arm - [https://amzn.to/2Ube8c8](https://amzn.to/2Ube8c8)

49:07 - Fitness
* [Concept 2 Rower](https://www.roguefitness.com/black-concept-2-model-d-rower-pm5) 
* [Powerblocks](https://powerblock.com/)
* Cheap bands - [https://amzn.to/35cZ1W4](https://amzn.to/35cZ1W4)
* Kettle Bells - [https://amzn.to/3eFocnc](https://amzn.to/3eFocnc)

51:44 - Clothes
* [https://www.dvlpr.io/](https://www.dvlpr.io/)
* [Naked and Famous Super Guy Jeans](https://www.nakedandfamousdenim.com/)
* [https://huckberry.com/](https://huckberry.com/)
* [https://shop.lululemon.com/p/men-joggers/Abc-Jogger/_/prod8530240?color=29283](https://shop.lululemon.com/p/men-joggers/Abc-Jogger/_/prod8530240?color=29283)
* [Everlane Uniform Crewneck](https://www.everlane.com/)
* [Levis Denim Shirts: Barstow Western](https://www.levi.com/US/en_US/apparel/clothing/tops/barstow-western-shirt/p/658160116)
* [Fjallraven Flannels](https://fjallraven.ca/collections/flannel-shirts)

## Links
* [https://www.eufylife.com/](https://www.eufylife.com/)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bef4e648779ba0c1367e6f88c1295ec3c0367fefc601e1e0d4df2f5844aec2c2,sickpickisode-2020-web-developer-gift-guide,/shows/306 - gift guide.md,2023-10-16 20:07:07.040,2023-10-27 15:57:56.611,TASTY
syntax_podcast_show_00307,307,Hasty Treat - Why should I use React Hooks?,2020-12-07 14:00:00.135,https://traffic.libsyn.com/syntax/Syntax307.mp3,"
In this Hasty Treat, Scott and Wes talk about React Hooks and why you might want to use them instead of class components.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

03:54 - Decouple the UI from the logic
* This wasn't impossible with class-based components, but we started using HOC to do this.
* With hooks, it makes you decouple what it does and how it looks. 
* Makes things like GraphQL code gen possible
* Multiple pieces of state or functionality 
* Share commonly used functionality among projects and components

10:31 - Reduction in code
* Lifecycle methods were often redundant. useEffect offers a way to prevent the duplication that can happen with component did update and did mount. This gives you a way to say, ""Hey, run this code when these things change.""

13:30 - useEffect's dependencies
* These give you access to targeted control over side effects rather than just something changed.

14:15 - Easier to grok
* What happens? When? Where? It's mostly in the hook.

16:09 - Simplicity in usage
* Thing, updateThing is more targeted than set state
* Ref makes way more sense with useRef
  * String refs weren't great, the function ref thing was obnoxious

21:07 - Gripes about Hooks
* Naming is kind of odd
  * Vue did a better job with the names

## Links
* [https://github.com/pmndrs/jotai](https://github.com/pmndrs/jotai)
* [https://github.com/rehooks](https://github.com/rehooks)
* [https://twitter.com/youyuxi/status/1327328144525848577/photo/1](https://twitter.com/youyuxi/status/1327328144525848577/photo/1)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",1ceabcac572632acf3b402a5587f50c690dd490074719bf8928410a3a90bcad8,hasty-treat-why-should-i-use-react-hooks,/shows/307 - react hooks.md,2023-10-16 20:07:07.085,2023-10-27 15:57:56.667,HASTY
syntax_podcast_show_00308,308,Gatsby vs Next.js in 2021,2020-12-09 14:00:00.135,https://traffic.libsyn.com/syntax/Syntax308.mp3,"
In this episode of Syntax, Scott and Wes talk about Gatsby vs Next. A lot has changed in the last year — what are the differences, and do the recommendations from Syntax 120 still hold true?

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes

03:34 - Server-rendered
* Both do server rendered
* Gatsby is done at build time
* Next is done at build and on deploy

05:26 - Static generation
* getStaticProps()
* getServerSideProps()

08:25 - Re-rendering pages
* Gatsby can be re-rendered and re-deployed - any CMS lets you do this on only the pages that changed.
* Gatsby-cloud
* Next.js has the revalidate flag that will re-render when stale

18:54 - Data management
* Gatsby has a built in GraphQL API feature with
* Next.js has nothing - it's not their problem. Use Apollo, or SWR, React Query, or redux, or whatever you want.

23:16 - Client-side data
* Neither do anything, next.

26:33 - Dynamic Pages
* List of 100 shoes, each one gets a page
* List of four types of shoes: basketball, runners, casual, bowling, etc.
* List of 10 colors: each color gets its own page.
* List of 12 sizes, each size gets its own page.
* Now it gets complicated when you do this:
    * Show me basketball shoes, in red, in size 5
    * 600 pages minimum
    * What about size 6+7?
    * Then you get into having to fetch data on the client side - but all your data is in GraphQL?!
    * The queries are different!
* Gatsby will get ""Hosted GraphQL"": [https://twitter.com/kylemathews/status/1252803849775009794](https://twitter.com/kylemathews/status/1252803849775009794)

30:41 - Routing
* Neither do nested routing still
* Both do folder based wrapper

34:50 - Hosting
* Anywhere

35:54 - Images
* Compression/resize
* Lazy loading
* SVG
* Blur up
* Next 10 released first revision of Next.js image
    * It's not as good as Gatbsy-image
    * Must specify width and height, whereas gatsby has fixed and fluid
    * Compression
    * No blur up
    * Yes lazy loading
    * both don't support gifs
    * Gatbsy requires annoying GraphQL query OR another plugin like MDX to do it
        * Not for long! [https://twitter.com/ascorbic/status/1320770231657238529](https://twitter.com/ascorbic/status/1320770231657238529)
    * Next.js is just `<image src=""""`
    * Next does remote images
    * Neither have quality or format auto like Cloudinary does
    * Gatsby images have to be compressed at build time
    * Next.js can do it on the fly
        * assuming your server has the right tooling installed
* The GOLD STANDARD - [https://gridsome.org/docs/images/](https://gridsome.org/docs/images/)
    * Lib authors need to give this a look
* [https://twitter.com/mxstbr/status/1323279745275101184](https://twitter.com/mxstbr/status/1323279745275101184)
* [https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-image](https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-image)

46:20 - Server or Serverless
* Gatsby - none. You can do it with Netlify, Begin, AWS, Gatsby doesn't care.
* Next.js - can do server with API routes. Can do serverless if you host on Vercel.

49:44 - SEO
* Tags
    * Gatsby - Helmet
    * Next - Head
* Sitemap
    * Plugin for both

49:55 - Plugin Ecosystem
* Gatsby has lots of plugins that you install
* Next.js has some too. Seems Gatsby is easier in this regard because plugins can manage and normalize data into the GRaphQL Layer.

53:10 - Auth
* Neither do auth
* The first to do baked-in auth solution could get big gains.
* See Scott's Svelte Meteor accounts set up. It good. [https://github.com/leveluptuts/svelte-accounts-ui](https://github.com/leveluptuts/svelte-accounts-ui)

55:00 - E-commerce
* Gatsby - options are mostly limited to Snipcart and Shopify like iframe drop in solutions where the majority of operations take place on another site and service.
* Next.js - hey released a starter boilerplate that leans on an existing headless cart
* [https://rainierwatch.com/](https://rainierwatch.com/)

## Links
* [Syntax 120: Gatsby vs Next](https://syntax.fm/show/120/gatsby-vs-next)
* [Gatsby](https://www.gatsbyjs.org/)
* [Next.js](https://nextjs.org/)
* [Svelte](https://svelte.dev/)
* [Meteor](https://www.meteor.com/)
* [Vercel](https://vercel.com/)
* [GraphQL](https://graphql.org/)
* [https://www.swyx.io/react-sfcs-here/](https://www.swyx.io/react-sfcs-here/)
* [React Query](https://react-query.tanstack.com/)
* [SWR](https://swr.vercel.app/)
* [React Router](https://reactrouter.com/)
* [gatsby-image](https://www.gatsbyjs.com/plugins/gatsby-image/)
* [Cloudinary](https://cloudinary.com/)
* [imgIX](https://www.imgix.com/)
* [Begin](https://begin.com/)
* [Netlify](https://www.netlify.com/)
* [https://reactioncommerce.com/](https://reactioncommerce.com/)
* [Shopify](https://www.shopify.com/)
* [SnipCart](https://snipcart.com/)
* [WooCommerce](https://woocommerce.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Cobra Drain Zip It](https://amzn.to/2TOqDdw)
* Wes: Deli Containers:
    * [Mixed Boys](https://amzn.to/3kSQmxh) 
    * [Small Boys](https://amzn.to/3kUC53h)
    * [Medium Boys](https://amzn.to/3evBh2F) 
    * [Large Boys](https://amzn.to/2JypwNv)

## Shameless Plugs
* Scott: [Animating Svelte](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React Course](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7b292eb00bf2ec9692b429430bc57d5ebfcf4d6029d56a6926886ff0f53c4e08,gatsby-vs-next-js-in-2021,/shows/308 - gatsby.md,2023-10-16 20:07:07.139,2023-10-27 15:57:56.724,TASTY
syntax_podcast_show_00309,309,Hasty Treat - 300th Episode Tech Chat,2020-12-14 14:00:00.805,https://traffic.libsyn.com/syntax/Syntax309.mp3,"
In this Hasty Treat, Scott and Wes talk about their 300th episode and the tech behind it.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
02:15 - The things we tried
* Zoom Breakout rooms
* Hopin - $$$ 
* Streamyard 

04:24 - What we used
* Discord
  * Room as a waiting room
  * Roles to give access
  * An a/v room where Wes and Scott were hanging
  * Lots of questions about Slack vs Discord
* OBS
  * ObS to stream to three locations
  * ObS Streamlabs does this easily
  * Screen capture did a better job than using the video source from Discord
* Youtube, Youtube, and MUX
  * Streamlabs can stream to 4 sources at once
  * MUX
* How we got [Syntax.fm/live](http://syntax.fm/live) to work
  * Create a new live stream on Mux via their UI
  * Get stream address and key
  * Point Streamlabs to it
  * HLS m3u8 address from Mux into a HLS react player
* Looping intro video
  * Principle for mac
  * Watch how I did it on youtube - [https://www.youtube.com/watch?v=I6pSlESq_bY](https://www.youtube.com/watch?v=I6pSlESq_bY)
  * Music
    * Song Scott wrote
* Recording Audio
  * Wes recorded two streams locally
  * All audio on stream was piped through BlackHole on Scott's machine
  * Used Loopback to pipe Discord audio into an input
  * Scott + Guest were on the same channel, possibly compressed
  * Sounded good!

## Links
* [Zoom](https://zoom.us/)
* [Hopin](https://hopin.com/)
* [Streamyard](https://streamyard.com/)
* [Discord](https://discord.com/)
* [OBS](https://obsproject.com/)
* [MUX](https://mux.com/)
* [Slack](https://slack.com/)
* [Spectrum](https://spectrum.chat/)
* [Streamlabs](https://streamlabs.com/)
* [VLC](https://www.videolan.org/vlc/)
* [Twitch](https://www.twitch.tv/)
* [react-hls-player](https://www.npmjs.com/package/react-hls-player)
* [Principal](https://principleformac.com/)
* [BlackHole](https://existential.audio/blackhole/)
* [Loopback](https://rogueamoeba.com/loopback/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",eb0f2b94a6b4a3cbcca8646bbbd8258f5402e3b0d396242d15e729645d37c9a1,hasty-treat-300th-episode-tech-chat,/shows/309 - tech chat.md,2023-10-16 20:07:07.180,2023-10-27 15:57:56.786,HASTY
syntax_podcast_show_00310,310,"Serverless, Deno and TypeScript with Brian Leroux",2020-12-16 14:00:00.805,https://traffic.libsyn.com/syntax/Syntax310.mp3,"
In this episode of Syntax, Scott and Wes talk with Brian Leroux about severless, Deno, Typescript, and more!

## Netlify - Sponsor
Netlify is the best way to deploy and host a front-end website. All the features developers need right out of the box: Global CDN, Continuous Deployment, one click HTTPS and more. Hit up [netlify.com/syntax](https://netlify.com/syntax) for more info.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Guests
* [Brian Leroux](https://twitter.com/brianleroux)

## Show Notes
02:17 - What's your background?

06:18 - What is serverless? Why is serverless so awesome?

14:07 - What changes from moving from an existing app to a new app?

16:15 - What is a cold start?

17:46 - What languages are suitable for serverless?

19:14 - What do you think about Deno?

24:23 - How does Architect work?

31:14 - What do you think about Typescript?

40:35 - Do you think websites should work without JavaScript?

44:51 - What about sharing code?

## Links
* [Begin](https://begin.com/)
* [Architect](https://arc.codes/)
* [Scott Tries Begin](https://www.youtube.com/watch?v=dpHizW9Ojsg)
* [Lambda](https://aws.amazon.com/lambda/)
* [https://alephjs.org/](https://alephjs.org/) 
* [Deno](https://deno.land/)
* [Typescript](https://www.typescriptlang.org/)
* [Digital Ocean](https://www.digitalocean.com/)
* [Azure](https://azure.microsoft.com/)
* [Remix](https://remix.run/)
* [Svelte](https://svelte.dev/)
* [Puppeteer](https://pptr.dev/)
* [Yumda](https://github.com/lambci/yumda)
* [DynamoDB](https://aws.amazon.com/dynamodb/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Brian: [Begin Fingerprinting](https://begin.com/)
* Scott: [Been Here For Too Long](https://155pod.bandcamp.com/album/been-here-for-too-long)
* Wes: [Grabber Tool](https://amzn.to/38qrnxU) 

## Shameless Plugs
* Brian: [Begin Proxy](https://docs.begin.com/en/http-functions/proxy)
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4020586d5c7d5b264457705aee4aea9485e0008e42d3c604e21f14d5fbc0a89d,serverless-deno-and-typescript-with-brian-leroux,/shows/310 - severless.md,2023-10-16 20:07:07.230,2023-10-27 15:57:56.855,TASTY
syntax_podcast_show_00311,311,Hasty Treat - How Would We Script a PS5 Buying Bot?,2020-12-21 14:00:00.870,https://traffic.libsyn.com/syntax/Syntax311.mp3,"
In this Hasty Treat, Scott and Wes talk about the PS5 bot debacle, and how they would do it differently!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:12 - Scott's strategy
* Go to Reddit and refresh until someone posts a link and then GO GO GO
* Don't buy on sites that allow simple bots to work
* TBH I don't know how to code this type of bot and would prob end up accidentally buying a ton of stuff

05:06 - Wes' strategy
* [https://mcbroken.com/](https://mcbroken.com/)

1. You need a way to find out of there is stock
    * Find out of there is an API endpoint you can hit (inspect element)
2. If there is not, you'll need to scrape the site.
3. Fetch(url). text()
4. Regex 
5. [Cheerio](https://cheerio.js.org/)
6. [Puppeteer](https://pptr.dev/) (slower, easier to run)
7. Save any data that you want in a database. Text-based database is great.
    * [Lowdb](https://www.npmjs.com/package/lowdb)
    * [SQLite](https://www.sqlite.org/index.html)
    * [DynamoDB](https://aws.amazon.com/dynamodb/) (if doing serverless)
8. Re-run the scrape every N mins
9. When there IS a match you can:
    * Send a text message - [Twilio](https://www.twilio.com/)
    * Send an email - [Postmark](https://postmarkapp.com/)
    * Try to fill out the form and submit it yourself
        * document.querySelector()

11:35 - Things that get in the way
* Blocked IP
  * Use a VPN
* Captcha or [Cloudflare](https://www.cloudflare.com/)
* Run it on your local computer
* Use Puppeteer to get all cookies and headers

## Links
* [https://twitter.com/bahamagician/status/1329430249151533066](https://twitter.com/bahamagician/status/1329430249151533066)
* [stocktrack.ca](https://stocktrack.ca/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",bdaf7137a7c3e294f53a284a999d01840a59fb7d564185631e85394fa52e4604,hasty-treat-how-would-we-script-a-ps5-buying-bot,/shows/311 - ps5.md,2023-10-16 20:07:07.357,2023-10-27 15:57:56.973,HASTY
syntax_podcast_show_00312,312,Potluck — New Macs × Podcast Statistics × E-commerce Testing × WordPress × Charging More × Learning Web Dev × More!,2020-12-23 14:00:00.434,https://traffic.libsyn.com/syntax/Syntax312.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about new Macs and web development, podcast statistics during COVID, is it still worth it to learn WordPress, dealing with imposter syndrome, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what's happening with your errors, track them with [Sentry](https://sentry.io/). Sentry is open-source error tracking that helps developers monitor and fix crashes in real time. Cut your time on error resolution from five hours to five minutes. It works with any language and integrates with dozens of other services. Syntax listeners can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code ""tastytreat"".

## Show Notes
00:47 - Roch Tolinski — You guys are doing a downtown job!!!

02:45 - Yesterday Apple announced their new Macs. They seem pretty sweet, but I was curious, what does this mean for the world of web developers? Will my current apps slowly stop being supported? Will things like brew and node and npm still work on those new machines? Would it be smart to start learning new programs to be prepared for the transition?

10:20 - Hey, great show! No really, great show. What is better for working at home/the office, iMac or MacBook Pro?

13:25 - What are your thoughts on Remix? And has your listenership gone down since COVID-19? I have heard that less people listen to podcasts now because they no longer commute.

19:33 - What is your approach to testing for e-commerce sites? I am about to launch a client's online store and I'm sick with worry that a simple plugin upgrade will impact the store, and that I won't know about it till a disgruntled customer complains.

24:57 - I’m getting into web development through college (just trying for an associate's to start) and I’m noticing the intro courses are very hard to get into. I’ve been self-teaching so I kind of feel like I’m ahead. The intro to computing logic (basic algorithms) teacher teaches very slowly and forces us to use an awful software called Raptor to create pseudo programs. I’ve been asking to actually use a language rather than the software but the teacher doesn’t have enough programming knowledge to grade the actual language assignments. I feel like this course is a step back from what I already know. I was just wondering if you guys have any tips on getting through the grueling “required” courses?

31:04 - So it's been announced now that Sapper will never hit 1.0, and instead Svelte core functionality is being expanded and Sapper is being deprecated. I know you all don't have any inside info, but kind of wondering how Scott feels about this and what he's doing with his Sapper site in the nebulous time between the big announcement and the release of the next Svelte version?

35:17 - I'm currently working through a full-stack Udemy course to make the switch away from my day job to try freelance web development. I want to start taking on some easier freelance jobs to help make a little extra money and build my portfolio, and I see WordPress recommended as an easy way to do this. My question is, would it be worth undertaking the learning process to pick up some PHP and learn basic WordPress development so that I can start freelancing now, or would I be better served just focusing on HTML, CSS and JS and waiting until I broaden my understanding of these languages before I start taking on some preliminary clients?

39:22 - If I plan to use WordPress as a headless CMS, how do I make sure the WordPress site itself is not publicly accessible? As far as I know, there's no ""API-only"" mode for WordPress (like there is for, say, Rails or Laravel) and if I install a WordPress site on a server, it's going to be discoverable online. I'd hate to have people find the WordPress API site and think it was my website — or for my static site to have to compete with my WordPress API for prominence in search engines. How do people ensure this doesn't happen?

42:01 - If I have a Vue.js website running on WordPress, how could I dynamically insert Vue components from the WordPress backend (e.g. have a post that inserts a Vue.js poll component)? I don't want to recompile every time.

44:24 - I've heard you mention previously that you have used WordPress to host sites in the past. I'm keen to learn how you have created your own themes for those sites. Did you write your own PHP, etc, or is there another way? I'm hoping to learn a bit more about developing for WordPress as it's a skill I'd like to have in my back pocket, and would love to hear about any resources you would recommend for this.

47:51 - I’ve been a web developer for over 15 years. Unfortunately, I had to leave web development for personal reasons. I have a lot of great skills. Unfortunately, because I’ve been out of the game for so long my resume is full of holes. All the current experience I have is project-based or freelance-based. I do not have the ability to show long-term projects or anything stable on my resume. I’m trying to get my first job back in the field after my long absence. It has proven to be nearly impossible. I am listening to your Tasty Treat about certifications and certified education. I agree that certifications do not show actual skill. I also agree that just because I do not have longevity and consistency on my resume that I do not have the skills to pay the bills. How can I get my first job back in the field? I am working on small projects to highlight my skills but no one really seems to care. What would you do?

53:36 - I am currently in a food service job, but would love to move into the dev/design field. I have a year of experience in JavaScript, HTML, and CSS/Sass, as well as React, Gatsby, Next, and Node ( thank you both for helping with those ). I have a small amount of experience with freelance web design and development, but feel I am greatly underselling myself ($150 for a Gatsby site built for a friend and less than $100 for a couple Fiverr gigs). I have seen freelance work out well for my friends and family, but I am terrified of having to find clients. I have a hard time valuing my work and fold when money is brought up. There is always a part of me that says to just shoot high and have them talk the price down, but I hate the confrontation. How should I go about finding my first $1,000 client and how can I show the client that my work is worth more without talking about the tech involved?

## Links
* [https://isapplesiliconready.com/](https://isapplesiliconready.com/)
* [https://github.com/ThatGuySam/doesitarm](https://github.com/ThatGuySam/doesitarm)
* Electron: [https://www.electronjs.org/blog/apple-silicon#how-does-it-work](https://www.electronjs.org/blog/apple-silicon#how-does-it-work)
* [Missive](https://missiveapp.com/)
* [VS Code](https://code.visualstudio.com/)
* [Screenflow](http://www.telestream.net/screenflow/overview.htm)
* [Figma](https://www.figma.com/)
* [Sketch](https://www.sketch.com/)
* [Brew](https://brew.sh/)
* [MongoDB](https://www.mongodb.com)
* [iTerm2](https://iterm2.com/)
* [Hyper](https://hyper.is/)
* [Davinci Resolve](https://www.blackmagicdesign.com/products/davinciresolve/)
* [https://remix.run/](https://remix.run/)
* [React Router](https://reactrouter.com/)
* [ExpressionEngine](https://expressionengine.com/)
* [Keystone.js](https://www.keystonejs.com/)
* [Advanced Custom Fields](https://www.advancedcustomfields.com/)
* [Dreamweaver](https://www.adobe.com/products/dreamweaver.html)
* [Sapper](https://sapper.svelte.dev/)
* [Svelte](https://svelte.dev/)
* [https://svelte.dev/blog/whats-the-deal-with-sveltekit](https://svelte.dev/blog/whats-the-deal-with-sveltekit)
* [Rollup](https://rollupjs.org/)
* [https://www.snowpack.dev/](https://www.snowpack.dev/)
* [Udemy](https://www.udemy.com/)
* [Laravel](https://laravel.com/)
* [https://www.tempertemper.net/blog/stop-search-indexing-for-netlify-deploy-previews-and-branch-deploys](https://www.tempertemper.net/blog/stop-search-indexing-for-netlify-deploy-previews-and-branch-deploys)
* [Vercel](https://vercel.com/)
* [Netlify](https://www.netlify.com/)
* [Syntax 297: Hasty Treat - Certifications? Government Specified JavaScript Skills?](https://syntax.fm/show/297/hasty-treat-certifications-government-specified-javascript-skills)
* [Design is a Job by Mike Monteiro](https://abookapart.com/products/design-is-a-job)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott:
  * 1: [Chameleon: Hollywood Con Queen](https://podcasts.apple.com/us/podcast/chameleon-hollywood-con-queen/id1532225667)
  * 2: [Q Clearance: The Hunt for QAnon](https://podcasts.apple.com/us/podcast/q-clearance-the-hunt-for-qanon/id1534027012)
* Wes: [truLOCAL](https://trulocalusa.com/)

## Shameless Plugs
* Scott: [Deno 101 For Web Developers](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d4acd6323ca717218297e38f250c8283db2db37e8eb7bcf451a97786a2164b09,potluck-new-macs-podcast-statistics-e-commerce-testing-wordpress-charging-more-learning-web-dev-more,/shows/312 - potluck.md,2023-10-16 20:07:07.399,2023-10-27 15:57:57.059,TASTY
syntax_podcast_show_00313,313,Hasty Treat - Hosting + Web Services Pricing Explainer,2020-12-28 14:00:00.935,https://traffic.libsyn.com/syntax/Syntax313.mp3,"
In this Hasty Treat, Scott and Wes talk about how hosting and web services pricing works, and how to figure out what you need, and what you don't. 

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).


## Show Notes
01:55 - Per minute
* Spin up, do the work, spin down
* Popular in serverless space
* Can apply to other types of computing such as graphics, AI, machine learning, etc.

03:49 - By resources
* Ram
* CPU
* Disk space

06:02 - Per ""dyno""
* These are Heroku Linux servers
* You can add more dynos and make your app faster
* They scale it for you

08:54 - By bandwidth
* Sitting files
* Inbound (ingress)
* Output

12:24 - By DB calls or entries
* Databases

14:04 - By users
* This is more of a Sass thing, but can bleed into hosting too
* Seat-based - Netlify does something like this

17:23 - By apps
* Digital Ocean app platform
* Each app is $5

21:22 - By ""work""
* Cloudinary does transforms on images
* Mux

## Links
* [Heroku](https://www.heroku.com/)
* [AWS](https://aws.amazon.com/)
* [Digital Ocean](https://www.digitalocean.com/)
* [Meteor Galaxy](https://www.meteor.com/hosting)
* [Linode](https://www.linode.com/)
* [Rackspace](https://www.rackspace.com/)
* [MediaTemple](https://mediatemple.net/)
* [GoDaddy](https://www.godaddy.com/)
* [Bluehost](https://www.bluehost.com/)
* [Backblaze B2](https://www.backblaze.com/b2/cloud-storage.html)
* [Mux](https://mux.com/)
* [GraphQL](https://graphql.org/)
* [Github](https://github.com/)
* [Netlify](https://www.netlify.com/)
* [1Password](https://1password.com/)
* [Cloudinary](https://cloudinary.com/)
* [Firefox Containers](https://addons.mozilla.org/en-US/firefox/addon/multi-account-containers/)
* [Chrome grouped tabs](https://blog.google/products/chrome/manage-tabs-with-google-chrome/)
* [Brave](https://brave.com/)
* [Digital Ocean app platform](https://www.digitalocean.com/products/app-platform/)
* [Cloudflare](https://www.cloudflare.com/)
* [Vercel](https://vercel.com/)
* [Prisma](https://www.prisma.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",47dad460ca26ad1ee8fe24dd726fc30fe196abd0226955b1d2d662e10c06c026,hasty-treat-hosting-web-services-pricing-explainer,/shows/313 - hosting.md,2023-10-16 20:07:07.439,2023-10-27 15:57:57.106,HASTY
syntax_podcast_show_00314,314,2020 In Review,2020-12-30 14:00:00.617,https://traffic.libsyn.com/syntax/Syntax314.mp3,"
In this episode of Syntax, Scott and Wes talk about 2020 in review — predictions, hits and misses, hot tech, what they worked on, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes
01:43 - Predictions from 2020
* [CSS Subgrid](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Subgrid)
* [CSS Houdini](https://developer.mozilla.org/en-US/docs/Web/Houdini)
* CSS features not supported in older browsers yet
  * Scrollsnap - IE 11 and up. Lot's of mobile issues.
  * `position:sticky` - no IE at all
* [NPM tink](https://www.npmjs.com/package/tink)
  * Installer-less npm
  * Load packages at runtime into a shared cache across all projects
  * Intelligently download the parts you need
* [Yarn PnP](https://next.yarnpkg.com/features/pnp) / [Yarn 2](https://yarnpkg.com/)
  * Hard links to eliminate package duplication
  * Shared cache across all projects
* [Pika](https://www.pika.dev/) & [Snowpack](https://www.snowpack.dev/)
* [Deno](https://deno.land/)
* [React](https://reactjs.org/)
  * Suspense in more libraries
  * Suspense for Server Rendering
* [Meteor](https://www.meteor.com/)
  * New ownership. v1.9 just dropped with lots of promise for future growth
* [Svelte 3](https://svelte.dev/)
* [Vue 3](https://vuejs.org/)
* [Apollo](https://www.apollographql.com/)
  * 3.0 came out
  * Fine grain cache control
  * Hooks API
  * Custom logic over how things are read and merged
  * New dev tools
* [Next.js](https://nextjs.org/)
  * 10.0 came out
  * Images!
* [Gatsby](https://www.gatsbyjs.com/)
  * A single useQuery (made possible by suspense)
* Serverless
  * Going to get easier
  * [Begin](https://begin.com/)
  * Next.js / Now Functions
* Headless CMS Thunderdome
  * [Sanity](https://www.sanity.io/syntax)
  * [WordPress](https://wordpress.org/)
  * [WPGraphQL](https://www.wpgraphql.com/)
  * [Keystone](https://www.keystonejs.com/)
  * [Strapi](https://strapi.io/)
  * [RedwoodJS](https://redwoodjs.com/)
  * [Blitz.js](https://blitzjs.com/)
* [Cypress](https://www.cypress.io/)
  * End to end testing
  * We got Firefox support in 2020
* [Modulz](https://www.modulz.app/)
*  Exports to JS component
* [Figma](https://www.figma.com/)
  * Was already amazing in 2019
  * Constantly improving and adding new features
  * Can import from Sketch
  * Auto Layout 
* [Spline](https://spline.design/)

42:24 - What other tech was hot in 2020? 
* ES Modules is king
  * We're ready in the browser
  * Node shipped stable
  * [Deno](https://deno.land/) has it
  * [Snowpack](https://www.snowpack.dev/)
* Bundlers and tools
  * [Snowpack](https://www.snowpack.dev/)
  * [Vite](https://github.com/vitejs/vite)
  * [Rollup](https://rollupjs.org/) made gains
  * [Rome](https://rome.tools/)
  * [GraphQL](https://graphql.org/) got way easier
* Battle of the Types
  * [Typescript](https://www.typescriptlang.org/)
  * [Flow](https://flow.org/)
  * [Reason](https://reasonml.github.io/)
  * [Rust](https://www.rust-lang.org/)
* [Wasm](https://webassembly.org/)
  * Viable to use
  * Starting to exist in more real ways

52:53 - Working from home
* Remote work is hotter than ever
* [Starlink](https://www.starlink.com/) is coming
* Webcams - [Cam Link](https://www.elgato.com/en/gaming/cam-link-4k)
* [Discord](https://discord.com/)
* Remote Pairing
  * [Live Share](https://visualstudio.microsoft.com/services/live-share/) - I used VS Code with Jed from Keystone
  * [Tuple](https://tuple.app/)

57:13 - Code libraries
* [React Query](https://react-query.tanstack.com/)
* [Alpine.js](https://github.com/alpinejs/alpine)
* [Stencil](https://stenciljs.com/)

59:25 - Personal / Professional updates
* Hard year for productivity
* Published more than 100 episodes of Syntax

## Links
* [Syntax 216: Tech To Watch In 2020](https://syntax.fm/show/216/tech-to-watch-in-2020)
* [Adam Argyle](https://twitter.com/argyleink)
* [https://ishoudinireadyyet.com/](https://ishoudinireadyyet.com/)
* [Syntax 212: Pika Pkg](https://syntax.fm/show/212/pika-pkg)
* [Fred Schott](https://twitter.com/FredKSchott)
* [Level Up Tutorials: Deno 101 For Web Developers](https://www.leveluptutorials.com/tutorials/deno-101-for-web-developers)
* [React Suspense](https://reactjs.org/docs/concurrent-mode-suspense.html)
* [Sapper](https://sapper.svelte.dev/)
* [How to Supercharge Your Productivity with GraphQL Tooling by Scott Tolinski](https://www.youtube.com/watch?v=3FIijq7qetI)
* [Wes' Master Gatsby Course](https://mastergatsby.com/)
* [Syntax 308: Gatsby vs Next.js in 2021](https://syntax.fm/show/308/gatsby-vs-next-js-in-2021)
* [Syntax 299: Hasty Treat - Bundlers in 2020](https://syntax.fm/show/299/hasty-treat-bundlers-in-2020)
* [https://github.com/ffmpegwasm/ffmpeg.wasm](https://github.com/ffmpegwasm/ffmpeg.wasm)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Innr Bulbs](https://www.innr.com/en/)
* Wes: [Pendleton Weighted Blanket](https://www.costco.com/pendleton-weighted-blanket.product.100503818.html)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",355702b66a6a97b71c20fd1e647c2850462caff7c03441f92609b927c892b230,2020-in-review,/shows/314 - 2020.md,2023-10-16 20:07:07.480,2023-10-27 15:57:57.154,TASTY
syntax_podcast_show_00315,315,Hasty Treat - Hyper Productivity with Keyboard Shortcuts + Window Management,2021-01-04 14:00:00.918,https://traffic.libsyn.com/syntax/Syntax315.mp3,"
In this Hasty Treat, Scott and Wes talk about keyboard shortcuts, window management, and how to stay productive.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.


## Show Notes

03:54 - [Karabiner-Elements](https://karabiner-elements.pqrs.org/)

06:11 - [Better Touch Tool](https://folivora.ai/)

13:55 - [ScreenFlow](http://www.telestream.net/screenflow/overview.htm)

17:52 - [VS Code Shortcuts](https://code.visualstudio.com/docs/getstarted/keybindings)

21:20 - [Text Expander](https://textexpander.com/)

23:00 - [Clipy](https://clipy-app.com/)


## Links
* [Davinci Resolve](https://www.blackmagicdesign.com/products/davinciresolve/)
* [Divvy](https://mizage.com/divvy/)
* [Uberlayer](https://www.macupdate.com/app/mac/44470/uberlayer)
* [Elgato Stream Deck](https://www.elgato.com/en/gaming/stream-deck)
* [iShowU](https://support.shinywhitebox.com/hc/en-us/articles/204161459-Installing-iShowU-Audio-Capture-Mojave-and-earlier-)
* [Rocket](https://matthewpalmer.net/rocket/)
* [Clipy source](https://github.com/Clipy/Clipy/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3d49860112e138c2d7b507886a58f153c0ba1681cff0ac9fcc76e4a73f9858b4,hasty-treat-hyper-productivity-with-keyboard-shortcuts-window-management,/shows/315 - productivity.md,2023-10-16 20:07:07.525,2023-10-27 15:57:57.210,HASTY
syntax_podcast_show_00316,316,2021 Predictions,2021-01-06 14:00:00.918,https://traffic.libsyn.com/syntax/Syntax316.mp3,"
In this episode of Syntax, Scott and Wes talk about their predictions for 2021!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes
02:06 - ESM
* Scott: It's going to be big
  * [Snowpack](https://www.snowpack.dev/)
* Wes: Everything going forward should be ESM

05:44 - Wes: Remote work will grow
* Whole new talent pool opens up
* Whole new living situations open up

08:23 - Scott: [Deno](https://deno.land/) will grow 
* [Deno 101 for Web Developers](https://www.leveluptutorials.com/tutorials/deno-101-for-web-developers)

11:12 - Wes: Tooling will fade away
* Less setup, more behind the scenes
* [Rome](https://rome.tools/)
* [Deno](https://deno.land/)
  * Linter
  * Formatter
  * Transpiler
  * Tester
* [Parcel2](https://v2.parceljs.org/)
* [Snowpack](https://www.snowpack.dev/)
* [Nextjs](https://nextjs.org/)

14:14 - Scott: Greater usage of other languages to build Javascript
* [esbuild](https://esbuild.github.io/) 
* [Rust](https://www.rust-lang.org/)
* [Go](https://golang.org/)

19:35 - Wes: Programming communities will gain traction
* [Github Discussions](https://docs.github.com/en/free-pro-team@latest/discussions)
* [Forem](https://dev.to/t/forem)
* [Circle](https://circle.so/)
* [spectrum](https://spectrum.chat/)
* [Discourse](https://www.discourse.org/)

23:25 - Scott: More WASM
* [Mongo](https://www.mongodb.com/)
* [Spline](https://spline.design/)

27:19 - Typescript
* Wes: Typescript will become more popular
* Scott: Tooling will get better
  * [VS Code](https://code.visualstudio.com/)

29:37 - React
* Scott:
  * Scoped CSS in React will evolve
  * SSR and hydration will be better
* Wes:
  * People will fall out of love with React
  * Or more magic will get added to React

32:52 - Scott: More web component frameworks
* [Stencil](https://stenciljs.com/)

33:17 - Scott: [Markdown](https://en.wikipedia.org/wiki/Markdown) and [mdx](https://mdxjs.com/)-like frameworks will skyrocket in use

33:59 - Wes: [Gatsby](https://www.gatsbyjs.com/)
* Hosted GraphQL / SSR / Render on demand
* Solve the pain of long build times
* [Syntax 308: Gatsby vs Next.js in 2021](https://syntax.fm/show/308/gatsby-vs-next-js-in-2021)
* [Next.js](https://nextjs.org/) 

35:24 - Scott: AR tech will grow
* [Target AR app](https://www.target.com/c/see-it-in-your-space/-/N-9ciy7)

36:38 - Wes: AI will become accessible
* Something as easy as a search result
* [RTX Voice](https://www.nvidia.com/en-us/geforce/forums/broadcasting/18/361740/rtx-voice-beta/)

38:43 - [VS Code](https://code.visualstudio.com/)
* Scott:
  * It will continue dominating
  * Cloud and shared coding env will become better
  * [Figma](https://www.figma.com/)
* Wes:
  * [Github Codespaces](https://github.com/features/codespaces)

40:18 - CSS
* Wes:
  * Color functions
  * More use of built-in features
  * Scoped CSS
* Scott:
  * People are going to love and use CSS variables
  * [Modern CSS Design Systems Course](https://www.leveluptutorials.com/tutorials/modern-css-design-systems)

42:39 - Serverless
* Scott:
  * Ease of use will get better and better
* Wes:
  * [Netlify](https://www.netlify.com/)
  * [Vercel](https://vercel.com/)

45:30 - Wes: Enterprise Jamstack will become a thing
* [Cloudflare](https://www.cloudflare.com/) hosting
* [Next.js](https://nextjs.org/)
* [Gatsby](https://www.gatsbyjs.com/)
* [Sapper](https://sapper.svelte.dev/)
* [SvelteKit](https://svelte.dev/blog/whats-the-deal-with-sveltekit)

46:30 - PWAs might become more popular
* Apple will never want you to go around the app store

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Ted Lasso](https://tv.apple.com/us/show/ted-lasso/umc.cmc.vtoh0mn0xn7t3c643xqonfzy)
* Wes: [Neewer Dimmable Bi-Color LED](https://www.amazon.com/Neewer-Dimmable-Professional-Photography-3200-5600K/dp/B01934RL0U)

## Shameless Plugs
* Scott: [Deno 101 for Web Developers](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",f90538e6ff17cff390bf0a9cc34c3707c2962cb0651bfe781075418e0daa5f58,2021-predictions,/shows/316 - predictions.md,2023-10-16 20:07:07.566,2023-10-27 15:57:57.263,TASTY
syntax_podcast_show_00317,317,Hasty Treat - A Podcast About Nothing,2021-01-11 14:00:00.125,https://traffic.libsyn.com/syntax/Syntax317.mp3,"
In this Hasty Treat, Scott and Wes talk about nothing — null, undefined, void, false, 0, '', NaN, [], {}, never — all sorts of values that could mean the things that do not exist.

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:35 - Undefined 
* Implicitly nothing
* A variable declared, but not set is undefined

04:25 - Null
* Explicitly nothing

04:41 - Null vs Undefined
* Null has a value of nothing
* Undefined does not have a value
* You can set variables to either
  * If you want to set a score variable to nothing, set it to null
  * If you want to un-set a value, set it to undefined
  * == will check if a value is either null or undefined 

05:35 - Void 
* In Javascript
  * You can pop void in front of calling a function and it will return undefined (even if that function returns a value)
  * I've seen it on links that go nowhere (don't do this — use a button)
  * To prevent an arrow function from leaking
  * `onSubmit=""javascript:void()""` is a quick-n-easy prevent default on forms
* In Typescript
  * Void is when you don’t care about what is returned from a function, or if nothing is returned
  * A click handler that goes off and does stuff (side effect) can return void

09:15 - Never (in Typescript)
* Some functions will never return:
  * Functions that throw errors
  * Functions that have infinite loops
  * Also, unreachable variables have a type of never
    * `if(true == false) { let var = 'this will never be true'; }`

11:05 - Falsy values
* 0, -0, 0n
* false
* '' (empty string)
* Empty array
  * Is a value
  * Its .length can be falsy
* Empty object
  * Is a value
  * Its object.keys(object) length can be falsy (0)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ec70f5f14b1309373997501e70bc14ef35907af5170da0f2fb88037a91f14879,hasty-treat-a-podcast-about-nothing,/shows/317 - nothing.md,2023-10-16 20:07:07.607,2023-10-27 15:57:57.313,HASTY
syntax_podcast_show_00318,318,Reactathon LIVE,2021-01-13 14:00:00.125,https://traffic.libsyn.com/syntax/Syntax318.mp3,"
In this episode of Syntax, Scott and Wes are coming at you live from Reactathon with audience-favorite segments including All I Want for Christmas *in React*, JS or Nay-s (or Both), Overrated / Underrated, Hot Take Tweets, Listener Questions, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Magic Bell - Sponsor
MagicBell, the embeddable notification inbox - [magicbell.io](https://magicbell.io). Use the coupon code SYNTAX to get a 20% discount if you sign up in the next two weeks.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes
04:17 - All I Want for Christmas *in React* is:
* Suspense for data fetching
* On mount animations
  * Unmount for me
* Single file components
* `preventDefault` shortcut
* Input to state mapping

09:45 - JS or Nay-s (or Both)
* Shout out to [Pigeonhole](https://pigeonhole.at/)
* Graphene - 1) Carbon atoms organized in a hexagonal lattice, or 2) An opinionated Python library for building GraphQL Libraries in Python?
* Floodlight - 1) A super simple syntax highlighter for XHTML documents, or 2) a large light used to illuminate dark outdoor spaces?
* Toy Machine - 1) An early 2000s skate brand, or 2) A Vue-based GUI for creating state machines?
* Joplin - 1) A free, open-source note taking and to-do application based on markdown, or 2) A city in the northwestern corner of Missouri?
* Noco - 1) A JavaScript library that connects to No Code tools including bubble.io, or 2) A smart car battery maintainer & charger?
* Innr - 1) A smart lightbulb, or 2) A CSS in JS library for selecting parent selectors?
* Cabkoma Strand - 1) A thermoplastic carbon fiber composite rod used in modern buildings, or 2) A Redux-like state management library for Svelte?
* Sputnik V - 1) Code name for the upcoming WordPress release with built-in headless CMS mode, or 2) A non-replicating viral vector COVID-19 vaccine?

18:44 - Overrated / Underrated
* [Deno](https://deno.land/)
* ESM import from URL (no npm)
* [Remix.run](https://remix.run/)
* [Xstate](https://xstate.js.org/)

27:49 - Hot Take Tweets
* [https://twitter.com/wesbos/status/1336367385683636225](https://twitter.com/wesbos/status/1336367385683636225)

34:34 - Listener Questions
* Q: If you recently started doing web dev work, which career path would you choose - startup, FANG, or freelance?
* Q: [TypeScript](https://www.typescriptlang.org/) all the things?
* Q: What do you do to keep up with the latest and greatest changes in tech - front-end libraries, new languages, etc.?
* Q: Can you share some exclusive BBQ tips?
* Q: What do you expect of [Blitz.js](https://blitzjs.com/) in the next few years?
* Q: What's the first node module you install in a brand new React project besides React itself?
* Q: Thoughts on using languages other than JS and TS with React like [Kotlin](https://kotlinlang.org/)?
* Q: Do you have an approach for optimizing hi-res images that are stored in your back-end, like S3 for your Gatsby website?

## Links
* Watch the live recording of this episode: [https://www.youtube.com/watch?v=8xJpxj6T1BQ](https://www.youtube.com/watch?v=8xJpxj6T1BQ)
* [Formik](https://formik.org/)
* [Mux](https://mux.com/)
* [Syntax Ep 206: State Machines, CSS and Animations with David K Piano](https://syntax.fm/show/206/state-machines-css-and-animations-with-david-k-piano)
* [Check My Hair - Wes Bos](https://github.com/wesbos/check-my-hair)
* [Houdini.How](https://houdini.how/)
* [Rust](https://www.rust-lang.org/)
* [Cloudinary](https://cloudinary.com/)
* [LockPickingLawyer YouTube Channel](https://www.youtube.com/channel/UCm9K6rby98W8JigLoZOh6FQ)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [VS Code color conversion extensions](https://marketplace.visualstudio.com/search?term=color%20conversion%20hex%20to%20hsla&target=VSCode&category=All%20categories&sortBy=Relevance)
* Wes: [Acrylic lock picking kit](https://www.amazon.com/s?k=acrylic+lock+picking+kit&crid=379F0ODJMANCH&sprefix=acrylic+lock+pick%2Caps%2C159&ref=nb_sb_ss_ts-a-p_2_17)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",012a14fe7d2f9de62424cbfd5d03e562fc7240a1dffd69d85118aecc8d723b93,reactathon-live,/shows/318 - reactathon.md,2023-10-16 20:07:07.652,2023-10-27 15:57:57.371,TASTY
syntax_podcast_show_00319,319,Hasty Treat - CSS Typography and Systems,2021-01-18 14:00:00.813,https://traffic.libsyn.com/syntax/Syntax319.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS typography, and how to quickly get up and running with type systems.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes

05:00 - How do you define type at the start of a new project?

15:03 - How do media queries and screen sizes affect your system?

16:58 - Why are systems in type important?

20:21 - How do you design a type system?
* Scott's type system:
```jsx
/* Font Sizes */
  --baseFontSize: 1rem;
  --baseNavSize: 0.64rem;
  --smallFontSize: 0.8rem;
  --smallestFontSize: 0.512rem;

  --xtra-big-ass-heading: 3.052rem;
  --xtra-heading: 2.441rem;
  --heading-1: 1.953rem;
  --heading-2: 1.563rem;
  --heading-3: 1.25rem;
  --heading-4: var(--baseFontSize);
  --heading-5: var(--smallFontSize);
  --heading-6: 0.64rem;
  --heading-7: var(--smallestFontSize);
```

## Links
* [https://type-scale.com/](https://type-scale.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",27138f6bc685c527db1fc3f8fcc9b0a2aca548e3e8a8e8e4eb31c327dd84ea4c,hasty-treat-css-typography-and-systems,/shows/319 - css.md,2023-10-16 20:07:07.728,2023-10-27 15:57:57.422,HASTY
syntax_podcast_show_00320,320,Potluck — $100k Dev Jobs × Sponsored Blog Posts × How To Keep Your Skills Up To Date × Libraries vs Custom × Dev Tools × More!,2021-01-20 14:00:00.813,https://traffic.libsyn.com/syntax/Syntax320.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about VS Code, JavaScript, $100k-per-year dev jobs, sponsored blog posts, how to use dev tools, how to keep your skills up to date, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes
02:01 - Not so much a question as me saying thanks! I started web dev as a bartender/college dropout in 2017 when Syntax was pretty new. I rarely miss an episode, and this year I'm starting my first >$100k JS job! Your show has always been fun, kept my attention in the realm of web dev, and helped guide my interest — I think it has been extremely valuable to my career so far, and I look forward to more.

04:10 - How do I know when to pull in a package rather than write similar functionality myself? And is there a rule for when enough is enough, in terms of having too many packages? What I'm most concerned about is bundle size. It doesn't seem to take a lot of packages before Webpack notifies you about large bundle sizes, so what would be best practice?

11:27 - What is your opinion of doing a sponsored post or guest post on your own site? And if you're in favor, what sorts of terms, payment, etc. would you outline or charge for it? 

18:20 - Do you have/know of any resources for those that want to learn more about selling digital products through e-commerce? The sources I've found (Scott's e-commerce/Gatsby courses & Next.js commerce demo page) focus more on creating stores that sell physical products. Are there any gotchas when selling digital vs physical?

22:10 - Do you have any tips for keeping your skills up to date while taking a break from work? I’m a frontend dev currently six months into my year-long maternity leave and I feel like my brain has turned to soup. I listen to podcasts and read blog posts but it never feels like enough. Time and energy are very limited for me to work on personal projects!

25:11 - I remember you guys saying something about making your own UI component libraries. Do you use some CSS libraries like [Tailwind](https://tailwindcss.com/) or even [Bootstrap](https://getbootstrap.com/) or others for this, or do you write your Sass/CSS from scratch?

30:52 - Would be interested to hear some of the common ways you use dev tools (chrome dev tools, react dev tools, redux, etc.). I feel like there is a lot of information in there that I am not utilizing properly to help figure out problems during development. Would be cool to hear an overview of how you use the different tabs, some of the most commons things to look for, etc.

35:20 - I am graduating from a bootcamp next month and I feel severe insecurities/imposter. For whatever reason, I freeze up when it comes to coming up with code or writing things myself, mainly in JS. When in class, watching tutorials, following along, or viewing other people's code, I can tell you exactly what is going on, why it is being done, and I can change and add things and explain them. But when it comes to starting from a blank slate, I freeze, as if everything I know about programming has gone out the window. Do you have any advice as to how to get past this hurdle? I feel like at this point I shouldn't be feeling like this, but maybe this is normal?

40:36 - Do you think developers have a responsibility to help reduce CO2 emissions caused by the web? A [BBC news article](https://www.bbc.co.uk/news/technology-55164410) stated that ""HD video streaming on a phone generates about eight times more in emissions than standard definition (SD)"" and noted that on a small screen, the viewer might not even notice the difference. Should the developer limit the resolution available to mobile devices, or should they let the end user choose?

47:53 - I was hoping that you guys could give me, and other listeners, advice on ""knowing when you've bitten off more than you can chew""? Often I'll be working on a project for fun, or possibly building out my portfolio, and I'll continue to get excited about features that I'd like to add to my current app or what have you. At first glance, the ideas or features seemed reasonable enough to tackle, but hours later, I'll find myself stuck, realizing that I'm in over my head, as I've tried to take on something that I'm not yet experienced enough to work with, or I'm lacking the man-power to complete it in a timely manner. At the same time, I want to challenge myself so that I can grow, but sometimes I feel that I'm not using my time wisely. So my question to you is, where is the line between challenging ourselves to take on new and difficult tasks and scaling back our current work to make it more approachable and less overwhelming?

55:01 - What is the right use-case for a database, and what is the right use-case for a headless CMS? Is a headless CMS just a database + a user-friendly way of entering data into that database? Is there a secure way of querying Sanity directly from the frontend if I have data that I want to be only available to logged-in users?

## Links
* [Syntax Listener Questions](https://docs.google.com/forms/d/e/1FAIpQLSfQlAo1wXHiJMySdU-h8QMtfoz92aMS9eycEHXB6eRCLh8KHA/viewform)
* [Bundle Phobia](https://bundlephobia.com/)
* [Shopify](https://www.shopify.com/)
* [Snipcart](https://snipcart.com/)
* [Styled Components](https://styled-components.com/)
* [BEM](http://getbem.com/)
* [Mux](https://mux.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Double Sided Mounting Tape](https://amzn.to/3qVAkX3)
* Wes: [Secret Aardvark Habanero Hot Sauce](https://www.amazon.com/Secret-Aardvark-Habanero-Sauce-Net/dp/B00AIR3Q38)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",79d739cbd6f62cee16c322dfc51363d8265356d5dec69464b8758a2bf43a48a2,potluck-usd100k-dev-jobs-sponsored-blog-posts-how-to-keep-your-skills-up-to-date-libraries-vs-custom-dev-tools-more,/shows/320 - potluck.md,2023-10-16 20:07:07.819,2023-10-27 15:57:57.473,TASTY
syntax_podcast_show_00321,321,Hasty Treat - The New AVIF Image Format Is Unreal,2021-01-25 14:00:00.813,https://traffic.libsyn.com/syntax/Syntax321.mp3,"
In this Hasty Treat, Scott and Wes talk about AVIF — what it is and how you might use it!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:10 - What is AVIF?
* AVIF is derived from the keyframes of an AV1 video
* Royalty free (big deal)
* What about [WebP](https://developers.google.com/speed/webp)?
* Basically half the file size of a WebP for free, which was already about half the size of a jpeg
* It's a lossy format — ie it inherently will degrade the image
* [https://jakearchibald.com/2020/avif-has-landed/](https://jakearchibald.com/2020/avif-has-landed/)
* No animation

10:53 - How to implement
* [Cloudinary](https://cloudinary.com/) is in beta, but you can try it
* [Gatsby](https://www.gatsbyjs.com/) supports it
* [https://squoosh.app/](https://squoosh.app/)
* [Imagemin](https://github.com/imagemin)
* [https://github.com/nucliweb/imagemin-avif](https://github.com/nucliweb/imagemin-avif)
* [https://avif.io/](https://avif.io/)
* [https://github.com/dreampiggy/AVIFQuickLook](https://github.com/dreampiggy/AVIFQuickLook)
* [https://github.com/vercel/next.js/pull/20765](https://github.com/vercel/next.js/pull/20765)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a240dd059fdb6d321243d830ff6587d1492d4d5895f92742598bb0773b1e32a7,hasty-treat-the-new-avif-image-format-is-unreal,/shows/321 - avif.md,2023-10-16 20:07:24.124,2023-10-27 15:57:57.531,HASTY
syntax_podcast_show_00322,322,The Deno Show,2021-01-27 14:00:00.813,https://traffic.libsyn.com/syntax/Syntax322.mp3,"
In this episode of Syntax, Scott and Wes bring you the long-awaited Deno show — what it is, what it replaces, how you can use it, and more!

## Deque - Sponsor
Deque’s free axe browser extension helps developers instantly catch 50% of accessibility bugs while they code. It’s lightweight, easy-to-use, and has zero false positives. Get started for free at [deque.com/axe](https://deque.com/axe/?utm_source=syntax&utm_medium=podcast&utm_campaign=axe_extension).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes
02:13 - What is it?
* A secure runtime for JavaScript and TypeScript
* Built by [Ryan Dhal](https://tinyclouds.org/) — same guy who initially built Node.js
* API is JS or TS out of the box

04:55 - Does it replace / what is it in relation to?
* Node
    * It's a replacement for Node.js
* Express
    * Web Server Frameworks like Express will run on Deno, but Express itself won't currently run because they are build on Node APIs
    * [https://github.com/oakserver/oak](https://github.com/oakserver/oak)
* Serverless
    * Deno can be used for anything, so it can be used for serverless functions, or a traditional web server
    * [Serverless, Deno and TypeScript with Brian Leroux](https://syntax.fm/show/310/serverless-deno-and-typescript-with-brian-leroux)
* React / Vue / Svelte
    * These things are just JavaScript, so they should/will work in Deno. Deno will replace your tooling. More involved things like Next.js that require Node APIs won't work until.
    * [https://alephjs.org/](https://alephjs.org/)
* SSR
    * It comes with all browser APIs out of the box!
* Fetch
    * Window + Add Event listener
* Webpack / Parcel / Snowpack
    * Deno is a bundler
* Prettier
    * Deno is a formatter
* TSC
    * Deno is a TypeScript compiler and runtime
* ESLint
    * Deno is a linter
* Jest
    * Deno is a Test Runner
* NPM
    * Deno is a package manager - it pulls in packages from URLs

14:51 - Modules
* ES modules from the start
* Modules are loaded from URLs
* Why? No package registry to worry about
* This is how the browser works
* Import from URL
* You can also specify it in the json file
* [https://github.com/oakserver/oak/blob/main/deps.ts](https://github.com/oakserver/oak/blob/main/deps.ts)
* [https://deno.land/](https://deno.land/)
* Fetch is built in!
    * It's a browser API, but who cares?!
* Browser APIs
    * window.add event Listener
    * Deno is event based, like the browser

20:10 - A nice standard library
* [https://github.com/denoland/deno_std](https://github.com/denoland/deno_std)

22:14 - WASM
* Deno can run WASM with the same APIs that the browsers can
* Node is doing this too (experimental)

25:06 - Multi-threading with Web Workers

26:13 - Speed
* It's fast!
* They took everything they learned from Node - good and bad
* Built in Rust
* From what we understand:
    * V8 is written in C++
    * Node is written in C, C++ and JavaScript
    * How it talks to V8 - Rust sits in-between the JS runtime, and the C++ V8 runtime and communicates between the two.
    * [https://github.com/denoland/deno/blob/master/core/examples/hello_world.rs](https://github.com/denoland/deno/blob/master/core/examples/hello_world.rs)

29:44 - Security
* Sandboxed
* —allow-read
* —allow-net
* -allow-write
* [https://deno.land/manual@v1.6.3/getting_started/permissions#permissions-list](https://deno.land/manual@v1.6.3/getting_started/permissions#permissions-list)
* You can specify which dirs it can access

33:39 - Run from anywhere
* [https://www.npmjs.com/package/npx](https://www.npmjs.com/package/npx)
* Deno run https://cool.com/whatever.ts

37:43 - Async out of the box
* Everything is based on async + await / promises right away. No callback APIs, no promise wrapping.
* Top level await

38:53 - Node Compatibility
* Node APIs are being filled
* This means if a browser package ships an ES module of a package, we can just import it

42:21 - What we've built
* A bunch of sample scripts
* Lots of simple demos
* Very intuitive
* Fetched and downloaded every single Syntax mp3
    * [https://twitter.com/wesbos/status/1326345600141582336](https://twitter.com/wesbos/status/1326345600141582336)

46:54 - Hosting
* Literally any linux server (Linode, Digital Ocean, etc.)
* [https://begin.com/](https://begin.com/)
* [https://fly.io/](https://fly.io/)

48:29 - Final thoughts
* Scott: Now is a great time to learn, but don't put any crucial work into that space unless you are ready to write everything. Libraries are still being written and evolved. Docs are still sparse. Many things didn't work on first try. I had to read lots of source.
* Wes: If You know JS or TS, you are already 90% there.
    * The package ecosystem isn't there yet
    * Battle-tested

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Boom/Bust: The Rise and Fall of HQ Trivia](https://www.theringer.com/2020/5/14/21258631/introducing-boom-bust-the-rise-and-fall-of-hq-trivia)
* Wes: [Orthopaedic Pillow](https://amzn.to/2Xc3WBH)

## Shameless Plugs
* Scott: [Deno 101 For Web Developers](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",817484c100812c884da3816bf998ce2acb6485d74b3a92ff8f9528302fab7ab5,the-deno-show,/shows/322 - deno.md,2023-10-16 20:07:29.946,2023-10-27 15:57:57.583,TASTY
syntax_podcast_show_00323,323,Hasty Treat - New Level Up Tutorials Site,2021-02-01 14:00:00.858,https://traffic.libsyn.com/syntax/Syntax323.mp3,"
In this Hasty Treat, Scott and Wes talk about the new Level Up Tutorials website — some of the new tech powering the site, behind-the-scenes decisions, previous iterations, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes

02:55 - Previous iterations
* Originally on [Drupal 7](https://www.drupal.org/drupal-7.0)
* Full re-write to [Meteor](https://www.meteor.com/) + [Blaze](http://blazejs.org/)
  * Two sites — store.leveluptutorials.com and leveluptutorials.com
* [Meteor](https://www.meteor.com/) + [React](https://reactjs.org/)
* [Meteor](https://www.meteor.com/) + [Apollo](https://www.apollographql.com/)
* Combine store and site
* Move to [TypeScript](https://www.typescriptlang.org/)
* [NOW](https://vercel.com/)

05:30 - Big choices
* No [Babel](https://babeljs.io/) up and down the stack
* UI
  * Mostly unchanged — [React](https://reactjs.org/) + [Styled Components](https://styled-components.com/) + [SCSS](https://sass-lang.com/)
    * Moving more to SCSS, CSS vars
    * Build and dev done via [Snowpack](https://www.snowpack.dev/)
      * 50ms hot reloadin'
      * Mega fast development workflow has been a huge plus
      * Errors in the UI via [Snowpack](https://www.snowpack.dev/)
      * Wrote a custom [GraphQL](https://graphql.org/) importer plugin
* API
  * [ESBuild](https://esbuild.github.io/)
    * Insane speeds
    * Wrote a custom [GraphQL](https://graphql.org/) importer plugin
  * [Mercurious](https://mercurius.dev/) / [Fastify](https://www.fastify.io/)
* Codegen
  * [GraphQL](https://graphql.org/) code gen to create everything we need for a fully typed codebase
  * Auto-generated [React Hooks](https://reactjs.org/docs/hooks-intro.html)
* Hosting
  * [render.com](http://render.com) for both
* CLI
  * Custom avalanche CLI that removes the guesswork and makes bulk operations easy
* [Caddy](https://caddyserver.com/) server for easy `leveluptutorials.dev` in local environments
* Testing
  * [Jest](https://jestjs.io/) → API
  * [Cypress](https://www.cypress.io/) → UI

## Links
* [Digital Ocean app platform](https://www.digitalocean.com/blog/introducing-digitalocean-app-platform-reimagining-paas-to-make-it-simpler-for-you-to-build-deploy-and-scale-apps/)
* [https://beta.leveluptutorials.com/](https://beta.leveluptutorials.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5feab52e63bf9c515b9e5db333ee5c5c7a58fa89540992e56f72e879179455ca,hasty-treat-new-level-up-tutorials-site,/shows/323 - levelup.md,2023-10-16 20:07:29.989,2023-10-27 15:57:57.636,HASTY
syntax_podcast_show_00324,324,TypeScript Fundamentals,2021-02-03 14:00:00.858,https://traffic.libsyn.com/syntax/Syntax324.mp3,"
In this episode of Syntax, Scott and Wes talk about TypeScript fundamentals — what it is, how you use it, why people love it so much, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes

### What is TypeScript?
03:12 - Types?
* What are types and why should you care?
* JS is a typed language, it's just not strongly typed
  * JS does not care about reassignment of a variable to a new type
  * Does not care about your types, but they do exist

06:34 - The Fundamentals
* You write your JavaScript code, but each time you create a variable, function, parameter, you ""type it"" — which means you describe what that data will look like.
  * Create a variable: Will it be a string? A number? A custom type of show?
  * Create a function: What params does it take? What type are they? What does it return?
* Types allow your code to know if there are type errors that would present themselves to the user silently. These are small errors that can be compounded and go unnoticed.
  * This can allow you to prevent shipping code that has these errors by checking your code.
  * Some of the biggest benefits here come via errors in your text editor

13:30 - Explaining the types
* You can create your own types
* Strings
* Numbers
  * We only have numbers in TS, no floats/ints
  * We do have BigInt though, but not something most people will use
* Arrays
  * Will be a list of another type
* Unions
  * This type will be one of the possible options
  * String of DRAFT PUBLISHED or ARCHIVED
* Intersections
  * An intersection type combines multiple types into one
* Objects
  * These are custom types where each property is its own type
* Any
  * Explicit any
  * Implicit any
* Language types
  * These things are technically just Objects, but they have their own types
  * Dates
  * Timeouts
  * DOM Elements / Nodes
* Void
  * When a function returns nothing — usually used with side effects like click handlers
* Enum
  * A set of named constants
    * Used when you have a select amount of values — I like to think of these as the select lists of TS
    * String unions are also used for this same thing

30:28 - Inference
* Automatic detection of types
* Typescript will try to infer your types based on their definition
* Not every type can be inferred, leading to implicit anys and the need for explicit types

33:25 - Getting types
* Most popular packages already have types — you install them like `npm i @types/whatever`
* If a package doesn't have types, you have to create them yourself, which can be annoying
  * [MakeTypes](https://jvilk.com/MakeTypes/)
  * Console log a JSON.stringify(obj), and pipe it in
* Node has types
* Vanilla JS has types, for the language and all of the DOM - HTMLInputElement
* React has types
* Typing Node modules that don't have types

### Overall benefits
40:39 - Type hinting
* With TS and your editor (VSCode) you'll get more information about your code as you type it — allowing you to know exactly what things expect
  * This seems like a small deal but in practice leads to being much more efficient

42:50 - Refactoring
* Rename a function, type, or variable and it will be updated everywhere in the project!
* Moving a function to a new file is actually part of TypeScript
* Drag + Drop file, update imports

48:10 - Compiling
* [TSC](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html) vs [Babel](https://babeljs.io/) / [Esbuild](https://esbuild.github.io/)
* Only TSC type checks
* Compiling TS with babel will not allow you to break the build on type errors, you'll need to run TSC in coordination or in the CI/CD

## Links
* [Snipcart](https://snipcart.com/)
* [GraphQL](https://graphql.org/)
* [Snowpack](https://www.snowpack.dev/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott:
  * 1: [LumiPets](https://amzn.to/3sfw4Cp)
  * 2: [LumiPets Bear](https://amzn.to/2Lqkofk)
* Wes: [Phomemo Label Printer](https://amzn.to/2LGXT5T)

## Shameless Plugs
* Scott: [ESM & Snowpack](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",23ec615401f8ff7fea54bac9e76c5af4cd8a2e4a874fede5e7598f00b5ebaabc,typescript-fundamentals,/shows/324 - typescript.md,2023-10-16 20:07:30.024,2023-10-27 15:57:57.693,TASTY
syntax_podcast_show_00325,325,Hasty Treat - Keyboard Events Are Surprisingly Interesting,2021-02-08 14:00:00.788,https://traffic.libsyn.com/syntax/Syntax325.mp3,"
In this Hasty Treat, Scott and Wes talk about keyboard events and some of the fascinating things you can do with them!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:04 - The Events
* [http://keycode.info/](http://keycode.info/)
* keydown
* beforeInput
* Keypress - deprecated
* inputType tells you whether the event is inserting text, replacing text, inserting a line break, etc.
* keyup
* change event - only fires when you focus out
* [https://github.com/w3c/uievents/issues/220](https://github.com/w3c/uievents/issues/220)

08:02 - Event meta data
```
 ""key"": ""c"",
 ""keyCode"": 67,
 ""which"": 67,
 ""code"": ""KeyC"",
 ""location"": 0,
 ""altKey"": false,
 ""ctrlKey"": false,
 ""metaKey"": true,
 ""shiftKey"": false
```

* Others: 
  * .locale 
  * .repeat

16:46 - Media keys
* [https://developers.google.com/web/updates/2019/02/chrome-73-media-updates](https://developers.google.com/web/updates/2019/02/chrome-73-media-updates) 
* play, pause, ect
* Overkill app: [https://krausefx.com/blog/introducing-overkill-dont-let-itunes-interrupt-your-workflow](https://krausefx.com/blog/introducing-overkill-dont-let-itunes-interrupt-your-workflow) 

18:32 - When might you use key codes?
* Space bar to stop a video on a page
* Building a game
* Making a web app feel more like an app

## Links
* [Better Touch Tool](https://folivora.ai/)
* [Syntax 315: Hasty Treat - Hyper Productivity with Keyboard Shortcuts + Window Management](https://syntax.fm/show/315/hasty-treat-hyper-productivity-with-keyboard-shortcuts-window-management)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",593b72b8c311b48813e05beb9fa32284fce5576095ca7285de3bfa5901d35460,hasty-treat-keyboard-events-are-surprisingly-interesting,/shows/325 - keyboard.md,2023-10-16 20:07:30.062,2023-10-27 15:57:57.753,HASTY
syntax_podcast_show_00326,326,"We Review Resumes, Websites, and Online Presence",2021-02-10 14:00:00.788,https://traffic.libsyn.com/syntax/Syntax326.mp3,"
In this episode of Syntax, Scott and Wes review resumes, websites, and online presences, and discuss pros and cons, what you should focus on, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes
04:32 - Why does an impression matter?
* All of this stuff comes together to work in your favour when you are hunting for a job.

05:14 - What goes into an online presence?
* Twitter
  * Share what you know
* Online website
  * Design
  * Messaging
  * Effort
  * Personal life
* Blog
* Resume
* It's not about being popular, it's about relationships and positioning yourself as an expert. People mix up their hatred for ""influencers"" with having a rock solid network of people who they can help and who can help them.

07:25 - A couple stories
* [@HenriHelvetica](https://twitter.com/HenriHelvetica)
  * You don't know how many times I've tried to convince (esp people of color) to try a lightning talk. This stuff gets you to research, and you might even make discoveries.
  * I know it's a step out of the comfort zone for many, and that's cool, but don't be upset at those who go for it, and land some work.
  * I do (did) lunch n learns @ Juno, and I started to end them w/ a post bootcamp life — tell them what it's like, and to be active on twitter (share what you read, what you're working on, listen to others, follow great devs, etc.). One person DM'd me to tell me she took that in and decided to try. ""I never forgot that time you gave a talk at HY and one thing that you emphasized was to make your voice known on Twitter. You said that this has opened many opportunities for you and that's been happening to me more and more recently. I never set out to build my account but the growth has indeed happened and along with it, opportunities from people I've never expected.""

09:40 - Ash Connolly
* [https://ashconnolly.com/](https://ashconnolly.com/)
[https://www.notion.so/ashconnolly/Ash-Connolly-321c5a65350f477897ed025f4daa1bb0](https://www.notion.so/ashconnolly/Ash-Connolly-321c5a65350f477897ed025f4daa1bb0)
* Software Engineer
* Using new tech with high end clients
* Review
    * Pros
      * Clean, simple design, but doesn't feel like it's missing something
      * Animations are a nice touch
      * Easy to see their work (e.g. photo, title, short paragraph, link)
      * Testimonials is good, I might change the word testimonials, but that's small
    * Cons
      * Nitpick - footer emphasis color looks like a link
      * HTML is good, but missing some semantic tags like <main>, <section>, <article>, too reliant on divs
  * Resume
    * Pros
      * Good idea of what Ash has accomplished (e.g. just by reading his summary, I'm left feeling impressed because of his client base and his extras like writing for FreeCodeCamp and Marvel Blog).
      * Work history - good way of describing what he did. ""Carried out performance audits and site speed improvements""
      * Links to writings and side projects
    * Cons
      * Lists Brad Frost as someone who shared his post. This feels a little weird.
      * Nitpick - CSS & CSS3, HTML & HTML5 on the languages. In 2021, just put HTML & CSS.
      * Work history - WAY way too much. Keep it to one sentence and three or four bullet points for each job. Ain't nobody gonna read all that.

20:48 - Matthew Bidwell
* [https://matty.dev/](https://matty.dev/)
* Backend dev
* Not focused on dev
* Review:
  * Banging domain
  * It's clear who he is, what he is about
  * Links to Twitter, Github and LinkedIn right away
  * Blog posts showing he knows what he's talking about

24:42 - Leah Lundqvist
* [https://leah.link](https://leah.link/)
* Review:
  * Pros
    * Fantastic aesthetics on site
    * Good lead paragraph
  * Cons
    * I'm not sure what work she actually does
    * Github pages are great for digging but not curation or showing off
      * Same with Twitter
    * For instance, I saw on Twitter that Leah made [https://app.airport.community/app/rec1CbVg4J5aqScUQ](https://app.airport.community/app/rec1CbVg4J5aqScUQ) but there was no mention of it anywhere else. A page full of the most recent / best projects with quick links is essential for anyone.
    * Don't make them hunt for it
  * Twitter review:
    * Unreal
    * Pinned tweet

31:04 - Ismail Ghallou
* [https://smakosh.com/](https://smakosh.com/)
* Best one yet
* Clear explanation right off the bat
* Dribbble - shows me he's up on the latest
* Open source
* Testimonials
* Talks
* Blog
* [https://twitter.com/smakosh](https://twitter.com/smakosh) - Twitter lines up
* Most recent tweets about tech

40:18 - Jhey Tompkins
* [https://jhey.dev/](https://jhey.dev/)
* Whimsey
* Sound!
* Good use of CSS and SVG animation

46:28 - Wes' website
* [wesbos.com](https://wesbos.com/)
* Can't view source
* Whimsey
* The right kind of animation
* The link to the Syntax podcast has no indication that it's going to take you offsite.
* The background image is good, but not as good with a wide browser.
* Custom scrollbars are nice
* Overall the site is a delight

53:25 - Scott's website
* [scotttolinski.com](https://www.scotttolinski.com/)
* Font's a little big
* Link to documentary is great
* Bio should include links
* Page animations are great
* Showing personal life / interests is good
* Super fast

## Links
* [https://twitter.com/wesbos/status/1350961135269400580](https://twitter.com/wesbos/status/1350961135269400580)
* [Syntax 298: Voice Coding is Really Good with Josh Comeau](https://syntax.fm/show/298/voice-coding-is-really-good-with-josh-comeau)
* [Josh Comeau](https://www.joshwcomeau.com/)
* [Doug DeMuro](https://www.youtube.com/channel/UCsqjHFMB_JYTaEnf_vmTNqg)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Swedish Dishcloths](https://amzn.to/2NhnGSU)
* Wes: [Paper Wheels Knife Sharpening System](https://amzn.to/3sCaDM8)

## Shameless Plugs
* Scott: [Testing with Cypress](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ae2ce579ec0cb7a399fc5afb628c62615cb138bac68ad0be7a00f2ac3cb5b303,we-review-resumes-websites-and-online-presence,/shows/326 - reviews.md,2023-10-16 20:07:30.100,2023-10-27 15:57:57.808,TASTY
syntax_podcast_show_00327,327,Hasty Treat - TypeScript Compilers and Build Tools,2021-02-15 14:00:00.264,https://traffic.libsyn.com/syntax/Syntax327.mp3,"
In this Hasty Treat, Scott and Wes talk about the differences between compilers and build tools in TypeScript.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:38 - What is a TypeScript compiler?
* Do we still need [Babel](https://babeljs.io/) / [WebPack](https://webpack.js.org/)?

07:49 - [Babel](https://babeljs.io/)
* Transpiler
* It doesn't do typechecking
* New JS features that aren't in TypeScript yet

10:22 - [SWC](https://swc.rs/)
* Rust based compiler
* Doesn't do type checking (yet)
* [https://github.com/swc-project/swc/issues/571](https://github.com/swc-project/swc/issues/571)

13:03 - [Deno](https://deno.land/)
* Uses tsc right now
* Might move to Rust
* [https://github.com/denoland/deno/issues/5432](https://github.com/denoland/deno/issues/5432)

13:36 - [Surcase](https://github.com/alangpierce/sucrase)
* [https://github.com/alangpierce/sucrase#transforms](https://github.com/alangpierce/sucrase#transforms)

14:46 - [ESBuild](https://esbuild.github.io/)
* Compiles, but doesn't do any type checking
* Fastest

17:39 - What about bundlers?
* [Parcel](https://parceljs.org/)
* [Snowpack](https://www.snowpack.dev/)
* [Webpack](https://webpack.js.org/)
* [ESBuild](https://esbuild.github.io/)
* When might you still need a bundler?
  * To handle different types of files that are non-standard
    * Like importing CSS and images
* Treeshaking
* Smaller bundle files
  * Typescript can concatenate to a single file, or all .js files, but smaller / smarter bundles still need a tool for that
* Polyfills
  * Typescript does convert to syntax, but will not polyfill features
  * Something like Promise
    * Syntax can be transpiled to old code
    * Methods like allSettled aren't

## Links
* [Syntax 324: TypeScript Fundamentals](https://syntax.fm/show/324/typescript-fundamentals)
* [Syntax 322: The Deno Show](https://syntax.fm/show/322/the-deno-show)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2ffb8e15b536d21aa6eaf41d86d750e6eb6096220554f305f943be30a137906d,hasty-treat-typescript-compilers-and-build-tools,/shows/327 - ts compilers.md,2023-10-16 20:07:30.158,2023-10-27 15:57:57.859,HASTY
syntax_podcast_show_00328,328,Potluck — Do titles matter? × Should clients pay for plugins? × Can I debug my baby? × How we prepare for Syntax × Deno × Learning things quickly × More!,2021-02-17 14:00:00.264,https://traffic.libsyn.com/syntax/Syntax328.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about job titles, clients and freelancing, debugging, the creative process behind the Syntax podcast, Deno, how to learn things quickly, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
01:17 - Do either of you have a pattern that you follow for rolling back Promise.all rejections? I am looking for an elegant way of reversing any promises that may have resolved before one was rejected. For instance, any db writes or 3rd-party webhooks that were created during the sign-up flow, but then need to be removed if one of the promises was rejected.

04:51 - I've been doing a bunch of client projects lately that use Gatsby with the WordPress API. I have the clients set up a hosting service for WordPress and a Netlify account connected to a GitHub repo on my account for Gatsby. What I'm struggling with is the idea of having to keep these repos on my GitHub account for as long as these sites are live. But it doesn't seem all that sensible to have these non-technical clients also set up their own GitHub account that they grant me access to for building these projects. Do you have any suggestions?

08:45 - Hey guys! Been listening to the podcast since I was starting out and it has been super helpful, entertaining, and hilarious. Two-part question. First, when would you consider a dev ""full-stack""? I work for a small company that does WordPress, GraphQL, Node, React, TypeScript...lots of variety. I was hired as a front-end dev, but have since done work in PHP and Node, and even my boss has assured me I do full-stack work. However, I am not being paid as a full-stack dev. Can't figure out if this is because I work part-time (I have a baby) or some other reason. Should I be asking for a raise as a part-time employee?

12:43 - When working freelance for a client, and you need to purchase something, for example the CPT UI plugin or something like WP Migrate DB Pro to help you build the site, do you either pay for it yourself and add it to the clients invoice at the end? Or do you ask them to pay for it when you need it? So many small ""gotchas"" I'm needing to get over!

18:02 - I just had a baby girl 4 months ago. When she is crying I sometimes catch myself trying to debug her to find out what is wrong. My wife thinks I am weird, but I guess I am just in the habit of trying to fix problems. Have you ever experienced this? 

22:17 - How do you prepare for the Monday and Wednesday podcast? What is it like, and what is the creative process behind it?

29:03 - How would one go about using JavaScript to load all images from a folder in order to render them dynamically on a page? I looked around and only see answers using jQuery and PHP. In the end I want my client to be able to drop images into (or remove them from) the images folder and the site would just populate the image slider with all the images. Is this problem solvable with JavaScript, or is it time to learn something new?

35:26 - I have a side project with a Node backend that sends out reminders to signed-up users about various deadlines that they opt-in to. It started out pretty small but as the user base is now in the thousands, I'm worried that my reminder send functionality won't be able to keep up with the increasing volume. It's basically just a daily CRON job that loops through users and finds the different notifications to send out - either through Twilio or Postmark. Is there a more efficient way to perform large CRON jobs such as this? Curious how each of you guys would tackle this problem.	

42:29 - Hey guys, great overview episode on Deno (ep 322). This got me thinking, again, of the proliferation of tools and technologies in our industry and ecosystems. Say we've already ""identified"" the technology or tool and now we need to get familiar. As course designers constantly exploring new tools and technologies, what are some ways you can most efficiently and productively grasp actionable understanding (i.e. shortest route to Neo's ""I know kung-fu"")? And can you share any ""hacks"" or ""pro-tips"" that can help surmount that initial learning curve and tech-stack fatigue?

## Links
* [SnipCart](https://snipcart.com/)
* [Syntax 228: More on Severless - Databases × Files × Secrets × Auth × More!](https://syntax.fm/show/228/more-on-severless-databases-files-secrets-auth-more)
* [FileReader API](https://developer.mozilla.org/en-US/docs/Web/API/FileReader)
* [Syntax 322: The Deno Show](https://syntax.fm/show/322/the-deno-show)
* [Syntax 044: How To Learn Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)
* [Twilio](https://www.twilio.com/)
* [Postmark](https://postmarkapp.com/)
* [Begin.com](https://begin.com/)
* [RabbitMQ](https://www.rabbitmq.com/)
* [Syntax 035: Keeping Up with the Codeashians. Dealing with our fast paced industry.](https://syntax.fm/show/035/keeping-up-with-the-codeashians-dealing-with-our-fast-paced-industry)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Hario Filter-In Cold Brew Tea Bottle](https://amzn.to/3oqyvyQ)
* Wes: [Slonik USB Headlamp](https://www.amazon.com/s?k=slnoik+us+led+headlamp&ref=nb_sb_noss)

## Shameless Plugs
* Scott: [Testing With Cypress](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c0dc5739cad8723548a3d4d06b80b9505d8e5ae05cf89e0785a3cc63c4d4f589,potluck-do-titles-matter-should-clients-pay-for-plugins-can-i-debug-my-baby-how-we-prepare-for-syntax-deno-learning-things-quickly-more,/shows/328 - potluck.md,2023-10-16 20:07:30.209,2023-10-27 15:57:57.910,TASTY
syntax_podcast_show_00329,329,Hasty Treat - The Future of Testing with Cypress,2021-02-22 14:00:00.062,https://traffic.libsyn.com/syntax/Syntax329.mp3,"
In this Hasty Treat, Scott and Wes talk about the future of testing with Cypress — what it is, how to use it, and more!

## Deque - Sponsor
Deque’s free axe browser extension helps developers instantly catch 50% of accessibility bugs while they code. It’s lightweight, easy-to-use, and has zero false positives. Get started for free at [deque.com/axe](https://deque.com/axe/?utm_source=syntax&utm_medium=podcast&utm_campaign=axe_extension).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:55 - What Is Cypress?
* A visual testing studio that uses a jQuery-like syntax to test your application in browser.
* Very modern testing solution.

07:36 - Used to be only Chrome
* Now available for Safari, Firefox, Edge, etc.

???? - What frameworks is it for?
* Literally anything that runs on a URL in the browser. Cypress just looks at a URL, executes the commands and then checks the results.
* Can also run on ci/cd via a headless mode.
* React component testing is experimental.

10:58 - Automation
* Cypress studio new feature that writes tests for you.

12:37 - Data
* Intercept + Fixtures or through plugins

15:01 - Cost?
* It's free! 
* There is a paid product called Cypress Dashboard that allows you to record tests long-term.

## Links
* [Cypress](https://www.cypress.io/)
* [bos.af](https://bos.af/)
* [Jest](https://jestjs.io/)
* [Better Touch Tool](https://folivora.ai/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",05bf62913eeb66abe034d6cc4e4afc1fa22959a64c71d80bf8daa9d2d3d2544d,hasty-treat-the-future-of-testing-with-cypress,/shows/329 - cypress.md,2023-10-16 20:07:30.289,2023-10-27 15:57:57.956,HASTY
syntax_podcast_show_00330,330,React Query + More React with Tanner Linsley,2021-02-24 14:00:00.905,https://traffic.libsyn.com/syntax/Syntax330.mp3,"
In this episode of Syntax, Scott and Wes talk with Tanner Linsley about React Query, how it works, why you might want to use it, and more!

## Deque - Sponsor
Deque’s free axe browser extension helps developers instantly catch 50% of accessibility bugs while they code. It’s lightweight, easy-to-use, and has zero false positives. Get started for free at [deque.com/axe](https://deque.com/axe/?utm_source=syntax&utm_medium=podcast&utm_campaign=axe_extension).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Guests
* [Tanner Linsley](https://tannerlinsley.com/)

## Show Notes
01:56 - What do you do?
* [nozzle.io](https://nozzle.io/)
* [React Query](https://react-query.tanstack.com/)

06:04 - What is React Query?

24:19 - How does React Query use dev tools?

31:20 - What about React Context?

36:59 - Server-rendered components?

42:40 - Thoughts on static sites?

50:38 - What is the stack?

## Links
* [Redux](https://react-redux.js.org/)
* [Axios](https://github.com/axios/axios)
* [Syntax 206: State Machines, CSS and Animations with David K Piano](https://syntax.fm/show/206/state-machines-css-and-animations-with-david-k-piano)
* [RTK Query](https://rtk-query-docs.netlify.app/)
* [Relay](https://relay.dev/)
* [Remix](https://remix.run/)
* [Twin.macro](https://github.com/ben-rogerson/twin.macro)
* [Tailwind CSS](https://tailwindcss.com/)
* [React Static](https://github.com/react-static/react-static)
* [Next](https://nextjs.org/)
* [TanStack](https://tanstack.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Tanner: [React Query - Essentials Course](https://learn.tanstack.com/)
* Scott: [Govee TV LED Backlights](https://www.amazon.com/Backlights-Govee-Compatible-Lighting-Calibrate/dp/B07JKVKZX8)
* Wes: [1Password](https://1password.com/)

## Shameless Plugs
* Tanner: [Nozzle.io](https://nozzle.io/)
* Scott: [Testing with Cypress](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",42c70bdada3af6ce575e4e3de3153c729b2cc3f45471eb2a8d0e6cd3a54d6241,react-query-more-react-with-tanner-linsley,/shows/330 - react query.md,2023-10-16 20:07:30.378,2023-10-27 15:57:58.005,TASTY
syntax_podcast_show_00331,331,Hasty Treat - Hireable Skills for 2021,2021-03-01 14:00:00.422,https://traffic.libsyn.com/syntax/Syntax331.mp3,"
In this Hasty Treat, Scott and Wes talk about hireable skills or 2021 — what you need to know to get a job and grow in your career this year!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes
04:17 -  Code in general
* Clean, commented, organized
* Take the extra hour before an application and polish it

06:10 - JS
* Basics of the language - storing data in Arrays and Objects
* Looping and flow control
* Array methods
* Promises + async await
* DOM basics - select an element, listen for clicks, update elements
* Node basics
  * Most of your JS basics apply here
  * Read Files, write files
  * Fetch data and return it

08:38 - CSS
* Attention to detail - pixel-perfect replication of designs
* Works well on mobile
* No reliance on libraries - complete reliance on Bootstrap or Tailwind is a red flag. If you use these things, explain clearly why they are useful to you (e.g. augment your skills, not relied on).

12:54 - Real-world libraries
* One of the following: React, Vue, Angular
* Node.js - sending Server data as a response
  * JSON
  * Express, Next.js
* Popular helper libs
  * Date functions / Moment (Moment is old but its still 2x more popular)
  * Lodash
* CSS
  * Scoped CSS
  * Pattern libraries

17:15 - What about data structures and algorithms?
* Yes you obviously need to know about arrays and objects - probably maps and sets too
* Links lists? Tree structures? Traversal?
* [https://twitter.com/wesbos/status/1353729683486076930](https://twitter.com/wesbos/status/1353729683486076930)

20:26 - Soft skills
* Know how to talk to PMs and other devs.
* Know how to stay on top of timelines and schedules while communicating.
* You won't last long in any work environment where you aren't able to fit in.
* Many devs sometimes get a big head about doing tech - this is not something you want to emulate. Ignore any kind of internal ""us vs them"" attitude. It's about the big picture and you'll go further.
* Write good, short, emails that don't sound like you are mad.

## Links
* [LeetCode](https://leetcode.com/)
* [Syntax 117: Hasty Treat - How To Email Busy People](https://syntax.fm/show/117/hasty-treat-how-to-email-busy-people)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3d1c7e91143960a1ffba86e3bd8452af681b774d95cf5ae7022c642674c1ad69,hasty-treat-hireable-skills-for-2021,/shows/331 - hireable skills.md,2023-10-16 20:07:30.625,2023-10-27 15:57:58.107,HASTY
syntax_podcast_show_00332,332,Syntax Desk Setups,2021-03-03 14:00:00.422,https://traffic.libsyn.com/syntax/Syntax332.mp3,"
In this episode of Syntax, Scott and Wes talk about their desk setups and how they've evolved, both as coders and video and course creators.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Hasura - Sponsor
With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Show Notes
03:36 - Desk
* Scott
  * Ikea countertop on [Jarvis Legs](https://www.amazon.com/Jarvis-Standing-Desk-Frame-Only/dp/B01N023V8B).
    * Four presets - sit, stand, horse stance, lunge
* Wes
  * 8' Ikea Butcher Block countertop on legs
  * [LackRack](https://wiki.eth0.nl/index.php/LackRack) on wheels underneath
  * Desk at cottage is Maple Live Edge Slab on Hairpin Legs

09:01 - Chair
* Scott
  * [Steelcase Gesture](https://www.steelcase.com/products/office-chairs/gesture/)
* Wes
  * [Polished Aluminum Herman Miller Aeron](https://www.amazon.com/gp/product/B000LTAO8S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B000LTAO8S&linkCode=as2&tag=webo080-20&linkId=6G4M6ZR4CYKT3TM5)
  * [Roller Blade Wheels!](https://amzn.to/35zIwUF)

15:39 - Display
* Scott
  * [Vivo Stand](https://amzn.to/3czP2hB)
  * [38"" LG Curved Ultrawide](https://amzn.to/3am5JKF)
  * [Vissles-M, Portable Touchscreen Monitor](https://amzn.to/3pDpiop)
  * [BenQ Monitor Light](https://www.benq.com/en-us/lamps/computer-desklamp.html)
* Wes
  * [LG 32"" 4k Ultra HD](https://amzn.to/2SYuX8G)
  * [Dell Ultra HD 4k Monitor](https://www.amazon.com/gp/product/B00PC9HFO8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B00PC9HFO8&linkCode=as2&tag=webo080-20&linkId=5VCVP6ZUPF5GLCUJ)
  * [Rain Design 10032 mStand Laptop Stand](https://www.amazon.com/gp/product/B000OOYECC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B000OOYECC&linkCode=as2&tag=webo080-20&linkId=XWDACWNC2JWRF3DQ)

22:49 - Headphones
* Scott
  * [Ultrasone](https://ultrasone.com/)
* Wes
  * [QC35s](https://www.amazon.com/Bose-QuietComfort-Wireless-Headphones-Cancelling/dp/B0756CYWWD) w/ Wicked Cushions - wish they charged over Wireless

24:58 - Mouse + Keyboard
* Scott
  * [Keychron K3 with optical](https://www.keychron.com/pages/keychron-k3-wireless-mechanical-keyboard)
  * [Apple Magic Trackpad](https://www.apple.com/shop/product/MJ2R2LL/A/magic-trackpad-2-silver)
* Wes
  * [Apple Magic Keyboard - extended in Space Grey](https://www.apple.com/shop/product/MRMH2LL/A/magic-keyboard-with-numeric-keypad-us-english-space-gray)
  * [Logitech Mx2](https://www.amazon.com/Logitech-Master-Wireless-Mouse-Rechargeable/dp/B071YZJ1G1)

29:18 - Laptop
* Both
  * [MacBook Pro](https://www.apple.com/macbook-pro-16/)

33:43 - Dock + Connecting it all together
* Scott
  * [Caldigit TS3+](https://www.amazon.com/dp/B07CZPV8DF/)
  * [Satechi USB-C Slim Multi-Port with Ethernet Adapter](https://www.amazon.com/Satechi-USB-C-Multi-Port-Ethernet-Adapter/dp/B083XPXN9D)
  * Under desk rack
* Wes
  * Everything is in a [Lackrack](https://wiki.eth0.nl/index.php/LackRack)
  * [Caldigit TS3+](https://www.amazon.com/dp/B07CZPV8DF/)
  * Single Cable Hookup
  * Two monitors
  * 6+ webcams
  * [Elgato CamLink](https://www.amazon.com/Elgato-Cam-Link-Broadcast-Camcorder/dp/B07K3FN5MR)
  * 2 HDDs
  * Microphone
  * [Amazon Powered USB Hub](https://www.amazon.com/s?k=amazon+basics+powered+usb+hub)
  * [Startech Rack Mounted Power Strip](https://www.amazon.com/StarTech-com-Horizontal-Rack-Mount-PDU/dp/B0035PS5AE/)

41:36 - Camera + Capture
* Scott
  * [Sony a7 iii](https://www.amazon.com/Sony-Full-Frame-Mirrorless-Interchangeable-Lens-ILCE7M3/dp/B07B43WPVK)
  * [Elgato CamLink](https://www.amazon.com/Elgato-Cam-Link-Broadcast-Camcorder/dp/B07K3FN5MR)
* Wes
  * [Sony RX100 iii](https://www.amazon.com/Sony-Premium-Compact-F1-8-2-8-DSCRX100M3/dp/B00K7O2DJU/ref=sr_1_1?dchild=1&keywords=Sony+RX+iii&qid=1614484946&s=electronics&sr=1-1)

44:11 - Microphone + Capture
* Scott
  * [Audient Nero Monitor Controller](https://audient.com/products/monitor-controllers/nero/overview/)
  * [M-Audio BX8](https://m-audio.com/products/view/bx8-d2)
  * [EV RE20](https://www.amazon.com/Electro-Voice-RE20-Broadcast-Microphone-Variable-D/dp/B00KCN83V8)
  * [Focusrite Scarlett 2i2](https://www.amazon.com/Focusrite-Scarlett-Audio-Interface-Tools/dp/B07QR73T66/)
  * [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Channel-Processor/dp/B004LWH79A/)
  * [Cloudlifter CL-1](https://www.amazon.com/Cloud-Microphones-CL-1-Cloudlifter-1-channel/dp/B004MQSV04/)
  * [BSW RE320POP](https://www.bswusa.com/Pop-Filters-BSW-RE320POP-P7872.aspx)
* Wes
  * [Heil PR40]() + shock mount, boom arm, pop filter
  * [Focusrite Scarlett 2i2](https://www.amazon.com/Focusrite-Scarlett-Audio-Interface-Tools/dp/B07QR73T66/ref=sr_1_2?dchild=1&keywords=Scarlett+Focusrite+2i2&qid=1614485127&s=musical-instruments&sr=1-2)
  * [ART EQ 351](https://www.amazon.com/ART-351-31-Band-Graphic-Equalizer/dp/B0002E50U4)
  * [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Channel-Processor/dp/B004LWH79A/)
  * [BSW RE320POP](https://www.bswusa.com/Pop-Filters-BSW-RE320POP-P7872.aspx)

49:06 - Lighting
* Scott
  * [Neewer Bi-Color 480 LED](https://www.amazon.com/Neewer-Packs-Dimmable-Bi-Color-Lighting/dp/B072Q3DYXR/)
  * Traditional three-point lighting (key, fill, backlight)
  * [Philips Hue](https://www.philips-hue.com/en-us) above for color pop

* Wes
  * [Neewer Bi-Color 480 LED](https://www.amazon.com/Neewer-Packs-Dimmable-Bi-Color-Lighting/dp/B072Q3DYXR/) on a [Wyze Plug](https://www.amazon.com/Wyze-Labs-WLPP1-Smart-Two-Pack/dp/B07XZT24B8)
  * Two Backfill LED Color lights
  * [BenQ Screenbar](https://www.benq.com/en-us/lamps/computer-desklamp.html)

55:22 - Storage / Backup / Home Server
* [Syntax 220: The Synology Show - Backups and Home Server](https://syntax.fm/show/220/the-synology-show-backups-and-home-server)
* Scott
  * [Synology DS918+ 8TB](https://www.amazon.com/Synology-DiskStation-Business-Celeron-Operating/dp/B07ZKZLVWH/)
* Wes
  * [Synology DS918+ 16TB](https://www.amazon.com/Synology-DiskStation-DS1819-Storage-Operating/dp/B08512DQ7H/) (DS920+ is the latest)
  * 16TB of drives - I don't use anywhere NEAR that
  * [LaCiE Rugged](https://www.amazon.com/s?k=LaCiE+Rugged&i=electronics&ref=nb_sb_noss) or [WD Passport](https://www.amazon.com/s?k=wd+passport&i=electronics&ref=nb_sb_noss_2) for Time Machine

57:50 - Other / Wish list
* Scott
  * [ReMarkable 2 tablet](https://remarkable.com/store/remarkable-2)
  * [Apple Pro Display XDR](https://www.apple.com/pro-display-xdr/)
* Wes
  * [Mindnode](https://mindnode.com/)
  * [Elgato Stream Deck](https://www.amazon.com/Elgato-Stream-Deck-Controller-customizable/dp/B06XKNZT1P)
  * [LG 5K2K Curved Display](https://youtu.be/WKTCH1FIsJM)

## Links
* [GraphQL Code Generator](https://graphql-code-generator.com/)
* [KeystoneJS](https://www.keystonejs.com/)
* [BSW](https://www.bswusa.com/)
* [Ikea Lack Side Table](https://www.ikea.com/us/en/p/lack-side-table-black-20011408/)
* [Better Touch Tool](https://folivora.ai/)

## Shameless Plugs
* Scott: [Testing with Cypress](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React](https://advancedreact.com) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",caf5995d630badff987445ae7a9becf6616d49a65f90469ff4ee668cf902b653,syntax-desk-setups,/shows/332 - desk setups.md,2023-10-16 20:07:30.664,2023-10-27 15:57:58.171,TASTY
syntax_podcast_show_00333,333,Hasty Treat - Ask Us Anything!,2021-03-08 14:00:00.016,https://traffic.libsyn.com/syntax/Syntax333.mp3,"
In this Hasty Treat, Scott and Wes are doing an AMA — answering questions about self-employment, time-management, course creation, Clubhouse, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:41 - What do you miss about NOT being self-employed? What are some UNEXPECTED perks of being self-employed?

05:47 - Hypothetically, what would a LinkedIn recruiter need to say to pull you away from your current development work, and possibly even the podcast?

09:08 - What percentage of your time do you guys spend doing work for clients vs your own courses/projects?

10:04 - Do you still do most of your work yourself, or do you outsource some parts of it? (work can be anything related to your business, not just making the courses)

12:48 - Could you all talk about protected/private routes in [Next.js](https://nextjs.org/)? I’m coming from [create react app](https://reactjs.org/docs/create-a-new-react-app.html) type routing.

16:07 - What would be doing for a living if not a developer?

17:50 - What do you think about [Clubhouse](https://www.joinclubhouse.com/)? Are you guys planning to talk over there some time?

24:18 - [Vue](https://vuejs.org/) or [React](https://reactjs.org/)? Which do you think will be the top? And should developers learn both?

## Links
* [https://twitter.com/aaronendsley/status/1361375032342110210](https://twitter.com/aaronendsley/status/1361375032342110210)
* [Svelte](https://svelte.dev/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ae8bd7576cb1c073842465817b5128ee44af2c4dac4832059ab4d13194c71fb2,hasty-treat-ask-us-anything,/shows/333 - ask us anything.md,2023-10-16 20:07:30.706,2023-10-27 15:57:58.236,HASTY
syntax_podcast_show_00334,334,Potluck — VSCode × Vercel vs Netlify × Models × Mutations × Multi-Vendor Platforms × Websites vs Web Apps × More!,2021-03-10 14:00:00.016,https://traffic.libsyn.com/syntax/Syntax334.mp3,"
It's another potluck! In this episode, Scott and Wes answer your questions about VSCode, Vercel vs Netlify, staying up to date with dev concepts, models and mutations, websites vs seb apps, adaptive vs responsive design, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Vonage - Sponsor
Vonage is a Cloud Communications platform that allows developers to integrate voice, video and messaging into their applications using their communication APIs. Whether you’re wanting to build video calls into your app, create a Facebook bot, or build applications on top of programmable phone numbers, you’ll have all the tools you need. Use promo code SYNTAX10 for €10 of free credit when signing up at [vonage.dev/syntax](https://vonage.dev/syntax).

## Show Notes
02:10 - Sometimes in [VSCode](https://code.visualstudio.com/) when intellisense tells us the [TypeScript](https://www.typescriptlang.org/) type of a variable, it just gives the name of the type rather than how the type is defined. This is annoying for objects as I want to know what fields it contains! How do you handle this? Is there some VSCode magic to make it show the full type definition or is there some way to bring up the definition in the .d.ts file?

04:55 - What techniques do you guys use to keep different tech stack requirements fresh between projects?

10:35 - How do you feel about [Vercel](https://vercel.com/) vs. [Netlify](https://www.netlify.com/)? Pros/cons? Thanks!

18:32 - Should a model name be singular or plural?

22:57 - I've just listened to the [CSS Typography and Systems Hasty Treat](https://syntax.fm/show/319/hasty-treat-css-typography-and-systems), and realized that we often try to apply website design to web apps (me at least). Can you elaborate on the differences in designing for a website and for a web app?

25:46 - What's the difference between adaptive and responsive design?

32:40 - Multi-vendor platforms? Have you done it before? A partner and I, are planning to build a peer-2-peer platform (similar to Etsy and Amazon, where users can register as a merchant or a buyer). What is the easiest way to make payment transactions (Stripe or PayPal)? Do you know any frameworks that will make my life easier?

36:16 - Is there a golden rule for mutations? I've been using GraphQL for last couple of months, and everything is great as long as I'm just fetching data. When I need to write mutations, the story gets murky. Looking around internet, there are not too many best practices to be found - most of the articles and blogs focus on data fetching.

42:19 - What do you think about the future of [Svelte](https://svelte.dev/)? I know they are replacing [Sapper](https://sapper.svelte.dev/) with [SvelteKit](https://github.com/sveltekit), which uses [Snowpack](https://www.snowpack.dev/). What direction do you think Svelte will go in?

45:32 - How can I get back into a habit of learning new things and stop heavily relying on video tutorials all the time? I really struggle to sit down and read for long periods of time. Also have you guys came across the Genesis framework, and if so, could you recommend any learning material? Thanks.

48:54 - My team uses [handlebars](https://handlebarsjs.com/) templates for generating newsletters. The content is coming from a CMS for generating final HTML. I'm fairly new to handlebars and [mustache](https://mustache.github.io/) syntax, so instead of learning handlebars I'm thinking about using [React](https://reactjs.org/) to generate the html on server side. I see some great potential here as the entire team is well-versed with React. What is your opinion about this?

## Links
* [VSCode Peek Definition](https://code.visualstudio.com/docs/editor/editingevolved#_peek)
* [Obsidian](https://obsidian.md/)
* [Render](https://render.com/)
* [Adam Wathan](https://adamwathan.me/)
* [Gumroad](https://gumroad.com/)
* [Braintree](https://www.braintreepayments.com/)
* [MJML](https://mjml.io/)
* [https://github.com/unlayer/react-email-editor](https://github.com/unlayer/react-email-editor)
* [Redwings shoes](https://www.redwingshoes.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Tosowoong Enyme Powder Wash](https://amzn.to/3tDFcRZ)
* Wes: [Carhartt Gloves](https://amzn.to/2N5n16T)

## Shameless Plugs
* Scott: [Testing with Cypress](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React Course](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",185e0da39e7af050d29c18fa15f6ae613fa67fcb62608a5589f94136e63b3b7f,potluck-vscode-vercel-vs-netlify-models-mutations-multi-vendor-platforms-websites-vs-web-apps-more,/shows/334 - potluck.md,2023-10-16 20:07:30.750,2023-10-27 15:57:58.293,TASTY
syntax_podcast_show_00335,335,Hasty Treat - Environmental Variables,2021-03-15 13:00:00.954,https://traffic.libsyn.com/syntax/Syntax335.mp3,"
In this Hasty Treat, Scott and Wes talk about environment variables — what they are, where you should keep them, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:54 - What are they?
* API Keys
* Secrets
* Database URLs
* NODE_ENV

06:16 - Type of env variables
* Plain text
* Encrypted
* Frontend
* Backend
* .env files
  * `.env` is a good package for all langs
  * `.env.local`
* Framework env variables
* System env variables
* Host-provided variables

16:20 - Where should you keep them?
* [1Password](https://1password.com/)
* [1Password CLI](https://1password.com/downloads/command-line/)

17:34 - Other gotchas
* Netlify Limit is 4096
* Netlify needs a clear cache before it works
* `THING=yo node index.js`
* [cross-env](https://github.com/kentcdodds/cross-env)
* NODE_OPTIONS=""--inspect""
* Require before run

## Links
* [Digital Ocean App Platform](https://www.digitalocean.com/docs/app-platform/)
* [Render](https://render.com/)
* [Vercel](https://vercel.com/)
* [Netlify](https://www.netlify.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",592162a8636b293244e9eb18a534e3243a1eebc0f17720c1d40e1087cab8e8dc,hasty-treat-environmental-variables,/shows/335 - env variables.md,2023-10-16 20:07:30.792,2023-10-27 15:57:58.343,HASTY
syntax_podcast_show_00336,336,How To Build Your Own Auth,2021-03-17 13:00:00.954,https://traffic.libsyn.com/syntax/Syntax336.mp3,"
In this episode of Syntax, Scott and Wes talk about building your own authentication — diving deep into JWT, sessions, tokens, cookies, local storage, CSRF, and how it all works!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Hasura - Sponsor
With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Show Notes
01:51 - Overview
* [Level Up](https://www.leveluptutorials.com/) uses a [JWT](https://jwt.io/) & secure cookie-based authentication and tracks sessions via a db table.
* [Accounts.js](https://www.accountsjs.com/)

05:13 - [JWT](https://jwt.io/)
* Base 64 encoded (not encrypted) token that contains data. We have both `accessToken`s and `refreshToken`s.
* JWT has three parts:
  * Header
    * What kind of algo was used
  * Payload
    * Data about the user
    * Email
    * Username
    * UserID
    * refreshToken, authToken, sessionId
  * Signature
    * This ensures that no one monkeyed with the above parts. If you change your email in the payload, the signature is not invalid, because in order to generate the signature, it uses the header and payload as part of it.
* accessToken
  * A short lived JWT that containsthe `sessionToken`, `userId` and expires after 90min.
* refreshToken
  * A long lived JWT that contains just the `sessionToken` and doesn't expire.
* JWT can be decoded and read, but you have to encode them with your secret. 
* JWT can be stored anywhere, there are two main places:

20:26 - Cookies
* We use httpOnly, secure cookies to store the accessToken and the refreshToken. The accessToken is a session cookie and is removed whenever the browser is closed. The refreshToken is valid for 100 days but is also re-created and revalidated for 100 more days each time the accessToken is generated.
* Because these are httpOnly cookies, they cannot be accessed by JavaScript in the client and can only be set and removed on the server.
* Note: Safari has stricter rules than others for same domain cookies (e.g. `localhost` won't work).

34:26 - Sessions
* Sessions are when a user logs in on a device. If you open a phone and log in and a computer and log in, those will create two different sessions. A session contains information about the user's connection (like their IP) but it also contains the userId which allows us to create new accessTokens from a valid session.
* Sessions can be valid or invalid. This allows us to log anyone out by setting their session to valid: false.
* Sessions also have `sessionToken` which are generated on authentication or create account.

38:10 - [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
* Cross-origin-resource-sharing
* Can be super tricky to get working cross-domain
* You usually have to actually visit the website for the cookie to be set, even with lax cors

46:06 - [CSRF](https://developer.mozilla.org/en-US/docs/Glossary/CSRF)

48:47 - Authentication process
* [bcrypt.js](https://www.npmjs.com/package/bcryptjs)

52:13 - Helper Packages
* [NextAuth.js](https://next-auth.js.org/) is super easy
* [Passport.js](http://www.passportjs.org/)
* [auth0](https://auth0.com/)

## Links
* [Caddy](https://caddyserver.com/)
* [Fastify](https://www.fastify.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [reMarkable 2](https://remarkable.com/store/remarkable-2)
* Wes: [Opration Odessa](https://www.netflix.com/title/80202236)

## Shameless Plugs
* Scott: [Node Fundamentals Authentication](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",03f2f99422430c9c248052b309b6fa9a6223b6b577ec04ed90cdaf0ec9b22d89,how-to-build-your-own-auth,/shows/336 - auth.md,2023-10-16 20:07:30.840,2023-10-27 15:57:58.408,TASTY
syntax_podcast_show_00337,337,Hasty Treat - Effortless Custom GraphQL with GraphQL Codegen,2021-03-22 13:00:00.377,https://traffic.libsyn.com/syntax/Syntax337.mp3,"
In this Hasty Treat, Scott and Wes talk about GraphQL tooling, and specifically a couple tools we use that will change your experience with GraphQL.

## .TECH Domains - Sponsor
.TECH is taking the tech industry by storm. A domain that shows the world what you are all about! If you're looking for a domain name for your startup, portfolio, or your own project like we did with uses.tech, check out .tech Domains. Syntax listeners can snap their .TECH Domains at 80% off on five-year registration by visiting [go.tech/syntaxistech](https://go.tech/syntaxistech) and using the coupon code ""syntax5"".

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:38 - What is it?
* [https://graphql-code-generator.com/](https://graphql-code-generator.com/)
* Code generation for GraphQL APIs

04:34 - What can it do?
* Generate React hooks for any of the major player Apollo client ([urql](https://github.com/FormidableLabs/urql))
* Types for the full stack — resolvers, mutations

07:49 - How we use it
* Generate a schema file to keep client and server in sync in mono repo
* Creates all React Hooks
* Generates all types for both resolvers, and anything client-side

## Links
* [React Query](https://react-query.tanstack.com/)
* [Apollo](https://www.apollographql.com/)
* [Typescript](https://www.typescriptlang.org/)
* [Cypress](https://www.cypress.io/)
* [https://periqles.herokuapp.com/](https://periqles.herokuapp.com/)
* [https://the-guild.dev/](https://the-guild.dev/)
* [Swagger](https://swagger.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d9f6bad9cc6a85509705371a29d3e534f7ac9dc7c2c5626dbf41e300dc8f1ab7,hasty-treat-effortless-custom-graphql-with-graphql-codegen,/shows/337 - graphql codegen.md,2023-10-16 20:07:30.877,2023-10-27 15:57:58.458,HASTY
syntax_podcast_show_00338,338,Syntax Highlight (We Review Your Portfolio),2021-03-24 13:00:00.377,https://traffic.libsyn.com/syntax/Syntax338.mp3,"
It's another Syntax Highlight. In this episode, Scott and Wes take a look at portfolios and websites and evaluate them from the perspective of a hiring manager.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes
04:50 - [https://shaquilhansford.com/](https://shaquilhansford.com/)
* Not optimized for desktop
* Lots of spacing issues overall
* Too many accordions - could be lists in multiple columns
* Social links could be in the footer
* Twitter is on point - [iwantyoutohire.me](http://iwantyoutohire.me)
* Phone number on website is good

11:31 - [https://www.benlammers.dev/](https://www.benlammers.dev/)
* Gimmy dat yellow
* The design and polish is really good
* Data URI images can overload CPU
* Semantic headings, but HTML should use some work
  * Four H1s on the page
  * 20 H2s
  * 40 H3s
  * Main tag

20:28 - [https://www.zubairaziz.com/](https://www.zubairaziz.com/)
* Lots of empty space
* Photo is key
* Not sure what to do when I land on the page
* Blog is nice, but two posts from May - add more or drop it
* Portfolio is just enough
* Nav animation should only happen on initial load

29:39 - [https://codebyfil.dev/](https://codebyfil.dev/)
* This is a great example of something that is good, but needs a bit of polish
* Tone down the border radius
* Tone down the box shadow
  * Border and drop shadow
* Images aren't links
* Footer padding or space - contact is ridding the bottom
* Scott's HTML breakdown
  * Four H1s
  * Six H2s
  * Four H3s
  * 18 H4s
  * Five H5s

37:39 - [https://www.johngeorgesample.com/](https://www.johngeorgesample.com/)
* Clean but maybe too clean
* Nav is too distractingly too big
* Need active link indicator in main nav
* div div div div - take a look at those semantic HTML tags
  * No H1 or H2
  * HTML needs work brother
* Use &times; instead of X
* Asterisk doesn't work on mobile

46:52 - [https://stordahl.dev/](https://stordahl.dev/)
* Great images
* Nice typography
* Sign-up for newsletter is great
* Store = A+
* Scott's HTML breakdown
  * Two H1s, one of which is just nice to meet you
  * Zero H2s
  * Articles should be articles
  * No section
* 1px move on hover is nice - could use a transition

## Links
* [Axe Accessibility Testing](https://www.deque.com/axe/)
* [Gatsby](https://www.gatsbyjs.com/)
* [Next.js](https://nextjs.org/)
* [https://feathericons.com/](https://feathericons.com/)
* [Snipcart](https://snipcart.com/)
* [GeoGuessr](https://www.geoguessr.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Walkabout Mini Golf](https://www.mightycoconut.com/minigolf)
* Wes: [60w Portable Charger](https://amzn.to/2ZHrQGs)

## Shameless Plugs
* Scott: [Node Fundamentals Authentication](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",be32d524343aa0063134c7808f1b374cc8cf2f92efd13765223a5e38fecf19ff,syntax-highlight-we-review-your-portfolio,/shows/338 - syntax highlight.md,2023-10-16 20:07:30.924,2023-10-27 15:57:58.514,TASTY
syntax_podcast_show_00339,339,Hasty Treat - What is the n+1 problem?,2021-03-29 13:00:00.832,https://traffic.libsyn.com/syntax/Syntax339.mp3,"
In this Hasty Treat, Scott and Wes talk about a common problem you'll encounter in your development career — the n+1 problem.

## Hasura - Sponsor
With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io/) and using the coupon code TASTYTREAT during sign up.

## Show Notes
05:00 - What is the n+1 problem?
* The N+1 problem can happen in any language but is especially prevalent in [GraphQL](https://graphql.org/) because it's so easy to query relationships.

09:33 - The solution
* The solution to the n+1 problem is to batch the queries. As you loop over each podcast, keep an array of host IDs to lookup. Once you have looped over the podcasts, make a single query to the database with your large array of podcast host Ids.

11:11 - Should you care?
* Sometimes no: its often fine to do multiple DB Calls
* [Facebook DataLoader](https://github.com/topics/facebook-dataloader)
* [Mercurious](https://github.com/mercurius-js/mercurius)
* Many ORMs take care of this for you
  * These then break it down into my appropriate SQL
  * [MongoDB](https://www.mongodb.com/) Ruby: eager loading
  * [Laravel ORM](https://laravel.com/docs/5.0/eloquent) does it
  * Aggregation pipelines
* Prisma N+1: [https://www.youtube.com/watch?v=7oMfBGEdwsc&vl=en](https://www.youtube.com/watch?v=7oMfBGEdwsc&vl=en)
* [Mongoose Populate](https://mongoosejs.com/docs/populate.html)
* [Apollo Studio](https://studio.apollographql.com/login)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3e2e20f4012e3b0f358d99221d823f428bc6c53ee56979cde5c34d36cbf584bb,hasty-treat-what-is-the-n-1-problem,/shows/339 - n1.md,2023-10-16 20:07:30.964,2023-10-27 15:57:58.563,HASTY
syntax_podcast_show_00340,340,Servers with Matt from Caddy,2021-03-31 13:00:00.832,https://traffic.libsyn.com/syntax/Syntax340.mp3,"
In this episode of Syntax, Scott and Wes talk Matt Holt about Caddy, SSL, web servers, best practices, and more!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Guests
* [Matt Holt](https://twitter.com/mholt6)

## Show Notes
02:08 - Who are you and what do you do?

03:22 - Why would you want to build a web server?

08:45 - How do SSL certs work?

14:03 - Why do you even need a web server?

23:03 - Is it better to have a web server serve your images?

20:31 - What is load balancing and why might you need it?

31:35 - Is server administration a lost art?

38:03 - What is a sidecar proxy?

38:50 - How do chron jobs work?

39:50 - Why is GO so fast? Why is it good?

46:32 - Should every website have an SSL certificate?

## Links
* [Floss Weekly 364](https://twit.tv/shows/floss-weekly/episodes/364)
* [Caddy](https://caddyserver.com/)
* [Let's Encrypt](https://letsencrypt.org/)
* [Certbot](https://certbot.eff.org/)
* [PM2](https://pm2.keymetrics.io/)
* [https://doesmysiteneedhttps.com](https://doesmysiteneedhttps.com/)
* [Tello Drone](https://amzn.to/2PeZXUe)

## ××× SIIIIICK ××× PIIIICKS ×××
* Matt: [LG Stick Vacuum](https://www.amazon.com/s?k=LG+Stick+Vaccum&ref=nb_sb_noss)
* Scott: [Alen Pure BreatheSmart Air Purifier](https://amzn.to/3uE8nFb)
* Wes: [Tello EDU](https://www.ryzerobotics.com/tello-edu) 

## Shameless Plugs
* Matt: [Matt Holt Sponsorships](https://github.com/sponsors/mholt)
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cd17b16b9dd5e517d03eaaff9ac3c05c954b855b4e9008bb414e19e29851ba8f,servers-with-matt-from-caddy,/shows/340 - servers.md,2023-10-16 20:07:31.005,2023-10-27 15:57:58.622,TASTY
syntax_podcast_show_00341,341,Hasty Treat - VSCode Extensions and Tips,2021-04-05 13:00:00.929,https://traffic.libsyn.com/syntax/Syntax341.mp3,"
In this Hasty Treat, Scott and Wes talk about their favorite VSCode extensions, tips, and workflows!

## .TECH - Sponsor
.TECH is taking the tech industry by storm. A domain that shows the world what you are all about! If you're looking for a domain name for your startup, portfolio, or your own project like we did with uses.tech, check out .tech Domains. Syntax listeners can snap their .TECH Domains at 80% off on five-year registration by visiting [go.tech/syntaxistech](https://go.tech/syntaxistech) and using the coupon code ""syntax5"".

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
04:05 - Easy Snippet
* [https://marketplace.visualstudio.com/items?itemName=inu1255.easy-snippet](https://marketplace.visualstudio.com/items?itemName=inu1255.easy-snippet)

05:33 - Add Missing Function Declaration
* [https://twitter.com/wesbos/status/1369393437062074377](https://twitter.com/wesbos/status/1369393437062074377)

07:30 - Error Lens
* [https://marketplace.visualstudio.com/items?itemName=usernamehw.errorlens](https://marketplace.visualstudio.com/items?itemName=usernamehw.errorlens)

09:08 - Declare Missing Members
* [https://marketplace.visualstudio.com/items?itemName=tamj0rd2.ts-quickfixes-extension](https://marketplace.visualstudio.com/items?itemName=tamj0rd2.ts-quickfixes-extension)

10:29 - ES7 React/Redux/GraphQL/React-Native Snippets
* [https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets](https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets)

11:59 - File Utils:
* [https://marketplace.visualstudio.com/items?itemName=sleistner.vscode-fileutils](https://marketplace.visualstudio.com/items?itemName=sleistner.vscode-fileutils)

13:59 - GitLens — Git supercharged
* [https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)

15:15 - ES6-String-HTML
* [https://marketplace.visualstudio.com/items?itemName=Tobermory.es6-string-html](https://marketplace.visualstudio.com/items?itemName=Tobermory.es6-string-html)

16:41 - Wrap Console Log Simple
* [https://marketplace.visualstudio.com/items?itemName=WooodHead.vscode-wrap-console-log-simple](https://marketplace.visualstudio.com/items?itemName=WooodHead.vscode-wrap-console-log-simple)

17:18 - Text Pastry
* [https://marketplace.visualstudio.com/items?itemName=jkjustjoshing.vscode-text-pastry](https://marketplace.visualstudio.com/items?itemName=jkjustjoshing.vscode-text-pastry)

19:14 - Better Comments
* [https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments)

20:14 - Tip: Use Emmet everywhere
* [https://emmet.io/](https://emmet.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",49f203b8c756a676d2dbf6166838fe93fc16ff24d3bbe0bc66f7ceb116834d13,hasty-treat-vscode-extensions-and-tips,/shows/341 - vscode.md,2023-10-16 20:07:31.100,2023-10-27 15:57:58.723,HASTY
syntax_podcast_show_00342,342,Potluck — Video Hosting × Fake Names? × Portfolio Projects × Monorepos × APIs × TLDs × Recording Tips × More!,2021-04-07 13:00:00.929,https://traffic.libsyn.com/syntax/Syntax342.mp3,"
In this episode of Syntax, Scott and Wes talk about how to keep your skill up to date when you have a job and a family, when you should start looking for your first job, monorepos, video hosting, TLDs, APIs, fake names, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Vonage - Sponsor
Vonage is a Cloud Communications platform that allows developers to integrate voice, video and messaging into their applications using their communication APIs. Whether you’re wanting to build video calls into your app, create a Facebook bot, or build applications on top of programmable phone numbers, you’ll have all the tools you need. Use promo code SYNTAX10 for €10 of free credit when signing up at [vonage.dev/syntax](https://vonage.dev/syntax).

## Show Notes
02:10 - How do you handle token refresh when multiple API calls are made at the same time? Let's says you get a 401 and do acquire a new token, but that will only be used by the first API call, while the other parallel APIs would still use the old one and error out. This has caused me to sort of artificially limit the total requests to be made to 1. How do you deal with it?

06:40 - What service do you guys use for video storage and optimization? I am currently building out a side project that will require some video hosting so I figured I would ask the experts.

15:22 - I’m trying to teach myself web development and I’m having problems making up the logic for my personal projects. I would have to watch YouTube tutorials or look at other people’s code in order to implement simple features to my website and I’ve been feeling pretty stupid for not spending the time to think of it. I feel like I’m missing out on knowing how to problem solve for myself whenever I copy other people’s code and try to understand them afterwards.

19:27 - I just landed my first web development job after following The Odin Project and building personal projects for about a year. It tripled my income so I am incredibly excited! I have been using a PHP framework which was developed by one of my coworkers and has no documentation. In order to understand the code, I either have to read a bunch of source code or ask one of the other developers questions. While I am doing well, I can't help but feel as if I am working way too slow and asking way too many questions. I assume this is imposter syndrome and lots of people deal with it, but how would you suggest dealing with this type of anxiety?

25:11 - Monorepos, yes or no?

29:43 - As a brand new self-taught web developer, how would you know if you're ready to apply for junior positions?

32:03 - Will there ever be a .eat domain or are the pre-order sites just ripping you off? Would like to know who decides what TLDs are possible or not.

35:26 - I'm currently employed as a fullstack developer but want to build a portfolio for future job hunting. Would you say it's ok to reference a project or two from an employer? My problem is that the only projects I have outside are mostly just smaller tools built for myself for fun.

39:29 - Should developers always use their real first and last name when presenting themselves as a professional online (e.g. Twitter, LinkedIn, Github, personal site). Or is it acceptable to use a fake last name for example? My wife is quite conscious about privacy online, so would prefer I retain some anonymity. But also, my last name is a bit generic, and not very Googleable. I thought having a more snappy and interesting name would help me stand out, and be easier to find with a quick Google. You guys both have awesome names that are very unique and are hard to forget.

43:59 - How do you find time to work and keep up with updates and libraries etc. having a wife & kids?

46:06 - I am a beginner in making course content. I am trying to create a programming tutorial, but every time I try to record some tutorials I have to compromise on audio quality. Lots of background noises get captured on audio. Can you both share some tips to make soundproofing room? What tricks do you both use?

53:33 - As someone who recently learned/is learning how to build websites using express/node/react, with a little know how with Python and Django too, how do you start building a portfolio that isn't just a bunch of practice/show-pieces? How do I get a client?

59:53 - Should I be using multiple web apps on a single site or try to make them all one? If I have a site that displays blog posts about parks for example, then a page with all the parks listed out that link to a page about each single park's details, should I be making the entire thing in one app? Or make a blog app and publish it, then make a different app for the other content and publish it using a subdomain?

## Links
* [Syntax 266: Video for the Web 2020 and Beyond](https://syntax.fm/show/266/video-for-the-web-2020-and-beyond)
* [Cloudinary](https://cloudinary.com/)
* [Mux](https://mux.com/)
* [Vimeo](https://vimeo.com/)
* [LesMills](https://www.lesmills.com/us/)
* [Bitmovin](https://bitmovin.com/)
* [Brightcove](https://www.brightcove.com/en/)
* [Wista](https://wistia.com/) 
* [Cloudflare](https://www.cloudflare.com/)
* [AWS MediaLive](https://aws.amazon.com/medialive/)
* [Keystone.js](https://www.keystonejs.com/)
* [Gatsby](https://www.gatsbyjs.com/)
* [Syntax 331: Hasty Treat - Hireable Skills for 2021](https://syntax.fm/show/331/hasty-treat-hireable-skills-for-2021)
* [ICANN](https://www.icann.org/)
* [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Channel-Processor/dp/B004LWH79A/)
* [Electro-Voice RE20](https://www.amazon.com/Electro-Voice-RE20-Broadcast-Microphone-Variable-D/dp/B00KCN83V8/)
* [reMarkable](https://remarkable.com/store/remarkable-2)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [CamLink 4k](https://amzn.to/3qq5AvF)
* Wes: [TS80p Mini Soldering Iron](https://amzn.to/38jAGiq)

## Shameless Plugs
* Scott: [Node Fundamentals Authentication](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Fullstack Advanced React & GraphQL](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5363d0c075c767591d203db324effee7a8a52be58ed1cb2bee116b06005791b2,potluck-video-hosting-fake-names-portfolio-projects-monorepos-apis-tlds-recording-tips-more,/shows/342 - potluck.md,2023-10-16 20:07:31.133,2023-10-27 15:57:58.789,TASTY
syntax_podcast_show_00343,343,Hasty Treat - CSS Nesting 1,2021-04-12 13:00:00.771,https://traffic.libsyn.com/syntax/Syntax343.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS nesting — what it is, when to use it, and why. 

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

04:22 - What is it?
* [https://drafts.csswg.org/css-nesting-1/#nest-prefixed](https://drafts.csswg.org/css-nesting-1/#nest-prefixed)
* [https://twitter.com/argyleink/status/1371874777548267520](https://twitter.com/argyleink/status/1371874777548267520)

06:02 - Why nest?
* Easier to read
* Easier to write
* Prevents refactoring errors, allows for dry-er code. No more typing a parent div 100 times, with a possibility of screwing it up.

08:13 - When to use nesting
* Nesting is often overused
* Only nest what you would have written un-nested with a short hand (e.g. don't nest just for the sake of it)
  * .container .item {} .container .item a {}
* Use it for scoping

10:06 - Nesting prefixes
* In order to nest CSS, you must first start it with a nesting selector

```css
.tweet {
  & > p {   }
  &.media-included { color: green; }
  & + .tweet { } // sibling
  & p { } // descentang
}
```

* Component-based — tweet, card, company, Link 

```css
article{
	color: blue;
  & {
		color: red;
  }
}
```

and must be the first child of a compound selector 

12:44 - @nest rule / media queries
* Mostly just a visual way to show nested

```css
.foo {
	display: grid;
	@media(orientation: landscape) {
    & {
			grid-auto-flow: column;
		}
	}
}
```

```css
.foo {
  display: grid;

  @media (orientation: landscape) {
    & {
      grid-auto-flow: column;
    }

    @media (min-inline-size > 1024px) {
      & {
        max-inline-size: 1024px;
      }
    }
  }
}
/* equivalent to
   .foo { display: grid; }

   @media (orientation: landscape) {
     .foo {
       grid-auto-flow: column;
     }
   }

   @media (orientation: landscape) and (min-inline-size > 1024px) {
     .foo {
       max-inline-size: 1024px;
     }
   }
 */
```

16:30 - How to use nesting today
* Literally any CSS preprocessor
* PostCSS to use spec

## Links
* [Syntax 274: How does stuff get added to CSS? Adam Argyle answers!](https://syntax.fm/show/274/how-does-stuff-get-added-to-css-adam-argyle-answers)
* [Sass](https://sass-lang.com/)
* [PostCSS](https://postcss.org/)
* [CSS Variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",5ffa438665d6732bd42f110883d7f5229394147593956556dbaa55b409328941,hasty-treat-css-nesting-1,/shows/343 - css nesting.md,2023-10-16 20:07:31.174,2023-10-27 15:57:58.843,HASTY
syntax_podcast_show_00344,344,Dev Tools Tabs Explained — Plus Tips & Tricks,2021-04-14 13:00:00.771,https://traffic.libsyn.com/syntax/Syntax344.mp3,"
In this episode of Syntax, Scott and Wes talk about dev tools tabs, what each tab does and how you can use them. 

## Vonage - Sponsor
Vonage is a Cloud Communications platform that allows developers to integrate voice, video and messaging into their applications using their communication APIs. Whether you’re wanting to build video calls into your app, create a Facebook bot, or build applications on top of programmable phone numbers, you’ll have all the tools you need. Use promo code SYNTAX10 for €10 of free credit when signing up at [vonage.dev/syntax](https://vonage.dev/syntax).

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
3:50 - Network
* See all requests, filter by type or name
* Used to understand all requests coming or going
* Turn off caching
* View timing
* See the true GZIP size
* Slow down network speed
* See time for page load
* Copy as fetch or CURL
* View request, response, and headers
* See CORS issues
* See which requests have happened
* See if an asset is cached (both in dev tools, also Cloudflare)
* See blocked requests because of extensions
* Tip: You can see the network info from the console in Firefox

22:03 - Memory
* See what is taking up memory
  * Strings
  * DOM nodes
  * Objects
  * Actual .js

26:44 - Performance
* Click record and use the site
* Flame chart useful for finding slow functions and debugging janky animations
* Get FPS in coordination with flame chart
* Save performance recording data to be able to share for debugging
* You can also upload saved data to debug without using the site

30:48 - Console
* Interfaces with the JS runtime
* Shows errors, warnings, and logs
* Tip: Negate noisy warnings/errors that clutter your console with `-`
* Tip: Use $0 to select current element
  * $1 for second last
  * $r for current React element
* Tip: Use $$ to shortcut Query SelectorAll and Array.from
* Tip: Use $ to shortcut Query Selector

40:28 - Storage / Application
* Working with LocalStorage, Cookies, Index DB, and Session Storage

44:56 - Audit / Lighthouse (Chrome and Firefox)
* Run lighthouse to check for performance, accessibility, and UI stuff
* Not the silver bullet audit that many people think it is
  * Colors are sometimes like ""Really?!""
* Can be helpful regardless

50:28 - DOM Tab
* Firefox only
* Shows everything that is in the scope of the browser

## Links
* [Adam Wathan](https://adamwathan.me/)
* [Ben Vinegar](https://twitter.com/bentlegen)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [dupeGuru](https://dupeguru.voltaicideas.net/)
* Wes: [Moccamaster Coffee Maker](https://amzn.to/38IFvlt)

## Shameless Plugs
* Scott: [Node Fundamentals Authentication](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8f092763ac377774aaaf3452cbf6f57010ad563e6c84a1b1280b2d9fccc2399e,dev-tools-tabs-explained-plus-tips-and-tricks,/shows/344 - dev tools.md,2023-10-16 20:07:31.277,2023-10-27 15:57:58.896,TASTY
syntax_podcast_show_00345,345,Hasty Treat - Container Queries Are Here,2021-04-19 13:00:00.543,https://traffic.libsyn.com/syntax/Syntax345.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS container queries, what they are and how to use them. 

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
07:22 -  Why?
* Container queries are media queries for components (e.g. they are based on the element's size, not the browser).
* This is in line with how we write components.
* It will change the way we write CSS.

08:49 - The Syntax
* Containers need to be defined as containers via containment context

```css
.container {
  contain: size layout;
}
```

New contain value:

```css
.inline-container {
  contain: inline-size;
}
```

This is the same as the logical properties. Assuming you read LTR, or RTL:
* size - width and height
* inline-size = width
* block-size = height

```css
/* @container <container-query-list> { <stylesheet> } */
@container (inline-size > 45em) {
  .media-object {
    grid-template: ""img content"" auto / auto 1fr;
  }
}
```

18:49 - How to try them today
1. Download and/or update Chrome Canary
2. Go to chrome://flags
3. Search and enable ""CSS Container Queries""
4. Restart the browser

19:27 - Demos
* Need Chrome Canary + Flag
* [https://codepen.io/collection/XQrgJo](https://codepen.io/collection/XQrgJo)
* [https://codepen.io/una/pen/LYbvKpK?editors=1100](https://codepen.io/una/pen/LYbvKpK?editors=1100)

## Links
* [Miriam Suzanne](https://www.miriamsuzanne.com/)
* [Susy](https://susy.oddbird.net/)
* [Miriam's CSS Sandbox](https://css.oddbird.net/)
* [https://css.oddbird.net/rwd/query/explainer/](https://css.oddbird.net/rwd/query/explainer/)
* [Canary](https://www.google.com/chrome/canary/)
* [@addyosmani](https://twitter.com/addyosmani)
* [The CSS Podcast](https://thecsspodcast.libsyn.com/)
* [@jon_neal](https://twitter.com/jon_neal)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8c59a0c6dc024f2005f85530c88513f7ab1f5a5ab897f6d025a8556db7697ceb,hasty-treat-container-queries-are-here,/shows/345 - container queries.md,2023-10-16 20:07:31.349,2023-10-27 15:57:58.973,HASTY
syntax_podcast_show_00346,346,Selling and Shipping T-Shirts with TypeScript,2021-04-21 13:00:00.543,https://traffic.libsyn.com/syntax/Syntax346.mp3,"
In this episode of Syntax, Scott and Wes talk about selling and shipping t-shirts, and how to do it all in TypeScript!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Deque - Sponsor
Deque’s axe DevTools makes accessibility testing easy and doesn’t require special expertise. Find and fix issues while you code. Get started with a free trial of axe DevTools Pro at [deque.com/syntax](https://www.deque.com/syntax). No credit card needed.

## Show Notes
01:58 - T-Shirts 101
* T-Shirts are cool
* I sold 100 right away to get the kinks out
* Then I did pre-order
* The stack
  * [TypeScript](https://www.typescriptlang.org/)
  * [React](https://reactjs.org/)
  * [Next.js](https://nextjs.org/)

09:08 - Selling: Front-end
* [Snipcart](https://snipcart.com/)
* It's a button
* When Someone buys, they scrape the site for the HTML
  * If you only have a client-side rendered button, you use the JSON API instead
* Integrated into [Gatsby](https://www.gatsbyjs.com/) pretty easily
* Wrote one custom hook to count inventory and disable when sold out
* I thought Snipcart would be enough, but I soon realized it wasn't. I needed something to fulfill the shipment.

10:10 - Selling: Shipping Quotes
* Snipcart has integration for USPS, etc.
* You can also do custom shippers
* It's a webhook
* They also take care of customs declaration

13:30 - Selling: Backend
* Next.js Dashboard
  * Integrate with [ChitChats](https://chitchats.com/en), [Stallion Express](https://stallionexpress.ca/), and SnipCart.
* The tech
* Shipping Labels
  * Packing slip

18:05 - Fulfilling
* Printing labels
  * Designed with CSS + React
  * Print CSS is wild
  * Fan Fold labels were way better
  * I switched to Stallion Express
  * Cheaper
* Printing packing slips
* Batch scanning
* Scanning → Mark as shipped
  * Started with webcam
  * Bought scanner for cheap
  * QR code was better because my tokens were long
  * Data matrix is often better
* Sending notifications
  * Hit the endpoint via Snipcart

28:48 - The physical part
* T-Shirts printed from local supplier
  * U-Haul to get them here
* Bags printed in China (about 40 cents each)
* I wrote a bunch of code to organize by size
  * This cut down on moving around (14 hours if you save 30 seconds per shirt)
* Some got stickers
* Multiples were the hardest
  * 24 different types of shirts
    * some wanted 4xl
    * some wanted tall

36:30 - Common questions
* Why did you do this yourself?
  * Fun project
  * I learned a ton
  * This is how you don't burn out
* Why not print-on-demand? (DTG)
  * Tonal
  * Embroidery
  * Quality
  * Money
    * Pay people in my community
* Control
  * Bags, stickers, etc..
  * [stickermule](https://www.stickermule.com/)
* Why not $companyThatHandlesIt
  * I want to do stickers
  * I want to do decks
* Why not [Shopify](https://www.shopify.com/)
  * Large orders still need major fulfillment strategies
  * Code has to be written or money spent

44:16 - Other lessons learned
* Queues would be good here
  * Sometimes you had to wait 3+ seconds for the confirmation of shipping
* No one reads, it was pre-order
* Don't buy shipping right away — people email about incorrect addresses
* Over-order by a few each (out of 1550 orders, five got partial refunds and three got full refunds)
* Pre-order is great because you can offer many sizes
* Async JS to do things at most 50 at a time

## Links
* [Wyze Plug](https://wyze.com/wyze-plug.html)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Pixeleyes AutoMounter](https://www.pixeleyes.co.nz/automounter/)
* Wes: [Baratza Encore Conical Burr Coffee Grinder](https://www.amazon.com/Baratza-Encore-Conical-Coffee-Grinder/dp/B007F183LK/)

## Shameless Plugs
* Scott: [Level 2 Node Authentication](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ce7c6732bb90fb09aab6fa5870488db4a77e846ea9e272e325d3a6911fc43fb0,selling-and-shipping-t-shirts-with-typescript,/shows/346 - tshirts.md,2023-10-16 20:07:31.393,2023-10-27 15:57:59.035,TASTY
syntax_podcast_show_00347,347,Hasty Treat - Git Rebase Explained,2021-04-26 13:00:00.543,https://traffic.libsyn.com/syntax/Syntax347.mp3,"
In this Hasty Treat, Scott and Wes talk about Git Rebase — what it is and how and when to use it!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
05:12 - Why and when to rebase?
* `git rebase -i` is interactive
* Rebase allows you to rewind your current branch, apply the changes of another branch to it, and then on top of that, apply your new commits.
* Common uses:
  * Squash all commits into one or multiple commits
  * Reword commits
* These lines can be re-ordered — they are executed from top to bottom.
  * `p`, pick <commit> = use commit
  * `r`, reword <commit> = use commit, but edit the commit message
  * `e`, edit <commit> = use commit, but stop for amending
  * `s`, squash <commit> = use commit, but meld into previous commit
  * `f`, fixup <commit> = like ""squash"", but discard this commit's log message
  * `x`, exec <command> = run command (the rest of the line) using shell
  * `b`, break = stop here (continue rebase later with 'git rebase --continue')
  * `d`, drop <commit> = remove commit
  * `l`, label <label> = label current HEAD with a name
  * `t`, reset <label> = reset HEAD to a label
  * `m`, merge [-C <commit> | -c <commit>] <label> [# <oneline>]

## Links
* [Git Rebasing](https://git-scm.com/book/en/v2/Git-Branching-Rebasing)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d302becc805e437cfebc956310daa78cd3bf2b9f6160f355eb7917aa2a1aa5f5,hasty-treat-git-rebase-explained,/shows/347 - git rebase.md,2023-10-16 20:07:31.428,2023-10-27 15:57:59.087,HASTY
syntax_podcast_show_00348,348,TypeScript Fundamentals — Getting a Bit Deeper,2021-04-28 13:00:00.543,https://traffic.libsyn.com/syntax/Syntax348.mp3,"
In this episode of Syntax, Scott and Wes continue their discussion of TypeScript Fundamentals with a deeper diver into more advanced use cases. 

## Deque - Sponsor
Deque’s axe DevTools makes accessibility testing easy and doesn’t require special expertise. Find and fix issues while you code. Get started with a free trial of axe DevTools Pro at [deque.com/syntax](https://www.deque.com/syntax). No credit card needed.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes

### Deep end stuff
03:30 - `any vs unknown`

06:20 - `never`
* [https://twitter.com/Igorbdsq/status/1351681019196436482](https://twitter.com/Igorbdsq/status/1351681019196436482)
09:14 - .d.ts
* Definition files
* Usually for existing libraries that don't have types
* Can be generated or hand-written
* Also really handy for pure JS projects, you still get good autocomplete because of these

13:25 - Type generation
* Can be generated from GraphQL, or Schemas, or from JSON Output

17:20 - TypeScript generics (variables)
* Kind of like functions, they return something different based on what you pass it
* makeFood<Sandwich>
* makeFood<Pizza>
* This function makes food and shares lots of the same functionality between making a pizza and sandwich
  * If the only thing that differs is the type returned, we can use generics
  * You often see this as a single char T
  * It can be anything
  * Promise is a generic
  * querySelector uses generics

21:48 - Promises / Async + Await
  * Functions now return a Promise type, but with a generic
  * Promise<number>
  * Promise<Course>
  * Promise<Request<Order>>, Request<Customer>, Request<Product>
    * stringified
    * added headers

29:48 - Type assertion (type casting)
  * Type assertion is when you want to tell TypeScript ""Hey I know better than you"".
  * Two ways:
    * as keyword (most popular)
      * `someValue as HTMLParagraphElement`
      * Tagged before
        * <HTMLParagraphElement>someValue

34:14 - TypeScript without TypeScript ([JSDoc](https://jsdoc.app/) / [TSDoc](https://tsdoc.org/))
* Really nice!
* You can also add comments / descriptions
* [https://github.com/developit/redaxios/blob/master/src/index.js](https://github.com/developit/redaxios/blob/master/src/index.js)

40:08 - Interfaces vs Types
* Interfaces have better perf
* [https://twitter.com/wesbos/status/1362418379919937545](https://twitter.com/wesbos/status/1362418379919937545)
* [https://blog.logrocket.com/types-vs-interfaces-in-typescript/](https://blog.logrocket.com/types-vs-interfaces-in-typescript/)
* What do you default to?

### How we write TypeScript
44:27 - Interface or Types
  * Scott - Types
  * Wes - Interfaces

44:50 - `any vs unknown`
* Scott - any
* Wes - unknown / any

46:52 - Any (No Implicit or Implicit Allowed)
* Scott - No implicit any
* Wes - No implicit any

48:31 - Return types (Implicit or Explicit)
* Scott - Explicit always
* Wes - Not always

50:49 - Compile (TSC, Strip TS)
* Scott - Strip
* Wes - Both

52:38 - Type Assertion (as or <tag>)
* Scott - as
* Wes - as

53:09 - Arrays (Dog[] or Array<Dog>)
* Scott - Dog[]
* Wes - Dog[]

54:02 - Assert or Generic (if both work)
* querySelector('.thing') as HTMLVideoElement; or querySelector<HTMLVideoElement>('.thing');
* Scott - querySelector<HTMLVideoElement>('.thing');
* Wes - querySelector<HTMLVideoElement>('.thing');

## Links
* [Syntax 324: TypeScript Fundamentals](https://syntax.fm/show/324/typescript-fundamentals)
* [Syntax 327: Hasty Treat - TypeScript Compilers and Build Tools](https://syntax.fm/show/327/hasty-treat-typescript-compilers-and-build-tools)
* [Axios](https://www.npmjs.com/package/axios)
* [VS Code](https://code.visualstudio.com/)
* [Syntax 310: Serverless, Deno and TypeScript with Brian Leroux](https://syntax.fm/show/310/serverless-deno-and-typescript-with-brian-leroux)
* [Cloudinary](https://cloudinary.com/)
* [Notion](https://www.notion.so/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Powerowl 16 Battery Recharger](https://amzn.to/3u9DlUx)
* Wes: [Fairywill Pro P11](https://amzn.to/3cxKdFf) 

## Shameless Plugs
* Scott: [Level 2 Node Authentication](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner Javascript](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",65a2815439a3ec2301386e46dd4c0abff521fd9c5e664335e05b88753c07c1bd,typescript-fundamentals-getting-a-bit-deeper,/shows/348 - typescript fundamentals.md,2023-10-16 20:07:31.470,2023-10-27 15:57:59.136,TASTY
syntax_podcast_show_00349,349,"Hasty Treat - Future Tech We're Excited About",2021-05-03 13:00:00.877,https://traffic.libsyn.com/syntax/Syntax349.mp3,"
In this Hasty Treat, Scott and Wes talk about future tech — some things you may not have heard about yet, and why we're excited about them!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
05:20 - Astro
* What it is:
  * [astro.build](http://astro.build) is a next gen ""meta"" framework that eases some of React's pain but also is not just React.
  * [https://twitter.com/georges_gomes/status/1380801812656226304](https://twitter.com/georges_gomes/status/1380801812656226304)
* Why we're excited about it:
  * Server Side JS frameworks, combine Svelte, React, Vue as needed in one component that is an SFC using markdown style meta data.
  * Scoped CSS by default (a la Svelte). Sass out of the box.
  * Collections import for .md files

```html
// pages/blog.astro
---
import PostPreview from '../components/PostPreview.astro';

const blogPosts = import.meta.collections('./post/*.md');
---

<main>
  <h1>Blog Posts</h1>
  {blogPosts.map((post) => (
    <PostPreview post={post} />
  )}
</main>
```

12:06 - ViteKit
* What it is:
  * Framework-agnostic
  * API routes
  * Pages (frontend, optional hydration)
  * Adapter for Node, static, Vercel, cf worker, etc. Inspired by SvelteKit.

15:58 - Svelte Kit
* What it is:
  * [https://kit.svelte.dev/docs](https://kit.svelte.dev/docs)
  * [https://svelte.dev/blog/sveltekit-beta](https://svelte.dev/blog/sveltekit-beta)
  * New framework for building Svelte apps

19:07 - Remix.run
* What it is:
  * [Remix.run](https://remix.run/)
  * Fullstack React framework
* Why we're excited about it:
  * Made by Michael Jackson, Ryan Florence
  * License-based
  * React-based
  * Caching-focused, uses ""the platform""
  * Centralized data loading, works without client JS if needed
  * Better nested routing

## Links
* [Sapper](https://sapper.svelte.dev/)
* [Vite](https://vitejs.dev/)
* [Snowpack](https://www.snowpack.dev/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b17d5236126c454fffddd4e27c4f9040c30da4401c72b78d11eeb19ddc0b3f2b,hasty-treat-future-tech-we-re-excited-about,/shows/349 - future tech.md,2023-10-16 20:07:31.507,2023-10-27 15:57:59.185,HASTY
syntax_podcast_show_00350,350,Potluck — Is it worth it to still learn WordPress? × Is Safari the new IE11? × Mobile website testing × Pirated content × Styled components × SSGs × Transitioning to full-time freelance × More!,2021-05-05 13:00:00.877,https://traffic.libsyn.com/syntax/Syntax350.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about blogging best practices, support IE11, Nest.js, mobile website testing, pirated course content, building .edu websites, transitioning to full-time freelance work, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
02:20 - I am adding a blog to my custom written personal website and I wanted to know if there is any best practices for storing blog posts? My hope is to write them in [markdown](https://www.markdownguide.org/), host them somewhere and then automatically feed them into my website so they are all formatted to the style of my website.

05:37 - Do you care if people share cool, unique tips from your courses publicly on social media? For example, I once shared out a trick from one of Wes' courses for how to set your [VS Code](https://code.visualstudio.com/) windows different colors to distinguish your server and client code windows (giving all credit to Wes' course for the concept). But it felt a little weird that I was sharing out a portion of his paid content for free. Is that okay? Where's the line?

08:18 - With official support of [IE11](https://en.wikipedia.org/wiki/Internet_Explorer_11) coming to an end on August 17, 2021, do you think developers should still try to support ir or focus only on new modern browsers? Also, will there be a new ""lowest common denominator"" that we should be aware of and support?

17:20 - Thanks for an awesome podcast! Have you looked into [Nest.js](https://nestjs.com/) (not to be confused with [Next.js](https://nextjs.org/)) for backend work? It is an open source TypeScript Node framework that is becoming pretty popular

22:48 - Do you think it’s worth learning [WordPress](https://wordpress.org/) for freelancing if you aren’t too confident in your JavaScript front-end design? Also, I don’t want to get stuck in only WordPress land just because of the money.

30:11 - Hi guys, I have been listening to you guys for a while and just recently launched my first website! Your podcast has been a huge help in terms of getting started. For the website I made, I tested the iPhone view on Chrome dev tools and everything looked fine. However, when viewing the website on an actual iPhone, the button is too small and the word ""Menu"" turns into ""Men"". Any advice on how to more accurately test sites on mobile devices without pushing to a production branch?

36:52 - Do you guys ever see your premium courses pirated on sites like [Udemy](https://www.udemy.com/), [Skillshare](https://www.skillshare.com/), any of the other video course platforms? Meaning somebody downloaded your videos and uploaded them as if they were the creator. Any tips to protect against this?

39:53 - Looking at [uses.tech](http://uses.tech/) and thinking, I see a lot of class names with almost the same style, gKxjCc and hSiXhL. I really want to know the science behind generating those. Do you have a shared classes that some magic tool transfers them into ugly names and copies over? What is that tool? And is it worth it?	

42:57 - Have you ever developed a .edu site? If so, what did you use to manage the enormous archives in addition to giving the site a simple page builder for departments to contribute with little or no interaction from the developer? No Joomla or Drupal please - been there. Thanks for the great help guys!

50:35 - Hi Wes & Scott, thank you so much for giving me my weekly motivation boost to try out new stuff. Currently, I am experimenting with Next.js and SSG and I would like to know how I can generate a page at build time but only show it to an authorized user. I know I could use SSR with getServerSideProps to check allowance, however, the page is completely static without any dynamic content and I don’t want to regenerate it with every request. Is there a way to achieve this? Keep up the great work.

54:59 - I love the show guys! I want to make the transition into full-time freelancing and wanted to know what you think about having a talk with my current employer to see if they'd be willing to take me from full-time to a contract/freelance basis. Bad idea? Thoughts? Advice?

## Links
* [Fastify](https://www.fastify.io/)
* [RedwoodJS](https://redwoodjs.com/)
* [Keystone.js](https://www.keystonejs.com/)
* [10up](https://10up.com/)
* [Vite](https://vitejs.dev/)
* [Safari + Dev tools](https://support.apple.com/guide/safari/use-the-developer-tools-in-the-develop-menu-sfri20948/mac)
* [Browsersync](https://browsersync.io/)
* [localtunnel](http://localtunnel.github.io/www/)
* [ngrok](https://ngrok.com/)
* [Xcode simulator](https://developer.apple.com/library/archive/documentation/IDEs/Conceptual/iOS_Simulator_Guide/GettingStartedwithiOSSimulator/GettingStartedwithiOSSimulator.html)
* [Mike Birbiglia](https://www.birbigs.com/)
* [Brian Douglas YouTube Channel](https://www.youtube.com/channel/UC7iJhl4CsLxzKUWfAw69Qkg)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [3 in 1 Multi USB Charging Cable](https://amzn.to/3moAF2A)
* Wes: [Milk Frother](https://www.amazon.com/s?k=milk+frother&ref=nb_sb_noss_1)

## Shameless Plugs
* Scott:
  1: [Become a Level Up Tutorials Author](https://forms.gle/PDEpDAGZpNHBDVou5)
  2: [Github Actions with Brian Douglas](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d795382afc79e94787a6d4702301ca06674e1f7e9713f90942405b70fac8e247,potluck-is-it-worth-it-to-still-learn-wordpress-is-safari-the-new-ie11-mobile-website-testing-pirated-content-styled-components-ssgs-transitioning-to-full-time-freelance-more,/shows/350 - potluck.md,2023-10-16 20:07:31.542,2023-10-27 15:57:59.232,TASTY
syntax_podcast_show_00351,351,Hasty Treat - Technical Debt,2021-05-10 13:00:00.610,https://traffic.libsyn.com/syntax/Syntax351.mp3,"
In this Hasty Treat, Scott and Wes talk about technical debt — what it is, why does it occur, and some techniques for reducing and avoiding it. 

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:17 - What is technical debt
* Outdated or hard to update code
* If you groan when you have to work on it, it might be a sign of technical debt
* Brittle code, easily breakable
* Quirks and features

06:55 - Why does it occur
* Over time, any garden left un-pruned will become overgrown
* Many people, many code styles
* Using hot new frameworks / techniques
  * This is why seasoned developers don't jump on new things
* You allow users to do literally anything

13:18 - Techniques for avoiding it
* Deny your FOMO of new things
* Abstract
* Write good tests
* Don't put off refactors
* Update dependencies frequently
* Good standards
  * Etsy has thousands of devs

20:08 - Examples in the real world
* Airline websites open in new windows all the time
* Cellphone carrier flashes the screen 100x

22:15 - Unfixable technical debt
* Agency work sometimes

## Links
* [Next](https://nextjs.org/)
* [React Router](https://reactrouter.com/)
* [TailwindCSS](https://tailwindcss.com/)
* [Redux](https://redux.js.org/)
* [Etsy](https://www.etsy.com/)
* [Dave Ramsey](https://www.ramseysolutions.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e3ad31e5258495e4ba92d419cc140a26e7a12dfaac3a0c216b190d319cfc4fd3,hasty-treat-technical-debt,/shows/351 - technical debt.md,2023-10-16 20:07:31.585,2023-10-27 15:57:59.284,HASTY
syntax_podcast_show_00352,352,"Potluck — Freelancing × Leveraging your experience × Component size × Dealing with mediocrity × How to spend ""extra time"" × Rust vs Node × Free hosting? × More!",2021-05-12 13:00:00.610,https://traffic.libsyn.com/syntax/Syntax352.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about freelancing, climbing the corporate ladder, Throttling vs debounce, how to build skills with your free time, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Vonage - Sponsor
Vonage is a Cloud Communications platform that allows developers to integrate voice, video and messaging into their applications using their communication APIs. Whether you’re wanting to build video calls into your app, create a Facebook bot, or build applications on top of programmable phone numbers, you’ll have all the tools you need. Use promo code SYNTAX10 for €10 of free credit when signing up at [vonage.dev/syntax](https://vonage.dev/syntax).

## Show Notes
02:11 - I've read that when you start out freelancing, you should look to your area first to gauge the market for both rates, and type of work that is in demand. If you wanted to work remotely as a freelancer, however, is that really applicable advice? Is it viable to work 100% remote and not be tied to ""local rates""? 

How can I leverage my years of professional experience when starting to freelance? A lot of material online speaks to those who are learning web development for the first time. But what does someone do if they've been working at big companies, who can't share their work directly? What can I do to help prospective clients appreciate those years of experience?

06:02 - In your opinion, what is the accepted norm for the size of a component? It could be anything from a single element to a full page of content, but what is the norm for component size or content? Love the show, keep up the good work.

09:42 - I'm a bit confused about throttling and debounce. What is the difference between them? I have been finding different examples which are not at all helpful.

12:58 - My question is about climbing the company hierarchy. I've had a hard time getting my first job after graduation. I have dealt with the unemployment office, useless recruiters, trying to look important for companies, and I wonder if a get a low wage job at a company and then apply for their IT department after some time if there is a open position. Is it bad practice or good strategy taking this shortcut? Would they know what I'm trying to accomplish?

18:25 - I'm getting started building websites and find the initial design to be a challenge. I always end up diving into the coding and then spending hours getting lost tweaking CSS. The mediocrity of the final design is a masked technical challenge, and I emerge at the other end of the effort with something I'm still not happy with. I suspect there is some kind of mock up stage I'm forgoing, and I bet there are some tools to make it easier. I imagine that some kind of application that really focused me on the design and made it easy to tweak and tinker quickly would be ideal. Thoughts? What do you use?

23:34 - The company I work for works with a SOAP API. Currently I am developing a application in React but I am wondering whether it's better to use the SOAP API or let them create a Rest API. Some people on the internet say that JS and SOAP combinations are not done. Is there some advice you can give me about this?

28:28 - Why are radio buttons called radio buttons?

30:49 - I am midway through a post-baccalaureate in computer science. I recently quit my job to focus on my second degree. Now I'm looking to spend my ""extra time"" on an area of focus that can hit as many of the following criteria as possible:
* Could make me money now
* Help me to hit the ground running when I graduate
* Get me a job easily
* Make me all kinds of cash 

Thoughts?

35:56 - What is your opinion on a Rust GraphQL server for web backend? Do you think it is better than Node.js?
(not part of a question, just a comment: I found you yesterday and dude I have to say, you are legendary... I am 13 right now and also started web development when I was 12. I have been looking for a good web-development related podcast for about four months now. Looks like I found the one I needed ;) )

39:57 - How would you go about introducing React into an existing big website with lots of legacy code and a template-based CMS behind? I can't do a full rewrite but I would love to start turning little bits & pieces into a single-page-experience (e.g. checkout) to slowly modernize the site. The frontend is already TypeScript & SCSS but it's an old self-made framework and the content coming from the CMS is mostly put into data-attributes or right into the HTML. I don't really have an API for most of the content. How would React hook into the existing DOM in different places, loading data from the templates and potentially writing it back into the templates as well?

45:31 - What's the best way to be able to host personal projects (frontend + backend) for *free* on the web? I would like something where I can SSH into to install for example Node.js and a database. I already bought a domain, but I don't want to pay for some premium plan for now since I'm short on money and it's for personal projects anyway.

## Links
* [https://type-scale.com](https://type-scale.com/)
* [https://www.leveluptutorials.com/tutorials/modern-css-design-systems](https://www.leveluptutorials.com/tutorials/modern-css-design-systems)
* [https://www.npmjs.com/package/soap](https://www.npmjs.com/package/soap)
* [Vercel](https://vercel.com/)
* [Glitch](https://glitch.com/)
* [Codepen](https://codepen.io/)
* [Code Sandbox](https://codesandbox.io/)
* [PM2](https://pm2.keymetrics.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Wyze Sprinkler Controller](https://amzn.to/3ghvSiD)
* Wes: [Retevis](https://amzn.to/3wR4T3a) 

## Shameless Plugs
* Scott:
  1: [Become a Level Up Tutorials Author](https://forms.gle/PDEpDAGZpNHBDVou5)
  2: [Github Actions with Brian Douglas](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",57d8cbd205d69a98e011441481ff07a7c85f36c7aeeca88ca4cc7bfb6f60888a,potluck-freelancing-leveraging-your-experience-component-size-dealing-with-mediocrity-how-to-spend-extra-time-rust-vs-node-free-hosting-more,/shows/352 - potluck.md,2023-10-16 20:07:31.619,2023-10-27 15:57:59.331,TASTY
syntax_podcast_show_00353,353,Hasty Treat - Stylin the Unstylables,2021-05-17 13:00:00.177,https://traffic.libsyn.com/syntax/Syntax353.mp3,"
In this Hasty Treat, Scott and Wes talk about the different kinds of things that are difficult to style, how you can style them, and some future tech to look out for!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
### Can it be styled? Solutions
04:28 - Just style the defaults
* Most elements can be styled, though some elements are really just multiple elements grouped together into the shadow dom and are hard to style.
* This leads to us having to re-create the visual UI, and often is a point of making inaccessible UIs.
* Select
* Input - number, date, etc.
  * Very hard to style
  * Often need `appearance: none;` for mobile
* Checkbox / Radio
* Generally speaking, these CSS Properties can be applied to all inputs:
  * font-size
  * color
  * padding
  * margin
  * background / images
  * outline (remember focus)
  * border

08:20 - Overlap with more dom elements, set background images
* Checkbox / Radio / Toggle buttons
  * Often used `:before` and `:after` along with labels — e.g. label + input:checked
* Select can have element overlap

14:13 - Re-implement the UI with JavaScript
* Video / Audio
  * HUGE rabbit hole of things to code
* Very important to maintain accessibility

15:46 - Use a UI Library
* [Bootstrap](https://getbootstrap.com/)
* [Foundation](https://get.foundation/)
* [Ant Design](https://ant.design/)
* [Carbon Design](https://www.carbondesignsystem.com/)
* [Fast](https://www.fast.design/)
* [Lightning Design System](https://www.lightningdesignsystem.com/)
* [Material Design](https://material.io/design)
* [Chakra](https://chakra-ui.com/)

17:20 - Open UI
* Documenting all the different types of web UI controls
* [https://open-ui.org/](https://open-ui.org/)
* [https://twitter.com/stubbornella/status/1384889551924121605](https://twitter.com/stubbornella/status/1384889551924121605)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d046ed399bf4a288ee390c2a165d226bfdbb0617bc4ce918654952c8257a668d,hasty-treat-stylin-the-unstylables,/shows/353 - stylin.md,2023-10-16 20:07:31.656,2023-10-27 15:57:59.392,HASTY
syntax_podcast_show_00354,354,The Surprisingly Exciting World of HTML Elements,2021-05-19 13:00:00.177,https://traffic.libsyn.com/syntax/Syntax354.mp3,"
In this episode of Syntax, Scott and Wes talk about HTML — interesting HTML elements, things you might not know, wish lists for the future, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
02:34 - What is semantic HTML?
* What is the content? HTML should describe the content first and foremost.

04:04 - Why semantic HTML?
* Accessibility
* SEO
* Styling is easier
* HTML tags that have meaning:
  * Almost all of them
  * Common ones:
    * `<p>`
    * `<ul>/<ol>` and `<li>`
    * `<a>`
    * `<h1>` to `<h6>`

20:04 - Structural / Layout tags
* `<nav>`
* `<header>`
  * You can have more than one header
  * Header cannot be in a footer / address / header
* `<section>`
* `<footer>`
* `<aside>`
* `<main>`
* `<article>`

26:18 - Some fun ones you might not know
* `<address>`
* `<kbd>`
* `<sup>` / <sub>
* `<datalist>`
* `<time>` and strike?
* `<track>`
* `<wbr>`
* `<cite>`
* `<dfn>`
* `<mark>`
* `<ruby>` / `<rt>` / `<rb>`
  * A ruby annotation is a small extra text, attached to the main text to indicate the pronunciation or meaning of the corresponding characters.
* `<meter>` and `<progress>`
  * While `<progress>` is used to convey how much work in a task has been completed, the <meter> element is used to display a measurement on a known scale. This could be something like the current disk usage on your computer, or a temperature measurement (within a defined range).
* `<marquee>`

32:12 - Visual vs Semantic tags
* Almost all tags in HTML are semantic
* `<i>` vs `<em>` and `<bold>` vs `<strong>`
  * `<i>` and `<bold>` are NOT deprecated like many have said
  * The `<strong>` element is for content that is of greater importance, while the <b> element is used to draw attention to text without indicating that it's more important.

35:40 - HTML tags with no meaning:
* `<div>`
* `<span>`

37:51 - Some elements have special functionality or styling
* `<details>` and `<summary>` tag
* `<fieldset>` + `<legend>`

40:59 - What elements would we like to see?
* Modal element
  * [https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog)
* Textarea that grows with content
* Animated accordion
* A better table
  * One that works with grid/flex/modern CSS, auto-sizing, max/min widths
* From Twitter:
  * VirtualList
  * Carousel - HOT DRAMA
  * Date range
  * Hero
  * <H> tag that figured its level out by itself. Useful for components that can go anywhere
  * Icon tag
  * Cookie banner
  * <pre> tag that shows HTML elements without encoding
    * You can kinda do this with display block on script and style tags

## Links
* [Sara Soueidan](https://www.sarasoueidan.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Hat Washer](https://amzn.to/3efHQXj)
* Wes: [Netflix's This is a Robbery](https://www.netflix.com/title/81032570)

## Shameless Plugs
* Scott:
  1: [Become a Level Up Tutorials Author](https://forms.gle/PDEpDAGZpNHBDVou5)
  2: [Github Actions with Brian Douglas](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7d4bca9a751ae5f4e89d3da8ae80b2d62c50cc567c15d9547939c57b6614188d,the-surprisingly-exciting-world-of-html-elements,/shows/354 - HTML elements.md,2023-10-16 20:07:31.692,2023-10-27 15:57:59.440,TASTY
syntax_podcast_show_00355,355,"Hasty Treat - JavaScript's Drag and Drop API",2021-05-24 13:00:00.010,https://traffic.libsyn.com/syntax/Syntax355.mp3,"
In this Hasty Treat, Scott and Wes talk about JavaScript's drag and drop API — how it works, concerns, best practices, and more!

## .TECH Domains - Sponsor
.TECH is taking the tech industry by storm. A domain that shows the world what you are all about! If you're looking for a domain name for your startup, portfolio, or your own project like we did with uses.tech, check out .tech Domains. Syntax listeners can snap their .TECH Domains at 80% off on five-year registration by visiting [go.tech/syntaxistech](https://go.tech/syntaxistech) and using the coupon code ""syntax5"".

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
04:45 - What is it?
* Drag and drop is really for desktop apps
* You can drag and drop anything from any browser to any browser
* The important thing here is that this is a set of browser standards that allow different apps to communicate

07:50 - How to implement
1. Make an element draggable
2. Listen on elements for drag events
    * The events bubble up, so you can listen on the parent element as items are added/removed

09:06 - DataTransfer API
* You can store anything you want in it
* getData / setData API 
* Reference strings

11:35 - Accepting drops
* When you dragOver, you need to preventDefault()
* Calling the preventDefault() method during both a dragEnter and dragOver event will indicate that a drop is allowed at that location

13:01 - Drop Image
* Set whatever you want

16:00 - Drop Effect
* What does it look like when you drop it? Does it go back?
* dataTransfer.effectAllowed
* e.dataTransfer.setDragImage(nothing, 0, 0);

18:02 - Security concerns

20:34 - Shortcomings:
* Edge cases out the WAZOO
  * Margin caused dragout events
  * Lots of if statements
* It's up to you to do EVERYTHING
  * CSS, classes, hover styles, etc.
* Accessibility
  * Inaccessible by default, unless using mouse keys
  * Have to announce everything
* Mobile

26:14 - Lbs 
* [Transmat API](https://google.github.io/transmat/)

## Links
* [Figma](https://www.figma.com/)
* [Notion](https://www.notion.so/)
* [Missive](https://missiveapp.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",fd9b29fc4fff7ad7ae39af624f07f9525dae0e49315ec63e40a62781f291d5bf,hasty-treat-javascript-s-drag-and-drop-api,/shows/355 - drag and drop.md,2023-10-16 20:07:31.734,2023-10-27 15:57:59.496,HASTY
syntax_podcast_show_00356,356,Bike Shedding — Developer Opinions Explained,2021-05-26 13:00:00.010,https://traffic.libsyn.com/syntax/Syntax356.mp3,"
In this episode of Syntax, Scott and Wes bike shed some common developer opinions.

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes
04:27 - Event params
* e, evt, ev, or event?

06:36 - CSS variables
* —red or —primary?

09:31 - CSS colors
* [https://twitter.com/rem/status/1386694431710007298](https://twitter.com/rem/status/1386694431710007298)
* RGB, HSL, HEX?

11:52 - Default exports vs named exports

14:45 - JavaScript import ordering

17:09 - Foo / Bar / Baz in examples

21:18 - Light vs dark themes

24:00 - longVerboseNamesDescribingWhatItIsOrDoes vs x

26:54 - VScode vs WebStorm (IDE) vs Vim

31:12 - TypeScript Generics: <T> vs <ThingName>

34:39 - Indentation-base syntax
* [https://twitter.com/LeahLundqvist/status/1386693374305095680](https://twitter.com/LeahLundqvist/status/1386693374305095680)

37:37 - Max line length

40:21 - One reduce, vs multiple .map()/flat(),filter()

```jsx
async function getStatus() {

  const res = await sendCommand('AT!GSTATUS');

  const result = res.result
    .split('\n')
    .map((x: string) => x.split(`\t\t`))
    .flat()
    .filter(Boolean)
    .map((x: string) => x.trim())
    .map((x: string) => x.split(`    \t`))
    .flat()
    .filter((x: string) => x.includes(':'))
    .map((x: string) => x.split(`:`))
    .map(([prop, val]: [string, string]) => [prop, val.trim()])

  return Object.fromEntries(result);
}
```

42:50 - index.js files
* [https://twitter.com/sevilhelm/status/1386693971112562694](https://twitter.com/sevilhelm/status/1386693971112562694) 
* ComponentName.js vs ComponentName/index.js
* [https://twitter.com/rleggos/status/1386694773021552641](https://twitter.com/rleggos/status/1386694773021552641)

48:20 - Ligatures and fancy fonts
* [https://twitter.com/badsyntax/status/1386695010859507713](https://twitter.com/badsyntax/status/1386695010859507713)

50:30 - Regular functions vs anon functions in a variable vs arrow functions
* function hey() {}
* const hey = function() {}
* const hey =  () ⇒ {}

52:44 - Explicit return vs implicit return

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Ego Mower](https://amzn.to/3dUU6xv)
* Wes: [Pass-Through Socket Set](https://www.google.com/search?q=pass-through+socket+set&rlz=1C5CHFA_enUS886US886&ei=RNKpYN2MBaixggfS14voBg&oq=pass-through+socket+set&gs_lcp=Cgdnd3Mtd2l6EAMyAggAMgIIADICCAAyAggAMgQIABAeMgQIABAeMgQIABAeMgQIABAeMgQIABAeMgQIABAeOgcIABBHELADUO4bWO4bYJcgaAFwAngAgAF5iAHJAZIBAzEuMZgBAKABAaoBB2d3cy13aXrIAQjAAQE&sclient=gws-wiz&ved=0ahUKEwjdvp2l9N7wAhWomOAKHdLrAm0Q4dUDCA4&uact=5)

## Shameless Plugs
* * Scott:
  1: [Level Up Tutorials Pro Spring Sale](https://www.leveluptutorials.com/pro) - 50% off annual subscriptions!
  2: [Github Actions with Brian Douglas](https://www.leveluptutorials.com/pro)
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",3b6fe10a518990453a973bca231d1fd5fe485cd40918a75a90057c7274c5c2f5,bike-shedding-developer-opinions-explained,/shows/356 - bike shedding.md,2023-10-16 20:07:31.771,2023-10-27 15:57:59.546,TASTY
syntax_podcast_show_00357,357,Hasty Treat - How to Make Money as a Creator,2021-05-31 13:00:00.141,https://traffic.libsyn.com/syntax/Syntax357.mp3,"
In this Hasty Treat, Scott and Wes talk about making money as a creator — how to do what you love, make money doing it, and not feel yucky about it!

## Deque - Sponsor
Deque’s axe DevTools makes accessibility testing easy and doesn’t require special expertise. Find and fix issues while you code. Get started with a free trial of axe DevTools Pro at [deque.com/syntax](https://www.deque.com/syntax). No credit card needed.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
06:37 - Community supported
* Sell licenses
  * Premium plugin
  * Single payment
  * $x per year
* Sell training
  * Online
  * In-person
* Sell support
* Donation-supported
  * [Patreon](https://www.patreon.com/) (usually has bonus content)
  * Tips
  * [Open Collective](https://opencollective.com/)
* Sell merch
  * [Teespring](https://teespring.com/)

16:00 - Corporation supported
* Display ads
* Sponsored segments
* Corporate sponsors
* Sponsored content
* Interesting collabs
  * Stickers

## Links
* [Syntax 330: React Query + More React with Tanner Linsley](https://syntax.fm/show/330/react-query-more-react-with-tanner-linsley)
* [Syntax 340: Servers with Matt from Caddy](https://syntax.fm/show/340/servers-with-matt-from-caddy)
* [Wes' CSS Grid Course](https://cssgrid.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",a0506446541e077f87f119712d0aeab75d2ff8f6fe974577b46a6b3f58c7695f,hasty-treat-how-to-make-money-as-a-creator,/shows/357 - money.md,2023-10-16 20:07:31.808,2023-10-27 15:57:59.590,HASTY
syntax_podcast_show_00358,358,React + TypeScript,2021-06-02 13:00:00.141,https://traffic.libsyn.com/syntax/Syntax358.mp3,"
In this episode of Syntax, Scott and Wes talk about using React with Typescript — how to set it up, components, state, props, passing data, custom hooks, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes
04:55 - Components
* Strategies
* Example:

  ```tsx
  type Props = {
      value: string;
  }

  const App = (props: Props) => <div />
  ```
   
* Return type? JSX.Element
* FC or FunctionComponent
* It's discouraged for this reason: `It means that all components accept children, even if they're not supposed to`
* It could be useful for a return type

12:13 - Props
* Default props:
  ```jsx
  const defaultJoke: JokeProps = {
      joke: 'LOL JOE',
      id: 'YEAH',
      status: 200,
  };
  
  function JokeItem({ joke = defaultJoke }: JokeProps): JSX.Element {
      return (
      <li>
          {joke.joke} = {joke.id}
      </li>
      );
  }
  ```
* Because props are always destructured, you often have to make a new type for your props. You can't just type each argument by itself.

18:38 - State
* Just like Generics, State can be inferred
* If your type is simple and you're using useState, it just works:
`const [user, setUser] = useState<User | null>(null);`

22:27 - useEffect
* Nothing special required
* Good use of void: If you want to use a Promise function but not worry about await or .then(), you can pop a void in front of it:
```jsx
useEffect(() => {
console.log('Mounted');
// getJoke().then(console.log).catch(console.error);
void getJoke();
}, [getJoke]);
```

26:09 - Refs
* Very similar to state however some interesting things with null:
`const ref1 = useRef<HTMLElement>(null!);`
* ""Instantiating the ref with a current value of null but lying to TypeScript that it's not null.""

29:33 - Custom Hooks
* This is a great use case for Tuples

31:00 - Context
* This is probably the most complex thing in this list
* First define the types
* Use generic to pass in types OR null
* This can also be non-null if you have default values in createContext:
`const AppCtx = React.createContext<AppContextInterface | null>(null);`

35:21 - Events
* The React events system is better than Vanilla JS
* Can handle them inline and have it inferred: `onClick={e ⇒ yeah(e.target)}`
```jsx
const onSetType = (e: React.ChangeEvent<HTMLSelectElement>) =>
    setType(e.target.value)
```
* React has a bunch of events built in — many of them take a Generic argument so you can specify the type of element that triggered it. Handy for native API methods like play and pause.

39:27 - ForwardRef
* Again use of <> to pass in forwarded ref type as param 1, Props types as param 2:
```jsx
type Props = { children: React.ReactNode; type: ""submit"" | ""button"" };
export type Ref = HTMLButtonElement;
export const FancyButton = React.forwardRef<Ref, Props>((props, ref) => (
  <button ref={ref} className=""MyClassName"" type={props.type}>
    {props.children}
  </button>
));
```

41:30 - ESLint
* Typescript-react is good
* Extend your own
* Most JS rules apply to TS

46:20 - React as Global React 17

- Also add JSX: True to eslint globals for typing things like JSX.Element
- global.d.ts

```jsx
import * as react from ""react""
import * as react_dom from ""react-dom""

declare global {
    type React = typeof react
    type ReactDOM = typeof react_dom
}
```

48:08 - TSConfig
* `jsx: ""react""`
* React emit .js files with JSX changed
* Preserve .jsx file output
* React-native → .js files with jsx not changed

53:05 - Frameworks?
* [Next.js](https://nextjs.org/) makes this a TREAT
* [Gatsby](https://www.gatsbyjs.com/) just use .tsx extensions
  * [https://www.gatsbyjs.com/plugins/gatsby-plugin-ts-config/](https://www.gatsbyjs.com/plugins/gatsby-plugin-ts-config/)

## Links
* [https://github.com/typescript-cheatsheets/react](https://github.com/typescript-cheatsheets/react)
* [Tanner Linsley](https://tannerlinsley.com/)
* [https://github.com/wesbos/eslint-config-wesbos](https://github.com/wesbos/eslint-config-wesbos)
* [Deno](https://deno.land/)
* [Architect](https://arc.codes/)
* [https://fav.farm/](https://fav.farm/)
* [Snowpack](https://www.snowpack.dev/)
* [Vite](https://vitejs.dev/)
* [Parcel 2](https://v2.parceljs.org/)
* [Foam](https://marketplace.visualstudio.com/items?itemName=foam.foam-vscode)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Obsidian](https://obsidian.md/)
* Wes: [Folding Allen Keys](https://amzn.to/3nHjqKu) 

## Shameless Plugs
* Scott:
  * 1: [Level Up Tutorials Pro Spring Sale](https://www.leveluptutorials.com/pro) - 50% off annual subscriptions!
  * 2: [SvelteKit Course](https://www.leveluptutorials.com/pro)
* Wes: [Beginner Javascript Course](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f4d5d7891435610583133069a246a71ab98357f60773fefc537033e3f7f26533,react-typescript,/shows/358 - react-typescript.md,2023-10-16 20:07:31.847,2023-10-27 15:57:59.651,TASTY
syntax_podcast_show_00359,359,Hasty Treat - Making a Vaccine Bot with JavaScript,2021-06-07 13:00:00.700,https://traffic.libsyn.com/syntax/Syntax359.mp3,"
In this Hasty Treat, Scott and Wes talk about Wes' experiment building a vaccine bot!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
07:32 - First step
* Finding the data. Open up dev tools.
* Copy as Node.js Fetch in Chrome
* Two ways to do this - Puppeteer, or raw requests, or a mix.

11:03 - Variablizing it 
* Store IDs
* Booking form IDs
* Vaccine IDs

12:56 - Finding out any restrictions
* Is there a cookie?
* Is there an XSRF?
* Do these things change?
* How often can you hit it?

15:20 - Caching
* Array variable

16:59 - Delivering the notifications
* Telegram

## Links
* [https://github.com/wesbos/vaxbot](https://github.com/wesbos/vaxbot)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",720403278593afd0112e9a1f21bb83f7cd880538ba2eb6081071cc1e5e8622c2,hasty-treat-making-a-vaccine-bot-with-javascript,/shows/359 - vaccine bot.md,2023-10-16 20:07:31.879,2023-10-27 15:57:59.708,HASTY
syntax_podcast_show_00360,360,Potluck - Immutability × Turning Off Your Brain × Types vs Interfaces × Hooks vs Components × Making the Most of Your First Job × Confidence in Svelte × More!,2021-06-09 13:00:00.700,https://traffic.libsyn.com/syntax/Syntax360.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about immutability, turning off your brain, managing copy on a website, problem-solving, types vs interfaces, hooks vs components, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
01:24 - I'm finally getting onboard with the GraphQL train and have a specific question about nomenclature. Having worked with redux in the past, IMMUTABILITY was a concept ingrained in my head. I continue to see benefits of immutable updates across all sorts of libraries, frameworks, vanilla js, etc. Learning about GraphQL now, I'm taken aback by the fact that CUD (create, update, delete) operations are called MUTATIONS. Is there a reason that we use the ""mutation"" terminology, despite the fact that best practices dictate that we should implement immutable updates to objects? Does GraphQL actually mutate objects behind the scenes?

06:38 - How do you sleep at night?!? I mean, how do you switch off your brain when you're trying to go to sleep and your brain just wants to keep on coding?

12:15 - How do you manage copy and microcopy on a site? Should you put every piece of text across the entire site into a CMS so the client can change it? Or just the parts you think may be updated in the future? Or do you just hard-code everything directly into the markup? Or collect it all into an importable JSON file?

21:41 - I am new to using CMSs and I was wondering for applications that require a lot of content management where a CMS or headless CMS such as Contentful is ideal but also requires dynamic queries such as recommended content to the end-user based on browsing history. How do you approach integrating the user data in combination with the data being received and handled from the CMS? A separate API and database? Or is this a scenario that a CMS doesn't fit? 

25:56 - When solving a problem, do you do it through trial and error? Or do you carefully think through every solution and choose the best one before actually implementing it into code?	

28:14 - How can we take advantage of this new partnership between 1Password + SecretHub! I feel like this is getting into DotEnv but sounds so much more interesting.

32:34 - When creating types in TypeScript, when should someone use a type over an interface? While I generally understand the differences, it seems like interfaces offer more flexibility. I am struggling to understand why I would ever use a type.

36:34 - I've recently started using TypeScript in React, and typically I'm just using function components. I've seen some people saying that classes are really great with TypeScript in React but I haven't found any real use case/benefits myself yet. How about you guys, do you use classes in React/TypeScript?

38:17 - What are your opinions on generators like Yeoman?

44:26 - I've been looking for a career in web for a couple of years now and I've recently landed a job with a small agency getting paid hourly making WordPress websites, that I'll be starting in two weeks. I'm worried that I'm going to get stuck pushing Divi sites all the time. I know this is a good opportunity for me but I was hoping you guys can shed some light and give me some tips on how I can put my skills to good use.

48:35 - What are your approaches for caching a GraphQl API?

52:30 - You mentioned in an earlier Potluck that Svelte is probably the easiest framework to learn. How confident can one be to start a new project with Svelte? Being a technical lead, can I propose our team to work with Svelte? Are there enough material/solution on the web and is the community established?

## Links
* [ZMA Supplement](https://www.webmd.com/vitamins-and-supplements/zma-supplements)
* [Tina](https://tina.io/)
* [https://twitter.com/gusfune/status/1372243283758419977](https://twitter.com/gusfune/status/1372243283758419977)
* [1Password](https://1password.com/)
* [SecretHub](https://secrethub.io/)
* [TypeScript](https://www.typescriptlang.org/)
* [Syntax 348: TypeScript Fundamentals — Getting a Bit Deeper](https://syntax.fm/show/348/typescript-fundamentals-getting-a-bit-deeper)
* [Syntax 042: Potluck EP × Vue.js × Headless WP × Typescript & Flow × Productivity × Server Side Rendering × Yeoman](https://syntax.fm/show/042/potluck-ep-vue-js-headless-wp-typescript-and-flow-productivity-server-side-rendering-yeoman)
* [https://www.npmjs.com/package/zx](https://www.npmjs.com/package/zx)
* [Yeoman](https://yeoman.io/)
* [Mercurius](https://mercurius.dev)
* [Apollo](https://www.apollographql.com/)
* [Svelte](https://svelte.dev/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Contigo Shake & Go](https://amzn.to/33sKd42)
* Wes: [Deli Containers](https://amzn.to/3kSQmxh)

## Shameless Plugs
* Scott:
  * 1: [Become a Level Up Tutorials Author](https://forms.gle/PDEpDAGZpNHBDVou5)
  * 2: [Level Up Tutorials Pro Spring Sale](https://www.leveluptutorials.com/pro) - 50% off annual subscriptions!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",1dfec93de7c907367c2873558fb5c3fb365077143a13b8276095b2eeb8d70acc,potluck-immutability-turning-off-your-brain-types-vs-interfaces-hooks-vs-components-making-the-most-of-your-first-job-confidence-in-svelte-more,/shows/360 - potluck.md,2023-10-16 20:07:31.909,2023-10-27 15:57:59.765,TASTY
syntax_podcast_show_00361,361,Hasty Treat - What is SvelteKit?,2021-06-14 13:00:00.113,https://traffic.libsyn.com/syntax/Syntax361.mp3,"
In this Hasty Treat, Scott and Wes talk about SvelteKit — what it is and why you might want to use it.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:28 - What is it?
* Total platform for building [Svelte](https://svelte.dev/) apps
* Built in [Vite.js](https://vitejs.dev/)
	* Includes all of the Vite goodness but it hides behind the scenes for the most part
* Host anywhere

05:16 - Is it CSR, SSR, SSG, WTF?!
* All of the above. Uses adapters to control the output:
```jsx
kit: {
		// hydrate the <div id=""svelte""> element in src/app.html
		target: '#svelte',
		adapter: adapter()
}
```

09:45 - What you get out of the box
* File-based routing
* API routes
* Layouts and layout resets
* Fancy file titles [slug] __layout
* Code splitting & preloading
* [PostCSS](https://postcss.org/)
* [TypeScript](https://www.typescriptlang.org/) support

17:03 - Neat small things
* Glob import
* [https://github.com/svelte-add/svelte-add](https://github.com/svelte-add/svelte-add)

## Links
* [SvelteKit](https://kit.svelte.dev/)
* [Next.js](https://nextjs.org/)
* [Gatsby.js](https://www.gatsbyjs.com/)
* [Sapper](https://sapper.svelte.dev/)
* [tailwindcss](https://tailwindcss.com/)
* [@chriscoyier](https://twitter.com/chriscoyier)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8b17ece799245c1f763e62a2f0664f9c15fd7e2acf1315632662cf241d043cef,hasty-treat-what-is-sveltekit,/shows/361 - sveltekit.md,2023-10-16 20:07:31.942,2023-10-27 15:57:59.812,HASTY
syntax_podcast_show_00362,362,"CSS Container Queries, Layers, Scoping and More with Miriam Suzanne",2021-06-16 13:00:00.113,https://traffic.libsyn.com/syntax/Syntax362.mp3,"
In this episode of Syntax, Scott and Wes talk with Miriam Suzanne about all things CSS — container queries, layers, scoping, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## RevenueCat - Sponsor
RevenueCat makes it easy to build and manage iOS and Android in-app purchases. With a few lines of code, RevenueCat provides IAP infrastructure, customer analytics, data integrations, and gives you time back from dealing with edge cases and updates across the platforms. Created by developers, for developers, thousands of the world’s best apps use RevenueCat to power their in-app purchases and subscriptions. Get started for free at [revenuecat.com](https://www.revenuecat.com).

## Guests
* [Miriam Suzanne](https://www.miriamsuzanne.com/)

## Show Notes
02:21 - When did you come on board with container queries?

10:27 - How would you declare specificity?
* Layer example:
```jsx
@layer default;
@layer theme;
@layer components;

@import url(theme.css) layer(theme);

@layer default {
  audio[controls] {
    display: block;
  }
}
```

13:08 - What is your background?

18:20 - What are container queries?

22:06 - What is the background on contain? How does it work?
* [https://developer.mozilla.org/en-US/docs/Web/CSS/contain](https://developer.mozilla.org/en-US/docs/Web/CSS/contain)

29:25 - Is it still under development?
* [https://www.igalia.com/open-prioritization/index](https://www.igalia.com/open-prioritization/index)

33:51 - Have you tried the EQ polyfill from Johnathan Neal yet? 

35:21 - How far out are we? 

38:10 - What is Scope?

44:00 - How will MQ and CQ work together?

45:49 - Do you use inline and block?

48:44 - What browser do you use?

## Links
* [OddBird](https://www.oddbird.net/)
* [Susy](https://www.miriamsuzanne.com/projects/susy/)
* [Jonathan Neal](https://jonneal.dev/)
* [FireFox](https://www.mozilla.org/en-US/firefox/new/)
* [Codepen](https://codepen.io/)
* [https://github.com/w3c/csswg-drafts](https://github.com/w3c/csswg-drafts) 
* [https://twitter.com/TerribleMia](https://twitter.com/TerribleMia)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Reelgood](https://reelgood.com/)
* Wes: [Embroidery machine](https://www.brother-usa.com/products/se600)

## Shameless Plugs
* Miriam: [OddBird](https://www.oddbird.net/)
* Scott:
  * 1: [SvelteKit](https://www.leveluptutorials.com/pro)
  * 2: [Level Up Tutorials Pro Spring Sale](https://www.leveluptutorials.com/pro) - 50% off annual subscriptions!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c064da0c93a88fa477fe30da847b89e2d71ae56f5e293c806bd5073b94a3807d,css-container-queries-layers-scoping-and-more-with-miriam-suzanne,/shows/362 - miriam suzanne.md,2023-10-16 20:07:31.984,2023-10-27 15:57:59.875,TASTY
syntax_podcast_show_00363,363,Hasty Treat - CSRF Explained,2021-06-21 13:00:00.183,https://traffic.libsyn.com/syntax/Syntax363.mp3,"
In this Hasty Treat, Scott and Wes talk about CSRF (Cross Site Request Forgery)!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
05:40 - What is it?
* [https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#samesite-cookie-attribute](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#samesite-cookie-attribute)
* Someone can submit a form FROM or TO your domain, automatically. 

07:50 - Solutions
* SameSite Cookie
* [https://medium.com/swlh/secure-httponly-samesite-http-cookies-attributes-and-set-cookie-explained-fc3c753dfeb6](https://medium.com/swlh/secure-httponly-samesite-http-cookies-attributes-and-set-cookie-explained-fc3c753dfeb6)
  * Lax — Default value in modern browsers. Cookies are allowed to be sent with top-level navigations and will be sent along with GET requests initiated by a third party website. The cookie is withheld on cross-site subrequests, such as calls to load images or frames, but is sent when a user navigates to the URL from an external site, such as by following a link.
  * Strict — As the name suggests, this is the option in which the Same-Site rule is applied strictly. Cookies will only be sent in a first-party context and not be sent along with requests initiated by third party websites. The browser sends the cookie only for same-site requests (that is, requests originating from the same site that set the cookie). If the request originated from a different URL than the current one, no cookies with the SameSite=Strict attribute are sent.
  * None — Cookies will be sent in all contexts, i.e sending cross-origin is allowed. The browser sends the cookie with both cross-site and same-site requests.
* CSRF Token
* Check Origin / Referrer Headers
* Captcha
* Ask for Password
* Token

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",bf1fc014448d12e923f10ffd22a484139fa9346ccaa7e249d2b0798fd2eb8254,hasty-treat-csrf-explained,/shows/363 - CSRF.md,2023-10-16 20:07:32.171,2023-10-27 15:58:00.006,HASTY
syntax_podcast_show_00364,364,Potluck - Web components × Gear × Docker × Web Dev Frameworks × Golden Handcuffs × Browser Testing × SSR React × Code Prediction × More!,2021-06-23 13:00:00.183,https://traffic.libsyn.com/syntax/Syntax364.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about web components, gear, Docker, web dev frameworks, golden handcuffs, browser testing, SSR React, code prediction, and more!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes
04:08 - Is there a mechanism for exporting a React/Vue/Svelte component as a web component?

11:42 - You guys chat a lot about your sweet gear and desk setups. As a newcomer to web development it's all a little expensive for me to mimic what you have; at least before I've learned enough to justify investing in better equipment. My question is: what are the minimum specs (laptop/monitor/etc) you would recommend a beginner just starting out in webdev?

22:35 - I rarely, if ever, hear you guys or any other web dev related podcast mentioned Python, Flask, Django etc. Do you have any experience with those frameworks and can you give any thoughts you may have on Python as a language for back end development.

26:47 - What do you think of using Docker containers to do development work? I have seen a couple articles talking about it, but it doesn't seem super common to use since few GitHub projects have Dockerfiles in their repos. 

32:19 - I've often heard you two talk about the idea of the ""golden handcuffs"", where a job pays well, but the employees are miserable. I think I might be in that situation right now. I've tried organizing my day so my time is better segmented. I can't tell if this is the natural progression of a developer advancing in their career and I just need to adjust better, or if I need to make a change. Any advice or tips you have to better manage time or decide what's next would be much appreciated.

37:28 - When it comes to desktop browser testing, is there a difference anymore is browser rendering engines? Do most (if not all) browsers use Google's rendering engine?

39:20 - As someone who got into the industry relatively recently (around 2019), component frameworks and single-page applications were my introduction to web development. I am now really interested in learning more about the ""traditional"" way of doing things, 100% server-rendered. What's my recourse here? Ruby on Rails, Laravel, something else? Is there an agreed upon ""modern"" way to do a server-rendered monolithic app?

43:43 - I wish to ask the kind of plug-in, extensions or stand-alone software you use for code prediction and to help you code faster. I personally use Kite and VS Code's intellisense, it seems to get it wrong more times than right. Do both of you have any recommendation?

47:18 - Is there any benefit to using prop types in TypeScript for React projects?

48:14 - I'm currently planning to build an audio-focused app (maybe even more than one actually), and I've been wondering how you would solve the problem of storing and fetching (on-demand) hundreds, perhaps thousands, of little audio-files. I've got some deep reservations against AWS, although I'm somewhat familiar with it - the complexity, hidden (and hard to estimate) costs etc. I'm thinking about Digital Ocean or something like that. Would it be too hard to implement things like caching and such yourself. Any thoughts?

## Links
* [https://www.npmjs.com/package/react-to-webcomponent](https://www.npmjs.com/package/react-to-webcomponent)
* [https://medium.com/dev-channel/a-netflix-web-performance-case-study-c0bcde26a9d9](https://medium.com/dev-channel/a-netflix-web-performance-case-study-c0bcde26a9d9)
* [LearnNode.com](https://learnnode.com/)
* [Transistor.fm](https://transistor.fm/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [A Death In Cryptoland Podcast](https://www.cbc.ca/listen/cbc-podcasts/904-a-death-in-cryptoland)
* Wes: [Affinity Designer](https://affinity.serif.com/en-us/designer/)

## Shameless Plugs
* Scott: [Svelte Kit](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner JavaScript Notes](https://wesbos.com/javascript)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",99dcc27622243f335f756ae62ecc84aa44fd3bfd079053dbac32d6c4fe9704b2,potluck-web-components-gear-docker-web-dev-frameworks-golden-handcuffs-browser-testing-ssr-react-code-prediction-more,/shows/364 - potluck.md,2023-10-16 20:07:32.238,2023-10-27 15:58:00.057,TASTY
syntax_podcast_show_00365,365,"Hasty Treat - Seven Interesting JavaScript Proposals - Async Do, JSON Modules, Immutable Array Methods, and More!",2021-06-28 13:00:00.043,https://traffic.libsyn.com/syntax/Syntax365.mp3,"
In this Hasty Treat, Scott and Wes talk about seven new JavaScript proposals — what they do, where they're at, and how you might use them.

## Deque - Sponsor
Deque’s axe DevTools makes accessibility testing easy and doesn’t require special expertise. Find and fix issues while you code. Get started with a free trial of axe DevTools Pro at [deque.com/syntax](https://www.deque.com/syntax). No credit card needed.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:32 - Seven new JavaScript proposals
* [https://github.com/tc39/proposals](https://github.com/tc39/proposals)

06:25 - JSON Modules 
* [https://github.com/tc39/proposal-json-modules](https://github.com/tc39/proposal-json-modules)
* Builds on the import assertions
* No named exports
* Not executed, to avoid security issues
* Not in Node yet

09:55 - Array Find From Last
* [https://github.com/tc39/proposal-array-find-from-last](https://github.com/tc39/proposal-array-find-from-last)
* The problem: you need to group together async code.The only way to do that right now is to wrap it in a function.

11:40 - Async Do
* [https://github.com/tc39/proposal-async-do-expressions](https://github.com/tc39/proposal-async-do-expressions) 
* Async do will allow you to group together a block of code and mark it as async.
* No need for an iife
* Downside to this is that it's a code block, so if you need to return any values, you'll need to jump that up a scope level.

```jsx
Promise.all([
  async do {
    let result = await fetch('thing A');
    await result.json();
  },
  async do {
    let result = await fetch('thing B');
    await result.json();
  },
]).then(([a, b]) => console.log([a, b]));
```

14:33 - Change Array By Copy
* [https://github.com/tc39/proposal-change-array-by-copy](https://github.com/tc39/proposal-change-array-by-copy)
* Like old array methods, but returns a new array rather than mutating

17:48 - Temporal
* [https://github.com/tc39/proposal-temporal](https://github.com/tc39/proposal-temporal) 
* Stage 3, looking good!
* Amazing, large, very good Date API
* [Syntax 295: Hasty Treat — Temporal Date Objects in JavaScript](https://syntax.fm/show/295/hasty-treat-temporal-date-objects-in-javascript)

18:35 - As Patterns
* [https://github.com/zkat/proposal-as-patterns](https://github.com/zkat/proposal-as-patterns) 
* Scott don't get it
* Stage 0
* when ([ 'go', ('north' | 'east' | 'south' | 'west') as dir ]) { … }

20:47 - Pattern Matching
* [https://github.com/tc39/proposal-pattern-matching](https://github.com/tc39/proposal-pattern-matching)
* VERY Rust-like
  * [https://doc.rust-lang.org/1.6.0/book/patterns.html](https://doc.rust-lang.org/1.6.0/book/patterns.html)
* Stage 1

```jsx
<Fetch url={API_URL}>
  {props => match (props) {
    when ({ loading }) { <Loading />; }
    when ({ error }) { <Error error={error} />; }
    when ({ data }) { <Page data={data} />; }
  }}
</Fetch>
```

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",70a9cc4975ec05a154108f66ab9d49a333f23e678666795a365d8847ae8c7109,hasty-treat-seven-interesting-javascript-proposals-async-do-json-modules-immutable-array-methods-and-more,/shows/365 - js proposals.md,2023-10-16 20:07:32.299,2023-10-27 15:58:00.110,HASTY
syntax_podcast_show_00366,366,Dev Tools Power — Elements Tab,2021-06-30 13:00:00.043,https://traffic.libsyn.com/syntax/Syntax366.mp3,"
In this episode of Syntax, Scott and Wes talk about the Dev Tools Elements Tab — all the features, and when you would use them!

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes
03:13 - Elements
* Learn to open the Elements panel and the console right away — right-click inspect element is weak!
* Drag-and-drop elements
* Edit as HTML
* Click to select use in JS console
  * $0 →
* Add Attribute
* Breadcrumbs
* Flex (Chrome now!)
* Break on → Node removal
* Scroll into view
* Expand / Collapse

16:59 - Styles
* :hov
* .cls
* Element style
* Layout - Box Model
* Layout - Grid
* Layout - Flexbox
* Toggle Print/Light/Dark

25:03 - Panel
* Escape to open close
* No longer has to be JUST Console
* Computed Styles
  * Great to find out what value it's actually using without scrolling through the cascade
  * Toggle browser styles on and off
* Fonts Tab
  * Super handy to find the used font, spacing, size, weight, etc.
  * You can also see all fonts used on a page
* Animations Tab
* Changes
  * Shows the CSS that has changed since you have been goofing around.

38:18 - Settings
* Show what's new
* [https://chrome.google.com/webstore/detail/material-devtools-theme-c/jmefikbdhgocdjeejjnnepgnfkkbpgjo](https://chrome.google.com/webstore/detail/material-devtools-theme-c/jmefikbdhgocdjeejjnnepgnfkkbpgjo)
* Experiments

43:39 - Compatibility

## Links
* [Firefox](https://www.mozilla.org/en-US/firefox/new/)
* [Chrome Canary](https://www.google.com/chrome/canary/)
* [Brave](https://brave.com/)
* [Can I Use](https://caniuse.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Problematic Roller Coasters](https://www.youtube.com/watch?v=x_j0p_0Lvao&list=PL-gC-PDnDt6SAt8sPgFjghDkRt4yWQ_Qt)
* Wes: [Scrapyard Finds! Repair-A-Thon! Cordless Tools Galore!](https://www.youtube.com/watch?v=bHeii834ujs)

## Shameless Plugs
* Scott: [Svelte Kit](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",62a5a7b8c34e03cab4c25afb9aacdda0a5c4f22f2fae96770a1605440696f93c,dev-tools-power-elements-tab,/shows/366 - dev tools.md,2023-10-16 20:07:32.360,2023-10-27 15:58:00.159,TASTY
syntax_podcast_show_00367,367,"Hasty Treat - JavaScript Event Buzzwords — Sync, Concurrent, Defer, Blocking, Workers",2021-07-05 13:00:00.210,https://traffic.libsyn.com/syntax/Syntax367.mp3,"
In this Hasty Treat, Scott and Wes define some JavaScript Buzzwords and talk about what they mean!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:24 - Synchronous / Async

05:23 - Multi-threaded
* JavaScript has a single ""main thread""
* But you can have more threads with web workers

08:12 - Blocking
* JavaScript can stop other things on the page from running
* A script tag can block HTML from being parsed
* Most stuff in JavaScript is non-blocking
* Node.js write to filesystem can be blocking

10:27 - Concurrent + Parallel
* JavaScript start/stop are concurrent
* The API runs on a different thread
* Doesn't REALLY matter
* [https://joearms.github.io/published/2013-04-05-concurrent-and-parallel-programming.html](https://joearms.github.io/published/2013-04-05-concurrent-and-parallel-programming.html)

13:22 - Consecutive / Waterfall
* One after another

13:48 - Callback
* A function to run when this thing *happens* or *is done*
* Click event callback
* Websocket on data callback
  * Like a tweet stream
* Data fetch callback
  * Almost entirely replaced with  async + await
* [http://callbackhell.com/](http://callbackhell.com/)
* [https://caolan.github.io/async/v3/](https://caolan.github.io/async/v3/)

17:56 - Script Tag Async + Defer
* Doesn't block other content
* Runs when ready - doesn't care about DOMcontentLoaded
* Wait until the page is loaded before running
* If the script tag is above content, don't wait for it
* Good for things that aren't called on page load

21:54 - Lazy
* Load it in later - maybe when it's scrolled into view, or as needed
* Not mission-critical

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c2fcb335d1284db4f61834057452f8ac31e1e73aa5495e15cddf8cd033784674,hasty-treat-javascript-event-buzzwords-sync-concurrent-defer-blocking-workers,/shows/367 - js buzz words.md,2023-10-16 20:07:32.425,2023-10-27 15:58:00.210,HASTY
syntax_podcast_show_00368,368,Syntax Highlight — We Review Your Portfolios,2021-07-07 13:00:00.210,https://traffic.libsyn.com/syntax/Syntax368.mp3,"
In this episode of Syntax, Scott and Wes review your portfolios!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
03:59 - [cudd.io](https://cudd.io/)
* Shared component animation between home / about really nice
* Readable, clear
* Simple
* Check the contrast ratio on the white text on light blue: [https://coolors.co/contrast-checker/ffffff-56ccf2](https://coolors.co/contrast-checker/ffffff-56ccf2)
* Nice SSR from [Next.js](https://nextjs.org/)
* CSS vars
* Very tall cards without much text, looks like a mistake
* Better on a short browser window - peep the tall and skinny
* Card heading should be h3 or h4

10:35 - [damonbolesta.com](https://damonbolesta.com/)
* Nice design = super fun!
* Good color palette
* Shows your skills straight up
* Animation
* Not accessible - EASY fixes with [Axe Dev Tools](https://www.deque.com/axe/devtools/)
* Text on background images hard to read
* White text on buttons
* Bold some words in your bio
* Border radius

21:52 - [walterkjenkins.com](https://www.walterkjenkins.com/)
* Map is fun
* Contrast issues with the color choices
* Transparency not needed on body content
* Cursive font for links / buttons is a no for me dog
* Labels on social media icons
* Hero overlaps section below it
* Maps data processing should be h4

29:40 - [suhit.me](https://suhit.me/)
* This is an example of a really good one
* Wicked domain name
* Design is ON POINT, like this is the type of polish I like to see - I'd hire on this
* Can't get enough [Inter font](https://fonts.google.com/specimen/Inter)
* Fun little animation
* I'd go a little easier on the box-shadow
* Github even has a custom readme
* Resume
  * Very modern - JS, TS, Bootstrap
  * TypeScript A+
  * Drop the ""5"" and ""3"" from ""HTML"" and ""CSS""
  * I'd add color to the resume, its likely not printed
  * Don't need to say Github and LinkedIn in front of the URLs

37:20 - [jacobpawlak.com](https://jacobpawlak.com/)
* Initial loading is great - transitions are hot
* Typography looks nice - not sure about those serif all-cap nav items
* Slider not very usable
* View circle on hover is cool, but I'm not sure about following your mouse, covers text
* T-shirt portfolio is awesome
* Fun little bits in the footer
* SSL is broken - fix that sh!t
* Links don't show over background images - common issue today
* External links should probably be indicated as such
* HTML, paragraphs as h3 & h4, h5, should be <p> - (i.e. ""here are a few of my recently completed..."" should be a <p>)
* Design of resume is KEY - different colors, eh?

47:04 - [mrtnvh.com](https://mrtnvh.com/)
* This is a good example of subtle flex of skills
* FAST AF
* Makes you say ""Ohhhh"" when you click a link (something that's missing from a lot of these single page sites)
* Personal Photo A+
* Position sticky
* Love the skills layout on the about page
* Email is a button
  * I can't copy your email
  * We have mailto links - don't reinvent
* A+

## Links
* [Top Chef](https://www.bravotv.com/top-chef)
* [Syntax 354: The Surprisingly Exciting World of HTML Elements](https://syntax.fm/show/354/the-surprisingly-exciting-world-of-html-elements)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [What Had Happened Was Podcast](https://starburns.audio/podcasts/what-had-happened-was/)
* Wes: [WAGO Lever-Nuts](https://www.amazon.com/s?k=wago+lever+connectors)

## Shameless Plugs
* Scott: [Building Svelte Components](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",222f07332ac4a8c34ccc2f87f0c6914ff3cb76d2674477b46a6323733d833986,syntax-highlight-we-review-your-portfolios,/shows/368 - syntax highlight.md,2023-10-16 20:07:32.462,2023-10-27 15:58:00.258,TASTY
syntax_podcast_show_00369,369,Hasty Treat - Vite + Parcel 2,2021-07-12 13:00:00.216,https://traffic.libsyn.com/syntax/Syntax369.mp3,"
In this Hasty Treat, Scott and Wes talk about modern build tools, comparisons between them, and makes them modern and next-level.

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:08 - Next Gen Bundlers are here!
* They are easy
* They are fast
* They are bundlers
* They are code splitters
* They are dev environments
* HMR / Fast Refresh

07:13 - What do they use under the hood?
  * Parcel uses SWC (Rust)
  * Vite uses esbuild (Go)

10:29 - How do you use them?
1. Usually point your app at an HTML file
2. Your HTML file has an ES module
3. It then goes and loads everything from there
4. They have adaptors for different types of files
    * CSS
    * Images
    * Etc.
* You can also point it directly at files

14:59 - Common use-cases
* React / JSX
  * OOTB
* Vue
* Svelte
* TypeScript
  * Both just work
* Custom Babel config
  * Plugins for both
* Sass
  * Vite: Detects it, asks to install it
  * Parcel: Detects it, installs it for you
* PostCSS Processors

20:29 - Custom API
* Both have a custom API or ""plugins"", which you can integrate into your app or tooling if needed.
* Example use-case: a really nice WordPress dev package.

20:57 - Which one?
* Both are really good!
* Parcel 2 has been in dev for 2+ years - unsure when it will launch.
* Wes: In my experience Vite ""just works"" a bit better. Might be a side effect of Parcel being in dev. 
* Both are wicked fast. (Wes: I literally screen recorded JS and CSS updates ~ 10 ms difference either way.)
* Life is good!

## Links
* [Top Chef](https://www.bravotv.com/top-chef)
* [Master Chef](https://www.fox.com/masterchef/)
* [Snowpack](https://www.snowpack.dev/)
* [Webpack](https://webpack.js.org/)
* [Parcel](https://v2.parceljs.org/)
* [SWC](https://swc.rs/)
* [Vite](https://vitejs.dev/)
* [esbuild](https://esbuild.github.io/)
* [Rollup](https://rollupjs.org/guide/en/)
* [SvelteKit](https://kit.svelte.dev/)
* [Strapi](https://strapi.io/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",62df75187ac7bd770df4c5aefb7255a6cfefdde561c6ffe54441238de2746492,hasty-treat-vite-parcel-2,/shows/369 - vite.md,2023-10-16 20:07:32.532,2023-10-27 15:58:00.308,HASTY
syntax_podcast_show_00370,370,React 18 - A Look Ahead,2021-07-14 13:00:00.216,https://traffic.libsyn.com/syntax/Syntax370.mp3,"
In this episode of Syntax, Scott and Wes talk about everything coming in React 18!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## RevenueCat - Sponsor
RevenueCat makes it easy to build and manage iOS and Android in-app purchases. With a few lines of code, RevenueCat provides IAP infrastructure, customer analytics, data integrations, and gives you time back from dealing with edge cases and updates across the platforms. Created by developers, for developers, thousands of the world’s best apps use RevenueCat to power their in-app purchases and subscriptions. Get started for free at [revenuecat.com](https://www.revenuecat.com).

## Show Notes
04:32 - Automatic Batching
* Don't worry about re-renders 

08:32 - New Render API
```jsx
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);
```
* No more hydrate method (yay!)

10:44 - Suspense
```jsx
<Suspense fallback={<Spinner />}>
        <ProfilePage resource={resource} />
      </Suspense>
```
* Suspense is basically a promise resolver component - nothing inside will render until promise is resolved.
* SuspenseList lets you coordinate the order in which loading indicators show up.

16:43 - StrictEffects Mode
* [https://github.com/reactwg/react-18/discussions/19](https://github.com/reactwg/react-18/discussions/19)
* Will allow components to mount, unmount, and mount again
* Will help with fastrefresh and really good dev experience

18:43 - useTransition() Hook
* Not an animation hook. They named it this because of the future ability to add animations to React core. 
* Wrap the state update in a ""transition"" to prevent the ProfilePage from being unmounted while suspending. This lets React know that it should wait for the update to complete.
* We classify state updates in two categories:
  * Urgent updates reflect direct interaction, like typing, hover, dragging, etc.
  * Transition updates transition the UI from one view to another.

23:11 - SSR Improvements
* React.Lazy will work on the Server
* Finally!
* [https://github.com/reactwg/react-18/discussions/37](https://github.com/reactwg/react-18/discussions/37) 
* Server-side rendering (abbreviated to “SSR” in this post) lets you generate HTML from React components on the server, and send that HTML to your users. **SSR lets your users see the page’s content before your JavaScript bundle loads and runs.**
* React Server Components

34:45 - ELI5
* [https://github.com/reactwg/react-18/discussions/46](https://github.com/reactwg/react-18/discussions/46)

36:37 - Next.js
* Next.js will probably have support for a lot of these features soon.

## Links
* [https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html](https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html)
* [https://dev.to/cassidoo/react-18-alpha-is-out-now-what-2apj](https://dev.to/cassidoo/react-18-alpha-is-out-now-what-2apj)
* [https://github.com/reactwg/react-18](https://github.com/reactwg/react-18) 
* [https://github.com/reactwg/react-18/discussions](https://github.com/reactwg/react-18/discussions)
* [Svelte](https://svelte.dev/)
* [Syntax 127: Hasty Treat - React Suspense](https://syntax.fm/show/127/hasty-treat-react-suspense)
* [Deno](https://deno.land/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [SoundSource App](https://rogueamoeba.com/soundsource/)
* Wes: [The Changelog 443: Exploring Deno Land](https://changelog.com/podcast/443)

## Shameless Plugs
* Scott: [Building Svelte Components](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner JavaScript](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b0e03bce8857d61e6500148e6f414e1c22da08660b599f67eae92828d69f80a6,react-18-a-look-ahead,/shows/370 - react 18.md,2023-10-16 20:07:32.588,2023-10-27 15:58:00.357,TASTY
syntax_podcast_show_00371,371,Hasty Treat - Stylelint for Linting CSS,2021-07-19 13:00:00.669,https://traffic.libsyn.com/syntax/Syntax371.mp3,"
In this Hasty Treat, Scott and Wes talk about Stylelint, what it is and why you should use it!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:15 - What is a linter anyway? Why do you want to lint your CSS?
* Does stylelint fix errors or just tell you errors?

04:42 - Getting setup 
* .stylelintrc
* stylelint extension
* Sass 
* High perf animations
* stylelint order
* Max nesting depth
* Declaration strict value

```jsx
{
	""extends"": [
		""stylelint-config-standard"",
		""stylelint-config-sass-guidelines""
	],
	""plugins"": [
		""stylelint-high-performance-animation"",
		""stylelint-declaration-strict-value"",
		""stylelint-order""
	],
	""rules"": {
		""selector-no-qualifying-type"": [
			true,
			{
				""ignore"": [
					""attribute""
				]
			}
		],
		""plugin/no-low-performance-animation-properties"": [
			true,
			{
				""ignoreProperties"": [
					""color"",
					""background-color"",
					""box-shadow""
				]
			}
		],
		""indentation"": ""tab"",
		""order/order"": [
			""custom-properties"",
			""declarations""
		],
		""order/properties-alphabetical-order"": null,
		""declaration-block-no-duplicate-custom-properties"": true,
		""declaration-empty-line-before"": null,
		""scale-unlimited/declaration-strict-value"": [
			[
				""/color$/"",
				""z-index"",
				""font-size""
			]
		],
		""scss/dollar-variable-pattern"": ""^[a-z][a-zA-Z0-9]+$"",
		""max-nesting-depth"": 3,
		""selector-pseudo-class-no-unknown"": null
	}
}
```

## Links
* [https://github.com/stylelint/awesome-stylelint](https://github.com/stylelint/awesome-stylelint)
* [JSLint](https://www.jslint.com/)
* [JSHint](https://jshint.com/)
* [ESLint](https://eslint.org/)
* [VS Code](https://code.visualstudio.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",52d03bf478e6d845eedb2ff2f1645aede11bb9e78ad47ae303bbad793c42c6ed,hasty-treat-stylelint-for-linting-css,/shows/371 - CSS linting.md,2023-10-16 20:07:32.629,2023-10-27 15:58:00.406,HASTY
syntax_podcast_show_00372,372,Potluck - Svelte × Bleeding-Edge Tech × Git Process × Screencasts × Government Jobs × Permissions-Based APIs × Rescript × More!,2021-07-21 13:00:00.669,https://traffic.libsyn.com/syntax/Syntax372.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about Svelte, bleeding-edge tech, best Git processes, Create React App, screencast software, FitBit API, government jobs, Syntax sponsors, and more!

## .TECH Domains - Sponsor
.TECH is taking the tech industry by storm. A domain that shows the world what you are all about! If you're looking for a domain name for your startup, portfolio, or your own project like we did with uses.tech, check out .tech Domains. Syntax listeners can snap their .TECH Domains at 80% off on five-year registration by visiting [go.tech/syntaxistech](https://go.tech/syntaxistech) and using the coupon code ""syntax5"".

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes
03:15 - I was wondering what you guys think about using the latest of Svelte (svelte-next) in serious projects? Does the improved devEx makes up for the small (but growing) community and lack of libraries? Do you think svelte-next is here to stay or maybe we will get a revamp that breaks backward compatibility in a couple of years, like svelte 2 -> svelte 3?

8:48 - Git question: My process is often that I want to be able to use my last project as a starting point for my next project, with the new project having absolutely no connection or relationship to the old project. What steps can I take to completely sever any ties to the old project? Bonus question: In the new project I would love to eliminate all commits from the old project and start the new project having just one commit, the initial commit with all the code from the old project.	

11:05 - Is CRA still useful for building actual production-level web apps these days? People seem to be reaching for Next or Gatsby most of the time, and I feel CRA is mainly used for actually learning React/building personal small websites. Your thoughts? Also, for normal CSR, I feel it is better to use something like Next, and fetch data inside your component (eg: for a dashboard) rather than building one with CRA. Am I wrong?

19:40 - What are your favorite screencast tools? (Linux? Mac? Windows?)

25:53 - Is it a bad trait for beginners to “give up” easily? By that, I mean instead of taking the time to think of the answer to a problem, they would instead rely on googling the solution and try to understand how it worked afterward.

27:55 - In pursuit of better health I want to track my weight daily using a smart digital scale. The idea is to automate the process of logging my own weight (e.g. stepping on the scale will update my Apple Health and any other integrations I have). After some searching around I landed on the Aria Air (mostly because I like the design and it has the coolest name). One small problem - it does not sync with Apple Health as it is a product from FitBit. They have an API so I'm thinking about running a serverless function daily, around 8 a.m. after I weigh in, to hit the FitBit API, get the data and push it to Apple Health. This way I can stay in the Apple eco-system whilst happily getting this nice, aesthetic digital scale. Any thoughts on how you would personally implement something like this? P.S. My girlfriend thinks I'm crazy, but I know the tinkerer inside Wes will love this.

30:26 - I work for the government with good pay and benefits and love where I work, but I feel like I’m missing out. Working in government we are not always working on the bleeding edge of technology. I do try and learn on my own, but it’s hard sometimes if I don’t put it into practice. I do peek at other job openings and get excited about the tech stack and the things they're doing. I'm just afraid if I leave I won’t have the stability and benefits I would get from working in government. Any tips or thoughts would be appreciated.

34:24 - Unpopular opinion: Authentication isn't that hard, but authorization is! What systems have you built to handle when users with specific permissions are allowed (or disallowed) to take actions within your system? What advice would you give to other developers developing permissions-based APIs, assuming their users can have 5-10 different levels of permissions?	

40:21 - What are your thoughts on ReScript as an alternative to TypeScript?	

44:43 - How come you guys moved to two sponsors on a Hasty and three on a Tasty? Not that it's a big deal - was just curious of it was to keep up with costs or just because you could and then you’d make more? Either way, the show is awesome and really appreciate your opinions on everything!

48:01 - Have you tried Angular 12? I’d think you’d be pleasantly surprised if you gave it a chance!

52:20 - I have to copy and paste hundreds of products with six rows of details from a spreadsheet into a web interface because there is no API or CSV upload function for this program. Any recommendation on how to automate data entry into web inputs, navigate pages / click buttons, and toggle between applications? BTW, I scored my first web developer job and have to give you guys credit for steering me in the right direction.

## Links
* [Svelte](https://svelte.dev/)
* [Create React App](https://reactjs.org/docs/create-a-new-react-app.html)
* [Next.js](https://nextjs.org/)
* [Vercel](https://vercel.com/)
* [iShowU](https://shinywhitebox.com/)
* [Descript](https://www.descript.com/)
* [Screenflow](https://www.telestream.net/screenflow/)
* [Aria Air](https://www.fitbit.com/global/us/products/scales/aria-air)
* [FitBit](https://www.fitbit.com/global/us/home)
* [Apple Health](https://www.apple.com/ios/health/)
* [https://www.gov.uk/](https://www.gov.uk/)
* [Keystone](https://keystonejs.com/)
* [rescript](https://rescript-lang.org/)
* [TypeScript](https://www.typescriptlang.org/)
* [Angular](https://angular.io/)
* [Syntax 359: Hasty Treat - Making a Vaccine Bot with JavaScript](https://syntax.fm/show/359/hasty-treat-making-a-vaccine-bot-with-javascript)
* [Puppeteer](https://pptr.dev/)
* [uses.tech](https://uses.tech)
* [wes.tech](https://wes.tech)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [SvelteKit](https://kit.svelte.dev/)
* Wes: [Wyze Sprinkler Controller](https://wyze.com/wyze-sprinkler.html)

## Shameless Plugs
* Scott: [Svelte Components Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",826995b60fbd6a76441c13b022f4794c68ae953dff286a89bfe777259c4e102c,potluck-svelte-bleeding-edge-tech-git-process-screencasts-government-jobs-permissions-based-apis-rescript-more,/shows/372 - potluck.md,2023-10-16 20:07:32.670,2023-10-27 15:58:00.453,TASTY
syntax_podcast_show_00373,373,Hasty Treat - The Surprisingly Exciting World of Favicons,2021-07-26 13:00:00.833,https://traffic.libsyn.com/syntax/Syntax373.mp3,"
In this Hasty Treat, Scott and Wes talk about favicons. Favicons are a bit of mystery and something people don't talk about that often. 

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:48 - What are favicons?
* Requesting favicons by default /favicon.ico
```
<link rel=""apple-touch-icon"" sizes=""57x57"" href=""/apple-icon-57x57.png"">
<link rel=""apple-touch-icon"" sizes=""60x60"" href=""/apple-icon-60x60.png"">
<link rel=""apple-touch-icon"" sizes=""72x72"" href=""/apple-icon-72x72.png"">
<link rel=""apple-touch-icon"" sizes=""76x76"" href=""/apple-icon-76x76.png"">
<link rel=""apple-touch-icon"" sizes=""114x114"" href=""/apple-icon-114x114.png"">
<link rel=""apple-touch-icon"" sizes=""120x120"" href=""/apple-icon-120x120.png"">
<link rel=""apple-touch-icon"" sizes=""144x144"" href=""/apple-icon-144x144.png"">
<link rel=""apple-touch-icon"" sizes=""152x152"" href=""/apple-icon-152x152.png"">
<link rel=""apple-touch-icon"" sizes=""180x180"" href=""/apple-icon-180x180.png"">
<link rel=""icon"" type=""image/png"" sizes=""192x192""  href=""/android-icon-192x192.png"">
<link rel=""icon"" type=""image/png"" sizes=""32x32"" href=""/favicon-32x32.png"">
<link rel=""icon"" type=""image/png"" sizes=""96x96"" href=""/favicon-96x96.png"">
<link rel=""icon"" type=""image/png"" sizes=""16x16"" href=""/favicon-16x16.png"">
<link rel=""manifest"" href=""/manifest.json"">
<meta name=""msapplication-TileColor"" content=""#ffffff"">
<meta name=""msapplication-TileImage"" content=""/ms-icon-144x144.png"">
<meta name=""theme-color"" content=""#ffffff"">
```

07:38 - Sizing favicons
* 16x16 is OG - don't do that now
* You can specify multiple sizes

09:41 - File formats
* .ico files
* .png favicons

13:40 - Animated favicons
* Canvas Base64

11:36 - SVG favicons

17:19 - Dark mode favicons

18:55 - App Coloring
* `<meta name=""theme-color"" content=""#ffffff"">`
* Isn't there a new Safari version?

## Links
* [https://en.wikipedia.org/wiki/Favicon](https://en.wikipedia.org/wiki/Favicon)
* [https://caniuse.com/](https://caniuse.com/)
* [https://keycode.info/](https://keycode.info/)
* [https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/icons](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/icons) 
* [https://fav.farm/](https://fav.farm/)
* [https://deno.land/](https://deno.land/)
* [https://uses.tech/](https://uses.tech/)
* [Missive](https://missiveapp.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",ee06af2b0a11bb92f3bb906ebce58ba0ec9bb4096df8138a3f8dfdc9bc2786c0,hasty-treat-the-surprisingly-exciting-world-of-favicons,/shows/373 - favicons.md,2023-10-16 20:07:32.713,2023-10-27 15:58:00.502,HASTY
syntax_podcast_show_00374,374,ShopTalk x Syntax,2021-07-28 13:00:00.833,https://traffic.libsyn.com/syntax/Syntax374.mp3,"
In this episode of Syntax, Scott and Wes do a collaboration with Chis Coyier and Dave Rupert from ShopTalk Show! They talk about favorite tech stacks, podcasting, learning new tech, dealing with FOMO, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
07:23 - What's your favorite stack right now?

28:52 - What are your thoughts on WordPress? Do you still use it?

33:59 - What do you want for listeners of Syntax?

38:21 - How do you deal with FOMO / the pressure to learn new tech?

## Links
* [https://shoptalkshow.com/469/](https://shoptalkshow.com/469/)
* [Chris Coyier](https://chriscoyier.net/)
* [Dave Rupert](https://daverupert.com/)
* [Syntax 372: CSS Container Queries, Layers, Scoping and More with Miriam Suzanne](https://syntax.fm/show/362/css-container-queries-layers-scoping-and-more-with-miriam-suzanne)
* [https://svelte.dev/](https://svelte.dev/)
* [https://kit.svelte.dev/](https://kit.svelte.dev/)
* [https://mercurius.dev/](https://mercurius.dev/)
* [https://www.prisma.io/](https://www.prisma.io/)
* [https://keystonejs.com/](https://keystonejs.com/)
* [https://graphql.org/](https://graphql.org/)
* [https://redwoodjs.com/](https://redwoodjs.com/)
* [https://nuxtjs.org/](https://nuxtjs.org/)
* [https://astro.build/](https://astro.build/)
* [https://vercel.com/](https://vercel.com/)
* [https://wordpress.org/](https://wordpress.org/)
* [https://dayoneapp.com/](https://dayoneapp.com/)
* [https://automattic.com/](https://automattic.com/)
* [https://mongoosejs.com/](https://mongoosejs.com/)
* [https://www.blink182.com/](https://www.blink182.com/)
* [https://newsroom.spotify.com/2021-02-22/a-new-era-for-podcast-advertising/](https://newsroom.spotify.com/2021-02-22/a-new-era-for-podcast-advertising/)
* [Chase Reeves YouTube Channel](https://www.youtube.com/user/chasereeves)
* [https://xdebug.org/](https://xdebug.org/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Dave:
  * 1: [Haikyu!!](https://www.netflix.com/title/80090673)
  * 2: [Nintendo Garage](https://www.nintendo.com/games/detail/game-builder-garage-switch/)
* Chris: [Ray App](https://myray.app/)
* Wes:
  * 1: [Connor Ward YouTube Channel](https://www.youtube.com/channel/UCTx85W5xtrr0gu4hmqw7VbQ)
  * 2: [Ryan Knorr YouTube Channel](https://www.youtube.com/channel/UCGmz1qSJjvBPluouoOj1Qkg)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",85ca0e46d822915ddde05bfbc4907e2a4a9f3139a3aad152d1cf40406a1dc9e0,shoptalk-x-syntax,/shows/374 - shoptalk.md,2023-10-16 20:07:32.748,2023-10-27 15:58:00.568,TASTY
syntax_podcast_show_00375,375,"Hasty Treat - Git the Latest - New Things In Tech - CoPilot, Petite Vue, Stackblitz, Web3 + More!",2021-08-02 13:00:00.699,https://traffic.libsyn.com/syntax/Syntax375.mp3,"
In this Hasty Treat, Scott and Wes launch a new series called Git the Latest — New Things In Tech.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:47 - [GitHub CoPilot](https://copilot.github.com/)
* AI-powered autocompletion
* Not going to take your job

07:18 - [Next.js 11](https://nextjs.org/blog/next-11)
* Image updates
* Multiplayer

08:20 - [Astro](https://astro.build/)
* Build faster websites with less client-side JavaScript

09:50 - [Notion API](https://developers.notion.com/)
* Get database
* Query database
* Pages
* Block children

11:27 - [Petite Vue](https://github.com/vuejs/petite-vue)
* Petite Vue is an alternative distribution of Vue optimized for progressive enhancement
* Similar to Alpine.js
* Without a build step

13:58 - [Stackblitz](https://stackblitz.com/)
* Node in the browser
* Not in the cloud
* Rolled

15:22 - [Solid.js](https://github.com/solidjs/solid)
* Solid is a declarative JavaScript library for creating user interfaces. It does not use a Virtual DOM. Instead, it opts to compile its templates down to real DOM nodes and wrap updates in fine-grained reactions. This way when your state updates only the code that depends on it runs.

16:37 - [Stately](https://stately.ai/)
* From the company that made xState

18:05 - [Web3](https://web3js.readthedocs.io/en/v1.4.0/)
* Let us know if you want a show about it
* Ethereum JavaScript API
* Apps that run on the Blockchain

## Links
* [https://alpinejs.dev/](https://alpinejs.dev/)
* [https://svelte.dev/](https://svelte.dev/)
* [https://xstate.js.org/](https://xstate.js.org/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",87def725f8d6be2889f67b39533897a146bcb0434060d0c0d81845b1e9968ced,hasty-treat-git-the-latest-new-things-in-tech-copilot-petite-vue-stackblitz-web3-more,/shows/375 - git the latest.md,2023-10-16 20:07:32.965,2023-10-27 15:58:00.699,HASTY
syntax_podcast_show_00376,376,Potluck - WordPress × 3rd-Party Cloud Services × Backend Hosting × Drupal × Getting Clients × GPS vs BEM × More!,2021-08-04 13:00:00.699,https://traffic.libsyn.com/syntax/Syntax376.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about WordPress, Drupal, using SSGs, finding clients when you're just starting out, scoped CSS, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## RevenueCat - Sponsor
RevenueCat makes it easy to build and manage iOS and Android in-app purchases. With a few lines of code, RevenueCat provides IAP infrastructure, customer analytics, data integrations, and gives you time back from dealing with edge cases and updates across the platforms. Created by developers, for developers, thousands of the world’s best apps use RevenueCat to power their in-app purchases and subscriptions. Get started for free at [revenuecat.com](https://www.revenuecat.com).

## Show Notes

01:48 - Most small businesses I know have heard of WordPress and it seems like it’s the industry standard for brochure sites. I’m tired of 1-5 page freelance WordPress sites. I love front-end coding and design. Do I need to “sell” people on static sites or are there freelance jobs out there for Vue/React/whatever static sites for developers? I want to stick with small businesses and a few other niches, but I’m tired of drag-and-drop builders in WordPress. Plus, I feel WordPress is overkill for a majority of sites. I just want to code sites and freelance.

08:53 - I wanted to get your opinion on 3rd-party cloud services that provide some application functionality. Things like auth0, Algolia, open cart etc. I work for a large enterprise where there is a real fear of trusting these companies with our data and so everything is built from the ground up, with less time, and we miss out on some of the sweet features these services provide. Do you use many services like this in your production apps and how would you decide which to use?

16:03 - I recently took Wes’ Advanced React course and went on to build my first custom React app! Thanks Wes! When the time came to deploy the app, I was surprised by the asymmetry in hosting options for the front vs. backend. It seems that there are 1000 slick, free-teir options for hosting my front-end. But finding a host for my Keystone backend: barf. I messed around with Heroku but troubleshooting was a nightmare, and I eventually settled on a Digital Ocean droplet. My inner system admin is secretly happy to have another OS instance to manage, but I hate paying 5 dollars a month to host a silly project that will probably never be seen by anyone, and I’m already irritated with the amount of care and feeding the backend needs. What gives? Why are there so many choices for frontend hosts and so few for the backend? Are there hosted backends that have auth, database, image hosting, etc and take care of the nitty-gritty with a newbie-friendly free-tier? Maybe I should I be looking into serverless?

23:21 - Since Drupal has evolved beyond awkward kloog of v7 entity/ctools/json-services/phptemplate erc into v9 with excellent graphql/json/rest support and tomb(?) for non drupal web would you recommend Drupal as for a blogger/businesses' internal network doc/publishing/communications system (ie Drupal not as website itself)?	

29:43 - I have just started my web development freelancing business and I feel like I am having a hard time getting a lot of response from small business who currently don't even have a website (or have a terrible one). Is there any advice you can give about talking people into hiring a web developer when they CLEARLY need help? I plan to use NextJS and Sanity for all of my sites. My first client project is already built using it and it was a great developer experience!

34:30 - What would you guys consider the best alternative to the BEM naming convention? I personally follow a method with very few classes (I've seen this called GPS) which takes advantage of the CSS cascade, but I do think it may suffer from readability problems if I handed my stuff to another developer to work on. Interested to hear your thoughts.

39:16 - I have been self teaching myself web development for a little over a year now and your show has been a big help! I am getting to the point now where I feel I am nearly qualified for jobs and will be starting the application journey soon. I currently work in supply chain management at a big corporation with a background in industrial engineering (of which I hold a Bachelors degree). My question for you is - seeing that I have work experience at a big company and a STEM background, do you think this holds any weight in terms of being qualified for a dev job? What I am mainly wondering is how much I should leverage this during interviews and on my resume.

## Links
* [https://www.gatsbyjs.com/](https://www.gatsbyjs.com/)
* [https://tina.io/](https://tina.io/)
* [https://vercel.com/](https://vercel.com/)
* [https://www.netlify.com/](https://www.netlify.com/)
* [https://circleci.com/](https://circleci.com/)
* [https://github.com/Nexedi/renderjs](https://github.com/Nexedi/renderjs)
* [https://keystonejs.com/](https://keystonejs.com/)
* [https://www.drupal.org/](https://www.drupal.org/)
* [https://medium.com/@jescalan/bem-is-terrible-f421495d093a](https://medium.com/@jescalan/bem-is-terrible-f421495d093a)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [I Was There Too Podcast](https://www.earwolf.com/show/i-was-there-too/)
* Wes: [Mattias Random Stuff YouTube Channel](https://www.youtube.com/watch?v=1L2ef1CP-yw)

## Shameless Plugs
* Scott: [Advanced Svelte Techniques](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",8c4d9aa01ddc905cead00731ff18a608276630372ece1c97aadd85bf1e21d54e,potluck-wordpress-3rd-party-cloud-services-backend-hosting-drupal-getting-clients-gps-vs-bem-more,/shows/376 - potluck.md,2023-10-16 20:07:33.008,2023-10-27 15:58:00.774,TASTY
syntax_podcast_show_00377,377,Hasty Treat - TypeScript Utility Types,2021-08-09 13:00:00.325,https://traffic.libsyn.com/syntax/Syntax377.mp3,"
In this Hasty Treat, Scott and Wes talk about TypeScript utility types — what they are, why you might use them, why they exist, and more!

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:35 - Levels of using TypeScript
1. Typing your code
2. Typing your code, but getting a little bit more dynamic using utility types
3. Creating your own utility types!
* TypeScript is a language in itself
* Check out type challenges if you want your mind blown: [https://github.com/type-challenges/type-challenges/](https://github.com/type-challenges/type-challenges/)
* [https://www.typescriptlang.org/docs/handbook/utility-types.html](https://www.typescriptlang.org/docs/handbook/utility-types.html)

07:29 - Partial

08:23 - ReadOnly

09:00 - Required

09:33 - Record
* A record is an object type that is a bit more restrictive
* Say you want to store podcast details - name, URL, showCount, etc., but only for Syntax and Shoptalk.

10:47 - Omit
* I find this one handy when I want to create a ""Create Item"" type, where it has all the item fields except the ID field

11:34 - Pick
* Given a type, pick these properties 

12:39 - Return Types
* Gives you the type that is returned from a function. Handy if you need to dynamically generate the type based on a passed function.

13:30 - Case
* These case types are useful for when you are doing template literal types
* `Uppercase<StringType>`
* `Lowercase<StringType>`
* `Capitalize<StringType>`
* `Uncapitalize<StringType>`

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",121387141b8009a7a80d651c1ccf56ae7ad94e972bdaf3822e7bf660d3ea408f,hasty-treat-typescript-utility-types,/shows/377 - utility types.md,2023-10-16 20:07:33.040,2023-10-27 15:58:00.832,HASTY
syntax_podcast_show_00378,378,How to Build a Website — The Show For Beginners,2021-08-11 13:00:00.325,https://traffic.libsyn.com/syntax/Syntax378.mp3,"
In this episode of Syntax, Scott and Wes talk about the basics of building a website — how to get started for beginners!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes
04:20 - HTML
* HTML is the language you write to get text and elements to show up on the screen
* Elements can describe the content they contain
  * p
  * img
* Or be structural and describe the areas of the website
  * div
  * h
  * header, footer
* Listen to our ep on HTML elements to learn more about them: [Syntax 354: The Surprisingly Exciting World of HTML Elements](https://syntax.fm/show/354/the-surprisingly-exciting-world-of-html-elements)
* HTML elements have default styling applied to them before you write any CSS
  * This comes from the browser and can be manipulated
  * However, by default all elements are either block or inline-display

08:11 - CSS
* If HTML is the bones, CSS is the clothes and skin
* CSS dictates how a website looks
  * Without CSS, you have text on a blank page and images
* CSS stands for Cascading Style Sheets (""cascading"" being the key word)
* Adding CSS to a page
  * Link tag
  * Style tag
  * Inline styles
* Selectors
  * You can select an element on the page via element, class, id, attribute
  * Syntax is selector, brackets, property, value
* Property
  * A property is what you are changing (e.g. background-color)
* Value determines how the thing looks
  * `background: red;`
* Specificity
  * Specificity is a big part of the cascade. When you apply one style to something, you need to learn how to target things appropriately. This is a huge part of being good at CSS.
  * People develop systems like BEM to organize this
  * General rules - Use elements for base styling and classes for specific styling. Don't use IDs for styling.
  * `!important` exists to override everything, but as a general rule, NEVER use it. Seriously.
* Some interaction
  * Most interaction is done in JavaScript, but CSS has some basics
    * hover, active, focus
* Pseudo selectors
* You'll often see people reaching for libraries to make CSS easier and more consistent
  * Common examples are Bootstrap, Foundation, and TailwindCSS
  * For the most part you'll want to avoid these until you have a good understanding of the cascade, how CSS works, and how to write good CSS.
* In addition to properties, you can now write your own custom properties for CSS.
  * While this could be seen as an advanced technique, I believe the new normal is CSS variables first.
  * CSS variables are indicated by `—variableName: value;` where variable name takes the place of a property.
  * You can then use the variable via var(—variableName) in place of a property. This allows for easy duplication of same values across your style sheet.

37:08 - JavaScript
* JavaScript is used to add *interaction* to a website
* It makes your website dynamic

**JavaScript the Language**
* We have a base programming language that has nothing to do with HTML
* It has things like:
  * Variables - ways to store things
  * Numbers + Math
  * Data Containers - Objects and Arrays
  * Functions - Code grouped together to achieve a certain purpose
* It also has a ""Standard Lib"" which means JavaScript comes with built-in support for doing common things:
  * Formatting time + money
  * Alerting the user
  * Logging a value to developer tools
  * Capitalizing things
  * Sorting lists of things
  * Round or randomize numbers
  * Fetch data
  * Talk to a sever
* Promises
  * Logic and flow control

**JavaScript the DOM**
* When the HTML is loaded, it's parsed into something called the DOM (Document Object Model)
* Events
  * JavaScript is mostly event-driven - when something happens, do something else
  * When you click something and want something else to happen
  * There are lots of events
    * mouse, touch, pointer
    * Ready
    * Forms
      * Submit, change, keyboard, etc.
* Can be used to fetch data
  * `fetch()` - you'll often hear it called Ajax, or XMLHttpRequest
* Can be used to make more HTML
  * Whole set of APIs for creating elements
* The DOM can be traversed

## Links
* [https://css-tricks.com/](https://css-tricks.com/)
* [https://getbootstrap.com/](https://getbootstrap.com/)
* [https://get.foundation/](https://get.foundation/)
* [https://tailwindcss.com/](https://tailwindcss.com/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Tony Hawk's Pro Skater 1 + 2](https://www.nintendo.com/games/detail/tony-hawks-pro-skater-1-and-2-switch/)
* Wes: [Mini Split Air Conditioner](https://www.amazon.com/s?k=Mini+Split+AC)

## Shameless Plugs
* Scott:
  1: [Level Up Tuts Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
  2: [Become a Level Up Tutorials Author](https://forms.gle/PDEpDAGZpNHBDVou5)
* Wes:
  1: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!
  2: [Javascript Notes & Reference](https://wesbos.com/javascript)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",80cbd24943bd537744af13a13fd8f42d2424f7645124264f35ce78d4224e2b6b,how-to-build-a-website-the-show-for-beginners,/shows/378 - beginners.md,2023-10-16 20:07:33.075,2023-10-27 15:58:00.895,TASTY
syntax_podcast_show_00379,379,Hasty Treat - The Weird and Wonderful <link> Tag,2021-08-16 13:00:00.910,https://traffic.libsyn.com/syntax/Syntax379.mp3,"
In this Hasty Treat, Scott and Wes talk about the `<link>` tag — why it's weird and wonderful, and what you can do with it!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
04:16 - What is it?
* [https://ryanflorence.dev/p/ship-weird](https://ryanflorence.dev/p/ship-weird) 
* The link tag is weird.
* First, it's not for links! It's for establishing a relationship between the current HTML document and a resource. 

05:11 - CSS / Media attr

07:13 - Web fonts

08:09 - Favicons
* [Syntax 373: Hasty Treat - The Surprisingly Exciting World of Favicons](https://syntax.fm/show/373/hasty-treat-the-surprisingly-exciting-world-of-favicons)

08:36 - Preload + Prefetch Resource
* Audio, document, fetch, font, image, script, style, track, video, worker + more

10:15 - Fetch request (shoutout Ryan)

11:27 - Preconnect
* Consider adding preconnect or dns-prefetch resource hints to establish early connections to important third-party origins.
* `<link rel=""preconnect"" href=""[https://fonts.googleapis.com](https://fonts.googleapis.com/)"">`
* `<link rel=""preconnect"" href=""[https://fonts.gstatic.com](https://fonts.gstatic.com/)"" crossorigin>`

13:01 - Module
* `<link rel=""modulepreload"" href=""/chunk-12131.js"">`

13:30 - Integrity
* SHA

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",74d4fc0220558d3ccfc827c34590608bb93f1bb81cbc6f6e4255ab9a064383b7,hasty-treat-the-weird-and-wonderful-less-than-link-greater-than-tag,/shows/379 - link tag.md,2023-10-16 20:07:33.110,2023-10-27 15:58:00.948,HASTY
syntax_podcast_show_00380,380,Potluck - Moist code × Memoization × Ready for full-time? × Deadlines × Design ethics × React components × Video hosting × Local fonts × More!,2021-08-18 13:00:00.910,https://traffic.libsyn.com/syntax/Syntax380.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about memoization, how to know when you're ready for a full-time dev job, what to do when you underestimate projects, design ethics, local fonts, and more!

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
04:07 - Can you explain the concept of memoization in JS?	

07:27 - I’ve been developing for a while now and I was wanting to know if there is some sort of catalyst that I should be aware of that screams “you’re ready for a full-time job”?

09:26 - I have an ethics question for you. I recently took on a freelance gig that requires a custom admin dashboard, and I wasn't really sure how to design one of those. My solution was to look up a pre-made Bootstrap dashboard template that can be purchased for $50-$500, and just re-create it myself. I looked at their live demo and reconstructed a very similar dashboard myself, using the same UI library. The outcome is not a perfect copy, although it's very close, and I never looked at their code base, so there's probably many differences there. But still, I can understand why some people might be upset by my attempt to copy someone else's design. I'm not reselling it as a theme, just using it my freelance project with one client. What are your thoughts on this?

16:36 - How do you decide how specific a (React) component should be?

22:03 - My question is about the `npm run eject` feature of React. Is there a place where I should be using this feature or can I keep on ignoring that it exists?	

24:04 - My question is for Scott. In one of the episodes in the past, you mentioned that you use YouTube private videos on [leveluptutorials.com](http://leveluptutorials.com/) using some kind of authentication. If I am not mistaken, you use a different platform to host videos now. Was there any reason to stop using that technique?	

31:13 - I'm setting up a webinar. I'm going to require an iLok drive to access the FTP site, so I head over to Ali Baba, and I'm on Ali Baba to buy the things, and I should mention my main concern would be data miners. I mean they're just like cyber-crackheads, really. So, I would imagine that any latency issues could be compensated through a registrar handshake with the firmware, and I'd love to see a combination of both flash and HTML5, so my question is, would the eCommerce piece embed on the host platform, as well as the dialogue field for user names? Or, would the gateway socket extension be full duplex, as well as the packet switchover?	

33:33 - How do you allow users to edit text to their profile or to messages they send to other users, without sacrificing the safety and security of your site?

38:07 - Any tips on how should I use npm packages in Netlify functions? I read that I could commit node_modules (which for me sounds absolutely barbaric) and I also read that I could install netlify-lambda package with an additional postinstall script in the package.json. What's your approach?

41:07 - Can you disable local fonts from the OS and check if the site actually loads them? 

46:02 - I have a question related to freelancing. Yesterday I took on a new client project. Price is locked in and contract is signed. Thing is, I am new to web dev freelancing and I now realise I have totally miscalculated the complexity and size of this project. What I initially estimated I could do in 3-4 weeks suddenly looks more like 6-8 weeks of work for me. Do I break the bad news for the client and ask to extend the deadline, outsource part of the work (which might lead to more hassle), or just buckle up and prepare to pull several all nighters to get on top of it? What would you do?

49:09 - Question to Scott: Have you ever thought of calling your students Scott's Tots?	

## Links
* [https://mux.com/](https://mux.com/)
* [https://vimeo.com/](https://vimeo.com/)
* [https://github.com/cure53/DOMPurify](https://github.com/cure53/DOMPurify)
* [https://wesbos.com/sanitize-html-es6-template-strings](https://wesbos.com/sanitize-html-es6-template-strings)
* [https://svelte.dev/](https://svelte.dev/)
* [https://vercel.com/](https://vercel.com/)
* [https://begin.com/](https://begin.com/)
* [https://en.wikipedia.org/wiki/Scott%27s_Tots](https://en.wikipedia.org/wiki/Scott%27s_Tots)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [I Think You Should Leave Season 2](https://www.netflix.com/title/80986854)
* Wes: [Underground Wire Locator](https://amzn.to/2Vutc8J) 

## Shameless Plugs
* Scott:
  1: [Level Up Tuts Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
  2: [Become a Level Up Tutorials Author](https://forms.gle/47fnupLTnpatKXiH6)
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",51896f6c3961e329628ade64f7d0db23aa95715517f5718cf7875452d0538bcb,potluck-moist-code-memoization-ready-for-full-time-deadlines-design-ethics-react-components-video-hosting-local-fonts-more,/shows/380 - potluck.md,2023-10-16 20:07:33.154,2023-10-27 15:58:01.034,TASTY
syntax_podcast_show_00381,381,Hasty Treat - Why Do People Hate CSS?,2021-08-23 13:00:00.488,https://traffic.libsyn.com/syntax/Syntax381.mp3,"
In this Hasty Treat, Scott and Wes talk about why people hate CSS, some common issues, and how you can level up.  

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:20 - Layout is hard
* `block` vs `inline` vs `inline-block`
  * Learn what this means!
* Flexbox
  * [https://css-tricks.com/snippets/css/a-guide-to-flexbox/](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)
* Grid
* Avoid floats
* [Wes' Flexbox Course](https://flexbox.io/)
* [Wes' CSS Grid Course](https://cssgrid.io/)
* [Scott's Modern CSS Layouts Course](https://www.leveluptutorials.com/tutorials/modern-css-layouts)

07:43 - I can't get my thing to get the right style
* Use a scoping system like BEM, CSS in JS, CSS Modules
* Don't style via IDs
* Avoid `!important`

11:00 - My thing isn't looking the way it's coded
* Dev tools
* Write CSS in the browser
* Check class names

12:11 - I don't know if I can delete this CSS
* Use tools like [https://purgecss.com/](https://purgecss.com/)
* [http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/](http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/)

15:51 - Look at things holistically

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6874680cea5a7a853915117b358434f5963966880dae759cedf5a2da1e0ba75b,hasty-treat-why-do-people-hate-css,/shows/381 - css.md,2023-10-16 20:07:33.191,2023-10-27 15:58:01.097,HASTY
syntax_podcast_show_00382,382,Advice for New Devs,2021-08-25 13:00:00.488,https://traffic.libsyn.com/syntax/Syntax382.mp3,"
In this episode of Syntax, Scott and Wes talk about advice for new devs, our advice and opinions for how new devs can level up.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
01:59 - Get comfortable with your code not working
* All of our code is broken much of the time.

02:40 - Compound learning and momentum is your biggest tool
* There is no formation without repetition. 
* It sucks to hear, but honestly, if you get a little bit better every single day, you will be WAY ahead in years to come. Keep at it, keep chipping away, take the lows and the highs. 

04:05 - Learn to read error messages
* Is this error coming from my code?
* Is this coming from the library? If so, maybe the library wasn't expecting that.
* Is this coming from the browser? An extension? Is it even related?
* Stack trace is a treasure map

09:42 - Take the time to learn the concepts that scare you
* They are often easier than they seem (though not every time).

10:40 - We all struggle
* This stuff is hard — give yourself a break.

12:56 - Taking a walk is good for solving bugs
* It's hard to walk away from broken code, but it really helps.

14:33 - Get comfortable with the command line
* You'll need it

18:09 - The ability to replicate a design pixel perfect is a valuable skill
* You will be shocked at how many devs can't or don't do this. If you want to avoid spending extra time on something, don't make the designers tell you to go back and fix simple spacing, color, and detail things.

21:26 - You are on a team
* Don't get stuck in the ""us vs them"" mentality of internal company teams (e.g. devs vs designers). You are all working together to make something.

24:10 - You are not an expert
* Even if you think you are an expert, you should always be seeking out alternate viewpoints and ideas. You are a student forever in this game.

26:14 - Scaffold with comments
* It helps keep you organized once you get into the mess

28:30 - From Twitter
* Tweet thread - [https://twitter.com/wesbos/status/1417139639861735424](https://twitter.com/wesbos/status/1417139639861735424)

29:30 - Ben Newton
* Soft skills are about as important as coding skills if you want to go far.
* [https://twitter.com/BenENewton/status/1417140062211526658](https://twitter.com/BenENewton/status/1417140062211526658)

32:46 - Eric McCormick
* Don't be afraid to push yourself beyond your comfort zone.
* [https://twitter.com/edm00se/status/1417140503527792640](https://twitter.com/edm00se/status/1417140503527792640)

33:31 - Jason Liggi
* You don't have to code for fun.
* [https://twitter.com/Liggi/status/1417141600124346371](https://twitter.com/Liggi/status/1417141600124346371)

35:34 - Andrew Nickerson
* Start by building a project that's interesting to you.
[https://twitter.com/Nickvisual/status/1417140742531674118](https://twitter.com/Nickvisual/status/1417140742531674118)

37:15 - Michael Powers
* Ask questions, break things once in a while, learn vanilla everything even if it feels like a waste of time.
* [https://twitter.com/mgrpowers/status/1417141364525912064](https://twitter.com/mgrpowers/status/1417141364525912064)

39:33 - Jason Liggi
* Doesn't matter how long you do this job, MOST stuff out there will probably be unknown and confusing. 
* [https://twitter.com/Liggi/status/1417141322478235653](https://twitter.com/Liggi/status/1417141322478235653)

40:14 - Swashata
* Learn to read documentation
* [https://twitter.com/swashata/status/1417142055436910598](https://twitter.com/swashata/status/1417142055436910598)

49:59 - Max Stoiber
* Know your tradeoffs.
* [https://twitter.com/mxstbr/status/1417142461709828101](https://twitter.com/mxstbr/status/1417142461709828101)

43:34 - Pat Clarke
* Build a rapport with PMs/clients beyond the technical.
[https://twitter.com/LeftShotDev/status/1417142505494269954](https://twitter.com/LeftShotDev/status/1417142505494269954)

44:21 - Musa Barighzaai
* Leave things better than you found them.
[https://twitter.com/mbarighzaai/status/1417142734993907715](https://twitter.com/mbarighzaai/status/1417142734993907715)

45:20 - David Moore
* Build things that excite you.
* [https://twitter.com/DavidIMoore/status/1417145783581741067](https://twitter.com/DavidIMoore/status/1417145783581741067)

## Links
* [https://johnlindquist.com/](https://johnlindquist.com/)
* [https://github.com/albertlauncher/albert](https://github.com/albertlauncher/albert)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Raycast](https://raycast.com/)
* Wes: [Amazon iPhone Repair Kits](https://www.amazon.com/b?ie=UTF8&node=21209121011)

## Shameless Plugs
* Scott: [Web Components 101](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",4e71052f09cc2266b596744b67dd5a849aa6b7823e7c2f485612050a58b4020f,advice-for-new-devs,/shows/382 - new devs.md,2023-10-16 20:07:33.280,2023-10-27 15:58:01.150,TASTY
syntax_podcast_show_00383,383,Hasty Treat - Freelance Tips - Toxic Clients,2021-08-30 13:00:00.382,https://traffic.libsyn.com/syntax/Syntax383.mp3,"
In this Hasty Treat, Scott and Wes talk about toxic clients — how to identify them, and what to do about them.

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
05:33 - Warning Signs of a potential toxic client
* Doesn't have project well thought out.
* Scope creep - Adds on new features while not considering the amount of work required to make them happen. Can be mad when you run out of time or budget.
* Ill Communicator
  * Contacts you at odd times.
  * Thinks that you should answer every email in an hour.
  * Contacts you in inappropriate ways, via text message, social media. OR doesn't respond to emails in a timely manner giving you blockers.
* Jerk
  * The rude client
  * Thinks they can be rude because they are giving you money
  * Hundreds of emails
* Tries to be flashy upfront (dinners, etc.)
  * Scatterbrain or way too big.
  * Facebook for nurses

18:06 - What to do about toxic clients
* Communicate your needs clearly. Set expectations.
  * ""I work best when...""
  * ""I answer emails once every two days""
  * Set clear deadlines for deliverables, feedback and revisions (one revision backed in, more at x hourly rate, etc.).
  * Just be VERY clear. If something doesn't work for them, they will hopefully tell you.
* Get things in writing.
  * Put things clearly in a working agreement for your client to approve. That way you have something to show in case things go south and you can say, ""You agreed to the following things"".
* Fire them
  * You can fire clients. Honestly, some of them just aren't worth the time and effort. It's usually the cheapest clients who demand the most from you. Don't let them take more of your time and energy than they are paying for.
  * Firing clients is very simple.
    * Hi so and so, I don't feel like we're a good match for this project, so I'll be canceling our work agreement. Good luck on your project.

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",4d28a4c52f1966e5f49e008ceb4d0656424f11ade337bcc01ece7b5aa1bdb221,hasty-treat-freelance-tips-toxic-clients,/shows/383 - toxic clients.md,2023-10-16 20:07:33.367,2023-10-27 15:58:01.212,HASTY
syntax_podcast_show_00384,384,"STUMP'D - Coding Interview Questions",2021-09-01 13:00:00.382,https://traffic.libsyn.com/syntax/Syntax384.mp3,"
In this episode of Syntax, Scott and Wes are back with another edition of Stump'd! where they try to stump each other with interview questions.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Auth0 - Sponsor
Auth0 is the easiest way for developers to add authentication and secure their applications. They provide features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes
03:10 - What is STUMP'D?

04:27 - What is a first class function?

06:27 - What is the purpose of using object is method?

09:31 - What is the purpose of Error object?

11:00 - What are the advantages of minification?

12:37 - How do you declare namespace?

15:38 - What are JS labels?

19:20 - List the methods that are available on a WeakSet?
  * What is the difference between a set and a WeakSet?

23:33 - What is the use of preventDefault method?

26:15 - What is a spread opperator?

27:35 - What is the output of below spread operator array?
* `[...'John Resig']`

30:19 - How do you load CSS and JS files dynamically?

32:00 - What are tasks in event loop?

34:15 - What is a WeakMap?

37:35 - How do get query string values in JavaScript?

40:50 - What is the purpose of some method in arrays?

42:15 - How do you delete a cookie?

## Links
* [https://30secondsofinterviews.org/](https://30secondsofinterviews.org/)
* [https://www.interviewbit.com/javascript-interview-questions/](https://www.interviewbit.com/javascript-interview-questions/)
* [https://github.com/sudheerj/javascript-interview-questions](https://github.com/sudheerj/javascript-interview-questions)
* [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label)
* [https://es6.io/](https://es6.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Builderment](https://builderment.com/)
* Wes: [Lawn Mower Blade Balancer](https://www.amazon.com/s?k=blade+balancer)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d1422777ad23657ddbd2df9518af69e6453e98f85d604535f7f13c15ca57ce0d,stump-d-coding-interview-questions,/shows/384 - stumped.md,2023-10-16 20:07:33.422,2023-10-27 15:58:01.268,TASTY
syntax_podcast_show_00385,385,Hasty Treat - TypeScripts Strict Explained,2021-09-06 13:00:00.824,https://traffic.libsyn.com/syntax/Syntax385.mp3,"
In this Hasty Treat, Scott and Wes talk about the Typescript `strict` flag — what it does and why you might use it.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
02:50 - What is it?
* Future versions of TypeScript may introduce additional stricter checking under this flag, so upgrades of TypeScript might result in new type errors in your program. When appropriate and possible, a corresponding flag will be added to disable that behavior.

03:26 - `noImplicitAny`
* The `any` type in TypeScript is exactly that - it can be anything.
* TypeScript will try to `infer` the type. When it can't it will be `any`.
* Sometimes you need `any`, but if that is the case, you must explicitly type it as `any`.
* If something is implicitly `any` - it might be a mistake, or you forgot to type it. Risky!

06:01 - `noImplicitThis`
* You must type `this` - it can't be implicitly inferred.

06:47 - `strictFunctionTypes`
* If you have a type that is a function and it doesn't 100%.

07:44 - `alwaysStrict`
* Always turns on strict mode. You can't do things like redeclare `var` variables.

09:25 - `strictNullChecks`
* Makes you check that the item is actually there before accessing a value or method from it.
* Imagine you filter or find on an array, or query selector a DOM element. There is a possibility that nothing is there. `strictNullChecks` makes you check that it's there - like an if statement.
* Optional chaining is super handy here.

11:18 - `strictBindCallApply`

12:38 - `strictPropertyInitialization`

13:37 - `useUnknownInCatchVariables`

## Links
* [https://www.typescriptlang.org/tsconfig#strict](https://www.typescriptlang.org/tsconfig#strict) 

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e86b2bc7a6b3ca21782ad8bfb0e0dbc11155d6ea4b7e8b9b402d23ba508eb3e4,hasty-treat-typescripts-strict-explained,/shows/385 - typescript.md,2023-10-16 20:07:33.458,2023-10-27 15:58:01.319,HASTY
syntax_podcast_show_00386,386,Potluck - Sass × Houdini × No JS? × Solid Project × First Dev Job Tips × Bartering × DRM × Dev Laptops × Databases × Frontity × More!,2021-09-08 13:00:00.824,https://traffic.libsyn.com/syntax/Syntax386.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about Sass, Houdini, JS requirements, tips for your first dev job, dev laptops, databases, Frontity, and more!

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Auth0 - Sponsor
Auth0 is the easiest way for developers to add authentication and secure their applications. They provide features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes
02:35 - What are the use cases of SASS/SCSS in 2021? Would you still choose it over CSS (or something else?) in a new project?

05:26 - What ever happened to CSS Houdini?

08:49 - With all these JS being transferred, have you ever tried to challenge yourself to build a project that doesn't involve any JS (in the front end alone); (e.g. just HTML+CSS)? I find it funny how I can pretty much use amazon.com with JS disabled, but I literally cannot view the angular docs if I disable it.

11:40 - As we all know, Tim Berners-Lee made the web. Apparently, after seeing everyone’s data getting harvested by tech companies, he decided to make a project called Solid ([https://solidproject.org/](https://solidproject.org/)) that allows people to own their data and control all permissions to it. So if a user logs into your app with Solid, rather than storing their info on your server, you’d store it in *their* Solid Pod. Do you think this could save both Web developers’ conscience and disk space in the cloud?	

15:47 - I am about to start my first developer job. What practices can I start to really get off on the right foot and lay down a foundation for a successful career?

18:57 - Have you guys ever used your dev skills to trade for other goods or services? For instance, helping out an auto mechanic with their website in exchange for brake service on your car or creating a site for a barbershop traded for free haircuts for a year. If so, how do you go about starting that conversation?

22:14 - What's your take on DRM? Have you implemented/integrated something like Widevine in any of your platforms/projects? How does one go about doing such a thing? I can't seem to find any good docs on that. I personally can relate as to why it's there, but end up hating it anyways. I recently found out that Prime Video only allows SD(sub HD) content on Linux and it had something to do with the Widevine DRM they employ. I got outraged and eventually canceled my subscription!

29:35 - Have you seen the Framework laptop and, if so, what are your thoughts for web development? I’m a lifelong Mac user but the idea of a higher repairable laptop running Linux (I personally can’t do Windows) sounds like an amazing step forward for consumers.

32:53 - I know that you both like MongoDB and so do I. But sometimes all these queries to database, especially aggregations gets messy, aren't they? Prisma has now support for MongoDB. What do you think? Is it a tool that will make requesting MongoDB much easier?

37:02 - Hey guys, been diving into Svelte a bit recently and had a question about using it with GraphQL. As I recall Scott once deemed React Typescript GraphQL CodeGen ""the promised land"" and since then I tried it out and have found it awesome. However, I've been debating moving a larger personal project from React to Svelte. I see that there is plugin for graphql-codegen-svelte-apollo but with my limited knowledge of Svelte find it hard to decipher if the development experience would be as streamlined. I am wondering if you could shed some light on the developer experience of working with GraphQL in Svelte in Typescript.

40:58 - Do y’all have any thoughts about Frontity for WordPress? I swear I’m not a plant for Frontity, but I stumbled upon it today and I’m trying to evaluate it vs. other solutions like Next.js for use in a headless WordPress setup. Would love your thoughts if you have any!	

43:40 - Call me weird, but I kind of like fiddling around with webpack configs. I just like the level of control I have here. That being said, is webpack going to die now that the ""better"" tools out there mature? Or do you think we might see a webpack v6 with esbuild under the hood that makes it compete with Parcel, Vite, Snowpack in terms of speed?

## Links
* [https://sass-lang.com/](https://sass-lang.com/)
* [https://postcss.org/](https://postcss.org/)
* [https://ishoudinireadyyet.com/](https://ishoudinireadyyet.com/)
* [https://astro.build/](https://astro.build/)
* [https://kit.svelte.dev/](https://kit.svelte.dev/)
* [https://www.widevine.com/](https://www.widevine.com/)
* [https://frame.work/](https://frame.work/)
* [https://www.prisma.io/](https://www.prisma.io/)
* [https://www.mongodb.com/](https://www.mongodb.com/)
* [https://www.postgresql.org/](https://www.postgresql.org/)
* [https://mongoosejs.com/](https://mongoosejs.com/)
* [https://keystonejs.com/](https://keystonejs.com/)
* [https://frontity.org/](https://frontity.org/)
* [https://webpack.js.org/](https://webpack.js.org/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Hot App](https://github.com/macmade/Hot)
* Wes: [Pet Food Mat](https://amzn.to/3ljDQdr)

## Shameless Plugs
* Scott: [Web Components Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",d744424106abe82ffcac1d6b8c219df715d78c0fd73531e2921ca509fa84017e,potluck-sass-houdini-no-js-solid-project-first-dev-job-tips-bartering-drm-dev-laptops-databases-frontity-more,/shows/386 - potluck.md,2023-10-16 20:07:33.493,2023-10-27 15:58:01.368,TASTY
syntax_podcast_show_00387,387,Hasty Treat - Starlink Rural Internet,2021-09-13 13:00:00.481,https://traffic.libsyn.com/syntax/Syntax387.mp3,"
In this Hasty Treat, Scott and Wes talk about Wes' new satellite internet setup — best use-cases and how to set it up.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes
04:06 - Rural internet is huge for:
* Access to information
* Remote work
  * Opens up job opportunities for many residents who can't relocate due to family
* Home values
  * Big city folk moving into rural areas and driving prices up is another issue alltogether
* Smart rural home

05:46 - Previous setup
* We have a cottage
* LTE Routers
* Yagi Antennas
* Worked well, but slow
* $4/gig over 100gb
* Grey market - one went up/down
* Alternatives
  * WISP - no access
  * XPLORNET @ (hughesnet) - BRUTAL
  * Bell LTE - $$$ - slow

08:35 - The signup, install, price
* $129 CAD Deposit ($100 USD)
* $650 for the dish
* $120/month
* Unlimited bandwidth
* Needs a clear view of the northern sky
* Clear from obstructions is key
* Every 1 foot up is 2 foot of obstructions cleared
* I put it on a 25ft piece of wood
* Bought a pipe adaptor from Starlink

09:59 - The performance
* These numbers are not impressive to anyone with fiber, but are LIFE CHANGING to rural folks
* From 30mbps - 200mbps down - some users posted ~350 down
* Upload from 25mpbs - 80mbps (better than you can pay for where I live in the city)
* Ping is around 40ms
* Downtime is measured in seconds
* Youtube streams super smoothly
* Zoom works great
* Facebook + Instagram issues
  * Many reported changing DNS fixed it

14:21 - The equipment
* Starlink comes with a router
  * Does not support bridge mode
  * Doesn't have WPS
  * Only one hard-wired port
  * POE-only
* UniFi Dream Machine
* Three access points
* POE switch for Starlink Router
  * Gives you stats
* The ethernet is hard-wired into the dish, so you have to drill a huge hole in the house

## Links
* [Starlink](https://www.starlink.com/)
* [Wyze](https://wyze.com/)
* [UniFi Dream Machine](https://store.ui.com/collections/unifi-network-unifi-os-consoles/products/unifi-dream-machine)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",eb882a7b215fc727070a1cf627a1034a3437b6e576c15a388df31b663be6b983,hasty-treat-starlink-rural-internet,/shows/387 - starlink.md,2023-10-16 20:07:33.541,2023-10-27 15:58:01.439,HASTY
syntax_podcast_show_00388,388,New to JavaScript — ES2022,2021-09-15 13:00:00.481,https://traffic.libsyn.com/syntax/Syntax388.mp3,"
In this episode of Syntax, Scott and Wes talk about all the new stuff in ES2022 — what it is, why you might need it, and how to use it.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Auth0 - Sponsor
Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below: [https://a0.to/syntax](https://a0.to/syntax).

## Show Notes
04:50 - Regex indicies
* New `d` flag in a regex
* [https://regex101.com/](https://regex101.com/)
* This will tell you the indexes (indicies) of the regex matches
* Handy if you need to highlight or replaces matches in a string
* We can ask for the start and end positions of each matched capture group

07:16 - Class updates
* Private fields
* Properties and Methods to be kept private 
* Prefix them with a `#` 
* =Helpful for internal state and methods which should not be accessed directly or at all by external 
* In React how we have ___INTERNTAL_NEVER USE THIS_

```jsx

class ColorButton extends HTMLElement {
  // All fields are public by default
  color = ""red""

  // Private fields start with a #, can only be changed from inside the class
  #clicked = false
}

const button = new ColorButton()
// Public fields can be accessed and changed by anyone
button.color = ""blue""

// SyntaxError here 
console.log(button.#clicked) // Cannot be read from outside
button.#clicked = true // Cannot be assigned a value from outside
```

* Getters and setters introduced in es5
* [https://www.w3schools.com/js/js_object_accessors.asp](https://www.w3schools.com/js/js_object_accessors.asp)

```jsx
class Person {
  #hobbies = ['computers']
  get #hobbiesGetter() { return this.#hobbies }
	#getHobbies() { return this.#hobbies }
	getHobbiesPublic() { return this.#hobbies }
}

const scott = new Person();

scott.#getHobbies(); // doesn't work
scott.getHobbiesPublic(); // works
```

09:07 - Class fields
* This may seem super old because we have been polyfilling it forever
* Right now if you want an instance field on a class, you need to declare it in the constructor
* Now we can just declare them inside the class

10:36 - Static fields and methods
* As above can also be **static with the static keyboard**
* Works for methods too
  * Explain what a static method is

13:17 - Top level await
* So handy in modules. Need to pull in some data? Simple. 

15:19 - Ergonomic brand checks for private fields
* Used for checking if a private field on a class exists using the `in` keyword

16:00 - `.at()` method
* Strings and arrays - we can use square brackets to reference items of the array
* Super handy for grabbing the last item of an array

```jsx
// 🔥 New .at() method on arrays and strings

const toppings = ['pepperoni', 'cheese', 'mushrooms'];

// The old way to grab the last item
toppings[toppings.length - 1]; // mushrooms

// using .at() method with a negative index
toppings.at(-1); // mushrooms 
// works with any index
toppings.at(0); // pepperoni
toppings.at(-2); // cheese

// and with strings!
'Meeting Room: B'.at(-1) // B
```

* Why not use array[-1]? 
* We used to use slice(-1)
* What about indexOf?

21:34 - Handy `hasOwn` method
* [https://github.com/tc39/proposal-accessible-object-hasownproperty](https://github.com/tc39/proposal-accessible-object-hasownproperty)

24:51 - Class static block
* A static block allows you to run code before creating an optional static property during initialization
* [https://github.com/tc39/proposal-class-static-block](https://github.com/tc39/proposal-class-static-block)

## Links
* [https://github.com/tc39/proposals/blob/master/finished-proposals.md](https://github.com/tc39/proposals/blob/master/finished-proposals.md)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Ultraloq Smart Lock](https://amzn.to/3DVhzJC)
* Wes: [Magnatiles](https://amzn.to/3DU1lR2)

## Shameless Plugs
* Scott: [Web Components Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",e7d493304a88f6a114d510e9d71dafecb50be03af0bdb24303ae623965f44d49,new-to-javascript-es2022,/shows/388 - ES2022.md,2023-10-16 20:07:33.579,2023-10-27 15:58:01.491,TASTY
syntax_podcast_show_00389,389,Hasty Treat - Webhooks,2021-09-20 13:00:00.657,https://traffic.libsyn.com/syntax/Syntax389.mp3,"
In this Hasty Treat, Scott and Wes talk about webhooks — one of those concepts that seems a lot scarier than it actually is. 

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:42 - What are webhooks?
* User-defined HTTP callbacks
* When something happens, ping this URL with this data
* Examples:
  * When something sells, ping this URL
  * When someone reverses a charge, lock their account
  * Trigger a build of the website when the content changes
  * Then someone buys a shirt, generate a shipping label and save it to the DB

07:57 - Sending End
* Can be a great way to hook two services together

09:13 - Receiving End
* Often you will be the one that accepts the webhook ping
* In this case, you set up an endpoint

11:00 - Payloads
* Almost all will send a JSON body that you parse out
* The method send is variable

11:51 - Auth
* On the receiving end of a webhook, you often get a token which you can then ping the service with. It will tell you if that request was legit or not. 
* On the sending end, you can often set up headers with auth - same with the method
* Can be a replacement for a serverless function

13:18 - Testing webhooks
* Can be a pain in the ass
* [ngrok](https://ngrok.com/) - expose locally
* [localtunnel](https://theboroer.github.io/localtunnel-www/)
* [Insomnia](https://insomnia.rest/)
* [Postman](https://www.postman.com/)
* [Stripe](https://stripe.com/) has a great VS code extension
* [Snipcart](https://snipcart.com/) has an awesome dashboard
  * Will also tell you when one failed
* [webhook.site](http://webhook.site) 
* [https://expose.dev/](https://expose.dev/)
* [IFTTT](https://ifttt.com/)
* [Zapier](https://zapier.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",6c1c0a3a0f99c6dc4493ac2261530b23d4ffbd6aadffd855d4daae0f986325d1,hasty-treat-webhooks,/shows/389 - webhooks.md,2023-10-16 20:07:33.619,2023-10-27 15:58:01.542,HASTY
syntax_podcast_show_00390,390,From React To SvelteKit,2021-09-22 13:00:00.657,https://traffic.libsyn.com/syntax/Syntax390.mp3,"
In this episode of Syntax, Scott talks with Wes about moving Level Up Tutorials from React to SvelteKit — why he did it, how, benefits, things to watch out for, and more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
07:28 - Thoughts
* Apples to oranges, so unfortunately, no super legit ability to compare.
  * SvelteKit isn't analogous with a custom React setup that uses CSR
    * SSR is usually going to be faster - we can ship less JS
    * Some big things changed beyond React → SvelteKit
      * [Apollo](https://www.apollographql.com/) → [GFetch](https://github.com/kiedtl/gfetch)
      * [Plyr](https://plyr.io/) → [Vime](https://vimejs.com/)
    * HLS starts grabbing chunks immediately, so it's hard to get accurate load time and transfer.
* Whole conversion took a couple of months.
* Hardest part was making UI choices and changes, straight-up converting components one by one wasn't actually that tough

16:14 - Converting React components to Svelte
* useState becomes just a straight-up variable
* Graphql calls were hooks now just imported generated functions
* Remove extranous fragments
* Convert {things && } to {#if thing}{/if}
* `<component hello={hello} />` becomes `<component {hello} />`

24:06 - Spark joys
* State
  * Our checkout flow became way more transparent, way easier with Svelte stores
* Render flow
  * Was never something we needed to really think about. Didn't think about memoizing, or worrying about too many renders down the line, just never needed to
* Overall developer experience
  * It's honestly a joy to work in and I don't want to go back
* Making a library
  * Package dir, new SvelteKit project, `svelte-kit package`
  * I made svelte-toy - [https://github.com/leveluptuts/svelte-toy](https://github.com/leveluptuts/svelte-toy)
  * svelte-element-query - [https://github.com/leveluptuts/Svelte-Element-Query](https://github.com/leveluptuts/Svelte-Element-Query)
  * svelte-simple-datatable fork
* Creating a sitemap was extremely easy, because of server-side routes. file.returnformat.ts ie `sitemap.xml.ts`
* CSS without a css-in-js library for scoping is a dream. CSS props are now 100% via CSS variables using the [https://svelte.dev/docs#style_props](https://svelte.dev/docs#style_props)
* Animations are all done with Svelte's internal animations lib

32:45 - Hosting
* adapter-node
* Hosted on [Render](https://render-web.onrender.com/) as a straight-up node process $7/m for more than enough RAM and CPU,
* Lots of other options for static, Vercel, workers whatever, I like having just a straight-up node app you can host anywhere

35:50 - Things to do
* Admin tools
  * [Pancake](https://pancake-charts.surge.sh/) lib for charts

37:00 - Challenges
* ESM is not always smooth sailin
  * Import has from 'lodash/has' didn't working in dev, but import has from 'lodash/has.js' didn't work in prod.
    * Solution was to use lodash.has as the dependency
    * Apollo included all React as a dep unless you import from @core
* TS is great, but there was once where I wanted to define the entire props ts object for a spread prop, but was not possible
* Drag animations

Cloudinary

42:46 - Wes' questions
* What about the ecosystem?
* What about forms + DOM data? 
* Serverless functions?
* Do you always bind to state? Or just access directly?
 
```jsx
formData = writable({
  title: ""yo""
})

{$formData.title}

<input bind:value={formData.title} />
```

* Is it stable? 
* [Deno](https://deno.land/) - [Snel](https://crewdevio.mod.land/projects/Snel?ref=madewithsvelte.com) 

## Links
* [https://leveluptutorials.com/](https://leveluptutorials.com/)
* [https://vitejs.dev/](https://vitejs.dev/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [The Skeptics Guide To The Universe Podcast](https://www.theskepticsguide.org/podcasts/episode-844)
* Wes: [Pressure Washer Nozzle](https://amzn.to/39iGlWl)

## Shameless Plugs
* Scott: [Web Components 101](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a75940396a427c5d51d42ecc23b9b59cec94ad714ed4815774a2c84464c1cac5,from-react-to-sveltekit,/shows/390 - sveltekit.md,2023-10-16 20:07:33.671,2023-10-27 15:58:01.598,TASTY
syntax_podcast_show_00391,391,Hasty Treat - Desktop Apps + New Tech We Love,2021-09-27 13:00:00.655,https://traffic.libsyn.com/syntax/Syntax391.mp3,"
In this Hasty Treat, Scott and Wes talk about the hottest new tech they love! 

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:30 - Lucy Language
* [https://lucylang.org/](https://lucylang.org/)
* A concise language for describing Finite State Machines

06:10 - MDSvex
* [https://github.com/pngwn/MDsveX](https://github.com/pngwn/MDsveX)
* Mdx for Svelte
* Smartypants options transforms ASCII punctuation into fancy typographic punctuation HTML entities
* [https://github.com/rehypejs/awesome-rehype](https://github.com/rehypejs/awesome-rehype)

09:56 - RECut
* [https://getrecut.com/](https://getrecut.com/)

12:26 - Fig
* [https://fig.io/](https://fig.io/)
* It's an app you install on your computer, it adds autocomplete to your terminal
* Works with most popular terminals
* Autocompletes git commands
* NPM commands + tons more - npm install ___ works
* Adds descriptions of what each command does
* Mac only - again another reason why Mac is best!
* Themeable
* Why not use Fish/ZSH?
  * This isn't a replacement for anything, it's just autocomplete on top
  * These fish plugins are to vim, as Fig is to VS Code
  * Better UI is KEY

15:56 - Warp
* [https://www.warp.dev/](https://www.warp.dev/)
* Rust-based termnial
* Very fast
* Extensions and themes
* Share commands and sessions
* Great for remote server dev
* Share terminal state - with share links

19:33 - Raycast
* [https://www.raycast.com/](https://www.raycast.com/)
* App launcher
* File Finder
* Workflow runner
* Everyone is asking why is it better than Alfred
* better UI
* Better outputs math
* Better defaults - currency conversion
* Fast as hell
* Better integrations
* More Flexible

21:26 - Table Plus
* [https://tableplus.com/](https://tableplus.com/)
* Fantastic little DB tool

23:59 - Obsidian Update
* [https://obsidian.md/](https://obsidian.md/)
* Wes: I haven't got into it - find myself still going back to VS Code

26:50 - Descript Update
* [https://www.descript.com/](https://www.descript.com/)
* All-in-one audio and video editing, like a doc

## Links
* [https://chriscoyier.net/](https://chriscoyier.net/)
* [https://hyper.is/](https://hyper.is/)
* [https://www.alfredapp.com/](https://www.alfredapp.com/)
* [https://strapi.io/](https://strapi.io/)
* [https://studio3t.com/](https://studio3t.com/)
* [https://www.mindnode.com/](https://www.mindnode.com/)
* [https://remarkable.com/](https://remarkable.com/)
* [https://www.notion.so/](https://www.notion.so/)
* [https://joplinapp.org/](https://joplinapp.org/)
* [http://www.telestream.net/screenflow/overview.htm](http://www.telestream.net/screenflow/overview.htm)
* [https://shinywhitebox.com/](https://shinywhitebox.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",42811cd45df123ebaab65fa98a7fe2ff7a74b12ef9f3c84a5588c80f53674328,hasty-treat-desktop-apps-new-tech-we-love,/shows/391 - new tech.md,2023-10-16 20:07:33.730,2023-10-27 15:58:01.651,HASTY
syntax_podcast_show_00392,392,Changelog Frontend Feud,2021-09-29 13:00:00.655,https://traffic.libsyn.com/syntax/Syntax392.mp3,"
In this episode of Syntax, Scott and Wes do a crossover episode with Changelog's JS Party! Your favorite web dev podcasts join forces for a super collab that’ll knock you frontend off! Amelia joins Chris Coyier and Dave Rupert from ShopTalk Show, while Divya teams up with Wes Bos and Scott Tolinski from Syntax. Let the FEUDing begin!

## .TECH Domains - Sponsor
.TECH is taking the tech industry by storm. A domain that shows the world what you are all about! If you're looking for a domain name for your startup, portfolio, or your own project like we did with uses.tech, check out .tech Domains. Syntax listeners can snap their .TECH Domains at 80% off on five-year registration by visiting [go.tech/syntaxistech](https://go.tech/syntaxistech) and using the coupon code ""syntax5"".

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes

02:49 - Frontend Feud Rules

04:06 - Round 1

10:28 - Round 2

17:26 - Round 3

25:37 - Round 4

35:15 - Round 5

42:03 - Round 6

## Links
* [Changelog](https://changelog.com/)
* [JS Party](https://changelog.com/jsparty)
* [Chris Coyier](https://twitter.com/chriscoyier)
* [Dave Rupert](https://twitter.com/davatron5000)
* [Wes Bos](https://twitter.com/wesbos)
* [Scott Tolinski](https://twitter.com/stolinski)
* [Jerod Santo](https://twitter.com/jerodsanto)
* [Amelia Wattenberger](https://twitter.com/wattenberger)
* [Divya](https://twitter.com/shortdiv)
* [The Feud At The Seventh Mountain](https://www.bendsource.com/bend/the-feud-at-the-seventh-mountain-condo-owners-prominent-oregon-family-fight-over-repairs-to-inn/Content?oid=2130385)
* [Amelia’s repo visualizer](https://github.com/githubocto/repo-visualizer)
* [CSS-Tricks](https://css-tricks.com/)
* [freeCodeCamp](https://www.freecodecamp.org/)
* [Wes Bos’ courses](https://wesbos.com/courses)
* [Changelog Merch](https://merch.changelog.com/)
* [Level Up Tutorials](https://leveluptutorials.com/)

## Shameless Plugs
* Scott: [All courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",b8b2fe5d505bc21b131f312a17c25edbaa3e31c4e917305b898a31aeff8aa070,changelog-frontend-feud,/shows/392 - frontend feud.md,2023-10-16 20:07:33.768,2023-10-27 15:58:01.710,TASTY
syntax_podcast_show_00393,393,Hasty Treat - Spicy Takeout - PHP Is Good and We’re Just Re-Creating It,2021-10-04 13:00:00.877,https://traffic.libsyn.com/syntax/Syntax393.mp3,"
In this Hasty Treat, Scott and Wes talk about how much modern web development has taken from PHP!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:56 - Why much of modern web development is just recreating PHP
* Everyone loves to hate on PHP, but modern Web dev takes a lot from PHP

05:44 - Mixing templating and logic
  * We do this with JSX

07:39 - Each request has its own scope

08:57 - Massive standard lib
  * Format a date? No sweat!
  * Image resizing? Sure!
  * Audio bindings? Sure!

10:16 - URL-based routing
  * [Next.js](https://nextjs.org/) pages
  * Serverless functions

11:13 - Server-rendered
  * [Hotwire](https://hotwired.dev/)

11:38 - $_GET, $_POST, are just available
  * [Next.js](https://nextjs.org/) hooks

12:29 - Variable interpolation

12:59 - All-in-one frameworks
  * [Laravel](https://laravel.com/) did it
  * [CakePHP](https://cakephp.org/)
  * [CodeIgnighter](https://codeigniter.com/)

13:32 - Direct DB access
  * SQL statements

14:37 - Why do people hate PHP? 
* [WordPress](https://wordpress.org/)
* Inconsistent API
* Their first code was PHP and they sucked
* PHP has come a long way
* It used to not be safe
* Blocking by default - no async/await

17:48 - Why is JS still better?
* Shared code between frontend and backend
* Single language
* Huge ecosystem (could be a con)

## Links
* [Syntax 267: Hasty Treat - Turbolinks + Server Generated HTML + JS Sprinkles](https://syntax.fm/show/267/hasty-treat-turbolinks-server-generated-html-js-sprinkles)
* [https://vuejs.org/](https://vuejs.org/)
* [https://www.hey.com/](https://www.hey.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",cd78777e9e407b47021558330f8cc41b9c1c9415d9cc6e37e10949c7649e0ac3,hasty-treat-spicy-takeout-php-is-good-and-we-re-just-re-creating-it,/shows/393 - php.md,2023-10-16 20:07:33.802,2023-10-27 15:58:01.763,HASTY
syntax_podcast_show_00394,394,Potluck — Corn Shucking × Self-Hosting Images × WordPress × Getting Scammed × Portfolios,2021-10-06 13:00:00.877,https://traffic.libsyn.com/syntax/Syntax394.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about corn shucking, self-hosting images, WordPress, getting scammed, portfolios, more!

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Auth0 - Sponsor
Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes
02:55 - Hey guys, I love the podcast! This is a silly question and possibly the least important potluck question you'll ever get. When you get a new Apple device like an iPhone, Apple Watch, or Macbook Pro... do you keep the box? Why or why not?

06:56 - Hey guys! Awesome podcast! Could you go over the advantages and disadvantages of using local images vs external images service (e.g. Cloudinary) for displaying images on a web app?

11:26 - Heyyyy Scott and Wes! 40-year-old lady here looking to make a career change. It's taken me a year plus, but after building several tutorial React apps, I finally built a fullstack JavaScript app of my own, with lots of rad Postgres database stuff, a bunch of secure Node/Express API endpoints, role-based access control, fancy Oauth, and of course the latest React tech (context, hooks, etc). I'm pretty proud of it. I even managed to configure Nginx and deploy it to AWS. The only problem is...it looks like crap. My portfolio site itself is pretty darn slick, since I used a gorgeous Gatsby template that required only a bit of tweaking. But the site I architected and worked so hard to bring to life? It looks like an 8-bit game for toddlers, a responsive yet Bootstrapy game. My question: does this matter? I would hope that this project shows off my backend skills, but I'm afraid they'll judge a book by its cover. (I guess a second question would be: how *do* you show off your backend skills? I have a README in my repo, but will they actually read it? Or, can you be a fullstack React developer with no design skills?) I am very, VERY ready to apply to jobs (emotionally and financially), but I am terrified of making a fool of myself and worried I'll never get hired. I am completely self-taught and have just been plugging away at this on my own for the duration of the pandemic, so I send a massive thank you to you guys for the sense of community that your show provides! Props to Wyze sprinkler controllers!

16:14 - Scott, I just finished your ""SvelteKit"" course and now I'm working on ""Building Svelte Components"". I have some questions regarding testing. I was listening to an interview with Rich Harris on Svelte Radio and it's my understanding that the framework is trying not to be opinionated as far as testing. What are you doing as far as testing with SvelteKit? Do you have any recommended packages/plugins/libraries? I've only ever written unit tests with Jest in Vue. I'm loving Svelte, but I really want to work on writing tests as well. Basically, everything/anything you've got on testing with SvelteKit would be much appreciated. I've been listening to the show since forever, you guys are both awesome, shout out to Wes too, you've both taught me so much! Thank you, peace, love, and happiness <3

20:25 - Hi Wes and Scott, I am weak when it comes to dev ops. I would like to confidently set up and deploy my applications on AWS and manage dev/prod environments. Any course recommendations to learn how to do this and how it all works so I really understand? If you don't personally, can you tweet this out so other developers can share their thoughts?

22:30 - You both have praised MDX in the past but why would you use it? I understand that it lets you put JSX in your Markdown, but that seems counter to the purpose of using Markdown files for content. Markdown is a portable format for static content and independent of any front-end framework. That makes it a good choice for writing posts and rendering them in any site. Once you inject a React component into it, doesn't that eliminate the portability and the static nature of Markdown? At that point, why not just have a dynamic website where you have complete control of how content is rendered? What are your thoughts?

27:14 - Hey Scott and Wes! I, like you both, am a developer with young kids (I have 3 boys age 6 and under). Needless to say, my house has a lot of energy in it. My job is quite flexible, which I appreciate, because it gives me some freedom to structure my day in a way that helps out my family. My question for you both is this: as a web developer with a spouse and young kids working from home, how do you both maintain a healthy work-life balance (avoid working too much, find time for yourselves, family time, etc.) Thanks so much!

33:46 - Should I write a portfolio site using just the three fundamentals (HTML, CSS, JS) or should I write them in something I am comfortable with such as Angular/React? Unsure if using a framework for a portfolio site is a good idea.	

36:38 - How do you handle hosting when using WordPress as a headless CMS with something like Gatsby? WordPress needs good PHP hosting, while Gatsby needs good CI integration.

38:52 - How frequently do you use `div` tags, versus trying to find a ‘better’ tag? Love the pod btw.

40:48 - This is less of a question and more of a heads up for other listeners. Beware of scam job opportunities. I recently encountered a scam where they used a website that seemed like a very normal and reasonable job board for a major company. I went through the whole process until they asked for personal info, and I asked for verification of their person. They couldn't provide it so I left. But they had profiles matching the actual employees at the company. They had emails. They had an HR department and employees. They had a very legitimate operation going on. Make sure to take a second and verify with the company before giving away personal information or depositing any of their money into your account.

47:38 - What percentage of North Americans keep their mobile device longer than three years? Five years? Eight years? I am a freelancer and I want to put a clause in my contract of what age of device my app will support, but I can't seem to find this information. Just more general answers like ""most people expect a phone to last two-three years.""	

## Links
* [https://kit.svelte.dev/](https://kit.svelte.dev/)
* [https://www.cypress.io/](https://www.cypress.io/)
* [https://www.svelteradio.com/](https://www.svelteradio.com/)
* [https://www.digitalocean.com/blog/](https://www.digitalocean.com/blog/)
* [https://caddyserver.com/](https://caddyserver.com/)
* [https://daringfireball.net/](https://daringfireball.net/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [LuLaRich](https://www.amazon.com/LuLaRich-Season-1/dp/B09CFXPNSX)
* Wes: [Flame Bulb](https://amzn.to/3zq74e2)

## Shameless Plugs
* Scott: [Web Components For Beginners](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Beginner JavaScript Course](https://beginnerjavascript.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",52f7bfc6877fa3cd8f09c9f4277cc1b5c02e86ce19700ddf9422b78020f70169,potluck-corn-shucking-self-hosting-images-wordpress-getting-scammed-portfolios,/shows/394 - potluck.md,2023-10-16 20:07:33.848,2023-10-27 15:58:01.814,TASTY
syntax_podcast_show_00395,395,Hasty Treat - Neat Things in CSS Color - Current and Coming!,2021-10-11 13:00:00.825,https://traffic.libsyn.com/syntax/Syntax395.mp3,"
In this Hasty Treat, Scott and Wes talk about all things color in CSS, both current and coming soon!

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes
04:39 - color-contrast()
* Part of CSS5! Maybe.
* The color-contrast() functional notation takes a color value and compares it to a list of other color values, selecting the one with the highest contrast from the list.

06:01 - Accent color
* [https://davidwalsh.name/css-accent-color](https://davidwalsh.name/css-accent-color)

07:34 - currentcolor
* [https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword)

08:54 - Profiled color values - color()
* [https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color()](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color())

11:00 - color-mix()
* [https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix()](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix())
* The color-mix() functional notation takes two color values and returns the result of mixing them in a given colorspace by a given amount. 
* Would be handy for programmatically generating colors - 10% more blue for a border? Sure!

14:18 - Space-separated functional color notations
* `rgba(255 255 255 0)` instead of `rgba(255,255,255,0.5)`

15:28 - RGB and HSL with Alpha
* rgb() and hsl() can take alpha and percent values - `rgb(0 0 0 / 50%)` or `rgb(0 0 0 / 0.5)`

18:22 - Hex + Alpha values
* RRGGBBAA
* How do you remember?!?!
* Transparent

21:49 - lch(), lab(), hwb() notation
* CIELAB color space aka Lab is a color space.
* A color space is an organization of colors in coordination color profiling supported by various physical devices, it supports reproducible representations of color
* Lab is intended as perceptually uniform
* Perceptually uniform - a perceptual uniform color space ensures that the difference between two colors (as perceived by the human eye) is proportional to the Euclidian distance within the given color space.
* [https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/](https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/)

## Links
* [https://developer.mozilla.org/en-US/docs/Web/CSS/color_value](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value) 
* [https://twitter.com/argyleink](https://twitter.com/argyleink)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",7dd8e8ad1e9a86fbd61e73c236db7ee0ea6499082e2ccf6ed69ed23089507087,hasty-treat-neat-things-in-css-color-current-and-coming,/shows/395 - CSS Color.md,2023-10-16 20:07:33.886,2023-10-27 15:58:01.867,HASTY
syntax_podcast_show_00396,396,A Podcast on Running a Podcast,2021-10-13 13:00:00.825,https://traffic.libsyn.com/syntax/Syntax396.mp3,"
In this episode of Syntax, Scott and Wes talk about running a podcast — recording, sponsoring, where to start, and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
01:45 - Recording Setup
* Zoom to chat
* Record on Zoom
* Quicktime
* Logic
* [Riverside](https://riverside.fm/)
* Wes:
  * [Heil PR-40](https://www.amazon.com/PR-40-Dynamic-Studio-Recording-Microphone/dp/B000SOYOTQ)
  * [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Channel-Processor/dp/B004LWH79A/r)
* Scott:
  * [Electro-Voice RE20](https://www.amazon.com/Electro-Voice-RE20-Broadcast-Microphone-Variable-D/dp/B00KCN83V8)
  * [Cloudlifter](https://www.amazon.com/Cloud-Microphones-CL-1-Cloudlifter-1-channel/dp/B004MQSV04/)
  * [dbx 286s](https://www.amazon.com/dbx-286s-Microphone-Channel-Processor/dp/B004LWH79A/r)

09:13 - Notes
* Shows begin as a Notion doc
* Big outlines with a point-based outline to where to go
* Sometimes points are detailed, other times are just one-word reminders as to what to hit
* Sponsors pulled from a Notion relational table
* Shows are created in a kanban board but moved to a calendar view

12:37 - How do you find stuff to talk about?!
* Technical skills
* Hasty
* Tasty
* Potluck
* Game shows
* Collabs
  * [ShopTalk Collab](https://syntax.fm/show/374/shoptalk-x-syntax)
  * [Changelog Collab](https://syntax.fm/show/392/changelog-frontend-feud)
* Soft skills
  * Productivity
  * Apps
* We Cooked It: Explainer Episode
* Add ideas to the list anytime it pops into your head

21:02 - Editing
* [Podcast Royale](https://podcastroyale.net/)
* We record a clap for syncing
* Upload to Dropbox for our editors

22:07 - Hosting 
* Libsyn
  * Archaic feeling, but covers everything

22:36 - The website
* [Next.js](https://nextjs.org/)
* Open source
* PRs are submitted adding the latest episodes

24:10 - Transcripts
* Generated

24:40 - Would you still start one?
* Podcast vs YouTube vs Twitch

29:20 - Getting popular / Marketing
* How do you do it?
* Consistency is key
* Need external audience

35:34 - Sponsors
* Five to six hours per week in prep
* Most of our sponsors are products we already used
* We sell and manage all our sponsors ourselves

42:17 - What about [Patreon](https://www.patreon.com/)?
* Ad-free version?

46:04 - Live shows
* Confs
* Livestream

## Links
* [Delicious Brains](https://deliciousbrains.com/)
* [Syntax Ep 004: JavaScript Tooling](https://syntax.fm/show/004/javascript-tooling)
* [LulaRich](https://www.amazon.com/LuLaRich-Season-1/dp/B09CFXPNSX)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Untold: Crime & Penalties](https://www.netflix.com/title/81026438)
* Wes: [Roadrunner: A Film About Anthony Bourdain](https://www.amazon.com/Roadrunner-Film-About-Anthony-Bourdain/dp/B09BB55XXX)

## Shameless Plugs
* Scott: [All Courses](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c5e2b60d4ffcf0f25012253359bd10dbea6b2a106ef07702e831b15af2840251,a-podcast-on-running-a-podcast,/shows/396 - podcasting.md,2023-10-16 20:07:33.925,2023-10-27 15:58:01.932,TASTY
syntax_podcast_show_00397,397,Hasty Treat - Handy Utility Functions with Just,2021-10-18 13:00:00.303,https://traffic.libsyn.com/syntax/Syntax397.mp3,"
In this Hasty Treat, Scott and Wes talk about handy utility functions with Just!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
03:44 - What is Just?
* [https://github.com/angus-c/just](https://github.com/angus-c/just)
* No dependencies
* It's written in JS, so you can copy+paste them if you really need it
* Types available
* [https://medium.com/@angustweets/just-a12d54221f65#.ljib0mfr5](https://medium.com/@angustweets/just-a12d54221f65#.ljib0mfr5)

06:46 - Some nice ones
* just-safe-set → deeply setting dynamic object properties
  * `set(data, 'a.long[0].path', value)`
* object-typeof
  * Why not use `typeof`?
    * Everything is an object
  * Why not use `array.isArray`?
    * Handy to have a switch statement
* just-*-case
  * Camel, kebab, snake
* just-compare

10:54 - Why?
* This is the NPM install of Stack Overflow copy+paste
* Handy as hell
* Battle-tested
  * Lots of ways to do simple stuff
  * Sometimes the simple stuff has weird edge cases - these are caught
* Sometimes your checks can be messy
  * Check if an object is empty
  * 25 lines
  * Just install it

12:05 - Other
* Great to learn and test yourself
* There are tests for each function
  * Run them
  * See them fail
  * Try and make it so all the tests pass without looking at the source

## Links
* [https://github.com/angus-c/just](https://github.com/angus-c/just)
* [https://github.com/antony](https://github.com/antony)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",0e971f42125c0243413cea5da5ed666d851dff83b6b248d40294f71073fad981,hasty-treat-handy-utility-functions-with-just,/shows/397 - utility functions.md,2023-10-16 20:07:33.972,2023-10-27 15:58:01.981,HASTY
syntax_podcast_show_00398,398,Potluck — Coding for Kids × MongoDB Hosting × NoMoreFoo × Best Cities for Dev Jobs × GraphQL Resolvers × Package Security × Prototypes and Portfolios × More!,2021-10-20 13:00:00.303,https://traffic.libsyn.com/syntax/Syntax398.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about privacy policies, coding for kids, MongaDB hosting, cloud backups, system design, #NoMoreFoo, and much more!

## Prismic - Sponsor
Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes
04:49 - Ben Lamers: Heyo Scott and Wes! I am building a web app currently with my brother, and I was wondering when we get to launch it how do you go about correctly writing/adding Terms of Use and Privacy Policy. I'm assuming this may be quite different depending on the platform so maybe general resources or tips for this. Thanks!

06:45 - Fumbles O'Brian: Do you have any recommendations for teaching young children how to code? I have a 5-year-old niece in kindergarten who is absolutely fascinated watching me work, and I'd like to start teaching her basic concepts when she's able to read/write better. For example, she loves watching me make UI changes in React, it blows her mind that changing letters on one screen changes what a website looks like.

11:01 - Kenny: Gentlemen! Love this show and the content you put out. It keeps me occupied during my 5 and 6 mile runs.  Thank you both for working so hard to keep it active, I know it takes a lot of work. I'm curious what you think about hosting your own MongoDB server? I'm relatively new to Mongo but want to start working with it for smaller projects. I've used MySQL for a decade, hosted online with shared hosting. Worked well for my relational db needs. Should I host my own Mongo when I'm ready for production, or pay the reasonable costs for something like Linode or maybe even Atlas? I have experience in Linux (enough to get by) and have my own virtualization cluster that I can spin up a server in seconds, along with an enterprise level firewall for managing traffic to and from. I actually just spun up a docker server this week and have a Mongo container running on it, though it's not accessible outside my network. This is purely for my development environments. Despite the firewall, my concern is security. Is it worth paying for a trusted solution like Linode, or should I put a little time in locking down my own Mongo container for my own use? Thank you both! Keep up the great work.

14:42 - Mike: Not a question but more of a rant... It's 2021, almost 2022, can we all stop using 'foo' and 'bar' and 'baz' when teaching a programming concept? I applaud both of you because I don't recall seeing any of your content ever using such atrocious terms, however, I'm sad to see other prominent educators in the web development community use these terms from time to time. I feel like there are so many better examples that we could use to explain a concept and the use of 'foo' is just confusing to beginners. That's all, just wanted to get that off my chest. Thanks for a wonderful podcast! #nomorefoo

18:53 - Amir: Hey Wes and Scott, thank you for your awesome podcast. What are the best cities in Canada and USA to get (more quantity, highest-paying) developer jobs?	

23:44 - LW: Hi guys, I am finally starting to get into GraphQL and I don't get it. Specifically I am working to convert an existing REST API to GraphQL. This seems really tough and there is not much guidance out there on how to do it. The main part I am unsure of is how to write resolvers. If I use the existing query then GraphQL just seems like an over-engineered filter method. If I write an individual resolver for each column in the table - that's gonna be 100s of resolvers and super annoying to write. Have either of you ever moved something from REST to GraphQL? And, if so, how did you handle this?

27:57 - Dan: How does someone learn and actually practice using these system design topics like load balancing, caching, and database sharding. I have never had the need to use some of these things in my day-to-day work, but recently been interviewing and in the system design portion of the interview I feel a little lost. I've read about these topics and watched videos but haven't really seen how to implement these things. Any good resource recommendations?

31:57 - Matt: How do you know if you can trust an NPM package, from an unknown developer, that does not have many GitHub stars and has relatively few downloads? (The repo that made me ask this question is [https://github.com/Wondermarin/react-color-palette](https://github.com/Wondermarin/react-color-palette)). NPM audit automatically runs when you install a package, do any of you ever use additional security checks?

38:32 - Yosef: Hi I'm a beginner front-end developer and I heard you saying that being able to copy prototypes is a valuable skill, so I found some Figma free template and I copied them, the question is can I put them in my portfolio or deploy them?

40:00 - Nick: Hey dudes! I picked up a freelance project to make a brochure-style website and found myself having trouble to decide on what tools to pick for this site. I wanted to ask you and get your take, what tools/tech would you use to build a brochure site? By this, I mean the site should have mainly company information that is ideally editable by the stakeholders and has a contact form. Thanks!

44:22 - Casey: Hi Scooter and Wild Wes! Why do I feel so dirty when I'm forced to use negative values in CSS?

45:45 - Gnommer: Do you use some cloud sync service to backup your directory with projects? I mean OneDrive, Dropbox etc. 
I tried to use it alongside with Git, and it just messed my files so badly. On the other side I feel very uncomfortable without any backup apart from Github. BTW, according to last Potluck: polish 'ł/Ł' is pronounced like 'w' in 'what a sick podcast you have'. Best from Poland ;)

## Links
* [https://www.ryzerobotics.com/tello](https://www.ryzerobotics.com/tello)
* [https://www.mongodb.com/cloud/atlas](https://www.mongodb.com/cloud/atlas)
* [https://snyk.io/](https://snyk.io/)
* [https://deno.land/](https://deno.land/)
* [https://kit.svelte.dev/](https://kit.svelte.dev/)
* [https://astro.build/](https://astro.build/)
* [https://www.gatsbyjs.com/](https://www.gatsbyjs.com/)
* [https://www.dropbox.com/](https://www.dropbox.com/)
* [https://www.backblaze.com/](https://www.backblaze.com/)
* [https://www.synology.com/](https://www.synology.com/)
* [https://support.apple.com/en-us/HT201250](https://support.apple.com/en-us/HT201250)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [The Way Down](https://play.hbomax.com/page/urn:hbo:page:GYS_1DQ3ANK29TgEAAAAg:type:series)
* Wes: [Wooster Shortcut](https://amzn.to/300tlTT)

## Shameless Plugs
* Scott: [Modern GraphQL with Prisma](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",2b882566b2eeef07e40cbd431a958d9bb1e47a0deafb54f63dae09fd5b6d365a,potluck-coding-for-kids-mongodb-hosting-nomorefoo-best-cities-for-dev-jobs-graphql-resolvers-package-security-prototypes-and-portfolios-more,/shows/398 - potluck.md,2023-10-16 20:07:34.018,2023-10-27 15:58:02.037,TASTY
syntax_podcast_show_00399,399,Hasty Treat - Hasty Horror Stories,2021-10-25 13:00:00.889,https://traffic.libsyn.com/syntax/Syntax399.mp3,"
In this Hasty Treat, Scott and Wes talk about web dev horror stories — real things that have happened to real developers

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:36 - [https://twitter.com/CameronPak/status/1445051951843061767](https://twitter.com/CameronPak/status/1445051951843061767)

04:48 - [https://twitter.com/susanlangenes/status/1445049321871712257](https://twitter.com/susanlangenes/status/1445049321871712257)

05:29 - [https://twitter.com/DevJordanW/status/1445052979644706823](https://twitter.com/DevJordanW/status/1445052979644706823)

06:12 - [https://twitter.com/HerbieDuah/status/1445088892177108994](https://twitter.com/HerbieDuah/status/1445088892177108994)

07:04 - [https://twitter.com/bbbryan14/status/1445400072921956357](https://twitter.com/bbbryan14/status/1445400072921956357)

07:43 - [https://twitter.com/stephendennis30/status/1445074683062362114](https://twitter.com/stephendennis30/status/1445074683062362114)

07:59 - [https://twitter.com/Tim__Moran/status/1445102727701221377?s=20](https://twitter.com/Tim__Moran/status/1445102727701221377?s=20)

08:37 - [https://twitter.com/SoyAlejandroAl/status/1445063677896450048](https://twitter.com/SoyAlejandroAl/status/1445063677896450048)

09:34 - [https://twitter.com/sudonetizen/status/1445132694531231760](https://twitter.com/sudonetizen/status/1445132694531231760)

11:09 - [https://twitter.com/chrislaughlin/status/1445049210840178690?s=20](https://twitter.com/chrislaughlin/status/1445049210840178690?s=20)

11:58 - [https://twitter.com/sbitaxi/status/1445208793072156675](https://twitter.com/sbitaxi/status/1445208793072156675)

12:44 - [https://twitter.com/AlexHBruns/status/1445067663919755269](https://twitter.com/AlexHBruns/status/1445067663919755269)

13:05 - [https://twitter.com/costerad/status/1445069263568580616](https://twitter.com/costerad/status/1445069263568580616)

14:02 - [https://twitter.com/gcnx86/status/1445045635250638853](https://twitter.com/gcnx86/status/1445045635250638853)

14:25 - [https://twitter.com/JustMetMe_app/status/1445041678167920640](https://twitter.com/JustMetMe_app/status/1445041678167920640)

14:47 - [https://twitter.com/alanshortis/status/1445048899899645959](https://twitter.com/alanshortis/status/1445048899899645959)

15:50 - [https://twitter.com/Swizec/status/1445191324215353347](https://twitter.com/Swizec/status/1445191324215353347)

16:17 - [https://twitter.com/_RobJohansen/status/1445137057236467722](https://twitter.com/_RobJohansen/status/1445137057236467722)

17:14 - [https://twitter.com/fienen/status/1445040513678196743](https://twitter.com/fienen/status/1445040513678196743)

17:57 - [https://twitter.com/TechBill777/status/1445172824822452226](https://twitter.com/TechBill777/status/1445172824822452226)

18:54 - [https://twitter.com/Zircoz/status/1445041440770252806](https://twitter.com/Zircoz/status/1445041440770252806)

## Links
* [https://twitter.com/wesbos/status/1445039778035032068](https://twitter.com/wesbos/status/1445039778035032068) 

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",cb02201982d9f290ae0a6ad957bf6f995e07f09547dd18345c3ca8401ac57635,hasty-treat-hasty-horror-stories,/shows/399 - horror stories.md,2023-10-16 20:07:34.060,2023-10-27 15:58:02.090,HASTY
syntax_podcast_show_00400,400,Horror Web Dev Stories - 2021,2021-10-27 13:00:00.889,https://traffic.libsyn.com/syntax/Syntax400.mp3,"
For episode 400, Scott and Wes talk about web dev horror stories - 2021 edition!

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Mux - Sponsor
Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes
02:54 - Hi guys, love the show. I wanted to share with you something that happened just the other day (Oct 4th), I was starting my new job today at a large tech company. They use React for everything (even DNS!, don't ask me how, it's complicated). I figured I'd celebrate my first day and push some code to prod, (how hard could useEffect be right?) Next thing you know, they ended up bringing in a guy with an angle grinder to get access to the server cage.

04:15 - No one from Denver can buy

06:38 - Bug accidentally gives $90 million to users
* https://www.cnbc.com/2021/10/01/defi-protocol-compound-mistakenly-gives-away-millions-to-users.html

08:34 - Share Pointy Knives
* Hi! I'm a developer at a consulting firm in Sweden, writing C# on the backend and using React with either JavaScript or TypeScript and hosting things in Azure 99% of the time (and 1% in SharePoint). I was in my last week at my last job before I was due to start my new job. Worked 12 h/day to keep up with all the handovers etc. to colleagues so they would have a chance to continue working on the solutions I have taken care of. One project was a process tool hosted in SharePoint Online. The guy who would oversee it had -1% experience with SharePoint (which I pointed out to my bosses). But to make things a bit easier, I wrote a deploy script to ease things a bit. Starts the terminal and runs the script towards the acceptance environment. Umpteen million errors appear... Which is strange, because there would only be about 20 commands (which can cause errors like these). I log into the environment to double check if I now accidentally entered the wrong values in the script (which looked okay according to me). But I get a 404 error when I try to reach the environment... I log into the admin interface; I discover that the site is gone... Also checking the trash can, there are no things there. Very strange. I find that I'm in a different folder than the one where I saved my script... In that folder there is an old deploy script that was used when the project was started a thousand years ago (which was not used after the project was ""finished""). The first thing the script does is force delete the site and then try to create a new empty site... The site is gone with lists and everything (lists are a SharePoint thing, think of it as sql-lite), there are no backups of the acceptance environment (although it is very important). I just feel a little panicked about how I'm going to solve this. However, I remember testing a tool six months ago to copy entire environments. Where the first attempt was made on the acceptance environment. Finds the cloned environment and can use the same tool to clone it back. It took only 8-12 hours of work to create all the new things done in the environment in the last 6 months instead of X number of hours to build everything from scratch.
* Once I updated a feature that saves accessories on orders (same solution). However, I failed to add all the new fields to the production environment. Which meant that accessories were not saved at all... Which was discovered after a week... I fixed the error in 5 minutes and the sellers had to contact x number of customers to double check what kind of accessories they would have for their orders...

11:22 - External HD
* One time I needed to format a server. It was an outdated Windows server. I selected all the files and copied and pasted to an external hard drive. My drive was pretty fast and it took like a minute. I was like: “Wow! That’s a great external hd”. Formatted the server and, as soon as I realized it didn’t copy 10% of the files, I had that face. We all know that face. Anyways. Tried to restore the files using some HD recovery tools but they were all corrupted, not by the formatting itself but for the installation of the new OS. My boss was pissed! I was very young so I blame it on the server. I’m not proud of it. But why the heck they would ask a developer to format a server in the first place? By the way, my birthday is on Halloween. Spoooky.

13:07 - Hey Loser
* I was testing new code to automate mass-mailings to our customers. Who knows what demon drove me but I wrote the “test” mailings like ransom notes: “Dear loser! Fork over all your $$$ or else!” Well, all was looking great and I wa s feeling pretty pleased with myself. Progress bars were sliding and counters were spinning. But I could hear a rising commotion from the marketing guys behind me. Phones ringing, voices raised. Turns out I had moronically wired myself to the production database! Even worse for me, I’d only been at the company a month or two. I thought my goose was cooked and the Big Boss was plenty mad, but I owned up right away and apologized. We put out a cover story that we’d been hacked and all was forgiven.

15:01 - HE HATE ME
* I was part of the developer team that accidentally leaked the 8 cities the XFL, an alternate football league, a week before their press conference. [ewrestling.com/article/wwe-ac…](http://ewrestling.com/article/wwe-ac%E2%80%A6) We were using Contentful and Gatsby. A junior dev entered the information into the prod space instead of the UAT space and when we released some bug fixes, it picked up the contact us content update. I found out after seeing stories pop up in Google News when I was about to go to sleep. Was taking the content down when we started getting calls from the CIO of the WWE. The league went bust because of COVID.

19:23 - I Don't Have Memory of This
* I had two pretty bad code changes that only showed their problems when they went live in production. Around 6 years ago, I was running into a large performance issue with some of our queries running slowly against this giant DB. We were using JPA/Hibernate and we had a bunch of joins that were done lazily. I switched a few of them to eager so that they would create a single SQL statement instead of a bunch (or thousands). The change worked fine on my dev environment, QA, and staging. Staging was supposed to be representative of production. So we went live and within minutes the entire system went down because of out of memory errors. We quickly switched back to the lazy joins. We found out that staging had more memory and fewer DB records than production though they were supposed to be exactly the same.

21:05 - Your Performance is Slowing us down
* Back when VMWare was becoming a thing, like 2010 or so. I was working at an ecomm site and we were seeing slow performance between the app server and some data services. I decided to build a little multithreaded logger that could track when a query to Oracle Financials was running too slow and generate a warning. Oracle Financials was doing the credit card transactions, orders, and all the rest of the sites DB work. The code had no impact on my dev, QA, and staging environments. We were hitting well over our minimum number of concurrent users. We deployed it to production and then the system got slower and slower, but never crashed. Again, production and staging were set up differently. Staging was a bare-metal server. Production was running on an ESXi server on a host that was split 4 ways. The multi-threaded code meant to detect performance degradations was slowing the whole system down when it tried to synchronize data across threads. I was pretty embarrassed by both these two issues. It went to show that production is its own special thing and that you really don't know if your server-side code is really going to work until it starts running there.

23:15 - Dead Button
* Way back when mainframes were king, a guy I worked with pushed a button in, that if released, would immediately take down the entire company. He stood there for 4 hours, holding the button in, until we could let it crash after business hours. We gave him a chair after 2 hours.

25:12 - No Deploys on Fridays
* I was a junior dev working on our company's website. They were HTML + nunjucks templates that were later being integrated with the backend using some Python witchcraft. There was also a metric ton of JS libraries added (like Babra for page transitions, threejs for a cool interactive animation on the landing page etc.). Didn't really get much of all this package.json stuff at that seniority level. So after running yarn or npm or whatever, and seeing some warnings about a couple packages being outdated, I decided to update some of them. It ran great locally, but I didn't build the prod version, as I didn't know there could be any differences. I was working on some minor feature (or maybe even some minor bug) and the PM decided there's no time for code review. So I pushed it to the repo, the backend guy did his integration, and launched it on prod. As it turned out, there were some breaking changes in one of the libraries I decided to update. It crashed the entire site. On Friday. At 4:30PM. And that, kids, is why you don't deploy on Fridays.

27:33 - Stupid Selfie
* Horror story for you Wes. I work for one of the biggest retailers in the UK and we were working on an app that would go on a 'media wall' in their flagship store in London. Basically a giant 200-inch screen in the middle of the store that social content can go on. Turns out that I left my local Dev version connected to the production API when I uploaded a couple of stupid selfies of my big head in the office. Get a call the next day to ask why my face is on the medial wall.

28:37 - Soda
* I was a computer operator back in the late 1960’s, operating a Honeywell mainframe. The consoles were huge, about the size of a dishwashing machine, with the console typewriter and printer inset in the middle, on top. I had a soft drink on the console, next to the typewriter mechanism. We were told never to bring a drink into the room but we all did it, especially on third shift. Long story short, someone called my name, I turned around and knocked the glass of soda into the console. Had to be completely replaced – machine was down for two days. My boss was not happy.

31:22 - Oof
* A bigger horror story. I had my own software company in the 90’s and was in Singapore, customizing my software package for Johnson & Higgins Insurance Brokers – I had their Asian contract for my Insurance Broker/Accounting package. I spent a good 40 hours on Saturday and Sunday, making all the changes they asked for, getting ready for a demo on Monday morning. I finished up about 4am on Monday morning and was cleaning up my files. All this work was done on a Novell server. Print files had an extension of .prt and I had a ton of them in the main directory from all of the testing I had done. I was cleaning out old files, getting ready to back everything up and I thought I would delete all of the print files. I mistakenly keyed in erase *.prg, instead of erase *.prt (or whatever the delete command was – can’t remember it now). Programming files have a .prg extension – I had deleted all of my updated files from the weekend. In desperation I called Novell in Utah, hoping they could help me recover the files, but no-go. The demo Monday morning was not fun.

33:24 - Young Dev
* I was a young dev right out of college. My first job was at a child support company where we had desktop apps that would handle case information more efficiently than using Excel. My first project was to write a POC that would later be implemented into a new, bigger app that consolidated all the “POCs” for various parts of the child support process. For some odd reason, I still don’t know why to this day, my boss wanted me to write this “new” app on top of an old app with a bunch of legacy code. I never understood why but as a young dev fresh out of school, you tend to just do what you’re told. In school, I mainly used PHP/HTML/CSS for learning how to work with a database; this job however used C#/.NET for their desktop apps so I was doing a lot of learning as I went. I remember finally learning how to connect to the database and run some SQL after fighting with this old pile of legacy code. In early versions, I chose to handle creates/updates for these records in the same function. My young, dumb self wrote a try catch statement that would attempt to create the record and if it failed, it would try to update the record. Before the first production release, I updated the flow to handle creates/updates in separate functions - but never removed the update in the catch block of the original function now used for creates only. Somehow I, or any PM/QA, never failed on a create and hit this catch block while testing. Fast-forward probably 9-12 months later, I got a ticket to investigate why every case’s data looked the same in Production. I login to the app, search a few case numbers and sure enough, every case’s data is the same. I began freaking out as I had no clue how this could’ve happened. I mean it had never happened in all the dev work, testing, and months of live Production use. After I investigated with a senior dev, we realized the try block had failed and the update query in the catch block ran for that record - we also realized that I left off the where clause in the related SQL query to specify which record needs updating - so ALL records got updated with this data. Thankfully, we kept regular back-ups and were able to restore the data to a recent timeframe without users losing a ton of work. We commented out that database update call and redeployed the code ASAP. Also the senior dev was cool about it and was like “hey, it happens to all of us at some point”. Let’s just say I’ve learned a ton since then and definitely steer clear from writing code like that. You live and you learn I suppose.

38:40 - Where Wolf
* Here’s my development tale of terror: One night I was burning the midnight oil trying to get caught up on a never-ending workload. At the time I was working for an online travel booking site. It was after 11, and the last thing I had to do for the night was to rename one of the hotels in our production database. So I wrote my query: `UPDATE hotels SET name=‘Some Hotel Chain’;` One problem, I FORGOT THE WHERE CLAUSE. Suddenly, over 5,000 hotels in our production database all had the same name. This was around 2003, so well before the time of point-in-time restores, and we were only backing up the database every week at that point. I was panicking. Fortunately, I had a dump of the production database that I had created only a couple of hours earlier sitting on my local hard drive. So thankfully, I was able to restore almost all of the hotel names, save for a couple that signed up after that data dump, and my boss was none the wiser. That’s when I learned that working late hours is not worth it, because at some point you are so tired that you can no longer make good decisions.

41:19 - I Want Your Job
* When I first started out I worked for a consultancy and they trained us in sales meetings to help managers get promoted because we were coming in to make them ""look good"". This was okay b/c obviously, we were coming in as a contractor; however, after being laid off due to 9/11 (yes, this was about 20 years ago), I was looking for a new job and during an interview when asked where I'd like to be in X years, I mentioned to the hiring manager that I wanted to eventually do what he was doing. Well, I guess he didn't take it that I wanted to make him get promoted to then take his spot. Safe to say I didn't get hired. 🤦‍♂️😜

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [Portable Air Compressor](https://amzn.to/3atw3mP)
* Wes: [ESR Magnet Phone Mount](https://amzn.to/3mJyLKB)

## Shameless Plugs
* Scott: [Latest courses on Prisma and Astro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",59fb8fbf54b3d03e22b990d5d9558a0f87622142a84a9f312af28cc270778791,horror-web-dev-stories-2021,/shows/400 - horror stories.md,2023-10-16 20:07:34.104,2023-10-27 15:58:02.144,TASTY
syntax_podcast_show_00401,401,Hasty Treat - How to Setup a PNPM Monorepo,2021-11-01 13:00:00.142,https://traffic.libsyn.com/syntax/Syntax401.mp3,"
In this Hasty Treat, Scott and Wes talk about PNPM and monorepos!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

4:40 - What is pnpm?
* [https://pnpm.io/](https://pnpm.io/)
* Performant npm
* [https://www.youtube.com/watch?v=hiTmX2dW84E](https://www.youtube.com/watch?v=hiTmX2dW84E)
* Find and remove node modules
  *  [npkill](https://www.npmjs.com/package/npkill)
  * `find . -name ""node_modules"" -type d -prune -exec rm -rf '{}' +`

08:30 - Why monorepo?
* Internal packages all in one place
* Forks and custom packages easier
* Commands that control everything at once

10:33 - Workspaces
* Not exclusive to pnpm
* Yarn, npm, pnpm all have them now
  * Different syntax
```jsx
packages:
  - ""packages/**""
```

12:48 - How it works in practice
* All commands run through root
* Use in host, hook up my monorepo to render run commands
* Filter and recursive
* `""install:all"": ""pnpm recursive install"",`
* `""clean"": ""pnpm recursive exec -- rm -rf node_modules; rm shrinkwrap.yaml; rm -rf node_modules"",`
* `""ui:dev"": ""pnpm recursive run dev --filter @leveluptuts/ui"",`

16:35 - Using submodules
* [https://paigeniedringhaus.substack.com/p/march-2021-git-submodules](https://paigeniedringhaus.substack.com/p/march-2021-git-submodules)
* Why submodules?
* Public and private

## Links
* [https://www.npmjs.com/package/npx](https://www.npmjs.com/package/npx)
* [https://yarnpkg.com/](https://yarnpkg.com/)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9eaca9867588496dc02762390fc893f3a282c3f298c69cc0ec23d021385095bd,hasty-treat-how-to-setup-a-pnpm-monorepo,/shows/401 - pnpm.md,2023-10-16 20:07:34.147,2023-10-27 15:58:02.215,HASTY
syntax_podcast_show_00402,402,"STUMP'D Interview Questions - CSS Edition",2021-11-03 13:00:00.142,https://traffic.libsyn.com/syntax/Syntax402.mp3,"
In this episode of Syntax, Scott and Wes are back with another edition of ""Stump'd!"" where they try to stump each other with interview questions.

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Cloudinary - Sponsor
[Cloudinary](https://cloudinary.com/?utm_source=Syntax.fm&utm_medium=Podcast&utm_content=Cloudinary_Syntax_podcast) is the best way to manage images and videos in the cloud. Edit and transform for any use case, from performance to personalization, using Cloudinary’s APIs, SDKs, widgets, and integrations.

## Show Notes

06:05 - Which property allows you to control the shape or appearance of the marker of a list?

06:33 - What is a pseudo element? What is a pseudo class?

09:15 - What is the difference between block, inline and inline-block elements?

10:15 - What is a combinator selector?

11:12 - What is specificity? How do you calculate specificity?

14:37 - True or False — The translate() function can move the position of an element on the z-axis?

16:44 - What is the difference between ""resetting"" and ""normalizing"" CSS?

17:51 - How can you load CSS resources conditionally?

19:45 - Is there any reason you'd want to use translate() instead of absolute positioning, or vice-versa?

22:30 - When to use CSS grid vs flexbox?

25:12 - What are all eight @-rules in CSS?

28:01 - Which property is used to underline, overline, and strikethrough text?

29:52 - What is DOM reflow?

32:14 - How do you serve your pages for feature-constrained browsers? What techniques do you use?

34:00 - What is the property for controlling image-scroll?

36:23 - What are the three different types of CSS gradients?

## Links
* [https://github.com/sudheerj/javascript-interview-questions](https://github.com/sudheerj/javascript-interview-questions)
* [https://github.com/learning-zone/css-interview-questions](https://github.com/learning-zone/css-interview-questions)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [https://height.app/](https://height.app/)
* Wes: [Anker Mini Car Charger](https://www.amazon.com/Anker-Charger-PowerDrive-Adapter-iPhone/dp/B07PGT7LSR/)

## Shameless Plugs
* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [Advanced React Course](https://advancedreact.com/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",0772f3cba5431f4c458d8a181587ceca98108b3dec675324cb5b5ebd1473650b,stump-d-interview-questions-css-edition,/shows/402 - stumpd.md,2023-10-16 20:07:34.181,2023-10-27 15:58:02.265,TASTY
syntax_podcast_show_00403,403,"Hasty Treat - What's the deal with Astro?",2021-11-08 14:00:00.049,https://traffic.libsyn.com/syntax/Syntax403.mp3,"
In this Hasty Treat, Scott and Wes talk about Astro — what it is and why you should check it out!

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes
03:08 - What is it, what does it do?
* Framework for server-first static apps
* Use any front-end framework
* Does not ship JS unless you explicitly define a component to ship JS

05:20 - The syntax
* .astro files is a mash-up of Svelte and React
* Frontmatter for server-side JS
* Template syntax is basically JSX
* TS baked in

```html
<!-- Hydrates on load -->
<!-- <Test client:load  /> -->

<!-- Hydrates after main thread is free -->
<!-- <Test client:idle  /> -->

<!-- Hydrates as it's in viewport aka LazyLoading-->
<!-- <Test client:visible  /> -->

<!-- Hydrate when matching media query -->
<!-- <Test client:media={'(max-width: 600px)'}  /> -->

<!-- Only renders on the client -->
<!-- <Test client:only  /> -->
```

07:48 - State management
* In client-side JS only, no state in .astro files

10:50 - CSS 
* Svelte style
* Local, scoped <style> tags
* SCSS baked in

11:16 - Data fetching
* Fetch in frontmatter via fetch()

12:06 - Vs React? Vs Next? Vs Gatsby? Vs Svelte?

15:24 - Tooling
* There is a Syntax highlighter
* Uses Snowpack under the hood

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",883185e1f70fd5f196acab9724410849ca089ee0f17222c896cc847de67f9442,hasty-treat-what-s-the-deal-with-astro,/shows/403 - astro.md,2023-10-16 20:07:34.219,2023-10-27 15:58:02.314,HASTY
syntax_podcast_show_00404,404,"Web Containers, StackBlitz, and Node.js in the Browser with Tomek Sulkowski",2021-11-10 14:00:00.049,https://traffic.libsyn.com/syntax/Syntax404.mp3,"
In this episode of Syntax, Scott and Wes talk with Tomek Sulkowski about web containers, StackBlitz and more!

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Guests
* [Tomek Sulkowski](https://twitter.com/sulco)

## Show Notes
02:45 - What is StackBlitz?

05:28 - What makes it different?

08:20 - How does offline work?

12:18 - What are web containers? How does this fit in? 

17:45 - How does this all work (WASM, Node.js in the browser, etc.)?

21:00 - What does performance look like?

31:06 - What about VS Code extensions? 

32:48 - Monorepos?

35:12 - Databases? Sqlite? 

35:36 - Are there any limitations? 

37:02 - What is Turbo?
  
40:58 - How is this different from similar apps?

## Links
* [https://stackblitz.com/](https://stackblitz.com/)
* [https://jsbin.com/?html,output](https://jsbin.com/?html,output)
* [https://jsfiddle.net/](https://jsfiddle.net/)
* [https://codepen.io/](https://codepen.io/)
* [https://code.visualstudio.com/](https://code.visualstudio.com/)
* [Fugu API Tracker (fugu-tracker.web.app)](https://fugu-tracker.web.app/)
* [https://www.docker.com/](https://www.docker.com/)
* [https://spidermonkey.dev/](https://spidermonkey.dev/)
* [https://github.com/chakra-core/ChakraCore](https://github.com/chakra-core/ChakraCore)
* [https://sli.dev/](https://sli.dev/)
* [https://vscode.dev/](https://vscode.dev/)
* [https://codesandbox.io/](https://codesandbox.io/)
* [https://www.gitpod.io/](https://www.gitpod.io/)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [HaloLock Universal Ring](https://amzn.to/3BfTuuF)
* Wes: [Car LED Light Upgrade](https://amzn.to/3GjtUZq) 
* Tomek: [The Dresden Files](https://amzn.to/3jCAL6F)

## Shameless Plugs
* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!
* Tomek [StackBlitz](https://twitter.com/stackblitz)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bdfe716a27cace872a62db1072404aed2fdb0836653963944bef3bbebbb9d8fd,web-containers-stackblitz-and-node-js-in-the-browser-with-tomek-sulkowski,/shows/404 - tomek.md,2023-10-16 20:07:34.260,2023-10-27 15:58:02.364,TASTY
syntax_podcast_show_00405,405,Hasty Treat - Next.js 12,2021-11-15 14:00:00.119,https://traffic.libsyn.com/syntax/Syntax405.mp3,"
In this Hasty Treat, Scott and Wes talk about Next.js 12 and all of its hot new goodness and updates!

## Sanity - Sponsor
Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor
LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes
04:00 - **[Rust Compiler](https://nextjs.org/blog/next-12#faster-builds-and-fast-refresh-with-rust-compiler)**: ~3x faster Fast Refresh and ~5x faster builds

06:25 - **[Middleware (beta)](https://nextjs.org/blog/next-12#introducing-middleware)**: Enabling full flexibility in Next.js with code over configuration

08:16 - **[React 18 Support](https://nextjs.org/blog/next-12#preparing-for-react-18)**: Native Next.js APIs are now supported, as well as suspense

09:56 - **[`<Image />` AVIF Support](https://nextjs.org/blog/next-12#smaller-images-using-avif)**: Opt-in for 20% smaller images

11:58 - **[Bot-aware ISR Fallback](https://nextjs.org/blog/next-12#bot-aware-isr-fallback)**: Optimized SEO for web crawlers

13:10 - **[Native ES Modules Support](https://nextjs.org/blog/next-12#es-modules-support-and-url-imports)**: Aligning with the standardized module system

14:39 - **[URL Imports (alpha)](https://nextjs.org/blog/next-12#url-imports)**: Import packages from any URL, no installs required

## Links
* [https://twitter.com/mattgperry](https://twitter.com/mattgperry)
* [Introducing Middleware](https://nextjs.org/blog/next-12#introducing-middleware)

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",23ef16f15cd49ff8ba9b5b319a09d5a33988550fe490d6d67c492ad7d889ae64,hasty-treat-next-js-12,/shows/405 - nextjs.md,2023-10-16 20:07:34.300,2023-10-27 15:58:02.498,HASTY
syntax_podcast_show_00406,406,Potluck — Copilot × Glasses × Databases × Dealing with Stress × Employment vs Self-Employment × Auth in GraphQL × Headless CMS × More!,2021-11-17 14:00:00.119,https://traffic.libsyn.com/syntax/Syntax406.mp3,"
It's another Potluck! In this episode, Scott and Wes answer your questions about GitHub Copilot, glasses, databases, dealing with stress, self-employment vs employment, design, CORS, and much more!

## Linode - Sponsor
Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor
If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor
Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes
03:12 - Ders: Has GitHub Copilot become part of your daily workflow, or have you turned it off?

05:50 - Gaston Gmzi: Hey guys you rock!!! I’d like to know if you use eyeglasses and if you have any preference regarding models, design and features like blue-light blocking and anti-reflection. Also, where do you buy them? Do you go to a store to try them out, or do you buy them online? And if ordering online, which specifications do you use besides the doctor’s prescription? If you guys have any sick picks about eyeglasses it would be great to hear it too. Thanks for the show and have a great week!!!

11:04 - Hi, I would like to know how the two of you deal with stress? I am a freelancer and sometimes clients can get the worst in me. When they do, I usually take a long walk and listen to a podcast, but I don't always have the time for that. I can actually go into my commit history and show which one was under stress. I think a lot of developers especially freelancers could benefit from that. Thanks.

16:47 - Mike Varela: Question for you guys about dynamic database fields and API requests. How do you let the user store dynamic metadata? Thanks. Love the show, avid listener.

21:04 - Valentine Michael Smith: Can you touch on the use of the word “grok” in the dev world? I know a lot of people who have no idea what this word means. I just happened to have tried to read Stranger in a Strange Land, the novel the word originated from, a few years ago or else I wouldn’t have ever heard it before starting dev work. Have either of you read the book? Anyways, why do devs say this?

24:50 - Steve Lewis: If you guys were not self-employed, would you prefer to work for a big company (like FAANG) or go to a smaller agency or startup, etc.?

27:08 - So Many Localhost Errors: This may be a softball, but how do you set up your logging (Sentry and/or LogRocket) so your dev environment isn't firing all the time? I can't seem to find a way to do this well (and it's probably because I'm trying to learn as I go). 

31:03 - Josh J from Jersey: Hey guys, loving the podcast, I've been listening for about a month but bingeing through your episodes during my mind-numbing warehouse job, helps me keep my mind on JavaScript and what I have managed to learn in my spare time. I was wondering, when you're sitting down to a new project, how do you design the website? Does it just slowly develop as you code or have you sat down and drawn out what you want it to look like ahead of time? I have heard talk of a remarkable pad. I've seen ads for this on Instagram and YouTube but always assumed it was a very gimmicky thing. Is this a good investment? Also wondering how you both met? Have you worked on any projects together outside of courses and Syntax? Keep the content coming!

38:14 - Andras: Hi Wes and Scott. You have talked a lot on the show about headless CMS's like Sanity, Prismic or even WordPress being used as a headless CMS. I am curious what the setup in a real world project is like. How would you host the CMS? And what will the admin surface look like? Will the button styles, background color etc. be different than the actual website that the end user sees? Is that a problem for the admin users? Does the admin user see all the menu for creating new content types or adding new features? Or do they only see the input fields of all the contents that can be added to a specific page? Thank you!

42:14 - Dave: Hey guys, love the podcast! I understand that CORS prevention is in place in the browser to help improve security/prevent malicious requests across domains, but I don't understand why you can get around this by performing the request server side, for example via cURL? If I were a malicious actor, surely I could just send my cross domain request through a proxy to avoid the CORS issue? I'm sure I'm missing something obvious here, can I please get your thoughts on this?

44:48 - Lemon: How do you implement authentication with GraphQL? Especially in Fastify, I know Scott recently moved over from Meteor to Fastify, so I too was checking Fastify but couldn't find a satisfying auth solution that fits well with GraphQL.

48:08 - Zack Vogel: I love when you play games on the podcast. I'm a high school technology teacher and I play a game with my students called the 5 Second Rule. It's based on a board game, but I have changed the topics to technology-themed questions. The game works like this. One person reads a topic ""Name Three VS Code Extensions"" and the other person has five seconds to respond with three correct answers.
I think this could be a fun game to play on the podcast. 

## Links
* [http://www.seeeyewear.com/](http://www.seeeyewear.com/)
* [https://www.warbyparker.com/](https://www.warbyparker.com/)
* [https://www.costco.com/](https://www.costco.com/)
* [MariaDB dynamic columns](https://mariadb.com/kb/en/library/dynamic-columns/)
* [https://en.wikipedia.org/wiki/Grok](https://en.wikipedia.org/wiki/Grok)
* [https://twitter.com/argyleink](https://twitter.com/argyleink)
* [https://remarkable.com/](https://remarkable.com/)
* [https://figma.com/](https://figma.com/)
* [https://graphql.org/](https://graphql.org/)
* [https://www.meteor.com/](https://www.meteor.com/)
* [https://www.fastify.io/](https://www.fastify.io/)
* [https://docs.google.com/presentation/d/1oRqz1rSUXiLc5pJF2cMygNrodcRrRU77x0KdWGV67Iw/edit?usp=sharing](https://docs.google.com/presentation/d/1oRqz1rSUXiLc5pJF2cMygNrodcRrRU77x0KdWGV67Iw/edit?usp=sharing)

## ××× SIIIIICK ××× PIIIICKS ×××
* Scott: [myQ Chamberlain Smart Garage Control](https://amzn.to/3mxqIl2) 
* Wes: [ATOTO Head Unit](https://amzn.to/31bh9zY)

## Shameless Plugs
* Scott: [Level Up Tutorials Pro](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats!
* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",fa812ee2ae7229a61cc60b45dac73718fcc699a789846904264ee4088a1c4064,potluck-copilot-glasses-databases-dealing-with-stress-employment-vs-self-employment-auth-in-graphql-headless-cms-more,/shows/406 - potluck.md,2023-10-16 20:07:34.347,2023-10-27 15:58:02.549,TASTY
syntax_podcast_show_00407,407,The Macbook Pro Show - Wes and Scott Get New Laptops,2021-11-22 12:00:00.146,https://traffic.libsyn.com/syntax/Syntax_-_407.mp3,"
In this Hasty Treat, Wes and Scott talk about their new Apple MacBook Pro's with the M1 Max CPU.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[04:30](#t=04:30)** The last time we upgraded
* **[07:05](#t=07:05)** Initial thoughts on new MacBook Pro
* [Apple MacBook Pro](https://www.apple.com/macbook-pro/)
* **[09:23](#t=09:23)** How much RAM you might need
* **[11:33](#t=11:33)** M1 Pro or M1 Max?
* **[12:37](#t=12:37)** Justification as a business expense
* [Figma](https://www.figma.com)
* [Sketch](https://www.sketch.com)
* [We recently found that the new 2021 M1 MacBooks cut our Android build times in half.](https://twitter.com/softwarejameson/status/1455971162060697613)
* [VS Code](https://code.visualstudio.com)
* [Microsoft releases M1-native Visual Studio Code for developing apps](https://appleinsider.com/articles/21/03/05/microsoft-releases-m1-native-visual-studio-code-for-developing-apps)
* [Notion](https://notion.so)
* [Height](https://height.app)
* [Sublime Text](https://www.sublimetext.com)
* **[14:52](#t=14:52)** Shortening the feedback cycle
* **[15:57](#t=15:57)** Using VS Code
* **[21:20](#t=21:20)** Video editing on M1 MacBook Pro
* [Mkbhd - M1 Macbook Pro review](https://www.youtube.com/watch?v=rr2XfL_df3o&t=1s)
* [Synology](https://www.synology.com)
* [Syntax.fm Ep220 The Synology Show](https://syntax.fm/show/220/the-synology-show-backups-and-home-server)
* [Recut](https://getrecut.com)
* [Davinci Resolve](https://www.blackmagicdesign.com/products/davinciresolve/)
* **[24:27](#t=24:27)** Screenflow export comparison
* [Screenflow](https://www.telestream.net/screenflow/)
* **[29:32](#t=29:32)** VS Code improvements
* [SWC](https://github.com/swc-project/)
* [pnpm](https://pnpm.io)
* **[32:57](#t=32:57)** The tools are no longer the bottleneck
* **[33:37](#t=33:37)** Hardware upgrades
* **[34:10](#t=34:10)** The notch
* [Bartender](https://www.macbartender.com)
* **[36:11](#t=36:11)** macOS icons have more padding
* **[37:03](#t=37:03)** Charging and battery
* [TS3 Plus](https://www.caldigit.com/ts3-plus/)
* **[38:32](#t=38:32)** Fans and heat
* **[39:18](#t=39:18)** Touch bar is gone
* **[39:36](#t=39:36)** External displays
* **[41:03](#t=41:03)** Battery
* **[41:54](#t=41:54)** LG Display issue
* **[42:51](#t=42:51)** Touch ID reader in a better spot
* **[43:25](#t=43:25)** What's happening to your old MacBook Pro?
* **[45:21](#t=45:21)** Ports and keyboards

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d0ee12a17f4bc752f2b6f2fc115c5c6335a822e546f6b01b10b6970dc6bcb4d4,the-macbook-pro-show-wes-and-scott-get-new-laptops,/shows/407 - new laptops.md,2023-10-16 20:07:34.393,2023-10-27 15:58:02.597,HASTY
syntax_podcast_show_00408,408,Troubleshooting,2021-11-24 12:00:00.318,https://traffic.libsyn.com/syntax/Syntax_-_408.mp3,"
In this episode of Syntax, Scott and Wes talk about ways they troubleshoot issues with their code.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Mux - Sponsor

Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes

* [@jimbomoso - Do you know of any resources for developing/improving code trouble shooting?](https://twitter.com/jimbomoso/status/1450473674709127174)
* **[01:13](#t=01:13)** Furniture shortages
* **[02:29](#t=02:29)** Managing stuff
* **[03:05](#t=03:05)** Basic troubleshooting skills are missing
* **[06:09](#t=06:09)** Sanity check
* [CodePen](https://codepen.io/)
* [Codesandbox](https://codesandbox.io)
* **[08:05](#t=08:05)** Isolate the issue
* **[08:57](#t=08:57)** Commenting out code is free
* **[12:17](#t=12:17)** Replicate the issue
* **[15:07](#t=15:07)** Svelte and VS Code error
* [Svelte](https://svelte.dev)
* [VS Code](https://code.visualstudio.com)
* **[17:02](#t=17:02)** Wes' course upgrades
* [Parcel 2](https://parceljs.org/blog/v2/)
* [Patch package](https://www.npmjs.com/package/patch-package)
* **[18:07](#t=18:07)** Sponsor: Logrocket
* **[19:15](#t=19:15)** Rollback
* **[20:30](#t=20:30)** Reading the error message
* [Syntax 47 - How to Get Better at Debugging](https://syntax.fm/show/047/how-to-get-better-at-debugging)
* [Syntax 152 - Debugging Tools](https://syntax.fm/show/152/debugging-tools-tips)
* **[23:59](#t=23:59)** Crack open the node modules directory
* **[26:06](#t=26:06)** Sponsor: Freshbooks
* **[27:29](#t=27:29)** Write step by step comments to the code
* **[29:01](#t=29:01)** Consider outside sources
* **[30:56](#t=30:56)** Using the right tools for the job
* **[33:19](#t=33:19)** Rubber ducking it
* **[34:16](#t=34:16)** Wes' Big Mouth Bass story
* **[37:20](#t=37:20)** Scott's blown away by his leaf blower
* **[39:56](#t=39:56)** Copy paste a message into Google
* [Twitter - What are your tips for troubleshooting code or a system that doesn't work?](https://twitter.com/syntaxfm/status/1457736861976252416)
* **[41:33](#t=41:33)** Logs and metrics
* **[42:36](#t=42:36)** CI CD issues and Error Handler
* **[43:41](#t=43:41)** Using a step debugger
* **[44:24](#t=44:24)** Explain what's happening to someone else
* **[45:31](#t=45:31)** Read the documentation
* **[47:05](#t=47:05)** Take a break, have a cuppa
* **[48:42](#t=48:42)** Sponsor: Mux
* **[50:57](#t=50:57)** SIIIIICK PIIICKS
* **[57:05](#t=57:05)** Shamless plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Forehead](https://goodsnooze.gumroad.com/l/nASbe)
* Wes: [EGO EXINNO 240W/120W Chargers](https://www.kickstarter.com/projects/e-fusion/ego-exinno-240w-120w-the-king-of-charger?ref=9geph8)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 25%!
* Wes: [All Courses](https://wesbos.com/courses/) - Use the coupon code 'Syntax' for $10 off!

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e89e646c40f3956f3f646a1cb5bbd3bf3ef0dbea469f8e2f4b65a39f324a3464,troubleshooting,/shows/408 - troubleshooting.md,2023-10-16 20:07:34.438,2023-10-27 15:58:02.649,TASTY
syntax_podcast_show_00409,409,Github Co-pilot is Gonna Take ur Job,2021-11-29 14:00:00.902,https://traffic.libsyn.com/syntax/Syntax_-_409.mp3,"
In this Hasty Treat, Wes and Scott talk about their experiences using Github Co-pilot.

## Sponsor - LogRocket

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sponsor - Freshbooks

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

* **[00:58](#t=00:58)** Wake up early and let's go
* **[02:19](#t=02:19)** Sponsor: LogRocket
* **[03:21](#t=03:21)** Sponsor: Freshbooks
* **[03:56](#t=03:56)** What is Github Co-Pilot?
* [GitHub Co-Pilot](https://copilot.github.com)
* **[06:01](#t=06:01)** Scott is a GitHub Star
* **[07:03](#t=07:03)** Examples of GitHub Co-Pilot usage
* **[09:43](#t=09:43)** Writing pseudo code
* [Emmet](https://www.emmet.io)
* **[12:51](#t=12:51)** Using it for loop callbacks
* **[13:52](#t=13:52)** What langauges does GitHub Co-Pilot work with?
* **[14:54](#t=14:54)** It plays nice with HTML files
* **[15:48](#t=15:48)** Svelte component example
* **[16:31](#t=16:31)** Benefits for course creators
* **[17:35](#t=17:35)** Some scary things
* **[21:04](#t=21:04)** Could GitHub start charging for this?
* **[22:30](#t=22:30)** Good at writing types
* **[23:59](#t=23:59)** Gripes
* **[24:54](#t=24:54)** Converting code to Parcel 2
* [Parcel](https://parceljs.org)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",78cc2170adc37846450616dafc0afb7b97caba8c39876ec211757257cf337a30,github-co-pilot-is-gonna-take-ur-job,/shows/409 - Github Co-pilot is Gonna Take ur Job.md,2023-10-16 20:07:34.485,2023-10-27 15:58:02.703,HASTY
syntax_podcast_show_00410,410,Everything in web dev is Amazing!,2021-12-01 06:08:00.801,https://traffic.libsyn.com/syntax/Syntax_-_410.mp3,"
In this episode of Syntax, Scott and Wes talk about all the things that have improved the lives of web developers over the years.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes

* **[00:16:18](#t=00:16:18)** Topic introduction
* **[01:03:00](#t=01:03:00)** Leaf blowing and house updates
* **[02:57:01](#t=02:57:01)** We complain a lot
* **[04:13:22](#t=04:13:22)** Typescript improvements
* **[06:20:00](#t=06:20:00)** Optional chaining
* **[07:01:06](#t=07:01:06)** Async, Await and Promises
* **[07:57:05](#t=07:57:05)** Array methods and tools for immutability
* **[09:13:16](#t=09:13:16)** DOM interactions with getElementBy
* **[10:34:10](#t=10:34:10)** Arrow functions
* **[11:13:06](#t=11:13:06)** Classes! + All of ES6 was a huge breath of fresh air
* **[12:18:07](#t=12:18:07)** Looping
* **[13:22:00](#t=13:22:00)** Prettier Code is a huge game changer
* [Prettier](https://prettier.io)
* [ESLint](https://eslint.org)
* **[15:51:00](#t=15:51:00)** Sponsor: Freshbooks
* **[17:04:15](#t=17:04:15)** CSS updates
* **[17:41:11](#t=17:41:11)** CSS Variables
* **[18:41:15](#t=18:41:15)** Flexbox and Grid
* **[20:16:10](#t=20:16:10)** VH, VW units
* **[20:47:24](#t=20:47:24)** Overflow scroll on mobile
* **[21:54:10](#t=21:54:10)** Color formats
* **[23:08:06](#t=23:08:06)** Sticky headers
* **[23:45:06](#t=23:45:06)** HTML 5
* [Introducing HTML5 By Bruce Lawson and Remy Sharp](https://introducinghtml5.com)
* [A Book Apart](http://abookapart.com)
* **[27:54:00](#t=27:54:00)** Web components
* **[28:29:09](#t=28:29:09)** Sponsor: Sentry
* **[30:01:17](#t=30:01:17)** Tooling
* [Syntax 12 Why Is Everyone Switching to VS Code?](https://syntax.fm/show/012/why-is-everyone-switching-to-vs-code)
* **[31:28:13](#t=31:28:13)** Speed of latest crop → ESBuild, Vite, Snowpack, parcel
* [Vite](https://vitejs.dev)
* [Snowpack](https://www.snowpack.dev)
* **[33:33:03](#t=33:33:03)** Image compression
* **[37:08:21](#t=37:08:21)** Hot module reloading
* **[39:11:09](#t=39:11:09)** Image resizing, video hosting, accepting credit cards
* [Gatsby](https://www.gatsbyjs.com)
* [Cloudinary](https://cloudinary.com)
* [Spritecow](http://www.spritecow.com)
* [SmushIt](https://imgopt.com)
* [Stripe](https://stripe.com/en-ca)
* [Braintree](https://www.braintreepayments.com)
* [Entrepreneur friendly licensing](https://twitter.com/BradLedford/status/1460273531111886848)
* **[39:48:18](#t=39:48:18)** Entrepreneur friendly licensing
* **[40:43:18](#t=40:43:18)** Sponsor: Linode
* **[42:11:10](#t=42:11:10)** Developer Tools in the browser
* [Tweet from @Bentlegen](https://twitter.com/bentlegen/status/1390376979678076930)
* [Chris Coyier - Let’s Suck at Github Together](https://css-tricks.com/video-screencasts/101-lets-suck-at-github-together/)
* [Chrome.io](https://chrome.io)
* **[43:52:17](#t=43:52:17)** Insights into errors and troubleshooting
* **[44:49:13](#t=44:49:13)** Cross browser and cross device testing
* **[47:12:19](#t=47:12:19)** Hosting and SSL Certificates
* **[48:14:08](#t=48:14:08)** Scaling up
* **[49:53:13](#t=49:53:13)** Scaling with containers
* **[50:14:09](#t=50:14:09)** When did we start using Github?
* **[53:52:12](#t=53:52:12)** ××× SIIIIICK ××× PIIIICKS ××× Scott
* **[59:42:22](#t=59:42:22)** ××× SIIIIICK ××× PIIIICKS ××× Wes

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Tonal](https://www.tonal.com)
* Wes: [Reboot your Portfolio](https://amzn.to/30uILQJ) / [Canadian Couch Potato](https://canadiancouchpotato.com)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Black Friday sale!

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",235bbad805cc1879c3e778c79c8f76c86e4ca2e1ee289c7db490ee36b06f78f8,everything-in-web-dev-is-amazing,/shows/410 - title.md,2023-10-16 20:07:34.517,2023-10-27 15:58:02.779,TASTY
syntax_podcast_show_00411,411,Meta Tags,2021-12-06 14:00:00.774,https://traffic.libsyn.com/syntax/Syntax_-_411.mp3,"
In this Hasty Treat, Wes and Scott talk about Meta Tags.

## Sponsor - Sanity

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sponsor - Sentry

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* [Syntax 379 - The Link Tag](https://syntax.fm/show/379/hasty-treat-the-weird-and-wonderful-less-than-link-greater-than-tag)
* **[01:24](#t=01:24)** Sponsor: Sanity
* **[02:50](#t=02:50)** Sponsor: Sentry
* **[04:28](#t=04:28)** What are Meta Tags?
* **[05:01](#t=05:01)** What is charset?
* **[07:41](#t=07:41)** The viewport tag
* [That’s a Nice Touch on TikTok](https://www.tiktok.com/@thatsanicetouch)
* **[10:25](#t=10:25)** SEO and page data
* **[12:03](#t=12:03)** Browser display tags
* **[14:20](#t=14:20)** Dead tags
* **[16:24](#t=16:24)** Robot tags
* **[17:53](#t=17:53)** Adult ratings tag
* **[18:18](#t=18:18)** Google site verification tags
* [Google Verification tags](https://developers.google.com/search/docs/advanced/crawling/special-tags)
* **[19:35](#t=19:35)** Open Graph social tags
* [Facebook Meta tags](https://developers.facebook.com/tools/debug/)
* [Open Graph](https://ogp.me)
* **[22:54](#t=22:54)** Generator tag
* **[25:54](#t=25:54)** http-equiv tag
* [http equiv](https://www.w3schools.com/tags/att_meta_http_equiv.asp)
* **[27:20](#t=27:20)** Apple specific tags
* [Apple specific tags](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",97ad8289b60d7f8526b20280081f21fbc4e07073237d0809cff93326a75f95b3,meta-tags,/shows/411 - Meta tags.md,2023-10-16 20:07:34.557,2023-10-27 15:58:02.832,HASTY
syntax_podcast_show_00412,412,"JavaScript and Hardware × Cars, Factories, Heavy Industry, Robots, and the Internet of Things",2021-12-08 12:00:15.142,https://traffic.libsyn.com/syntax/Syntax_-_412.mp3,"
In this episode of Syntax, Scott and Wes talk with Anth Rogan about JavaScript and hardware - from cars, to factories, and the internet.

## Bryntum - Sponsor

Bryntum’s suite of web components help developers quickly add powerful project and resource scheduling capabilities to their React, Angular, Vue or vanilla JS apps. The SDKs include extensive API docs and plenty of examples. Try them online at [bryntum.com/examples/gantt](https://bryntum.com/examples/gantt) or [bryntum.com/examples/scheduler-pro](https://bryntum.com/examples/scheduler-pro). Visit [Bryntum.com/syntax](https://Bryntum.com/syntax) for a 45-day free trial.

## Logrocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes

* **[01:02](#t=01:02)** Guest introductions
* [Anth Rogan on LinkedIn](https://www.linkedin.com/in/anth-rogan-59955429/)
* **[05:44](#t=05:44)** What kinds of things did you work on at Nissan?
* **[09:02](#t=09:02)** Why are car head units based in the past?
* **[11:35](#t=11:35)** What are cars running for UI?
* **[14:04](#t=14:04)** What are PLC's?
* **[17:02](#t=17:02)** What kinds of regulations exist for automotive software?
* **[22:28](#t=22:28)** Sponsor: LogRocket
* **[23:03](#t=23:03)** Deeper look at PLC's
* **[26:56](#t=26:56)** What's Node-RED?
* [Node-RED](https://nodered.org)
* **[29:37](#t=29:37)** JavaScript is popular in industry? What else is used?
* **[31:06](#t=31:06)** Sponsor: Brymtum Products
* **[32:57](#t=32:57)** How do you learn about this tech?
* [PLC Subreddit](https://www.reddit.com/r/PLC/)
* **[35:24](#t=35:24)** What were you doing with Nissan head units?
* [OBD2 Scanner](https://obd2scanner.net)
* **[37:15](#t=37:15)** Web bluetooth API research
* **[39:13](#t=39:13)** What's MQTT?
* [MQTT](https://mqtt.org)
* **[41:29](#t=41:29)** Sponsor: Linode
* **[42:14](#t=42:14)** Using IoT and machine learning to find issues
* **[46:53](#t=46:53)** New opportunities in industry tech coming
* **[52:40](#t=52:40)** Cottage IoT dreams
* **[56:27](#t=56:27)** Relaxing in Minecraft
* **[57:42](#t=57:42)** Sick Picks - Anth
* **[58:38](#t=58:38)** Sick Pick - Scott
* **[59:49](#t=59:49)** Sick Pick - Wes
* **[02:12](#t=02:12)** Shameless plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Spotless for macOS](https://lightpillar.com/spotless.html)
* Wes: [Wago Lever Nuts](https://www.wago.com/ca-en/lp-221)
* Anth: [Daily.dev](https://daily.dev)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Black Friday sale!

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",26175668d7c06f89672ba94b99d6f99e826b319c04e499f8a9e636365c37bb17,javascript-and-hardware-cars-factories-heavy-industry-robots-and-the-internet-of-things,/shows/412 - JavaScript and Hardware.md,2023-10-16 20:07:34.594,2023-10-27 15:58:02.891,TASTY
syntax_podcast_show_00413,413,How To Do Things In Svelte,2021-12-13 12:00:00.259,https://traffic.libsyn.com/syntax/Syntax_-_413.mp3,"
In this Hasty Treat, Wes and Scott talk about how to do things in Svelte.

## Sponsor - Freshbooks

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sponsor - LogRocket

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:28](#t=00:28)** Welcome
* **[02:18](#t=02:18)** Lead pipe talk
* **[04:33](#t=04:33)** Sponsor: Freshbooks
* **[05:05](#t=05:05)** Sponsor: Logrocket
* **[06:34](#t=06:34)** Intro to Svelte
* **[07:44](#t=07:44)** Get Local State running
* [Writable-stores](https://svelte.dev/tutorial/writable-stores)
* **[10:47](#t=10:47)** Arrow functions
* **[11:53](#t=11:53)** Functions that update state
* [React Hooks in Svelte](https://github.com/joshnuss/react-hooks-in-svelte)
* [React Use Svelte Store](https://github.com/Crisfole/react-use-svelte-store)
* **[14:36](#t=14:36)** Live / Reactive Variables
* **[17:03](#t=17:03)** Context
* **[20:45](#t=20:45)** Conditional rendering
* **[24:57](#t=24:57)** Input binding
* **[28:02](#t=28:02)** Should Wes rewrite his video player in Svelte?
* **[30:07](#t=30:07)** Child elements
* **[32:10](#t=32:10)** Vercel hires Rich Harris

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4262076600d7db5fbe05f9b31b2f81de63a847e5af8f88326947e4567d27775d,how-to-do-things-in-svelte,/shows/413 - How To Do Things In Svelte.md,2023-10-16 20:07:34.636,2023-10-27 15:58:03.010,HASTY
syntax_podcast_show_00414,414,"Potluck - enums, WASM, Lighthouse, Redirects",2021-12-15 14:00:00.886,https://traffic.libsyn.com/syntax/Syntax_-_414.mp3,"
In this episode of Syntax, Scott and Wes answer your questions on a Potluck episode of Syntax.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes

* **[02:07](#t=02:07)** Google Chrome to start measuring user experience beyond the completion of page load
* **[05:47](#t=05:47)** How can I ensure that I am executing npm commands safely?
* **[07:58](#t=07:58)** How should I prefix booleans?
* **[09:46](#t=09:46)** How do I decide between using an enum vs a union type in Typescript
* **[13:40](#t=13:40)** What is Web Assembly?
* **[18:34](#t=18:34)** Sponsor: Sanity
* **[19:45](#t=19:45)** what happened to Scott using Linux?
* [PopOS](https://pop.system76.com)
* **[22:44](#t=22:44)** Sponsor: Linode
* **[23:57](#t=23:57)** How do you batch requests in nodejs to an api?
* **[26:15](#t=26:15)** What are micro-frontends?
* **[29:55](#t=29:55)** Sponsor: Sentry
* **[31:16](#t=31:16)** Since Astro seems so amazing, aren’t you tempted to rebuild your site now in Astro instead of Sveltekit?
* [Astro](https://astro.build)
* **[33:04](#t=33:04)** Can you please shed some light on redirects in express/ koa?
* **[36:41](#t=36:41)** How do deal with ADHD?
* **[41:52](#t=41:52)** Should I repeat the name of the issue in the commit message or just ""Resolves #$issue-number""?
* **[44:21](#t=44:21)** Do browsers update automatically?
* **[47:52](#t=47:52)** What do you do when working on a big project?
* **[49:55](#t=49:55)** Can you guys help to breakdown and explain jargons and differences of RPC, REST, gRPC, GraphQL?
* **[53:25](#t=53:25)** How to ask a question
* **[53:42](#t=53:42)** Sick Picks
* **[56:17](#t=56:17)** Shamless plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Satechi 3-in-1 Magnetic Wireless Charging Stand](https://www.amazon.com/gp/product/B09LRKZ4BN?ie=UTF8&psc=1&linkCode=sl1&tag=leveluptuts01-20&linkId=2bc4587e9699c9e45cc2431f557c8ce2&language=en_US&ref_=as_li_ss_tl)
* Wes: [The Always Sunny podcast](https://the-always-sunny-podcast.simplecast.com)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro)
* Wes: [All Courses](https://wesbos.com/courses/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2f55586a6bdcb242edbab73c43783c1804f329e3ba2f0c3f6827f4c86a298328,potluck-enums-wasm-lighthouse-redirects,"/shows/414 - Potluck - enums, WASM, Lighthouse, Redirects .md",2023-10-16 20:07:34.673,2023-10-27 15:58:03.063,TASTY
syntax_podcast_show_00415,415,Gatsby v4,2021-12-20 12:00:00.925,https://traffic.libsyn.com/syntax/Syntax_-_415.mp3,"
In this Hasty Treat, Wes and Scott talk about what's new in Gatsby v4.

## Sponsor - Prismic

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sponsor - Sentry

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:41](#t=01:41)** Sponsor: Prismic
* **[02:35](#t=02:35)** Sponsor: Sentry
* **[03:26](#t=03:26)** Gatsby v4!
* [Gatsby](https://www.gatsbyjs.com)
* [What’s new in Gatsby 4](https://www.gatsbyjs.com/blog/whats-new-in-gatsby-4)
* **[04:26](#t=04:26)** Any node version requirements?
* **[05:22](#t=05:22)** Three rendering options
* **[15:47](#t=15:47)** Parallel Queries
* **[16:28](#t=16:28)** Data sync
* **[16:57](#t=16:57)** Gatsby admin deprecated
* [Nextjs](https://nextjs.org)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",da079cee4b2a7fe6861dfdb4226dcb56ef196f1819f0de114226c9061f68c886,gatsby-v4,/shows/415 - Gatsby v4.md,2023-10-16 20:07:34.710,2023-10-27 15:58:03.121,HASTY
syntax_podcast_show_00416,416,"Gitpod, iPad Coding, Web3, WTF NFT",2021-12-22 12:00:00.735,https://traffic.libsyn.com/syntax/Syntax_-_416.mp3,"
In this episode of Syntax, Scott and Wes talk with Geoff and Pauline from Gitpod about developing on Gitpod, Web3, and The NFT Bay.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Logrocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes

* **[01:20](#t=01:20)** Guest introduction
* **[02:46](#t=02:46)** Coding in the browser anywhere
* [Gitpod](https://www.gitpod.io)
* [JetBrain](https://www.jetbrains.com)
* **[04:58](#t=04:58)** How does GitPod work in the browser?
* [NoYaml](https://noyaml.com)
* [Cobalt2](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2)
* [Finding VS Code Extensions for Gitpod](https://www.gitpod.io/docs/vscode-extensions)
* **[09:27](#t=09:27)** How does GitPod actually work?
* **[10:57](#t=10:57)** What is Kubernetees?
* **[13:11](#t=13:11)** Is there a full VS Code environment?
* **[18:21](#t=18:21)** Sponsor: Linode
* **[19:01](#t=19:01)** Who are the heavy users of Gitpod?
* **[24:32](#t=24:32)** Teams on Gitpod
* [Gitpod Roadmap](https://github.com/gitpod-io/roadmap#:~:text=The%20roadmap%20serves%20as%20a%20broad%20overview%20of,make%20software%20engineering%20more%20collaborative%2C%20joyful%2C%20and%20secure.)
* [Centered.app](https://www.centered.app)
* **[30:11](#t=30:11)** Do the developers of Gitpod use Gitpod to build Gitpod?
* [Gitpod Careers](https://gitpod.crew.work/jobs)
* **[32:51](#t=32:51)** What language is Gitpod written in?
* **[33:15](#t=33:15)** Sponsor: Logrocket
* **[34:10](#t=34:10)** Living in a van coding
* **[38:16](#t=38:16)** How do you stay productive on the go?
* **[40:18](#t=40:18)** What was The NFT Bay?
* [The NFT Bay](https://thenftbay.org)
* **[44:54](#t=44:54)** Is there any good in Web3 ideas?
* [Lularoe Documentary](https://www.vanityfair.com/hollywood/2021/09/amazon-lularoe-documentary-lularich)
* **[49:42](#t=49:42)** Sponsor: Freshbooks
* **[50:13](#t=50:13)** Selling NFTs is difficult
* **[51:34](#t=51:34)** Sick Picks!
* **[58:40](#t=58:40)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Sweet Bobby Podcast](https://www.tortoisemedia.com/listen/sweet-bobby/)
* Wes: [Woosh Cloths](https://amzn.to/31blFhY)
* Pauline [Uniqlo](https://www.uniqlo.com/)
* Geoff [Helinox Chair](https://helinox.com/collections/hiking-chairs)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Black Friday sale!
* [Psychology of Devx](https://www.gitpod.io/blog/psychology-of-devx)
* [Gitpod Community](https://www.gitpod.io/community)
* [Workshops as Code](https://www.gitpod.io/blog/workshops-as-code)
* [Ghuntley.com](https://ghuntley.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cc0e75d6d650c4160a3ebc44c03af4eae53871e3bfccde8c125489b9e5c249a3,gitpod-ipad-coding-web3-wtf-nft,"/shows/416 - GitPod, iPad Coding Web3 WTF NFT.md",2023-10-16 20:07:34.759,2023-10-27 15:58:03.178,TASTY
syntax_podcast_show_00417,417,Holiday Snackluk,2021-12-27 14:00:00.125,https://traffic.libsyn.com/syntax/Syntax_-_417.mp3,"
In this Hasty Treat, Wes and Scott talk about Package-lock, Angular, package updates, how to learn, and media servers on planes.

## Sponsor - Sanity

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sponsor - LogRocket

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:54](#t=00:54)** Luks of the past
* **[03:19](#t=03:19)** Sponsor: Sanity
* **[04:26](#t=04:26)** Sponsor: LogRocket
* **[05:04](#t=05:04)** Has package-lock.json ever saved your bacon?
* **[08:27](#t=08:27)** Why do you not talk about Angular?
* **[11:28](#t=11:28)** How do you handle package updates?
* [Wes Bos tweet on npm-update](https://twitter.com/wesbos/status/1396842158452248581)
* **[17:43](#t=17:43)** How do you keep learning in your career?
* **[21:02](#t=21:02)** How does the movie selection work on planes?
* [Emby](https://emby.media)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e7af9dca019809c76f73b3eb915c48846c7a8a2604cf40866a7b03235d16d08c,holiday-snackluk,/shows/417 - Holiday Snackluk.md,2023-10-16 20:07:34.798,2023-10-27 15:58:03.377,HASTY
syntax_podcast_show_00418,418,2021 In Review,2021-12-29 14:00:00.759,https://traffic.libsyn.com/syntax/Syntax_-_418.mp3,"
In this episode of Syntax, Scott and Wes review their predictions and highlights for 2021.

## .TECH Domains - Sponsor

.TECH is taking the tech industry by storm. A domain that shows the world what you are all about! If you're looking for a domain name for your startup, portfolio, or your own project like we did with uses.tech, check out .tech Domains. Syntax listeners can snap their .TECH Domains at 80% off on five-year registration by visiting [go.tech/syntaxistech](https://go.tech/syntaxistech) and using the coupon code ""syntax5"".

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Mux - Sponsor

Mux Video is an API-first platform that makes it easy for any developer to build beautiful video. Powered by data and designed by video experts, your video will work perfectly on every device, every time. Mux Video handles storage, encoding, and delivery so you can focus on building your product. Live streaming is just as easy and Mux will scale with you as you grow, whether you're serving a few dozen streams or a few million. Visit [mux.com/syntax](https://mux.com/syntax).

## Show Notes

* **[02:21](#t=02:21)** Wes highlights
* **[05:33](#t=05:33)** Scott's highlights
* **[07:42](#t=07:42)** Writing admin tools for fun
* **[13:33](#t=13:33)** Sponsor: .TECH Domain Name
* **[14:30](#t=14:30)** Tech that was hot in 2021
* **[17:18](#t=17:18)** Sveltekit
* [Pancake by Rich Harris](https://github.com/Rich-Harris/pancake)
* [Svelte](https://svelte.dev)
* [Svelte Kit](https://kit.svelte.dev)
* **[19:54](#t=19:54)** Remix
* [Remix](https://remix.run)
* **[20:36](#t=20:36)** Astro
* [Astro](https://astro.build)
* **[22:51](#t=22:51)** NextJS 11 and 12
* [NextJS](https://nextjs.org)
* **[25:14](#t=25:14)** Vite and Parcel 2
* [Vite](https://vitejs.dev)
* [Parcel](https://parceljs.org)
* **[26:52](#t=26:52)** Web3
* **[28:00](#t=28:00)** Prisma
* [Prisma](https://www.prisma.io)
* **[30:35](#t=30:35)** Typescript
* [Typescript](https://www.typescriptlang.org)
* **[33:08](#t=33:08)** Sponsor: Sentry
* **[35:25](#t=35:25)** Reviewing past predictions
* **[36:54](#t=36:54)** ESM
* **[39:47](#t=39:47)** Remote work will grow up
* [Discord](https://discord.com)
* [Notion](https://notion.so)
* [Height](https://height.app)
* **[40:38](#t=40:38)** Deno
* **[45:11](#t=45:11)** React
* **[46:02](#t=46:02)** Tooling fade away
* **[47:29](#t=47:29)** Rome
* [Rome](https://rome.tools)
* **[48:47](#t=48:47)** Rust
* **[49:36](#t=49:36)** Programming communities
* [Twitter Spaces](https://media.twitter.com/en/articles/products/2021/twitter-spaces)
* [Clubhouse](https://www.clubhouse.com)
* [Circle](https://circle.so)
* [Github Discussions](https://docs.github.com/en/discussions)
* [Tiktok](https://www.tiktok.com)
* [Benawad on TikTok](https://www.tiktok.com/@benawad)
* [Wes Bos on TikTok](https://www.tiktok.com/@wesbos?)
* **[51:08](#t=51:08)** Wasm
* **[51:26](#t=51:26)** Typescript
* **[52:35](#t=52:35)** React
* **[53:40](#t=53:40)** More web component frameworks
* **[56:43](#t=56:43)** Gatsby
* **[57:26](#t=57:26)** CSS updates
* [Syntax 354 with Miriam Suzanne](https://syntax.fm/show/354/the-surprisingly-exciting-world-of-html-elements)
* **[01:00:06](#t=00:06)** Serverless
* **[01:01:13](#t=01:13)** Enterprise jamstack
* **[01:02:01](#t=02:01)** Sponsor: Mux
* **[01:03:05](#t=03:05)** Sick Picks
* **[01:08:03](#t=08:03)** Shameless Plug

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Rocket League Sideswipe](https://apps.apple.com/au/app/rocket-league-sideswipe/id1549027048)
* Wes: [Home Work on Discovery+](https://decider.com/2021/03/30/home-work-magnolia-network-discovery-plus-new-fixer-upper/)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Black Friday sale!
* [Psychology of Devx](https://www.gitpod.io/blog/psychology-of-devx)
* [Gitpod Community](https://www.gitpod.io/community)
* [Workshops as Code](https://www.gitpod.io/blog/workshops-as-code)
* [Ghuntley.com](https://ghuntley.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",95f4e4f848dc4cc474920f25e26cf7f4be59541977a8a86eb293f06490c19780,2021-in-review,/shows/418 - 2021 In Review.md,2023-10-16 20:07:34.834,2023-10-27 15:58:03.429,TASTY
syntax_podcast_show_00419,419,JS One Liners,2022-01-03 12:00:00.925,https://traffic.libsyn.com/syntax/Syntax_-_419.mp3,"
In this Hasty Treat, Scott and Wes talk about some Javascript one liners that speed up your coding experience in one line.

## Sponsor - Linode

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sponsor - Sentry

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:24:12](#t=00:24:12)** Welcome
* **[01:24:11](#t=01:24:11)** Sponsor: Linode
* **[02:11:02](#t=02:11:02)** Sponsor: Sentry
* **[03:54:18](#t=03:54:18)** Twitter ask for One Liners
* **[04:24:05](#t=04:24:05)** Math random
`const getPsuedoID =() => Math.floor(Math.random() * 1e15);`
* **[05:43:09](#t=05:43:09)** Random color
* [Paul Irish random color](https://www.paulirish.com/2009/random-hex-color-code-snippets/)
`'#'+Math.floor(Math.random()*16777215).toString(16);`
* **[06:41:06](#t=06:41:06)** Console.log as an object.
`console.log({ dog, person });`
[VS Marketplace Link](https://marketplace.visualstudio.com/items?itemName=WooodHead.vscode-wrap-console-log-simple)
* **[08:29:17](#t=08:29:17)** Edit anything
`document.designMode = ""on""`
* **[10:15:15](#t=10:15:15)** Temporal date
`export const today = Temporal.Now.plainDateISO();`
* **[11:44:05](#t=11:44:05)** Console(log)
`const myFunc = (age) ⇒ console.log(age) || updateAge()`
* **[13:26:13](#t=13:26:13)** Remove a prop
`const { propToRemove, ...rest } = obj;`
* **[15:29:01](#t=15:29:01)** PHP style debugging
`preElement.innerText = {JSON.stringify(val, '', ' ')}`
* **[16:31:00](#t=16:31:00)** First and Last Destructure
`var {0: first, length, [length - 1]: last} = [1,2,3];`
* **[17:34:17](#t=17:34:17)** Speed up audio video
`document.querySelector('audio, video’).playbackRate = 2`
* [Overcast](https://overcast.fm)
* **[19:44:15](#t=19:44:15)** Sleep function
`let sleep = (time = 0) => new Promise(r => setTimeout(r, time))`
* **[20:26:00](#t=20:26:00)** If statements on one line
`If (!thing) return 'something'`

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",be7f54a4166d1350b0cd08409008167907feb11a5027116fc14f00ac358da439,js-one-liners,/shows/419 - JS One Liners.md,2023-10-16 20:07:34.868,2023-10-27 15:58:03.485,HASTY
syntax_podcast_show_00420,420,2022 Predictions,2022-01-05 12:00:00.143,https://traffic.libsyn.com/syntax/Syntax_-_420.mp3,"
In this episode of Syntax, Wes and Scott talk through their predictions for 2022.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Hashnode - Sponsor

Everything you need to start blogging as a developer. Own your content, share ideas, and connect with the global dev community! Hashnode is a free developer blogging platform that allows you to publish articles on your own domain and helps you stay connected with a global developer community.

[Hashnode: Everything you need to start blogging as a developer!](https://hashnode.com/)

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

* **[00:11](#t=00:11)** Welcome...
* **[01:31](#t=01:31)** Svelte is king
* [Svelte](https://svelte.dev)
* [Svelte Kit](https://kit.svelte.dev)
* **[03:57](#t=03:57)** Next.js
* [Next.js](https://nextjs.org)
* [Next.js Live](https://vercel.com/live)
* **[06:40](#t=06:40)** Web components
* [Open UI](https://open-ui.org)
* [Syntax 353 Stylin the Unstylables](https://syntax.fm/show/353/hasty-treat-stylin-the-unstylables)
* **[11:42](#t=11:42)** Rust popularity
* [Rust](https://www.rust-lang.org)
* [Rome](https://rome.tools)
* **[15:58](#t=15:58)** Sponsor: LogRocket
* **[17:12](#t=17:12)** Serverless and Cloud Functions
* **[18:19](#t=18:19)** Cloudflare becoming a major player
* [Cloudflare Pages](https://pages.cloudflare.com)
* **[20:05](#t=20:05)** Tailwind
* [Tailwind](https://tailwindcss.com)
* [Open Props](https://open-props.style)
* **[24:10](#t=24:10)** Glow Up
* **[24:35](#t=24:35)** Next gen dev tools
* [OhMyZsh](https://ohmyz.sh)
* [Warp](https://www.warp.dev)
* [Fig](https://fig.io)
* [iTerm](https://iterm2.com)
* [Starship](https://starship.rs)
* **[27:32](#t=27:32)** Sponsor: Hashnode
* **[29:48](#t=29:48)** CSS Container queries, Layers, and More!
* **[31:45](#t=31:45)** GraphQL
* **[34:13](#t=34:13)** Deno
* [Deno](https://deno.land)
* **[37:41](#t=37:41)** Typescript
* **[43:36](#t=43:36)** Server come back
* **[45:13](#t=45:13)** Sponsor: Freshbooks
* **[46:02](#t=46:02)** Checkouts and payment processors
* [Wise](https://wise.prf.hn/click/camref:1100lfN5E)
* **[51:30](#t=51:30)** Temporal API
* **[53:20](#t=53:20)** Remote Dev / Thin Client
* **[55:16](#t=55:16)** Sick Picks
* **[00:16](#t=00:16)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [A Show About Animals](https://play.acast.com/s/vice-news-reports/introducing-ashowaboutanimals-acast140a1b7c)
* Wes: [Wise](https://wise.prf.hn/click/camref:1100lfN5E)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Black Friday sale!
* [Psychology of Devx](https://www.gitpod.io/blog/psychology-of-devx)
* [Gitpod Community](https://www.gitpod.io/community)
* [Workshops as Code](https://www.gitpod.io/blog/workshops-as-code)
* [Ghuntley.com](https://ghuntley.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bab9298e0c8339868fa2f0f4233b37bb11dc9bee0e3610d9d1a068b1a9d725f8,2022-predictions,/shows/420 - 2022 predictions.md,2023-10-16 20:07:34.906,2023-10-27 15:58:03.530,TASTY
syntax_podcast_show_00421,421,Remix!,2022-01-10 12:00:00.117,https://traffic.libsyn.com/syntax/Syntax_-_421_v2.mp3,"
In this Hasty Treat, Scott and Wes talk about Remix!

## Sponsor - Sanity

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Sponsor - Sentry

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[01:10](#t=01:10)** Rrrremix
[Remix](https://remix.run)
* **[02:41](#t=02:41)** Sponsor: Sentry
* **[04:27](#t=04:27)** Sponsor: Sentry
* **[06:30](#t=06:30)** What is Remix?
* **[08:29](#t=08:29)** Built on Fetch
* **[13:07](#t=13:07)** Frameworks are getting so good
* **[14:08](#t=14:08)** Data loading
* **[15:15](#t=15:15)** Actions
* **[19:47](#t=19:47)** Error boundary and catch boundary differences
* **[20:54](#t=20:54)** Differences between Remix and Gatsby, and other SSG
* **[22:11](#t=22:11)** What about hot reloading?
* **[23:25](#t=23:25)** Nested layouts and nested routes
* **[25:03](#t=25:03)** Typescript support
* **[27:11](#t=27:11)** Hosting anywhere
* [Remix Docs](https://remix.run/docs/en/v1)
* [Remix on GitHub](https://github.com/remix-run)
* [Remix on Twitter](https://twitter.com/remix_run)
* [Remix on YouTube](https://www.youtube.com/remix_run)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9196f096f1252b89b97401099c6b573549b48daf7ddaccd11f267346a391e467,remix,/shows/421 - Remix.md,2023-10-16 20:07:34.941,2023-10-27 15:58:03.582,HASTY
syntax_podcast_show_00422,422,Potluck,2022-01-12 12:00:00.286,https://traffic.libsyn.com/syntax/Syntax_-_422.mp3,"
In this episode of Syntax, Scott and Wes answer your questions on a Potluck episode of Syntax.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Retool - Sponsor

Retool is the fast way to build internal tools. Visually design apps that interface with any database or API. Switch to code nearly anywhere to customize how your apps look and work. With Retool, you ship more apps and move your business forward—all in less time.

[retool.com/syntax](https://retool.com/syntax)

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:11](#t=00:11)** Intro
* **[01:10](#t=01:10)** Watching movies with kids
* [Paw Patrol Movie](https://www.rottentomatoes.com/m/paw_patrol_the_movie)
* [Encanto](https://movies.disney.com/encanto)
* [Luca](https://movies.disney.com/luca)
* **[02:49](#t=02:49)** How do you protect images on your website?
* **[07:21](#t=07:21)** How did you guys learn Typescript?
* [Tweet: When should a JR dev learn typescript?](https://twitter.com/wesbos/status/1478054387406802953)
* [Typescript Handbook](https://www.typescriptlang.org/docs/handbook/)
* [Selling and Shipping T-Shirts with Typescript](https://syntax.fm/show/346/selling-and-shipping-t-shirts-with-typescript)
* **[13:26](#t=13:26)** Should I worry about learning Typescript now or stay focused on mastering JS first?
* **[18:16](#t=18:16)** Sponsor: Prismic
* **[20:03](#t=20:03)** How do you decide what to learn?
* [Svelte Kit](https://kit.svelte.dev)
* [Remix](https://remix.run)
* **[26:26](#t=26:26)** I want to become full stack and learn a backend language, which one should I choose?
* **[28:07](#t=28:07)** Do Svelte components not support media queries?
* **[29:30](#t=29:30)** Any advice or suggestions on how to approach Auth or Payment?
* **[32:53](#t=32:53)** Sponsor: LogRocket
* **[33:59](#t=33:59)** Any experience working with a team on a different time zone?
* [Height](https://height.app)
* [Clocker](https://apps.apple.com/us/app/clocker/id1056643111?mt=12)
* [iState Menus](https://bjango.com/mac/istatmenus/)
* **[42:49](#t=42:49)** Do you have any experience or recommendations for introducing prettier late in a project?
* **[48:57](#t=48:57)** What are your thoughts on monorepos?
* [Turborepo](https://turborepo.org)
* [Nx](https://nx.dev)
* **[52:57](#t=52:57)** Sponsor: Retool
* **[55:14](#t=55:14)** What does it mean to know JS?
* **[59:39](#t=59:39)** What would you do if you had to start over?
* **[03:49](#t=03:49)** Sick Picks
* **[07:09](#t=07:09)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Learning Differently](https://www.instagram.com/learning.differently/)
* Wes: [Truff Hot Sauce](https://amzn.to/3qHzbmx)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Black Friday sale!
* [Psychology of Devx](https://www.gitpod.io/blog/psychology-of-devx)
* [Gitpod Community](https://www.gitpod.io/community)
* [Workshops as Code](https://www.gitpod.io/blog/workshops-as-code)
* [Ghuntley.com](https://ghuntley.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0721a86e93c941c4d09e1be35c0dcdab59576aa070160637139638980a73bd54,potluck,/shows/422 - Potluck.md,2023-10-16 20:07:34.976,2023-10-27 15:58:03.639,TASTY
syntax_podcast_show_00423,423,CSS + JS Hacks We’re Fine With,2022-01-17 12:00:00.996,https://traffic.libsyn.com/syntax/Syntax_-_423.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS + JS Hacks that they're ok with using.

## Sponsor - Freshbooks

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Sponsor - Sentry

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:53](#t=00:53)** What are the things in web dev, that feel wrong or hacky when starting out, but are actually totally accepted to do?
* **[02:09](#t=02:09)** Sponsor: Sentry
* **[03:12](#t=03:12)** Sponsor: Freshbooks
* **[05:32](#t=05:32)** Negative margins in CSS
* **[07:53](#t=07:53)** Not Passing a radix to parseInt()
* **[10:17](#t=10:17)** -50% translation 50% direction
* **[11:27](#t=11:27)** Overwriting Arguments in a function
* **[13:20](#t=13:20)** non-standard-element
* **[17:26](#t=17:26)** Button must have a type
* **[18:56](#t=18:56)** Triangles out of borders
* **[20:40](#t=20:40)** Overflow:hidden to clear a float
* **[20:55](#t=20:55)** Always pass noopener to links!
* **[22:16](#t=22:16)** Inline styles

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",038a259eb5c1ca10cb8bc12dd50075eefeab0e930ed7ee3d66fadef54d784c58,css-js-hacks-we-re-fine-with,/shows/423 - CSS JS Hacks We’re Fine With.md,2023-10-16 20:07:35.012,2023-10-27 15:58:03.694,HASTY
syntax_podcast_show_00424,424,"New Year, New You.  What to Focus on in 2022.",2022-01-19 12:00:00.657,https://traffic.libsyn.com/syntax/Syntax_-_424_v2.mp3,"
In this episode of Syntax, Scott and Wes talk through what to focus on at a beginner, intermediate, and advanced levels of coding skills.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

* **[02:30](#t=02:30)** Semantic HTML
* **[07:36](#t=07:36)** JavaScript Data
* **[08:54](#t=08:54)** Issues & technical workflow
* **[11:40](#t=11:40)** Emailing People
* [Syntax 117: How to Email Busy People](https://syntax.fm/show/117/hasty-treat-how-to-email-busy-people)
* **[13:49](#t=13:49)** Make something animated with CSS
* [Open Props Style](https://open-props.style)
* **[16:04](#t=16:04)** Make a full stack contact form in a framework
* **[16:52](#t=16:52)** Sponsor: Sentry
* **[18:59](#t=18:59)** CSS Variables
* **[22:36](#t=22:36)** Server Side fundamentals
* **[24:28](#t=24:28)** Meeting Skills
* **[28:36](#t=28:36)** Help organize a codebase or repo.
* **[30:26](#t=30:26)** Make something animated with JS
* **[31:40](#t=31:40)** Write a bot
* **[33:35](#t=33:35)** Sponsor: Linode
* **[34:51](#t=34:51)** Write CI / CD actions / tools
* **[37:55](#t=37:55)** Advanced Typescript
* **[38:32](#t=38:32)** Teach at your company
* **[39:35](#t=39:35)** Speak at a conference
* **[40:45](#t=40:45)** Make something 3D
* [Frame 3D](https://www.framer.com/docs/three-introduction/#:~:text=%203D%3A%20Introduction%20%201%20%0AOverview.%20Framer%20Motion,animation%20options%20as...%204%20%0AExamples.%20%20More%20)
* [React 3 Fiber](https://docs.pmnd.rs/react-three-fiber/getting-started/introduction)
* [Svelte Cubed](https://madewithsvelte.com/svelte-cubed)
* **[42:01](#t=42:01)** Sponsor: Freshbooks
* **[42:42](#t=42:42)** Scrape and write something to collect data
* **[44:57](#t=44:57)** Sick Picks!
* **[49:25](#t=49:25)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [14 Peaks: Nothing Is Impossible - Netflix](https://www.netflix.com/browse/genre/840232?jbv=81464765)
* Wes: [Booty Slippers](https://amzn.to/3teDSYa)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/) - Black Friday sale!
* [Psychology of Devx](https://www.gitpod.io/blog/psychology-of-devx)
* [Gitpod Community](https://www.gitpod.io/community)
* [Workshops as Code](https://www.gitpod.io/blog/workshops-as-code)
* [Ghuntley.com](https://ghuntley.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",677cfb212a2b7d5986416c1c335b9f27992b7e745ae145e3fca5a9466852b2f4,new-year-new-you-what-to-focus-on-in-2022,/shows/424 - What to Focus on in 2022.md,2023-10-16 20:07:35.055,2023-10-27 15:58:03.753,TASTY
syntax_podcast_show_00425,425,Updating Project Dependencies,2022-01-24 12:00:00.796,https://traffic.libsyn.com/syntax/Syntax_-_425.mp3,"
In this Hasty Treat, Scott and Wes talk about their process for updating project dependencies.

## Sponsor - LogRocket

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sponsor - MagicBell

[MagicBell](https://www.magicbell.com) is the the notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Show Notes

* **[00:25](#t=00:25)** Weeeeelcome
* **[00:52](#t=00:52)** Sponsor: LogRocket
* **[01:29](#t=01:29)** Sponsor: Magic Bell
* **[03:32](#t=03:32)** What are dependencies?
* **[04:04](#t=04:04)** Wes updates all the things
* **[05:30](#t=05:30)** How to check if there are any updates
* **[07:05](#t=07:05)** Upgrade isolated, Minor deps first.
* **[09:16](#t=09:16)** Upgrade Minor groups after that
* **[09:56](#t=09:56)** Then upgrade Major dependencies
* **[14:47](#t=14:47)** Finally upgrade any stand along dependencies
* **[15:44](#t=15:44)** Test test test
* **[16:19](#t=16:19)** Watch error logging
* **[17:05](#t=17:05)** Pray

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",06d53d1e5c26276bacdccd147ca7a743eec5864bd63e715dc5b533c9703ae019,updating-project-dependencies,/shows/425 - Updating Project Dependencies.md,2023-10-16 20:07:35.091,2023-10-27 15:58:03.811,HASTY
syntax_podcast_show_00426,426,"Monorepos! Workspaces, pnpm, turborepo + more!",2022-01-26 12:00:00.399,https://traffic.libsyn.com/syntax/Syntax_-_426.mp3,"
In this episode of Syntax, Scott and Wes talk all about monorepos - the why's and the how's of using them on your projects.

## Kontent by Kentico - Sponsor

Kontent by Kentico is a headless CMS that provides live editing experience to non-technical users and hands you the technical tools to build websites, mobile apps, voice assistants, or anything else where you need content. Use REST API or GraphQL and get your content via the global Fastly CDN. Designed to unify all your content and operations, in compliance with ISO27001 and SOC2Type2 certifications.[Spin up a new project today](kontent.ai/syntax) and discover Kontent.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) and put SYNTAX in the ""How did you hear about us?"" section.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:46](#t=01:46)** Our experiences with monorepos
* **[05:04](#t=05:04)** Why use monorepos?
* **[09:37](#t=09:37)** How long have we been using monorepos?
* **[10:16](#t=10:16)** Tools for starting a monorepo
* [pnpm](https://pnpm.io)
* [Npm link](https://docs.npmjs.com/cli/v6/commands/npm-link)
* **[16:22](#t=16:22)** Sponsor: Kontent by Kentico
* **[17:33](#t=17:33)** What's the process for managing libraries?
* **[20:10](#t=20:10)** Installing / uninstalling things
* **[21:07](#t=21:07)** Shared dependencies
* **[27:45](#t=27:45)** Sponsor: LogRocket
`""ui:dev"": ""pnpm recursive run dev --filter @leveluptuts/ui"",`
`""update"": ""pnpm recursive up -L -i""`
* **[29:23](#t=29:23)** Turborepo
* [Turborepo](https://turborepo.org)
* **[39:32](#t=39:32)** nX
* [nx](https://nx.dev)
* **[45:38](#t=45:38)** Sponsor: Freshbooks
* **[46:32](#t=46:32)** Lerna
* [Lerna](https://lerna.js.org)
* **[48:09](#t=48:09)** Rushjs
* [Rushjs](https://rushjs.io)
* **[52:35](#t=52:35)** Sick Picks
* **[59:17](#t=59:17)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Wyze v3](https://amzn.to/3A75kZ2), [10 micro sd](https://amzn.to/3fObhRz)
* Wes: [Tineco A11 Vaccum](https://amzn.to/3nysfr6)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",04d601e7fb4bd58d2135cf29072beb1ac85f1a4580f434c0f3aefbb0b17dc68c,monorepos-workspaces-pnpm-turborepo-more,/shows/426 - Monorepos.md,2023-10-16 20:07:35.135,2023-10-27 15:58:03.870,TASTY
syntax_podcast_show_00427,427,Teamwork Makes The Dream Work,2022-01-31 12:00:00.940,https://traffic.libsyn.com/syntax/Syntax_-_427.mp3,"


In this Hasty Treat, Scott and Wes are inspired by a Reddit post to talk about how to work better with your team.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:57](#t=01:57)** Sponsor: Sentry
* **[03:26](#t=03:26)** Sponsor: Sanity
* **[04:48](#t=04:48)** Summary of the Reddit post
* **[06:46](#t=06:46)** We are a team
* **[09:05](#t=09:05)** Coding with ego
* **[12:32](#t=12:32)** Follow the leader
* **[13:59](#t=13:59)** Getting better at asking questions
* **[15:01](#t=15:01)** Ask for clarity
* **[15:43](#t=15:43)** Understanding the guidelines
* **[18:12](#t=18:12)** Interpersonal tips
* **[19:49](#t=19:49)** Celebrating wins

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f280f3ea2c92312ee8458afef8a3318f0d62e7c3a037d8c848ed7b55b5e48a52,teamwork-makes-the-dream-work,/shows/427 - Teamwork Makes The Dream Work.md,2023-10-16 20:07:35.179,2023-10-27 15:58:03.919,HASTY
syntax_podcast_show_00428,428,Syntax Highlight,2022-02-02 12:00:00.940,https://traffic.libsyn.com/syntax/Syntax_-_428.mp3,"
In this episode of Syntax, Scott and Wes review your portfolios and websites including some from Harryxli, Austin Baird, Jacks Portfolio, and more!

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Tabnine - Sponsor

Tabnine is your teams' go to AI assistant. Using a variety of machine learning models, Tabnine learns from your team's best practices, and suggests code completions based on your code.

It supports over 30 languages and is available in most IDEs. Tabnine's universal models are trained **strictly on fully permissive open source code,** and can run locally, meaning that your code stays yours.

Get the free version at [tabnine.com/now](http://tabnine.com/now) or go to [tabnine.com/promo/syntax](http://tabnine.com/promo/syntax) to get 50% off your first 3 months of Tabnine Teams.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:05](#t=01:05)** This chapter is mid
* [Wes does TikTok](https://www.tiktok.com/@wesbos)
* **[04:28](#t=04:28)** Harry xli
* [Harryxli](https://harryxli.com)
* **[15:00](#t=15:00)** AustinBaird.software
* [AustinBaird.software](https://austinbaird.software)
* **[19:45](#t=19:45)** Sponsor: Linode
* **[21:10](#t=21:10)** ognjenbostjancic.com
* [ognjenbostjancic.com](https://www.ognjenbostjancic.com)
* **[28:19](#t=28:19)** ndo.dev
* [ndo.dev](https://ndo.dev)
* **[35:37](#t=35:37)** Sponsor: LogRocket
* **[37:02](#t=37:02)** jacksportfolio.com
* [JacksPortfolio.com](https://www.jacksportfolio.com)
* **[41:51](#t=41:51)** einargudni.com
* [einargudni.com](https://www.einargudni.com)
* **[43:22](#t=43:22)** Kids advert break
* **[46:05](#t=46:05)** Back to einargudni.com
* **[48:24](#t=48:24)** Sponsor: Tabnine
* **[50:41](#t=50:41)** cyrillappert.ch
* [hslu.cyrillappert.ch](https://hslu.cyrillappert.ch)
* **[54:30](#t=54:30)** Sick Picks
* **[59:02](#t=59:02)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Alpinist (2021) - IMDb](https://www.imdb.com/title/tt11790780/)
* Wes: [Instant Pot Air Fryer Lid](https://amzn.to/3nQpb9R)

## Shameless Plugs

* Scott: [Astro Course](https://www.leveluptutorials.com/pro) - Sign up for the year and save 50%!
* Wes: [All Courses](https://wesbos.com/courses/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",41a1861e45e2a0299d1c97dd08651018257a148ba5ad6d8d1ca0e6290ed4ae09,syntax-highlight,/shows/428 - Syntax Highlight.md,2023-10-16 20:07:35.225,2023-10-27 15:58:03.969,TASTY
syntax_podcast_show_00429,429,"Pros + Cons of JavaScript Servers, Serverless, and Cloudflare Workers",2022-02-07 12:00:00.333,https://traffic.libsyn.com/syntax/Syntax_-_429.mp3,"
In this Hasty Treat, Scott and Wes talk about the pros and cons of JavaScript servers, Serverless, and Cloudflare Workers.

## Hashnode - Sponsor

Everything you need to start blogging as a developer. Own your content, share ideas, and connect with the global dev community! Hashnode is a free developer blogging platform that allows you to publish articles on your own domain and helps you stay connected with a global developer community.

[Hashnode: Everything you need to start blogging as a developer!](https://hashnode.com/)

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes

* **[00:26:13](#t=00:26:13)** Welcome
* **[01:12:15](#t=01:12:15)** Sponsor: Hashnode
* **[02:27:10](#t=02:27:10)** Sponsor: Linode
* **[03:30:09](#t=03:30:09)** Topic introduction
* [Netlify Functions](https://functions.netlify.com)
* [Fastify](https://www.fastify.io)
* [AWS Lambda](https://aws.amazon.com/lambda/)
* **[09:46:02](#t=09:46:02)** Hosted Linux servers
* **[13:41:11](#t=13:41:11)** Serverless functions
* [MongoDB](https://www.mongodb.com)
* [SvelteKit](https://kit.svelte.dev)
* **[16:34:02](#t=16:34:02)** Connecting to a database in serverless
* **[20:14:14](#t=20:14:14)** Cloudflare Workers
* [Cloudflare Workers](https://workers.cloudflare.com)
* [Works with Workers](https://workers.cloudflare.com/works)
* **[25:39:09](#t=25:39:09)** What do we recommend?
* [Render.com](https://render.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7264d08b0dcc45fd1f4e0ab7d96f8bced0c3dbd7b536b629506155fcba7df9dc,pros-cons-of-javascript-servers-serverless-and-cloudflare-workers,/shows/429 - Pros and Cons of JavaScript Servers.md,2023-10-16 20:07:35.272,2023-10-27 15:58:04.030,HASTY
syntax_podcast_show_00430,430,Creator of Wordle - Josh Wardle,2022-02-09 12:00:00.914,https://traffic.libsyn.com/syntax/Syntax_-_430.mp3,"
In this episode of Syntax, Wes and Scott talk with the creator of Wordle, Josh Wardle. What's the tech stack for Wordle? Does he care about the clones of Wordle? And how did selling Wordle work?

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/get-started](https://www.sanity.io/get-started). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax).

## Show Notes

* **[00:27:02](#t=00:27:02)** Guest introduction
* [Wordle](https://www.powerlanguage.co.uk/wordle/)
* **[02:45:13](#t=02:45:13)** How did Wordle go viral initially?
* **[05:27:14](#t=05:27:14)** Where did the idea for Wordle come from?
* **[07:07:06](#t=07:07:06)** What's your background?
* [Reddit.com](https://www.reddit.com)
* **[12:52:23](#t=12:52:23)** Writing just HTML CSS and JavaScript
* **[15:58:24](#t=15:58:24)** Wordle has 2 external dependancies
* **[16:41:06](#t=16:41:06)** Sponsor: Sentry
* **[17:40:23](#t=17:40:23)** The tech stack of Wordle
* [Lit Elements](https://lit.dev)
* [just-merge](https://www.npmjs.com/package/just-merge)
* [gzip](https://www.gnu.org/software/gzip/)
* [Cloudflare](https://www.cloudflare.com/)
* [AWS S3](https://aws.amazon.com/s3/)
* **[22:21:04](#t=22:21:04)** Would you use web components again?
* **[29:36:08](#t=29:36:08)** How much did hosting cost?
* **[29:55:01](#t=29:55:01)** How does Wordle remember my streak?
* **[33:56:07](#t=33:56:07)** Do you play Wordle everyday?
* **[36:28:11](#t=36:28:11)** Sponsor: Sanity
* **[37:16:07](#t=37:16:07)** How do you land on internet hits so often?
* **[40:33:15](#t=40:33:15)** Are you aware of the clones?
* [Gordle](https://gordle.herokuapp.com)
* **[44:33:15](#t=44:33:15)** Sponsor: Freshbooks
* **[45:17:10](#t=45:17:10)** Selling Wordle to the New York Times
* **[49:05:20](#t=49:05:20)** Dealing with the domain name
* **[54:15:09](#t=54:15:09)** What's his opener word?
* **[56:03:03](#t=56:03:03)** Juice
* [Juice it or Lose it talk](https://www.youtube.com/watch?v=Fy0aCDmgnxg)
* **[59:10:06](#t=59:10:06)** Sick Picks!

## ××× SIIIIICK ××× PIIIICKS ×××

* Josh: Tupperware
* Scott: [Giant tub of Epsom Salt](https://amzn.to/3GmkAmt)
* Wes: [Air Fryer](https://amzn.to/3J1eUQv)

## Shameless Plugs

* Josh: [Wordle](https://www.powerlanguage.co.uk/wordle/)
* Scott: [KeystoneJS Course](https://leveluptutorials.com/tutorials/keystone-js)
* Wes: [All Courses](https://wesbos.com/courses/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",35f29fe26c0e4ea9d1962b161c4bca0523df1661b91e7d6ffb05363b7c2fca30,creator-of-wordle-josh-wardle,/shows/430 - Creator of Wordle.md,2023-10-16 20:07:35.326,2023-10-27 15:58:04.092,TASTY
syntax_podcast_show_00431,431,Code Explorers,2022-02-14 12:00:00.749,https://traffic.libsyn.com/syntax/Syntax_-_431.mp3,"
In this Hasty Treat, Scott and Wes talk about how best to explore and contribute to code on GitHub repos.

## Retool - Sponsor

Retool is the fast way to build internal tools. Visually design apps that interface with any database or API. Switch to code nearly anywhere to customize how your apps look and work. With Retool, you ship more apps and move your business forward—all in less time.

Visit [retool.com/syntax](https://retool.com/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:42](#t=01:42)** Sponsor: LogRocket
* **[02:54](#t=02:54)** Sponsor: Retool
* **[04:33](#t=04:33)** Topic introduction
* **[06:44](#t=06:44)** How to get a handle on something new in a library?
* **[10:27](#t=10:27)** How to contribute to comments
* **[12:55](#t=12:55)** Looking through Issues
* **[15:01](#t=15:01)** Looking at Pull Requests
* **[15:43](#t=15:43)** Check Milestones
* **[17:58](#t=17:58)** Look at Files Changed tab

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",fec77e707c00e8cebb7e3402230f6e0add5ec761debfe5ed7494784095dd2f58,code-explorers,/shows/431 - Code Explorers.md,2023-10-16 20:07:35.366,2023-10-27 15:58:04.209,HASTY
syntax_podcast_show_00432,432,Potluck - Selling Themes × Which Browser Should Devs Use? × Where Do You Keep 2FA Codes? × Remix vs Svelte Kit × Getting Unstuck from Tutorial Hell,2022-02-16 12:00:00.535,https://traffic.libsyn.com/syntax/Syntax_-_432.mp3,"
In this episode of Syntax, Wes and Scott answer your questions about selling themes, which browser to use, where to keep your 2FA codes, Remix vs Svelte Kit, and more!

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax).

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[02:10](#t=02:10)** Can you explain import.meta?
* **[07:20](#t=07:20)** What are your thoughts on publishing and selling HTML & CSS/SASS templates/themes?
* **[12:00](#t=12:00)** When is it best to use a semantic menu vs a nav?
* **[16:14](#t=16:14)** Sponsor: Sentry.io
* **[17:36](#t=17:36)** As a newbie in web dev., which browser do you recommend, Chrome or Firefox Dev. Edition?
* **[20:25](#t=20:25)** Are TypeScript types are like creating models in Mongoose?
* **[26:16](#t=26:16)** If you use 2FA, where do you store your recovery codes?
* [1Password](https://1password.com)
* **[29:32](#t=29:32)** Do you know a programming language which similar syntax to js and without the need of a runtime-framework?
* [Syntax 429 - Cloudflare Workers](https://syntax.fm/show/429/pros-cons-of-javascript-servers-serverless-and-cloudflare-workers)
* **[32:54](#t=32:54)** I am not feeling the hype for Remix. I would rather put my energy into SvelteKit.
* [Remix](https://remix.run)
* [Svelte Kit](https://kit.svelte.dev)
* **[36:41](#t=36:41)** Sponsor: Sanity
* **[38:09](#t=38:09)** Do you guys have any advice on getting unstuck from tutorial hell and at what point do you think someone is ready to apply for junior web dev jobs?
* **[41:36](#t=41:36)** Do you feel frameworks like Next.js, Remix, etc. abstract too much the complexity that it takes to build full-stack web apps?
* **[44:19](#t=44:19)** How do you keep up on new technologies?
* [Swyx](https://twitter.com/swyx)
* [Scott’s Newsletter](https://leveluptutorials.com/newsletter)
* [Intent to Ship](https://twitter.com/intenttoship)
* **[54:04](#t=54:04)** Sponsor: Freshbooks
* **[55:06](#t=55:06)** Sick Picks!

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The River Runner (2021) - IMDb](https://www.imdb.com/title/tt15293256/)
* Wes: [Mike’s Hot Honey](https://amzn.to/3KUeuNL)

## Shameless Plugs

* Scott: [LevelUp YouTube channel](https://www.youtube.com/channel/UCyU5wkjgQYGRB0hIHMwm2Sg)
* Wes: [Wes Bos on TikTok](https://www.tiktok.com/@wesbos)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",db0e0b2d3b5d0423416f9214d5f1df340ae1b3b41bee9da767689928dffba219,potluck-selling-themes-which-browser-should-devs-use-where-do-you-keep-2fa-codes-remix-vs-svelte-kit-getting-unstuck-from-tutorial-hell,/shows/432 - Potluck.md,2023-10-16 20:07:35.406,2023-10-27 15:58:04.271,TASTY
syntax_podcast_show_00433,433,"JavaScript in 2022 - New, Coming and Proposed Features",2022-02-21 12:00:00.470,https://traffic.libsyn.com/syntax/Syntax_-_433.mp3,"
In this Hasty Treat, Scott and Wes talk about new proposed features coming to JavaScript in 2022.

## MagicBell - Sponsor

Magic Bell is the The notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - [use the coupon code SYNTAXFM for 10% off the first 12 months](https://magicbell.com).

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[01:25](#t=01:25)** Sponsor: MagicBell
* **[02:50](#t=02:50)** Sponsor: Sentry
* **[04:20](#t=04:20)** Weird audio tics
* **[05:19](#t=05:19)** Fetch in Node.js
* **[09:54](#t=09:54)** URL imports in Node.js
* **[11:41](#t=11:41)** JSON Modules
* **[15:01](#t=15:01)** Node in import url scheme
* **[17:30](#t=17:30)** Pipeline Operator
* **[21:21](#t=21:21)** Reversible String Split
* **[23:56](#t=23:56)** JavaScript Module Blocks
* **[25:22](#t=25:22)** String.cooked
* **[26:34](#t=26:34)** BigInts Math

URL imports in Node.js

* [@MylesBorins](https://twitter.com/MylesBorins/status/1489024782205173760?s=20&t=nJISn-KBCaGFTWk0QkjB_w)

* [Pipeline Operator](https://github.com/tc39/proposal-pipeline-operator)

* [String.cooked](https://github.com/tc39/proposal-string-cooked)

* [BigInts Math](https://github.com/tc39/proposal-bigint-math)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f026b424b8f072f6e8fae052598106f52bdb01dada959e19470aea0e71657feb,javascript-in-2022-new-coming-and-proposed-features,/shows/433 - JavaScript in 2022.md,2023-10-16 20:07:35.452,2023-10-27 15:58:04.338,HASTY
syntax_podcast_show_00434,434,Ben Vinegar × Distributed Tracing and TypeScript Migrations,2022-02-23 12:00:00.667,https://traffic.libsyn.com/syntax/Syntax_-_434.mp3,"
In this episode of Syntax, Wes and Scott talk with Ben Vinegar about his work with Sentry, their migration to TypeScript, and advice for running JavaScript on other websites.

## Kontent by Kentico - Sponsor

Kontent by Kentico is a headless CMS that provides live editing experience to non-technical users and hands you the technical tools to build websites, mobile apps, voice assistants, or anything else where you need content. Use REST API or GraphQL and get your content via the global Fastly CDN. Designed to unify all your content and operations, in compliance with ISO27001 and SOC2Type2 certifications.[Spin up a new project today](https://kontent.ai/syntax) and discover Kontent.

## Hashnode - Sponsor

Everything you need to start blogging as a developer. Own your content, share ideas, and connect with the global dev community! Hashnode is a free developer blogging platform that allows you to publish articles on your own domain and helps you stay connected with a global developer community.

[Hashnode: Everything you need to start blogging as a developer!](https://hashnode.com/)

## Show Notes

* [Ben Vinegar](https://github.com/benvinegar)
* **[00:20](#t=00:20)** Guest introduction
* **[05:58](#t=05:58)** Seeing bug reports from Sentry
* **[07:38](#t=07:38)** Distributed tracing for full stack developers
* **[12:16](#t=12:16)** Amazon X Ray
* [AWS Xray](https://aws.amazon.com/xray/)
* **[15:32](#t=15:32)** Using Tracing
* **[19:40](#t=19:40)** Sponsor: Kontent by Kentico
* **[20:58](#t=20:58)** Cloudflare Worker Integration
* **[22:30](#t=22:30)** How does Sentry have open source and a business?
* [Heroku](https://heroku.com)
* [App Platform](https://www.digitalocean.com/products/app-platform)
* [Media Temple](https://mediatemple.net)
* [Dreamhost](https://www.dreamhost.com)
* [WordPress Calypso](https://github.com/Automattic/wp-calypso)
* **[32:30](#t=32:30)** Sponsor: Hashnode
* **[34:07](#t=34:07)** What is the tech stack of Sentry?
* **[38:20](#t=38:20)** Sentry switching to TypeScript
* [Sentry switching to TypeScript](https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript)
* **[44:36](#t=44:36)** Running JavaScript on other websites
* **[51:24](#t=51:24)** Sponsor: Sentry
* **[53:08](#t=53:08)** Sick Picks

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Last Seen](https://www.wbur.org/podcasts/lastseen)
* Wes: [SEOUL Sisters Korean Kimchi Seasoning](https://amzn.to/3HP29IL)
* Ben: [Worst Scene / Best Scene](https://podcasts.apple.com/us/podcast/worst-scene-best-scene/id1290069572)

* [I Was There Too](https://www.earwolf.com/show/i-was-there-too/)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",94427d9d6feb9d006a4f1cfff6dcb0510109520e9d4ade0955c6b77a7ba4d7b8,ben-vinegar-distributed-tracing-and-typescript-migrations,/shows/434 - Ben Vinegar.md,2023-10-16 20:07:35.505,2023-10-27 15:58:04.393,TASTY
syntax_podcast_show_00435,435,"This vs That × map vs reduce, forEach vs for in, and more!",2022-02-28 12:00:00.690,https://traffic.libsyn.com/syntax/Syntax_-_435.mp3,"
In this Hasty Treat, Scott and Wes do a little this vs that with map vs reduce, forEach vs for in, .hasOwnProperty() vs in vs .hasOwn(), CSS absolute + left/right/top/bottom vs transform, and more.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[01:30](#t=01:30)** Sponsor: Prismic
* **[02:58](#t=02:58)** Sponsor: Sentry
* **[04:21](#t=04:21)** .filter() and .map() (every, one, etc..) VS Reduce
* **[09:17](#t=09:17)** .forEach() vs for in / for of
* **[15:52](#t=15:52)** .hasOwnProperty() vs in vs .hasOwn()
* **[19:37](#t=19:37)** CSS absolute + left/right/top/bottom vs transform
* **[22:54](#t=22:54)** Object.assign({}, obj) vs {...spread}
* [Animal Friendly idioms](https://www.peta.org/features/animal-friendly-idioms/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",153fb3e7e5d0fb3a5454ed54cf44d795e5f04e7b16ea40b50f66ccb5a0b49489,this-vs-that-map-vs-reduce-foreach-vs-for-in-and-more,/shows/435 - This vs That.md,2023-10-16 20:07:35.551,2023-10-27 15:58:04.535,HASTY
syntax_podcast_show_00436,436,Wes and Scott React to the State of JS,2022-03-02 14:15:51.824,https://traffic.libsyn.com/syntax/Syntax_-_436.mp3,"
In this episode of Syntax, Wes and Scott take a look at the 2021 State of JS survey that was recently published, including demographics, salary, browser APIs, overall happiness, and more!

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* [2021 State of JS Survey](https://2021.stateofjs.com)
* **[01:51](#t=01:51)** Winter birthday fun
* **[05:38](#t=05:38)** The State of JS survey
* **[07:37](#t=07:37)** Demographics
* **[09:18](#t=09:18)** Salary range
* **[09:58](#t=09:58)** Language features
* **[14:05](#t=14:05)** Browser APIs
* **[17:36](#t=17:36)** Custom elements and Shadow DOM
* **[18:18](#t=18:18)** Page visibility API
* **[19:28](#t=19:28)** File system API
* **[19:58](#t=19:58)** Web share API
* **[22:15](#t=22:15)** Sponsor: Linode
* **[23:12](#t=23:12)** Libraries
* **[27:30](#t=27:30)** Stimulus
* **[29:21](#t=29:21)** Trends
* **[31:32](#t=31:32)** Happiness with the state of front end frameworks
* **[32:28](#t=32:28)** Sponsor: LogRocket
* **[34:04](#t=34:04)** Backend Frameworks
* **[38:16](#t=38:16)** Backend tool satisfaction
* **[44:35](#t=44:35)** Happiness of build tools
* **[46:32](#t=46:32)** Sponsor: Freshbooks
* **[48:27](#t=48:27)** The best podcast in web development
* **[49:05](#t=49:05)** Sick Picks

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Inventing Anna](https://www.netflix.com/Title/81008305)
* Wes:[Everlane Crewneck Sweater](https://rstyle.me/cz-n/gane3acdguf)

## Shameless Plugs

* Scott: [LevelUp Course Drop Party](https://www.youtube.com/watch?v=LATf_lVYoMQ)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d7dae93c61f43d20ca93ee7741f853ceab6dc2ed4690369f87c1d4dcd1dd97b6,wes-and-scott-react-to-the-state-of-js,/shows/436 - React to State of JS.md,2023-10-16 20:07:35.596,2023-10-27 15:58:04.581,TASTY
syntax_podcast_show_00437,437,Sticker Mogul 2022,2022-03-07 12:00:00.605,https://traffic.libsyn.com/syntax/Syntax_-_437.mp3,"
In this Hasty Treat, Scott and Wes talk about Wes' experience designing, printing, and shipping out his sticker packs.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[01:26](#t=01:26)** Sponsor: LogRocket
* **[02:15](#t=02:15)** Sponsor: Linode
* **[03:51](#t=03:51)** How Wes sells stickers
* [Syntax 346: Selling And Shipping T Shirts with TypeScript](https://syntax.fm/show/346/selling-and-shipping-t-shirts-with-typescript)
* **[04:27](#t=04:27)** Where the stickers are printed
* [Zigpac](https://www.zigpac.com)
* **[06:30](#t=06:30)** How the stickers were designed
* **[07:38](#t=07:38)** How do you ship them anywhere in the world for $5?
* **[10:46](#t=10:46)** Packing the stickers
* **[13:58](#t=13:58)** How did Wes sell the stickers?
* **[16:51](#t=16:51)** Any concern about two people ordering at the same time?
* **[17:13](#t=17:13)** One thing that did break
* [Pushover](https://pushover.net)
* **[18:13](#t=18:13)** How the stickers were shipped
* [Stallion Express](https://stallionexpress.ca)
* [APC](https://www.apc-pli.com)
* **[25:42](#t=25:42)** Costs for stickers
* **[28:37](#t=28:37)** TypeScript sticker logo

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b89a909768866dd3ebbdf1b4b9f5900d25c9629b34da8fbf8e1ab8a44356ea64,sticker-mogul-2022,/shows/437 - Sticker drop.md,2023-10-16 20:07:35.666,2023-10-27 15:58:04.634,HASTY
syntax_podcast_show_00438,438,Part 2 of Wes and Scott React to the State of JS,2022-03-09 12:00:00.412,https://traffic.libsyn.com/syntax/Syntax_-_438.mp3,"
In this second part episode of Syntax, Wes and Scott continue talking about the 2021 State of JavaScript survey: mobile and desktop libraries, testing, monorepo, runtimes, flavors of JavaScript, and more!

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create]([https://www.sanity.io/create](https://www.sanity.io/create)). Get an awesome supercharged free developer plan on [sanity.io/syntax]([https://www.sanity.io/syntax](https://www.sanity.io/syntax)).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:20](#t=01:20)** Scott's new sound panels
* **[03:32](#t=03:32)** Instacart
* [2021 State of JS Survey](https://2021.stateofjs.com/en-US/)
* [Tauri](https://tauri.studio)
* **[07:46](#t=07:46)** Mobile and Desktop libraries
* **[13:50](#t=13:50)** Testing
* [Vitest](https://vitest.dev)
* [Playwright](https://playwright.dev)
* [Cypress](https://www.cypress.io)
* **[19:48](#t=19:48)** Sponsor: Sentry
* **[21:26](#t=21:26)** Monorepo tooling
* **[27:00](#t=27:00)** Sponsor: Sanity.io
* **[28:18](#t=28:18)** JavaScript Runtimes
* **[30:51](#t=30:51)** JavaScript Flavors
* **[32:32](#t=32:32)** Non JavaScript Languages
* **[39:38](#t=39:38)** Utilities
* [Syntax 401: Monorepo](https://syntax.fm/show/401/hasty-treat-how-to-setup-a-pnpm-monorepo)
* [pnpm](https://pnpm.io)
* [Turborepo](https://turborepo.org)
* **[40:19](#t=40:19)** Resources
* [Syntax.fm 403: JavaScript in 2022 - New, Coming and Proposed Features](https://syntax.fm/show/433/javascript-in-2022-new-coming-and-proposed-features)
* **[43:18](#t=43:18)** Opinions
* **[47:21](#t=47:21)** Features missing from JavaScript
* **[49:30](#t=49:30)** Awards
* **[52:58](#t=52:58)** Sponsor: Freshbooks
* **[53:38](#t=53:38)** SIIIIICK ××× PIIIICKS
* **[56:41](#t=56:41)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [StoryPal](https://amzn.to/3vGH8Nd)
* Wes: [Heartbeat Hot Sauce](https://amzn.to/3Hs04RJ)

* [Matty Matheson on Hot Ones](https://www.youtube.com/watch?v=S8XQHKg0Fjo)
* [Gordon Ramsay on Hot Ones](https://www.youtube.com/watch?v=GJlNvSC5v6s)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c889e813144d5ddfe258f8f5538242083411748dd7fb223d5df26b5900434973,part-2-of-wes-and-scott-react-to-the-state-of-js,/shows/438 - React to State of JS Part 2.md,2023-10-16 20:07:35.720,2023-10-27 15:58:04.684,TASTY
syntax_podcast_show_00439,439,Hasty Treat WTF × SSR vs JamStack vs Serverless?,2022-03-14 12:00:00.645,https://traffic.libsyn.com/syntax/Syntax_-_439.mp3,"
In this Hasty Treat, Scott and Wes talk about the differences between SSR, JamStack, and Serverless.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Retool - Sponsor

Retool is the fast way to build internal tools. Visually design apps that interface with any database or API. Switch to code nearly anywhere to customize how your apps look and work. With Retool, you ship more apps and move your business forward—all in less time.

Visit [Retool.com/syntax](http://retool.com/syntax) for more information.

## Show Notes

* **[00:21](#t=00:21)** Welcome
* **[01:20](#t=01:20)** Sponsor: LogRocket
* **[02:26](#t=02:26)** Sponsor: Retool
* **[03:49](#t=03:49)** What exactly is server side rendering vs. tech like Jamstack and serverless?
* [Cloudinary](https://cloudinary.com)
* [Mux](https://www.mux.com)
* **[12:15](#t=12:15)** Why use one or the other?
* [Svelte Kit](https://kit.svelte.dev)
* [Syntax.fm](https://syntax.fm)
* **[16:55](#t=16:55)** Where does Serverless fit into this?
* **[19:12](#t=19:12)** What's the ideal scenario?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4017d2116f172424ed3a87131510ae5951f6d144d6694e0b163a5949df577c03,hasty-treat-wtf-ssr-vs-jamstack-vs-serverless,/shows/439 - SSR vs JamStack vs Serverless.md,2023-10-16 20:07:35.769,2023-10-27 15:58:04.746,HASTY
syntax_podcast_show_00440,440,Potluck - Handling Auth × Are Web Dev Real Developers? × Handling Git Conflicts × Converting PNG to Box-Shadow × Bad Docs vs No Docs × Making Shopify Headless,2022-03-16 12:00:00.308,https://traffic.libsyn.com/syntax/Syntax_-_440.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about handling auth, are web dev real developers, handling Git conflicts,  converting PNG to Box-Shadow, bad docs vs no docs, making Shopify headless, and more.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:32](#t=01:32)** Fool's winter
* **[03:25](#t=03:25)** How do you handle authentication in an app?
* **[09:42](#t=09:42)** Responding to people who don't think developers are real developers?
* **[12:21](#t=12:21)** How do you handle git conflicts in package-lock.json and/or yarn.lock files?
* **[14:42](#t=14:42)** I built a small project which converts .png images to CSS box-shadow values.
* [Img to Box Shadow](https://github.com/AriPerkkio/img-to-box-shadow)
* **[16:37](#t=16:37)** January 19th, 2038 at 03:14:08 is the end of epoch
* [Office Space](https://www.imdb.com/title/tt0151804/)
* **[20:31](#t=20:31)** Sponsor: Sentry
* **[22:44](#t=22:44)** Should I begin to add PropTypes to my packages and projects?
* **[25:59](#t=25:59)** What's worse: bad documentation or no documentation?
* **[27:37](#t=27:37)** How do you find the motivation or discipline to follow through in side projects?
* **[29:48](#t=29:48)** I need to take an existing Shopify site and make it headless - what should I use?
* **[37:55](#t=37:55)** Sponsor: Sanity
* **[39:18](#t=39:18)** You have a ?token= query param and some token value for it. Could you explain a bit more on what is that for?
* **[44:05](#t=44:05)** Have you thought about selling Syntax.fm shirts?
* **[46:05](#t=46:05)** Can I migrate my Express routes to Next.js' API and get the same httpOnly cookies workflow?
* **[52:03](#t=52:03)** Sponsor: Freshbooks
* **[52:52](#t=52:52)** Sick Picks

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Okeeffe’s Lip Balm](https://amzn.to/3vKGG0c)
* Wes: [Okeef’s Working Hands](https://amzn.to/3sNFEyA)

### Level Up Course Drop - [https://youtu.be/LATf_lVYoMQ?t=829](https://youtu.be/LATf_lVYoMQ?t=829)

## Shameless Plugs

* Scott: [Level Up Course Drop](https://youtu.be/LATf_lVYoMQ)
* Wes: [Wes Bos Course player update](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",44de5d9e3c98da1c937d44c5a6749f9ba58991918d0f710904dd58a02fe4d0c1,potluck-handling-auth-are-web-dev-real-developers-handling-git-conflicts-converting-png-to-box-shadow-bad-docs-vs-no-docs-making-shopify-headless,/shows/440 - Potluck Auth.md,2023-10-16 20:07:35.804,2023-10-27 15:58:04.801,TASTY
syntax_podcast_show_00441,441,"SSL Certs, Approvals and Cloudflare",2022-03-21 12:00:00.500,https://traffic.libsyn.com/syntax/Syntax_-_441.mp3,"
In this Hasty Treat, Scott and Wes talk about getting SSL certificates set up between your hosting, Cloudflare, and other web apps you may use.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:21](#t=00:21)** Welcome
* **[01:13](#t=01:13)** Sponsor: LogRocket
* **[02:06](#t=02:06)** Sponsor: Prismic
* **[03:23](#t=03:23)** Wes' story of SSL
* [Render](https://render.com)
* **[05:43](#t=05:43)** How LetsEncrypt works
* [LetsEncrypt](https://letsencrypt.org)
* **[08:32](#t=08:32)** What is Cloudflare?
* [Cloudflare](https://www.cloudflare.com/en-ca/)
* **[10:33](#t=10:33)** The problem Wes ran into
* **[12:27](#t=12:27)** Support is tricky
* **[13:54](#t=13:54)** What is Cloudapp?
* [Cloudapp](https://www.getcloudapp.com)
* [Vercel](https://vercel.com)
* **[15:34](#t=15:34)** Two SSL Certs are needed
* **[16:41](#t=16:41)** First solution
* **[17:36](#t=17:36)** Second solution
* **[22:36](#t=22:36)** What about A Records?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",adea570b8bd330852e9da8c93ac9c2c406be9abb74743b6b4b26fd4d85943102,ssl-certs-approvals-and-cloudflare,"/shows/441 - SSL Certs, Approvals and Cloudflare.md",2023-10-16 20:07:35.838,2023-10-27 15:58:04.855,HASTY
syntax_podcast_show_00442,442,Our Stacks Explained,2022-03-23 10:00:05.720,https://traffic.libsyn.com/syntax/Syntax_-_442.mp3,"
In this episode of Syntax, Wes and Scott talk through the tech stack they use to manage their course websites.

## Kontent by Kentico  - Sponsor

Kontent by Kentico is a headless CMS that provides live editing experience to non-technical users and hands you the technical tools to build websites, mobile apps, voice assistants, or anything else where you need content. Use REST API or GraphQL and get your content via the global Fastly CDN. Designed to unify all your content and operations, in compliance with ISO27001 and SOC2Type2 certifications.[Spin up a new project today](kontent.ai/syntax) and discover Kontent.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## .TECH Domains - Sponsor

Dot Tech domains has launched a new game with wicked prizes. It’s a windows 98 inspired game where you need to find and solve puzzles in each of the drives. This is unreal and you need to see it to believe it - good luck and start the game March 25th at [go.tech/syntaxbtc](https://go.tech/syntaxbtc).

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[02:50](#t=02:50)** CSS Redesign of LevelUpTuts
* **[03:56](#t=03:56)** Overview of our platforms
* **[06:06](#t=06:06)** The API
* [ExpressJS](http://expressjs.com)
* [MongoDB](https://www.mongodb.com)
* [GraphQL](https://www.graphql.com)
* [Fastify](https://www.fastify.io)
* [Mercurius](https://mercurius.dev)
* [Mongoose](https://mongoosejs.com)
* **[15:13](#t=15:13)** Sponsor: Kontent by Kentico
* **[17:07](#t=17:07)** Customer dashboard
* [Svelte Kit](https://kit.svelte.dev)
* **[21:21](#t=21:21)** Viewing experience
* [React](https://reactjs.org)
* [GitHub](https://github.com)
* [VideoJS](https://videojs.com)
* [Mux](https://mux.com)
* [Vimeo](https://vimeo.com)
* **[30:53](#t=30:53)** Hosting
* **[35:51](#t=35:51)** Sponsor: LogRocket
* **[36:45](#t=36:45)** Admin tooling
* [Flexbox](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox)
* [Postmark](https://postmarkapp.com)
* [Drip](https://www.drip.com)
* [Pancake Charts](https://pancake-charts.surge.sh)
* **[47:37](#t=47:37)** Authentication
* [PassportJS](https://www.passportjs.org)
* **[50:30](#t=50:30)** Transactional Email
* [Nodemailer](https://nodemailer.com)
* [Pug](https://pugjs.org/api/getting-started.html)
* [Inky](https://github.com/foundation/inky)
* [mjml](https://mjml.io)
* **[52:36](#t=52:36)** Checkout
* [Stripe](https://stripe.com/)
* [Stripe Checkouts](https://stripe.com/payments/checkout)
* [Stripe Elements](https://stripe.com/payments/elements)
* [Braintree](https://www.braintreepayments.com)
* [Paypal](https://www.paypal.com)
* **[55:58](#t=55:58)** Hosting
* [Digital Ocean](https://www.digitalocean.com)
* [Digital Ocean Platform](https://www.digitalocean.com/products/app-platform)
* [Render](https://render.com)
* [Cloudflare](https://www.cloudflare.com/)
* **[57:48](#t=57:48)** Sponsor: .TECH
* **[59:39](#t=59:39)** Other parts

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Toniebox Audio Player Starter Set](https://amzn.to/3JaZR7b)
* Wes: [Vissles v84 Keyboard](https://vissles.com/products/v84-wireless-mechanical-keyboard-hot-swappable?variant=39507703758947)

## Shameless Plugs

* Scott: [LevelUp Tutorials - Svelte 3D Course](https://leveluptutorials.com/tutorials/svelte-3d/what-is-svelte-cubed)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ab72c59eb725ba6ec5bf7fe78fe24e38886f3118ee9d9ee8506b96ca08a95f72,our-stacks-explained,/shows/442 - Our Stacks Explained.md,2023-10-16 20:07:35.870,2023-10-27 15:58:04.913,TASTY
syntax_podcast_show_00443,443,What’s Up With Vitest?,2022-03-28 12:00:00.183,https://traffic.libsyn.com/syntax/Syntax_-_443.mp3,"
In this Hasty Treat, Scott and Wes talk about Vitest, how testing is handled, how code coverage works, and whether they think they'll use it.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## MagicBell - Sponsor

MagicBell is the The notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Show Notes

* **[00:21](#t=00:21)** Welcome
* **[02:47](#t=02:47)** Sponsor: Sentry
* **[03:48](#t=03:48)** Sponsor: MagicBell
* **[04:55](#t=04:55)** What’s is Vitest?
* **[09:06](#t=09:06)** How is testing handled?
* **[10:59](#t=10:59)** HappyDOM
* **[14:13](#t=14:13)** Code coverage baked in
* **[16:25](#t=16:25)** Files acting as folders

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",aaee3b469e54c72d4ea678838dc7a7e709c31997af23636b7aa073c3eac96417,what-s-up-with-vitest,/shows/443 - Vitest.md,2023-10-16 20:07:35.902,2023-10-27 15:58:04.975,HASTY
syntax_podcast_show_00444,444,Syntax Highlight,2022-03-30 12:00:00.930,https://traffic.libsyn.com/syntax/Syntax_-_444.mp3,"
In this episode of Syntax, Wes and Scott review your websites that you submitted including bald.design, Anh Hoang Nguyen, bradleyshellnut.com, and more.

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* [Uses.tech](https://uses.tech)
* **[00:10](#t=00:10)** Welcome
* **[03:35](#t=03:35)** How to submit your site for highlight
* **[04:11](#t=04:11)** bald.design
<https://www.bald.design>
* **[10:38](#t=10:38)** Anh Hoang Nguyen
<https://www.hoanganh.dev>
* **[15:08](#t=15:08)** kennytye.com
<https://www.kennytye.com>
* **[22:42](#t=22:42)** Sponsor: Freshbooks
* **[24:10](#t=24:10)** rubenoliveira.tech
<http://rubenoliveira.tech>
* **[28:47](#t=28:47)** abgn.me
<https://abgn.me>
* **[32:02](#t=32:02)** Sponsor: LogRocket
* **[33:19](#t=33:19)** bradleyshellnut.com
<https://bradleyshellnut.com>
* **[41:11](#t=41:11)** hunterjennings.dev
<https://www.hunterjennings.dev>
* **[46:19:16](#t=46:19:16)** Sponsor: Prismic
* **[47:42:19](#t=47:42:19)** matthewfarlymn.com
<https://matthewfarlymn.com>
* **[55:00:01](#t=55:00:01)** SIIIIICK ××× PIIIICKS

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Bad Vegan](https://www.netflix.com/ca/title/81470938)
* Wes:

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2bcab96aeb48c00e0c29acd799b7f9426839b5a871f642d917af8c7c06929fde,syntax-highlight,/shows/444 - portfolio review.md,2023-10-16 20:07:35.945,2023-10-27 15:58:05.033,TASTY
syntax_podcast_show_00445,445,Types in JS?,2022-04-04 12:00:00.425,https://traffic.libsyn.com/syntax/Syntax_-_445.mp3,"
In this Hasty Treat, Scott and Wes talk about a proposal for type syntax in JavaScript.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:13](#t=01:13)** Sponsor: Sentry
* **[02:03](#t=02:03)** Sponsor: Sentry
* **[02:44](#t=02:44)** The proposal announced
* [A proposal for type syntax in JavaScript](https://devblogs.microsoft.com/typescript/a-proposal-for-type-syntax-in-javascript/)
* [Proposal types as comments](https://github.com/giltayar/proposal-types-as-comments/)
* **[03:24](#t=03:24)** What are types?
* **[08:33](#t=08:33)** Types as comments
* **[10:51](#t=10:51)** Why not JS Doc?
* **[13:39](#t=13:39)** What it looks like
* **[19:02](#t=19:02)** Possible downsides
* **[21:37](#t=21:37)** Why not define a type system for JS in TC39 instead?
* [Why not define a type system for JS in TC39 instead?](https://github.com/giltayar/proposal-types-as-comments#why-not-define-a-type-system-for-js-in-tc39-instead)
* **[22:41](#t=22:41)** The Proposal vs Typescript

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",133f38421ca320928207306dd6785c754918382bb7d2e0903886fdfa8be3cdf0,types-in-js,/shows/445 - Types in JS.md,2023-10-16 20:07:35.983,2023-10-27 15:58:05.095,HASTY
syntax_podcast_show_00446,446,"Making Content × What is our Process? Youtube, Blog Posts, Courses, Conference Talks, and Podcasts",2022-04-06 12:00:00.197,https://traffic.libsyn.com/syntax/Syntax_-_446.mp3,"
In this episode of Syntax, Wes and Scott talk through their process for making content on the internet for their YouTube channels, blog posts, courses, conference talks, and podcasts.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:09](#t=00:09)** Welcome
* **[03:02](#t=03:02)** Creating YouTube videos
* [Scott’s YouTube channel](https://www.youtube.com/channel/UCyU5wkjgQYGRB0hIHMwm2Sg)
* **[09:42](#t=09:42)** Conference talks
* [Notion](https://www.notion.so)
* [Stackblitz](https://stackblitz.com)
* [Reactathon](https://www.reactathon.com)
* [Raycast](https://www.raycast.com)
* **[17:05](#t=17:05)** Sponsor: Linode
* **[17:32](#t=17:32)** Tech for making slides
* **[19:37](#t=19:37)** Courses - how to decide what to do?
* **[26:44](#t=26:44)** How Wes breaks down a course topic
* **[30:00](#t=30:00)** Arranging a course layout
* **[33:19](#t=33:19)** Sponsor: LogRocket
* **[34:17](#t=34:17)** Writing blog posts
* **[41:58](#t=41:58)** Sponsor: Sanity
* **[43:32](#t=43:32)** How we organize the podcast
* **[51:10](#t=51:10)** SIIIIICK ××× PIIIICKS

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [ZENOVA Under Desk Treadmill Walking Pad](https://amzn.to/3LiImm8)
* Wes: Trader Joe's Hot Sauce with Yuzu

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d5744909685a934ac8f17fddc4acc76e2db1253653f4c121c87f6829328a02f4,making-content-what-is-our-process-youtube-blog-posts-courses-conference-talks-and-podcasts,/shows/446 - Content creation.md,2023-10-16 20:07:36.017,2023-10-27 15:58:05.147,TASTY
syntax_podcast_show_00447,447,How To Be Consistent,2022-04-11 12:00:00.368,https://traffic.libsyn.com/syntax/Syntax_-_447.mp3,"
In this Hasty Treat, Scott and Wes talk about their tips and tricks for being consistent if you're trying to create.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## MagicBell - Sponsor

MagicBell is the The notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Show Notes

* **[00:44](#t=00:44)** String cheese theory
* **[01:49](#t=01:49)** Sponsor: Sentry
* **[03:41](#t=03:41)** Sponsor: MagicBell
* **[05:26](#t=05:26)** Being consistent is the key to success
* **[07:12](#t=07:12)** Commit to it
* **[09:13](#t=09:13)** Plan and schedule
* **[13:42](#t=13:42)** Being accountable to someone
* **[18:11](#t=18:11)** Break things down into smaller tasks
* **[20:25](#t=20:25)** Measure goals
* **[22:14](#t=22:14)** Revise the plan

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",6da67cea8ff9fec9fe5ff0b5ac098f03b2b93b429d31cf55acc19372e56738f6,how-to-be-consistent,/shows/447 - How To Be Consistent.md,2023-10-16 20:07:36.060,2023-10-27 15:58:05.239,HASTY
syntax_podcast_show_00448,448,"Potluck - Multi Tenant Apps, JS Sprinkles,  Kids Coding, Server Error Handling",2022-04-13 12:00:00.332,https://traffic.libsyn.com/syntax/Syntax_-_448.mp3,"
In this episode of Syntax, Wes and Scott answer your questions about multi tenant apps, JS sprinkles, kids coding, server error handling, and more.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:01](#t=01:01)** Buying a new car
* [Hyundai Ioniq 5](https://www.hyundaicanada.com/en/showroom/2022/ioniq-5)
* **[08:20](#t=08:20)** What would you recommend old-school jQuery folks, external agency vendors, and modern devs that want to work together?
* **[11:59](#t=11:59)** Are React dumb/presentational components only possible at the leaf components of an application?
* **[15:35](#t=15:35)** How old should a kid be to learn programming?
* [Scratch](https://scratch.mit.edu)
* [Minecraft](https://www.minecraft.net)
* **[20:28](#t=20:28)** Sponsor: Sentry
* **[21:34](#t=21:34)** Without pointing me to a paid error program like sentry, how do you guys manage this rabbit hole?
* **[27:05](#t=27:05)** How do you judge how much server you need?
* [MongoDB Atlas](https://www.mongodb.com/cloud/atlas)
* [Google Pagespeed](https://pagespeed.web.dev)
* **[31:57](#t=31:57)** For websites that aren't applications how would you best organize your JavaScript?
* **[35:17](#t=35:17)** How do you diagnose slowdowns and bad user experience?
* **[41:31](#t=41:31)** Sponsor: Sanity
* **[43:13](#t=43:13)** Do you default export your React components when using TypeScript?
* **[47:42](#t=47:42)** Besides web sockets or polling at a predefined interval and refreshing the page to fetch new data, can you think of any Next-specific solutions or recommend any packages that could help make this relatively simple?
* [Supabase](https://supabase.com)
* [Firebase](https://firebase.google.com)
* [Meteor](https://www.meteor.com)
* **[52:13](#t=52:13)** We should look into 'tunneling'.
* **[56:42](#t=56:42)** How do I build a multi-tenant app?
* [Caddy Server](https://caddyserver.com)
* [nginx](https://nginx.org)
* [Approximated.app](https://approximated.app)
* [Vercel offers this via a middleware](https://vercel.com/guides/nextjs-multi-tenant-application)
* [Cloudflare SSL for SaaS](https://blog.cloudflare.com/cloudflare-for-saas/)
* **[00:56](#t=00:56)** Sponsor: Freshbooks
* **[01:34](#t=01:34)** SIIIIICK ××× PIIIICKS

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Vivid](https://goodsnooze.gumroad.com/l/vivid)
* Wes: [Right angle Lightning cables](https://amzn.to/36YHWmi)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e3701d2edbfab29835e5ba488fd3748e1d44955b04d17cc4eadb0c813dc6267d,potluck-multi-tenant-apps-js-sprinkles-kids-coding-server-error-handling,/shows/448 - potluck.md,2023-10-16 20:07:36.097,2023-10-27 15:58:05.290,TASTY
syntax_podcast_show_00449,449,Svelte Cubed + 3D In Browser,2022-04-18 12:00:00.876,https://traffic.libsyn.com/syntax/Syntax_-_449.mp3,"
In this Hasty Treat, Scott and Wes talk about Svelte Cubed and working in 3D in the browser.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:21](#t=00:21)** Welcome
* **[01:00](#t=01:00)** Sponsor: LogRocket
* **[01:41](#t=01:41)** Sponsor: Prismic
* **[02:45](#t=02:45)** Intro to 3D in the browser
* [Svelte Cubed](https://svelte-cubed.vercel.app)
* [Getting started with Svelte Cubed](https://svelte-cubed.vercel.app/docs/getting-started)
* **[03:49](#t=03:49)** Declarative vs imperative
* **[07:43](#t=07:43)** How does Three.JS work?
* [ThreeJS](https://threejs.org)
* **[12:28](#t=12:28)** Orbit controls
* **[15:47](#t=15:47)** Svelte Cannon
* [Svelte Cannon](https://svelte-cannon.bfanger.nl)
* [Blender](https://www.blender.org)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b9a31976ce307c351fcaf721d05192f2a27f848485f212a5d8db7ede967d7406,svelte-cubed-3d-in-browser,/shows/449 - 3D in the browser.md,2023-10-16 20:07:36.129,2023-10-27 15:58:05.345,HASTY
syntax_podcast_show_00450,450,Potluck - Working on a Team × Dealing with Imposter Syndrome × Animating on the Web × Icon Libraries × Demanding Clients,2022-04-20 12:00:00.166,https://traffic.libsyn.com/syntax/Syntax_-_450.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about working on a team, dealing with imposter syndrome, animating on the web, using the table element, landing pages for apps, and building full stack apps with NextJS.

## Sentry   - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax).

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:05](#t=01:05)** The mustard bandit podcast
* **[02:54](#t=02:54)** How can Developers work with designers and Product managers seamlessly?
* **[06:37](#t=06:37)** How do I deal with imposter syndrome?
* **[10:46](#t=10:46)** Any good coffee shops in Denver?
* [17 of Denver’s Best Coffee Shops](https://www.5280.com/2021/12/17-of-denvers-best-coffee-shops/)
* **[11:38](#t=11:38)** Do you use Table element or CSS Grid for tabular data?
* **[13:18](#t=13:18)** How do you manage animations without a library?
* [Greensock](https://greensock.com)
* **[17:05](#t=17:05)** Sponsor: Sentry
* **[18:01](#t=18:01)** What do you use for icon libraries?
* [Icons8](https://icons8.com)
* [Font Awesome Icons](https://fontawesome.com/icons)
* [React Icons](https://react-icons.github.io/react-icons/)
* [Flat Icons](https://www.flaticon.com)
* **[25:10](#t=25:10)** How do you unregister the service worker to clear site data?
* [Syntax 346 - Selling T Shirts](https://syntax.fm/show/346/selling-and-shipping-t-shirts-with-typescript)
* **[29:15](#t=29:15)** Sponsor: Sanity.io
* **[30:47](#t=30:47)** Since NextJS has API routes, could you build a full-stack application using just NextJS?
* **[35:41](#t=35:41)** Do you keep your landing pages and home pages seperate from your app?
* **[37:35](#t=37:35)** Where's the line for moving something hosted on a developer server to moving it to production?
* [CodePen](https://codepen.io)
* [Replit](https://replit.com)
* [Netlify](https://www.netlify.com)
* **[41:44](#t=41:44)** How do you deal with ignorant or demanding clients?
* **[45:54](#t=45:54)** As a JS/TS developer, which other language should I learn to compliment my skills?
* [Rust](https://www.rust-lang.org)
* [PHP](https://www.php.net)
* **[50:58](#t=50:58)** Sponsor: Freshbooks
* **[51:49](#t=51:49)** ××× SIIIIICK ××× PIIIICKS ×××
* **[58:41](#t=58:41)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Glass Drinking Straws](https://amzn.to/3xDd31E)
* Wes: [Lawn Lift](https://amzn.to/3jFIzUP)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Beginner Javascript](https://beginnerjavascript.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3798e7aa86be81eb338b1426f69efde16f458a562b5f85cd892d8609cc081e79,potluck-working-on-a-team-dealing-with-imposter-syndrome-animating-on-the-web-icon-libraries-demanding-clients,/shows/450 - potluck.md,2023-10-16 20:07:36.165,2023-10-27 15:58:05.405,TASTY
syntax_podcast_show_00451,451,Building a Coupon Engine,2022-04-25 12:00:00.372,https://traffic.libsyn.com/syntax/Syntax_-_451.mp3,"
In this Hasty Treat, Scott and Wes talk about the coupon engines they've built and use on their courses.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:12](#t=01:12)** Sponsor: Prismic
* **[02:32](#t=02:32)** Sponsor: LogRocket
* **[04:06](#t=04:06)** What we use for coupons
* [Stripe](https://stripe.com)
* [Braintree](https://www.braintreepayments.com/)
* **[06:27](#t=06:27)** Structure of our coupons
* **[10:43](#t=10:43)** Products and carts
* **[13:59](#t=13:59)** Country validation
* **[15:11](#t=15:11)** Affiliate codes
* **[16:36](#t=16:36)** Chaining rules together
* **[19:41](#t=19:41)** Tracking coupons
* **[20:54](#t=20:54)** Automatically applied coupons
* **[22:12](#t=22:12)** Quick tips for coupons

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f3e2534f95d59761cef31253e4d11e9514e908a13ba5117192750947f0acd987,building-a-coupon-engine,/shows/451 - Coupon engine.md,2023-10-16 20:07:36.203,2023-10-27 15:58:05.467,HASTY
syntax_podcast_show_00452,452,JavaScript × STUMP’D,2022-04-27 12:00:00.988,https://traffic.libsyn.com/syntax/Syntax_-_452.mp3,"
In this episode of Syntax, Wes and Scott ask each other hiring questions asked of JavaScript developers in job interviews.

## Kontent by Kentico  - Sponsor

Kontent by Kentico is a headless CMS that provides live editing experience to non-technical users and hands you the technical tools to build websites, mobile apps, voice assistants, or anything else where you need content. Use REST API or GraphQL and get your content via the global Fastly CDN. Designed to unify all your content and operations, in compliance with ISO27001 and SOC2Type2 certifications.[Spin up a new project today](https://kontent.ai/syntax) and discover Kontent.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* [JavaScript Interview Questions](https://github.com/sudheerj/javascript-interview-questions)
* **[00:13](#t=00:13)** Let's get STUMP'd
* **[01:08](#t=01:08)** Cleaning out the garage
* **[05:05](#t=05:05)** What are 4 methods available on weakmap?
* **[07:07](#t=07:07)** How do you make an object iterable in JavaScript?
* **[09:29](#t=09:29)** How do you make the first letter of a string into uppercase?
* **[10:26](#t=10:26)** What is the typeof operator?
* **[11:53](#t=11:53)** What are classes in ES6?
* **[13:21](#t=13:21)** How do you enumerate key and value pairs of an object?
* **[15:44](#t=15:44)** Kontent by Kentico
* **[17:08](#t=17:08)** What is an event queue?
* **[21:05](#t=21:05)** Why do you need JSON?
* **[24:49](#t=24:49)** Why do you need a promise?
* **[25:45](#t=25:45)** Explain the range overflow property
* **[28:21](#t=28:21)** How do you return all matching strings against a matching expression?
* **[30:14](#t=30:14)** Sponsor: LogRocket
* **[30:51](#t=30:51)** What is a thunk function?
* **[33:46](#t=33:46)** Can you redeclare let or const variables?
* **[34:17](#t=34:17)** What are enhanced object literals?
* **[35:56](#t=35:56)** What is the difference between call, apply, and bind?
* **[38:52](#t=38:52)** Sponsor: Freshbooks
* **[39:57](#t=39:57)** What are benefits of modules and why would you need them?
* **[43:50](#t=43:50)** ××× SIIIIICK ××× PIIIICKS ×××
* **[48:47](#t=48:47)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Who ARTed Podcast](https://www.whoartedpodcast.com)
* Wes: Patio furniture

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c718918a0cbc94441bb290a341027b51494e18c8c6d28acf2337da6e8b442fd1,javascript-stump-d,/shows/452 - JavaScript STUMPd.md,2023-10-16 20:07:36.236,2023-10-27 15:58:05.572,TASTY
syntax_podcast_show_00453,453,Why do people still use Axios over Fetch?,2022-05-02 12:00:00.833,https://traffic.libsyn.com/syntax/Syntax_-_453.mp3,"
In this Hasty Treat, Scott and Wes talk about why people still use Axios over Fetch, and why people wouldn't use Axios.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:22](#t=00:22)** Welcome
* [Twitter thread of questions from listeners](https://twitter.com/wesbos/status/1501221052743041025)
* **[01:25](#t=01:25)** Sponsor: Linode
* **[02:07](#t=02:07)** Sponsor: Sentry
* **[03:04](#t=03:04)** What's Axios?
* [Syntax 224 - Serverless Cloud Functions](https://syntax.fm/show/224/serverless-cloud-functions-part-1)
* **[04:10](#t=04:10)** Why someone wouldn't use Axios?
* **[07:06](#t=07:06)** Interceptors
* **[09:30](#t=09:30)** Catching expired JWT and renewing it
* **[10:26](#t=10:26)** Upload or download progress events
* **[12:03](#t=12:03)** Valid status API
* **[13:45](#t=13:45)** Defaults
* **[15:32](#t=15:32)** Custom timeouts

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4ddf5d706374b1b3b24090b404c844409195c4d3f07806b1570e69c555bd9a30,why-do-people-still-use-axios-over-fetch,/shows/453 - Axios over Fetch.md,2023-10-16 20:07:36.271,2023-10-27 15:58:05.635,HASTY
syntax_podcast_show_00454,454,WTF is the Edge? Edge Compute / Functions,2022-05-04 12:00:00.813,https://traffic.libsyn.com/syntax/Syntax_-_454.mp3,"
In this episode of Syntax, Wes and Scott talk about what edge functions are, the upsides and downsides of edge functions, and what they're used for.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax).

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:56](#t=01:56)** A big announcement
* **[04:33](#t=04:33)** What is the Edge?
* **[08:27](#t=08:27)** The upsides of edge functions
* **[12:13](#t=12:13)** Cold start
* **[18:21](#t=18:21)** Sponsor: Linode
* **[19:24](#t=19:24)** What are downsides of edge functions?
* **[27:27](#t=27:27)** Sponsor: LogRocket
* **[28:35](#t=28:35)** What is the use case for an edge function?
* **[34:52](#t=34:52)** Authentication
* **[37:23](#t=37:23)** Caching
* **[40:51](#t=40:51)** Are there flavors of edge functions?
* **[44:00](#t=44:00)** Sponsor: Freshbooks
* **[46:06](#t=46:06)** What are edge functions not used for?
* **[47:39](#t=47:39)** What companies offer this?
* **[50:58](#t=50:58)** Sick Picks

* [Netlify announcing serverless compute with edge functions](https://www.netlify.com/blog/announcing-serverless-compute-with-edge-functions)

* [Syntax 310 Serverless, Deno and TypeScript with Brian Leroux](https://syntax.fm/show/310/serverless-deno-and-typescript-with-brian-leroux)

* [Vercel Middleware](https://vercel.com/docs/concepts/functions)

* [AWS Lambda](https://aws.amazon.com/lambda/)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Patented History of Innovations](https://podcasts.apple.com/us/podcast/the-origin-of-zero/id1612089556?i=1000558099918)
* Wes: [Fastmov Precut Parchment Paper](https://amzn.to/3vf2y2Y)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3504d57c2b1aaff5a17babe4a1038a071a34a4a8d9a9c7a70ac50dfc5ff97ab8,wtf-is-the-edge-edge-compute-functions,/shows/454 - WTF is the Edge.md,2023-10-16 20:07:36.320,2023-10-27 15:58:05.694,TASTY
syntax_podcast_show_00455,455,"TypeScript Fundamentals × Narrowing, Discriminating Unions, and Type Guards",2022-05-09 12:00:00.119,https://traffic.libsyn.com/syntax/Syntax_-_455.mp3,"
In this Hasty Treat, Scott and Wes talk about TypeScript Fundamentals, including narrowing, discriminating unions, and type guards.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Payments Hub - Sponsor

There are hundreds of payments processing companies out there. Hit up [developer.paymentshub.com/syntax](https://developer.paymentshub.com/syntax) to learn more about how Payments Hub Developers not only processes ecommerce and in-person payments, but also boards and underwrites your merchants in as little as 90 minutes. We are currently offering Syntax listeners who become new partners 6 months free data through our Business Reporting API!

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:35](#t=01:35)** Sponsor: Sentry
* **[02:23](#t=02:23)** Sponsor: Payments Hub
* **[05:21](#t=05:21)** Intro to TypeScript fundamentals
* **[06:28](#t=06:28)** What is Type Narrowing?
* **[09:32](#t=09:32)** typeof
* **[11:58](#t=11:58)** instanceof
* **[13:29](#t=13:29)** Custom typeguards
* **[16:12](#t=16:12)** this is
* **[17:59](#t=17:59)** discriminated unions

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",25a09f47198894e66c0c21ffbfa2676384d53802beb16a1a741cfa66f8e4d1ea,typescript-fundamentals-narrowing-discriminating-unions-and-type-guards,/shows/455 - TypeScript Fundamentals.md,2023-10-16 20:07:36.363,2023-10-27 15:58:05.759,HASTY
syntax_podcast_show_00456,456,10 Nifty Browser APIs,2022-05-11 12:00:00.911,https://traffic.libsyn.com/syntax/Syntax_-_456.mp3,"
In this episode of Syntax, Wes and Scott talk about 10 browser API's you might not be familiar with including getUserMedia, Resize Observer, SpeechRecognition, and more!

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:13](#t=00:13)** Welcome
* **[01:05](#t=01:05)** Dishwasher talk
* **[04:30](#t=04:30)** getUserMedia
* [Hair.WesBos.com](https://hair.wesbos.com)
* [Javascript 30](https://javascript30.com)
* **[07:22](#t=07:22)** FileSystem
* [Level Up Tutorials: Browser APIs](https://leveluptutorials.com/tutorials/exploring-browser-apis/intro-to-exploring-browser-apis)
* [Electron](https://www.electronjs.org)
* **[12:50](#t=12:50)** Geolocation
* **[15:07](#t=15:07)** Sponsor: Prismic
* **[16:41](#t=16:41)** Permissions
* **[22:36](#t=22:36)** Web Animations
* [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API)
* [Framer Motion](https://www.framer.com/motion/)
* [Motion One](https://motion.dev)
* **[26:31](#t=26:31)** Resize Observer
* [Resize Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API)
* **[29:33](#t=29:33)** Sponsor: LogRocket
* **[30:45](#t=30:45)** Clipboard
* [Clipboard API](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API)
* **[34:10](#t=34:10)** Web storage
* [Web storage](https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API)
* **[37:11](#t=37:11)** Sponsor: Freshbooks
* **[38:09](#t=38:09)** SpeechSynthesis
* **[41:32](#t=41:32)** SpeechRecognition
* **[46:14](#t=46:14)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [RCA to HDMI adapter](https://amzn.to/3y5m7wz)
* Wes: [SlimLED](https://www.liteline.com/page/SlimLED)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e8d9b9696db42ef73d7e1b3ffabc8deec3ad185d56cab9c12cea2048ac286c64,10-nifty-browser-apis,/shows/456 - 10 Browser APIs.md,2023-10-16 20:07:36.415,2023-10-27 15:58:05.812,TASTY
syntax_podcast_show_00457,457,Supper Club × NX Monorepos with Victor Savkin,2022-05-13 12:00:00.950,https://traffic.libsyn.com/syntax/Syntax_-_457.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Victor Savkin about NX Monorepo development.

## Whiskey Web and Whatnot  - Sponsor

[Whiskey Web and Whatnot](https://www.whiskeywebandwhatnot.fm) is different than your typical dev podcast. We show a lighter, more human side of developers you know and love, like a fireside chat with your favorite devs. Past guests include Tom Preston-Werner, Kent C. Dodds, Charlie Gerard, and of course Wes Bos! We have discussed everything from Next.js and TypeScript to Chuck’s past life as a blackjack dealer, Cincinnati Chili, the best casseroles, and of course whiskey!

Visit [whiskeywebandwhatnot.fm](https://www.whiskeywebandwhatnot.fm) or find them wherever you listen to podcasts.

## Strapi - Sponsor

Strapi enables developers to build projects faster by providing a customizable API out of the box and giving them the freedom to use their favorite tool as it has both REST and GraphQL endpoints. Strapi is extensible and frontend agnostic, built to cover all your content use cases. Give Strapi a try at [strapi.io/demo](https://strapi.io/demo), find your missing content workflow piece on our [marketplace](https://market.strapi.io),and learn more about Strapi and how it help you on our [Youtube channel](https://www.youtube.com/c/Strapi).

## Show Notes

* **[00:29](#t=00:29)** Welcome
* **[02:42](#t=02:42)** Guest introduction
* **[04:07](#t=04:07)** What tools did Google use?
* **[10:49](#t=10:49)** What do bigger companies use for version control?
* **[14:40](#t=14:40)** What is Nx?
* [Nx](https://nx.dev)
* **[21:02](#t=21:02)** How does Nx help you upgrade projects?
* **[27:42](#t=27:42)** Sponsor: Whiskey Web and Whatnot
* **[28:33](#t=28:33)** How does Nx fit into the existing tooling?
* **[37:27](#t=37:27)** Sponsor: Strapi
* **[39:02](#t=39:02)** Caching and skipping builds
* **[44:50](#t=44:50)** The problem with caching
* **[48:44](#t=48:44)** Is it used for images or video?
* **[51:40](#t=51:40)** Small projects can benefit as well
* **[53:13](#t=53:13)** Lightning questions
* [Happy Hacking KB](https://happyhackingkb.com)
* [IntelliJ](https://www.jetbrains.com/idea/)
* [LunarVim](https://www.lunarvim.org)
* [VS Code](https://code.visualstudio.com)
* **[02:23](#t=02:23)** Shameless Plugs

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5a47d9ec22a276b7671646dc8f9a9a8f99109bfaba6d9a29b411365203a8fdc9,supper-club-nx-monorepos-with-victor-savkin,/shows/457 - Supper club monorepos.md,2023-10-16 20:07:36.454,2023-10-27 15:58:05.870,SUPPER
syntax_podcast_show_00458,458,Why do we need Web Interop? Another Standards Body?,2022-05-16 12:00:00.762,https://traffic.libsyn.com/syntax/Syntax_-_458.mp3,"
In this Hasty Treat, Scott and Wes talk about why we need Web Interop? Yet another standards body? Our thoughts on Serverless, Edge Compute, and more.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[01:25](#t=01:25)** Sponsor: Sentry
* **[02:25](#t=02:25)** Sponsor: Sanity
* **[04:10](#t=04:10)** The Syntax Lift adventure
* **[06:04](#t=06:04)** A new Community Group for Web-interoperable JavaScript runtimes.
* **[07:07](#t=07:07)** JavaScript environments
* **[09:19](#t=09:19)** What's bun?
* [Bun](https://bun.sh)
* **[13:28](#t=13:28)** Are we excited about this?
* **[16:27](#t=16:27)** What's the future of this?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b7365391536019c79595e689ca837179c33c7afb875a185fdaa4693c2988b3a2,why-do-we-need-web-interop-another-standards-body,/shows/458 - Why do we need Web Interop.md,2023-10-16 20:07:48.824,2023-10-27 15:58:05.970,HASTY
syntax_podcast_show_00459,459,Potluck - Protestware × NoSQL × Next.js × ESM × Jest,2022-05-18 12:00:00.281,https://traffic.libsyn.com/syntax/Syntax_-_459.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about protestware, NoSQL, Next.js, the Syntax.fm website, ESM, Jest, and more!

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:30](#t=01:30)** What are the good reasons to use nextjs apart from personal preference?
* **[05:15](#t=05:15)** How did you decide to build Syntax.fm?
* [Uses.tech](https://uses.tech)
* **[09:09](#t=09:09)** Why does my M1 Mac feel slower than my Intel Mac?
* **[14:44](#t=14:44)** Do you alphabetize your larger javascript objects by key name?
* **[17:14](#t=17:14)** Sponsor: Prismic
* **[19:06](#t=19:06)** Why did you choose noSQL database over SQL databse?
* **[25:13](#t=25:13)** What does it mean to support ESM?
* **[30:23](#t=30:23)** Sponsor: LogRocket
* **[31:35](#t=31:35)** Are open source maintainers doing harm by inserting protestware into packages?
* [Protestware found lurking in popular npm package](https://checkmarx.com/blog/new-protestware-found-lurking-in-highly-popular-npm-package/)
* **[40:30](#t=40:30)** Should I write the game logic on the backend or on the frontend?
* **[46:30](#t=46:30)** Sponsor: Auth0
* **[48:20](#t=48:20)** Sick Picks

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Eons Mysteries of Time podcast](https://beta.prx.org/series/41240)
* Wes: [Mr Bio Multi cable](https://amzn.to/3N83pZz)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",eb975652be8bf4413092744d334f5d631c29ba7049d9080dfd13b5ad06fcfd74,potluck-protestware-nosql-next-js-esm-jest,/shows/459 - Potluck.md,2023-10-16 20:07:48.870,2023-10-27 15:58:06.032,TASTY
syntax_podcast_show_00460,460,Supper Club × Turborepo with Jared Palmer,2022-05-20 12:00:00.500,https://traffic.libsyn.com/syntax/Syntax_-_460.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Jared Palmer about Turborepo, how it fits in your tech stack, and what it was like being acquired by Vercel.

## Whiskey Web and Whatnot  - Sponsor

[Whiskey Web and Whatnot](https://www.whiskeywebandwhatnot.fm) is different than your typical dev podcast. We show a lighter, more human side of developers you know and love, like a fireside chat with your favorite devs. Past guests include Tom Preston-Werner, Kent C. Dodds, Charlie Gerard, and of course Wes Bos! We have discussed everything from Next.js and TypeScript to Chuck’s past life as a blackjack dealer, Cincinnati Chili, the best casseroles, and of course whiskey!

## Show Notes

* **[00:35](#t=00:35)** Welcome
* [Jared Palmer](https://twitter.com/jaredpalmer)
* **[02:15](#t=02:15)** What is Turborepo?
* [Turborepo](https://turborepo.org)
* [Vercel](https://vercel.com)
* [tsdx](https://tsdx.io)
* **[03:27](#t=03:27)** Where does Turborepo fit in your stack?
* **[06:04](#t=06:04)** What are Google, Meta, or Twitter doing?
* **[15:35](#t=15:35)** Sponsor: Whiskey, Web and Whatnot
* **[16:45](#t=16:45)** What's the cost of adding Turborepo to a project?
* **[21:19](#t=21:19)** Changing based on environmental variables
* **[23:18](#t=23:18)** Does this replace how you define your workplace?
* **[24:08](#t=24:08)** How do you share the cache?
* **[25:25](#t=25:25)** What don't you cache?
* **[27:35](#t=27:35)** What about Gatsby images?
* **[28:44](#t=28:44)** Can Turborepo help with re-running compiles?
* **[36:54](#t=36:54)** Supper Rapid Fire Questions
* [Oceanic Next](https://github.com/mhartington/oceanic-next)
* [GitHub Dark](https://github.com/StylishThemes/Github-Dark)
* [Kotlin](https://kotlinlang.org)
* **[52:47](#t=52:47)** Selling Turborepo to Vercel
* **[55:49](#t=55:49)** Shameless Plugs

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3dc34fd6631658ecf432cff7c18d90654a362ae2ab4abd74157eef2bccb27c32,supper-club-turborepo-with-jared-palmer,/shows/460 - Supper club turbo repo.md,2023-10-16 20:07:48.909,2023-10-27 15:58:06.082,SUPPER
syntax_podcast_show_00461,461,Scott’s New Office × The Levelup Lodge,2022-05-23 12:00:00.859,https://traffic.libsyn.com/syntax/Syntax_-_461.mp3,"
In this episode of Syntax, Scott talks about his new office setup where he records videos and podcasts, writes codes, and gets his steps in.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:15](#t=00:15)** Welcome
* **[01:24](#t=01:24)** Office ideas
* [Heat pumps on Technology Connections](https://www.youtube.com/watch?v=7J52mDjZzto)
* [Neewer lighting](https://neewer.com/collections/lighting-studio)
* **[05:00](#t=05:00)** Sponsor: Sanity
* **[06:10](#t=06:10)** Sponsor: Sentry
* **[07:37](#t=07:37)** Levelup Lodge tour
* **[09:40](#t=09:40)** Lighting
* **[13:57](#t=13:57)** The desk
* [Karlby Countertop](https://www.ikea.com/ca/en/p/karlby-countertop-walnut-veneer-50335208/)
* [Fully Jarvis legs](https://www.fully.com/jarvis-frame-only.html)
* [Desk Haus](https://desk.haus)
* **[19:32](#t=19:32)** Audio gear
* [M-Audio BX8](https://m-audio.com/products/view/bx8-d2)
* [Gik Acoustics](https://www.gikacoustics.com)
* [Nero](https://audient.com/products/monitor-controllers/nero/overview/)
* [Scarlett 2i2](https://focusrite.com/en/usb-audio-interface/scarlett/scarlett-2i2)
* [Caldigit TS3 Plus](https://www.caldigit.com/ts3-plus/)
* [Electrovoice RE20](https://products.electrovoice.com/na/en/re20/)
* [Cloudlifter cL1](https://www.cloudmicrophones.com/cloudlifter-cl-1)
* [DBX 286s](https://dbxpro.com/en/products/286s)
* [Sony Alpha 7 III](https://www.sony.ca/en/electronics/interchangeable-lens-cameras/ilce-7m3-body-kit)
* [Audeze LCD 1](https://www.audeze.com/products/lcd-1)
* **[25:25](#t=25:25)** Tech setup
* **[33:00](#t=33:00)** Misc items
* **[35:43](#t=35:43)** Movie posters
* [Shaw Brothers posters](https://www.redbubble.com/shop/shaw+brothers+posters)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3d397e0ffe86487bc446b6c8e5a88de1b940fb66daaf3b92eaab1dd5211e1f0f,scott-s-new-office-the-levelup-lodge,/shows/461 - Scotts office.md,2023-10-16 20:07:49.121,2023-10-27 15:58:06.206,HASTY
syntax_podcast_show_00462,462,TypeScript Tooling Explained,2022-05-25 12:00:00.476,https://traffic.libsyn.com/syntax/Syntax_-_462.mp3,"
In this episode of Syntax, Wes and Scott talk through TypeScript tooling, build tools, configs, and editors.

## LogRocket  - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## MagicBell - Sponsor

MagicBell is the The notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Freshbooks  - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:08](#t=00:08)** Welcome
* **[01:57](#t=01:57)** Tooling
* [tsc](https://www.typescriptlang.org/docs/handbook/compiler-options.html)
* [esbuild](https://esbuild.github.io)
* [swc](https://swc.rs)
* [bun](https://bun.sh)
* [Zig](https://ziglearn.org)
* **[13:45](#t=13:45)** LogRocket
* **[15:01](#t=15:01)** Server side or node-ish
* [Deno](https://deno.land)
* [ts-node](https://www.npmjs.com/package/ts-node)
* [wds](https://github.com/gadget-inc/wds)
* **[26:09](#t=26:09)** MagicBell
* **[27:42](#t=27:42)** Build tools
* [Vite](https://vitejs.dev)
* [Parcel](https://parceljs.org)
* [Nextjs](https://nextjs.org)
* [Svelte Kit](https://kit.svelte.dev)
* [Rome](https://rome.tools)
* **[33:25](#t=33:25)** Configs
* [tsconfig](https://www.typescriptlang.org/tsconfig#module)
* [typescript-eslint](https://typescript-eslint.io)
* **[39:08](#t=39:08)** Sponsor: Freshbooks
* **[40:00](#t=40:00)** Editors
* [VS Code](https://code.visualstudio.com)
* [Webstorm](https://www.jetbrains.com/webstorm/)
* **[44:58](#t=44:58)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Tonie](https://amzn.to/3Nzziuv)
* Wes: [Burst Toothbrush](https://www.burstoralcare.com/)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",6a2921a4f06e682538c06d88c5833ac9f8ce703fa68ca939421e45c49a338bef,typescript-tooling-explained,/shows/462 - TypeScript Tooling.md,2023-10-16 20:07:49.168,2023-10-27 15:58:06.257,TASTY
syntax_podcast_show_00463,463,Supper Club × RedwoodJS with Tom Preston-Werner,2022-05-27 12:00:00.899,https://traffic.libsyn.com/syntax/Syntax_-_463.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Tom Preston-Werner about his work on RedwoodJS, the importance of documentation, and the new Redwood Startup Fund.

## AIOSEO - Sponsor

Our Sponsor for today’s episode is a popular WordPress plugin, [AIOSEO](https://aioseo.com/), also known as All in One SEO for WordPress. It’s becoming one of the most powerful SEO toolkit and is now used by over 3 million websites to improve search rankings.

## Shipshape (Whiskey, Web and Whatnot) - Sponsor

[Whiskey Web and Whatnot](https://www.whiskeywebandwhatnot.fm) is different than your typical dev podcast. We show a lighter, more human side of developers you know and love, like a fireside chat with your favorite devs. Past guests include Tom Preston-Werner, Kent C. Dodds, Charlie Gerard, and of course Wes Bos! We have discussed everything from Next.js and TypeScript to Chuck’s past life as a blackjack dealer, Cincinnati Chili, the best casseroles, and of course whiskey!

## Show Notes

* **[00:34](#t=00:34)** Welcome
* **[01:36](#t=01:36)** Guest introduction
* [Tom Preston-Werner on Twitter](https://twitter.com/mojombo)
* [Kai’s Power Tools](https://en.wikipedia.org/wiki/Kai%27s_Power_Tools)
* **[04:23](#t=04:23)** Math is weird
* **[07:21](#t=07:21)** User interface design
* **[08:53](#t=08:53)** Sponsor: AIOSEO
* **[10:24](#t=10:24)** What is RedwoodJS?
* [RedwoodJS](https://redwoodjs.com)
* [Chatterbug](https://chatterbug.com)
* **[15:31](#t=15:31)** Is JavaScript the stack you should be using these days?
* **[18:40](#t=18:40)** Freedom vs decisions in software
* [Where Good Ideas Come From](https://www.amazon.ca/Where-Good-Ideas-Come-Innovation/dp/1594485380)
* **[23:10](#t=23:10)** RedwoodJS docs and video strategy
* [RedwoodJS Docs](https://redwoodjs.com/docs/introduction)
* [Readme Driven Development](https://tom.preston-werner.com/2010/08/23/readme-driven-development.html)
* **[29:13](#t=29:13)** The tech behind RedwoodJS
* [Apollo](https://www.apollographql.com)
* [Storybook](https://storybook.js.org)
* **[36:20](#t=36:20)** Sponsor: Shipshape (Whiskey, Web and Whatnot)
* **[36:58](#t=36:58)** Redwood Startup Fund
* [The Redwood Startup Fund](https://twitter.com/mojombo/status/1512113674315460608)
* **[42:28](#t=42:28)** Supper club questions
* [VS Code](https://code.visualstudio.com)
* [Netlify](https://www.netlify.com)
* [Hacker News](https://news.ycombinator.com)
* [RedwoodJS on Discord](https://discord.com/invite/redwoodjs)
* [RedwoodJS Discourse](https://community.redwoodjs.com)
* [RedwoodJS on Twitter](https://twitter.com/redwoodjs)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bb34c44043fc2ff5e7f666eb3bebdace21ec74720977c99eda9f2372d22f1106,supper-club-redwoodjs-with-tom-preston-werner,/shows/463 - Supper Club Tom.md,2023-10-16 20:07:49.203,2023-10-27 15:58:06.305,SUPPER
syntax_podcast_show_00464,464,Cache Control Headers Explained,2022-05-30 12:00:00.466,https://traffic.libsyn.com/syntax/Syntax_-_464.mp3,"
In this Hasty Treat, Scott and Wes answer a question about caching, cache control headers, an explanation of the fields for caching.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:11](#t=01:11)** Sponsor: Sentry
* **[02:28](#t=02:28)** Sponsor: LogRocket
* **[03:08](#t=03:08)** My struggle has been with caching, cache control headers and would love a better explanation on some of the fields?
* [Time to live calculator](https://svelte.dev/repl/a779692677d44146b9118e0008cbb4d0?version=3.48.0)
* [Reminx Conf](https://remix.run/conf)
* [Opera](http://opera.com/)
* **[04:48](#t=04:48)** What is a header?
* **[06:05](#t=06:05)** What is caching?
* **[08:21](#t=08:21)** Time to live (TTL)
* **[09:08](#t=09:08)** Benefits of a cache
* **[10:03](#t=10:03)** Specifying how long to cache
* **[11:06](#t=11:06)** max-age
* **[12:45](#t=12:45)** stale-while-revalidate
* **[16:17](#t=16:17)** stale-if-error
* **[16:54](#t=16:54)** must-revalidate
* **[17:21](#t=17:21)** private
* **[18:03](#t=18:03)** immutable
* **[19:29](#t=19:29)** no-transform
* **[20:45](#t=20:45)** Cache Control Request Directives
* [The United States of Insanity - Official Trailer](https://www.youtube.com/watch?v=NBEK4NLcbrY)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",8b18ab3b809f1389333d21b191d476c4e9b537508e6cd1696078429f7ea2a29c,cache-control-headers-explained,/shows/464 - Cache Control Headers Explained.md,2023-10-16 20:07:49.311,2023-10-27 15:58:06.418,HASTY
syntax_podcast_show_00465,465,Git in VS Code,2022-06-01 12:00:00.314,https://traffic.libsyn.com/syntax/Syntax_-_465.mp3,"
In this episode of Syntax, Wes and Scott talk all about how they use Git inside of VS Code, extensions they use, and the various ways to interact with Git in VS Code.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## SPONSOR - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## SPONSOR - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:21](#t=00:21)** Recording Syntax in Riverside
* [Riverside](http://www.riverside.fm/?via=ichris)
* **[01:22](#t=01:22)** Welcome
* **[04:57](#t=04:57)** CLI vs VS Code
* [VS Code](https://code.visualstudio.com)
* **[07:27](#t=07:27)** Git Jargon
* **[11:50](#t=11:50)** UI tools we've used
* [Git Tower](https://www.git-tower.com/mac)
* [Git Kraken](https://www.gitkraken.com/)
* [GitHub for Desktop](https://desktop.github.com/)
* [iTerm](https://iterm2.com)
* [Warp](https://www.warp.dev)
* [Git SCM](https://git-scm.com)
* **[14:09](#t=14:09)** Ways to interact with Git in VS Code
* **[19:41](#t=19:41)** Source control tab
* **[26:28](#t=26:28)** Sponsor: Linode
* **[27:47](#t=27:47)** File History
* **[30:29](#t=30:29)** Diffing or Compare
* **[36:24](#t=36:24)** Conflict resolution
* **[42:56](#t=42:56)** Automation with post-commit commands
* **[46:10](#t=46:10)** Sponsor: LogRocket
* **[47:14](#t=47:14)** Extensions
* [GitLens](https://www.gitkraken.com/gitlens)
* [Git History](https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory)
* [Git Graph](https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph)
* [Conventional Commits](https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits)
* **[53:59](#t=53:59)** Git config tip
* **[55:24](#t=55:24)** Sponsor: Freshbooks
* **[56:02](#t=56:02)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Espanso](https://espanso.org)
* Wes: [AirPod cleaning kit](https://www.aliexpress.com/item/1005004058904979.html?spm=a2g0o.order_list.0.0.59c61802UtTwRO)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",486703075dd5aea130108627ff8f3942a5d0f11f08e46f59c0669d2a63b6ed5f,git-in-vs-code,/shows/465 - git in vscode.md,2023-10-16 20:07:49.351,2023-10-27 15:58:06.471,TASTY
syntax_podcast_show_00466,466,Supper Club × Coding Burnout and Gardening with Anselm Hannemann,2022-06-03 12:00:00.537,https://traffic.libsyn.com/syntax/Syntax_-_466.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Anselm Hannemann about burning out, trying out gardening, and how getting away from the screen can help restore your creative energy.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Strapi - Sponsor

Strapi enables developers to build projects faster by providing a customizable API out of the box and giving them the freedom to use their favorite tool as it has both REST and GraphQL endpoints. Strapi is extensible and frontend agnostic, built to cover all your content use cases. Give Strapi a try at [Strapi.io/demo](https://strapi.io/demo), find your missing content workflow piece [on our marketplace](https://market.strapi.io), and learn more about Strapi and how it help you [on our Youtube](https://www.youtube.com/c/Strapi).

## SeedProd - Sponsor

Our Sponsor for today’s episode is a popular WordPress plugin, [SeedProd](https://www.seedprod.com/), a fast growing drag & drop WordPress website builder that helps you create custom WordPress themes & page layouts without any code. Over 1 million websites are using SeedProd to build WordPress sites faster.

You can start with one of their hundreds of pre-made website templates to save time or use the blank canvas to build a no-code website. It has built-in email marketing integrations, dynamic personalization, and many other powerful features to help you build a fast WordPress website without writing code.

[Try SeedProd Pro today and get 50% off](https://www.seedprod.com/syntax/) or start with [their free version](https://wordpress.org/plugins/coming-soon/) by downloading it from the WordPress plugin directory.

## Show Notes

* **[00:39](#t=00:39)** Welcome
* **[01:58](#t=01:58)** Guest introduction
* [HelloAnselm.com](https://helloanselm.com)
* [Anselm on Twitter](https://twitter.com/helloanselm)
* [Web Development Reading List Newsletter](https://wdrl.info)
* **[10:04](#t=10:04)** Doing things yourself as a form of therapy
* **[14:33](#t=14:33)** Sponsor: Hasura
* **[16:34](#t=16:34)** Rules for digital usage?
* **[19:25](#t=19:25)** How do you learn you're burned out?
* **[26:30](#t=26:30)** Sponsor: Strapi
* **[28:10](#t=28:10)** Gardening
* [Gardening site](https://schaufelundgabel.de)
* [Garden on Instagram](https://www.instagram.com/schaufelgabel/)
* [The Post Apocalyptic Inventor](https://www.youtube.com/c/ThePostApocalypticInventor)
* **[29:46](#t=29:46)** What do you feed your plants?
* **[34:09](#t=34:09)** Irrigation issues
* **[35:52](#t=35:52)** Sponsor: SeedProd
* **[38:03](#t=38:03)** Dealing with weeds
* **[40:54](#t=40:54)** What about chickens?
* **[44:20](#t=44:20)** Farming as a business
* **[45:39](#t=45:39)** Incorporating tech into the gardening
* **[54:06](#t=54:06)** Supper Club Questions
* [Today I Learned Stefan Judis](https://www.stefanjudis.com/today-i-learned/)
* [Web Design Weekly](https://web-design-weekly.com)
* **[59:09](#t=59:09)** ××× SIIIIICK ××× PIIIICKS ×××

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0979b2599cca64579a5f834382792400c3d1ac681d2ebed4bf512ea7099c12a0,supper-club-coding-burnout-and-gardening-with-anselm-hannemann,/shows/466 - Supper club.md,2023-10-16 20:07:49.398,2023-10-27 15:58:06.534,SUPPER
syntax_podcast_show_00467,467,Stopping Malicious Actors,2022-06-06 12:00:00.049,https://traffic.libsyn.com/syntax/Syntax_-_467.mp3,"
In this Hasty Treat, Scott and Wes talk about ways to prevent malicious people from using or abusing your app.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:04](#t=01:04)** Sponsor: Linode
* **[02:06](#t=02:06)** Sponsor: Sentry
* **[02:59](#t=02:59)** What kind of bad things can happen to your application?
* **[06:24](#t=06:24)** How do you stop bad actors?
* **[12:20](#t=12:20)** Nonce tokens
* **[14:10](#t=14:10)** CSRF
* [CSRF Explained](https://syntax.fm/show/363/hasty-treat-csrf-explained)
* **[14:50](#t=14:50)** Captcha
* [hCaptcha](https://www.hcaptcha.com)
* **[17:06](#t=17:06)** DDOS
* [Cloudlfare DDOS](https://www.cloudflare.com/en-ca/ddos/)
* **[17:38](#t=17:38)** Ban known bad ASNS

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d4a56d805ff9cd02fe9811e2a4f5ea671ec370a4aa3ace69c1763da0999d4605,stopping-malicious-actors,/shows/467 - Stopping Malicious Actors.md,2023-10-16 20:07:49.527,2023-10-27 15:58:06.671,HASTY
syntax_podcast_show_00468,468,Syntax Live at Reactathon,2022-06-08 12:00:00.857,https://traffic.libsyn.com/syntax/Syntax_-_468.mp3,"
In this episode of Syntax, Wes and Scott are live from Reactathon 2022!

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Payments Hub - Sponsor

There are hundreds of payments processing companies out there. Hit up [developer.paymentshub.com/syntax](https://developer.paymentshub.com/syntax) to learn more about how Payments Hub Developers not only processes ecommerce and in-person payments, but also boards and underwrites your merchants in as little as 90 minutes. We are currently offering Syntax listeners who become new partners 6 months free data through our Business Reporting API!

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* [Live video version](https://www.youtube.com/watch?v=PXO0iopa5QI)

* **[00:32](#t=00:32)** Welcome
* **[04:10](#t=04:10)** Hot Take Tweets
* [What is your JavaScript Hot Take or unpopular opinion?](https://twitter.com/wesbos/status/1520074336463429637?s=21&t=mO9-2O0DO5fZ-uycIIbIcg)
* **[05:42](#t=05:42)** Semi colons are not optional
* **[06:11](#t=06:11)** For loops are not needed
* **[07:19](#t=07:19)** People forget about ES Harmony
* **[08:11](#t=08:11)** Sponsor: Sentry
* **[09:23](#t=09:23)** A good website should function without JavaScript
* **[10:28](#t=10:28)** Classes were a mistake
* **[10:54](#t=10:54)** Stay as close to the platform primatives
* **[11:36](#t=11:36)** TypeScript is overrated and overhyped
* **[11:50](#t=11:50)** Kickin it old school
* [PNG Fix](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/7eaa615a-4f84-4f56-9183-552cac4a5609/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220606%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220606T214149Z&X-Amz-Expires=86400&X-Amz-Signature=2fa8be31a737a4a682db588382392c610b9ebb0b55036c977ffb6ae7a97d6356&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)
* [MM Swap image](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e87aa8f9-0a24-4fa5-ad56-346e58e9c079/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220606%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220606T214119Z&X-Amz-Expires=86400&X-Amz-Signature=00eeacc735b72e354c23e37fdb69f011a9dc6160906bf9b83ab2c279c8d47801&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)
* [Rounded Corner images (sliding Doors)](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/746c04de-b14d-445c-9d4d-0897989affa0/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220606%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220606T214210Z&X-Amz-Expires=86400&X-Amz-Signature=c221f4fbc1606ca395f6110a29908d0327d00a19ef917db6d4eea5d76d6c1ffa&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22&x-id=GetObject)
* `var that = this;`
* [IE CSS Hack](https://stackoverflow.com/questions/20541306/how-to-write-a-css-hack-for-ie-11)
* Test for Opera `var test = /^function \(/.test([].sort);`
* **[25:09](#t=25:09)** Sponsor: Payments Hub
* **[26:29](#t=26:29)** Syntax Error
* [Mercurius Library](https://pypi.org/project/mercurius-core-library/)
* **[31:19](#t=31:19)** JS or NAY-S
* **[39:02](#t=39:02)** Sponsor: Freshbooks
* **[39:23](#t=39:23)** Q&A
* [Syntax episode with Josh Wardle](https://syntax.fm/show/430/creator-of-wordle-josh-wardle)
* **[39:57](#t=39:57)** Using Array methods or for loops
* **[41:12](#t=41:12)** What web tech is overhyped and what's under hyped?
* **[43:01](#t=43:01)** Would you rather use Dvorak or Mac butterfly keyboard?
* **[43:41](#t=43:41)** Name all provinces and territories in Canada
* **[44:39](#t=44:39)** Fav Syntax.fm episode
* **[45:38](#t=45:38)** How did Wes and Josh meet?
* **[46:52](#t=46:52)** What's your favorite Trader Joes snack?
* **[47:29](#t=47:29)** Would you hire a European or American developer?
* **[49:04](#t=49:04)** How would you validate a product idea for Saas business?
* **[49:48](#t=49:48)** What podcasts do you listen to?
* [Steve O Podcast](https://www.steveo.com/pages/podcast)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4233108fdc5692f6adc8d62cd6b138792aece581d8d80a9406efeed108f8522f,syntax-live-at-reactathon,/shows/468 - Syntax Live at Reactathon.md,2023-10-16 20:07:49.560,2023-10-27 15:58:06.734,TASTY
syntax_podcast_show_00469,469,Supper Club × Is No Code going to take our jobs? with Connor Finlayson,2022-06-10 12:00:00.056,https://traffic.libsyn.com/syntax/Syntax_-_469.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Connor Finlayson about his experience building and teaching no code projects.

## Postlight Podcast - Sponsor

Postlight is a strategy, design, and engineering firm that builds platforms for some of the biggest organizations in the world. The Postlight Podcast is hosted by senior leaders Rich Ziade, Paul Ford, Gina Trapani, and Chris LoSacco.

If you’re looking for answers to tough leadership questions, the Postlight Podcast has you covered.

Listen to new episodes every Tuesday, wherever you get your podcasts.

## SeedProd - Sponsor

Our Sponsor for today’s episode is a popular WordPress plugin, [SeedProd](https://www.seedprod.com/), a fast growing drag & drop WordPress website builder that helps you create custom WordPress themes & page layouts without any code. Over 1 million websites are using SeedProd to build WordPress sites faster.

You can start with one of their hundreds of pre-made website templates to save time or use the blank canvas to build a no-code website. It has built-in email marketing integrations, dynamic personalization, and many other powerful features to help you build a fast WordPress website without writing code.

[Try SeedProd Pro today and get 50% off](https://www.seedprod.com/syntax/) or start with [their free version](https://wordpress.org/plugins/coming-soon/) by downloading it from the WordPress plugin directory.

## Strapi - Sponsor

Strapi enables developers to build projects faster by providing a customizable API out of the box and giving them the freedom to use their favorite tool as it has both REST and GraphQL endpoints. Strapi is extensible and frontend agnostic, built to cover all your content use cases. Give Strapi a try at [Strapi.io/demo](https://strapi.io/demo), find your missing content workflow piece [on our marketplace](https://market.strapi.io), and learn more about Strapi and how it help you [on our Youtube](https://www.youtube.com/c/Strapi).

## Show Notes

* **[00:38](#t=00:38)** Welcome to Syntax
* **[01:54](#t=01:54)** Guest introduction
* [Unicorn Factory](https://www.unicornfactory.ca)
* [ConnorFinlayson.com](https://www.connorfinlayson.com)
* [Connor’s YouTube channel](https://www.youtube.com/c/ConnorFinlayson)
* **[04:49](#t=04:49)** What is no code?
* **[10:57](#t=10:57)** Is no code going to replace programmers?
* **[14:57](#t=14:57)** Sponsor: Postlight Podcast
* **[15:59](#t=15:59)** What are your favorite tools for no code?
* [Zapier](https://zapier.com)
* [Webflow](https://webflow.com)
* [Make.com](https://www.make.com/en)
* [Airtable](https://airtable.com)
* [Memberstack](https://www.memberstack.com)
* [Jetboost](https://www.jetboost.io)
* [Bubble](https://bubble.io)
* **[19:23](#t=19:23)** When do you need to use real JavaScript?
* **[23:23](#t=23:23)** Where do you find information about no code?
* **[25:26](#t=25:26)** Sponsor: SeedProd
* **[39:25](#t=39:25)** How do you handle version control?
* **[43:26](#t=43:26)** Are there native apps in no code land?
* [Notion](https://www.notion.so)
* [Editor X](https://www.editorx.com)
* **[46:16](#t=46:16)** What is AirTable?
* **[49:36](#t=49:36)** Cost of no code tools
* **[52:45](#t=52:45)** Sponsor: Strapi
* **[53:45](#t=53:45)** Supperclub Questions
* **[06:42](#t=06:42)** Shameless Plugs
* [CodeMeetsNoCode](https://www.codemeetsnocode.com/?ref=connorfinlayson)
* **[09:49](#t=09:49)** Sick Picks
* [Flowbase](https://www.flowbase.co)
* [Relume](https://library.relume.io)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",95097d2b86bf449d4dbe159876e96cd3dc9eb22cc5bb80b38a644702fc03c19d,supper-club-is-no-code-going-to-take-our-jobs-with-connor-finlayson,/shows/469 - Supper club No Code Connor Finlayson.md,2023-10-16 20:07:49.600,2023-10-27 15:58:06.784,SUPPER
syntax_podcast_show_00470,470,I can has() new CSS Selector?!,2022-06-13 12:00:00.726,https://traffic.libsyn.com/syntax/Syntax_-_470.mp3,"
In this Hasty Treat, Scott and Wes talk about new CSS selectors :has, :where, and :is.

## MagicBell - Sponsor

MagicBell is the the notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - [use the coupon code SYNTAXFM for 10% off the first 12 months](https://www.magicbell.com).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:19](#t=01:19)** Sponsor: MagicBell
* **[02:31](#t=02:31)** Sponsor: LogRocket
* **[03:40](#t=03:40)** Don't say stupid
* **[05:03](#t=05:03)** :Has
* [MDN :Has](https://developer.mozilla.org/en-US/docs/Web/CSS/:has)

```
// Finds all p tags that have an anchor tag as a child
p:has(a) {}
// Can find children of parent as well
// Finds the button of a paragraph that contains an a tag 
p:has(a) button {}
// Finds all p tags that don't have an anchor tag as a child
p:not(:has(a)) {}
// Finds all p tags where a is a direct sibling
p:has(> a) {}
// would find <p><a>Hi</a></p>
// would not find <p><span><a>hi</a></span></p>
```

* **[06:13](#t=06:13)** Jargon check
* **[11:01](#t=11:01)** Some examples
* **[13:25](#t=13:25)** Nest navigations
* **[13:51](#t=13:51)** Can I use it?
* **[15:52](#t=15:52)** Is and Where
* [MDN :where](https://developer.mozilla.org/en-US/docs/Web/CSS/:where)

In the past we would write

```
header p:hover,
main p:hover,
footer p:hover {
  color: red;
  cursor: pointer;
}
```

:where is essentially a short had for making this easier considering the 2nd half of these selectors is the same. Will make your css dryer

```
:where(header, main, footer) p:hover {}
```

Also super handy in avoiding css blocks being ignored for unsupported features.

```
// Doesn't work
div:has(p), div:some_new_selector(p)

// Will still work for :has if has is supported
:where(div:has(p), div:some_new_selector(p))
```

* [When to use :Where](https://developer.mozilla.org/en-US/docs/Web/CSS/:where#examples)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",84514d6b82bcb24cedff4a7055b9e832175af74b47504cf4aaa3db8ea41609e4,i-can-has-new-css-selector,/shows/470 - New CSS.md,2023-10-16 20:07:49.776,2023-10-27 15:58:06.930,HASTY
syntax_podcast_show_00471,471,"Potluck - Headless WordPress, Databases, Regex",2022-06-15 12:00:00.175,https://traffic.libsyn.com/syntax/Syntax_-_471_.mp3,"
In this episode of Syntax, Wes and Scott answer your questions about headless WordPress, Regex, their health and fitness, CSS custom properties in media queries, and more.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## .TECH Domains - Sponsor

.TECH is taking the tech industry by storm. A domain that shows the world what you are all about! If you're looking for a domain name for your startup, portfolio, or your own project like we did with uses.tech, check out .tech Domains. Syntax listeners can snap their .TECH Domains at 80% off on five-year registration by visiting [go.tech/syntaxistech](https://go.tech/syntaxistech) and using the coupon code ""syntax5"".

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[03:30](#t=03:30)** If I host a NextJS app on Digital Ocean, should I use a Digital Ocean database?
* **[09:14](#t=09:14)** Will either of you ever do a regex course?
* [Regex101](https://regex101.com/)
* **[13:58](#t=13:58)** Is it possible to use the WordPress users database as the same database that the app uses?
* [WPGraphQL](https://www.wpgraphql.com)
* **[18:46](#t=18:46)** Sponsor: Sentry
* **[19:43](#t=19:43)** How is health and fitness going for the both of you?
* **[26:08](#t=26:08)** Does Wes know who Gendo Ikari is?
* **[27:36](#t=27:36)** Dart popularity follow up
* **[29:40](#t=29:40)** Is it vital that I should learn another programming language?
* **[33:42](#t=33:42)** Sponsor: Sanity
* **[34:54](#t=34:54)** If I'm trying to get my first job in web development, do I need to be familiar with design software?
* [Figma](https://www.figma.com)
* **[40:01](#t=40:01)** Thank you for the confidence to apply for a web dev job
* [Syntax 463 with Tom Preston-Werner](https://syntax.fm/show/463/supper-club-redwood-js-with-tom-preston-werner)
* **[41:55](#t=41:55)** What advice will you give in terms of setting up core important things around network, state management, folder structure?
* **[45:37](#t=45:37)** .TECH Domain Names
* **[46:22](#t=46:22)** I just had an interview with a ""major tech company"" and your article on using string templates was really helpful.
* [Template Strings](https://wesbos.com/template-strings-html)
* **[48:43](#t=48:43)** If 80% of the time ew need to use preventDefault on form submission, why don't the simply change the HTML spec?
* **[50:01](#t=50:01)** What's the rationale for not supporting CSS custom properties in media queries when using max/min width?
* [CSS Env](https://drafts.csswg.org/css-env-1/)
* [MDN CSS Env](https://developer.mozilla.org/en-US/docs/Web/CSS/env)
* **[55:37](#t=55:37)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: * [You Must Remember This Podcast](http://www.youmustrememberthispodcast.com)
* Wes: Tools

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5e0956497fa868fdb7e75d3226bd2576f933d5dbfc57ba27096d068589d9c905,potluck-headless-wordpress-databases-regex,/shows/471 - potluck.md,2023-10-16 20:07:49.811,2023-10-27 15:58:06.985,TASTY
syntax_podcast_show_00472,472,Supper Club × Edge Functions and Deno with Eduardo Bouças of Netlify,2022-06-17 12:00:00.259,https://traffic.libsyn.com/syntax/Syntax_-_472_v2.mp3,"
In this supper club episode of Syntax, Wes and Scott talk edge functions and Deno with Eduardo Bouças of Netlify.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Postlight Podcast - Sponsor

Postlight is a strategy, design, and engineering firm that builds platforms for some of the biggest organizations in the world. The Postlight Podcast is hosted by senior leaders Rich Ziade, Paul Ford, Gina Trapani, and Chris LoSacco.

If you’re looking for answers to tough leadership questions, the Postlight Podcast has you covered.

Listen to new episodes every Tuesday, wherever you get your podcasts.

## WP Mail SMTP - Sponsor

Did you know that many WordPress sites are not properly configured to send emails? With WP Mail SMTP, you can easily optimize your site to send emails, avoid the spam folder, and make sure your emails land in the inbox every time.

WP Mail SMTP comes with detailed email logs, email engagement tracking, visual email reports, weekly email summaries, integrations with popular email providers like SendLayer, Gmail, Outlook, and more!

[Try WP Mail SMTP Pro today and get 50%](https://wpmailsmtp.com/syntax/) off or start with [their free version](https://wordpress.org/plugins/wp-mail-smtp/) by downloading it from the WordPress plugin directory.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[02:31](#t=02:31)** Who is Eduardo?
* [EduardoBoucas.com](https://eduardoboucas.com)
* [@eduardoboucas](https://twitter.com/eduardoboucas)
* **[04:29](#t=04:29)** What is a serverless function?
* **[06:42](#t=06:42)** What is the edge and an edge function?
* [Edge Functions Explained](https://www.netlify.com/blog/edge-functions-explained/)
* [Deno](https://deno.land)
* **[08:41](#t=08:41)** Sponsor: Hasura
* **[09:18](#t=09:18)** The internet is global, and server locations matter
* **[17:09](#t=17:09)** Chaining multiple edge functions
* **[20:18](#t=20:18)** Sponsor: WP Mail SMTP
* **[21:18](#t=21:18)** Why use Deno?
* **[25:06](#t=25:06)** What are the limitations of using Deno?
* **[28:12](#t=28:12)** Why not run NodeJS servers on the edge?
* **[30:02](#t=30:02)** Do you see a future where people are writing packages that work anywhere?
* **[32:00](#t=32:00)** Sponsor: Postlight Podcast
* **[32:53](#t=32:53)** What about databases and serverless functions?
* [Planetscale](https://planetscale.com)
* **[38:14](#t=38:14)** What language does Netlify use to write apps in?
* [Netlify Edge Handlers](https://www.netlify.com/blog/2020/10/06/announcing-netlify-edge-handlers-now-in-early-access/)
* **[44:08](#t=44:08)** Supper Club questions
* [Warp](https://www.warp.dev)
* [S Town Podcast](https://stownpodcast.org)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",68cd0d409293287d02adc25b2b4df918bec9de3f2198032f5a3f8c6dd85c9142,supper-club-edge-functions-and-deno-with-eduardo-boucas-of-netlify,/shows/472 - supper club.md,2023-10-16 20:07:49.863,2023-10-27 15:58:07.052,SUPPER
syntax_podcast_show_00473,473,New Viewport Units,2022-06-20 12:00:00.782,https://traffic.libsyn.com/syntax/Syntax_-_473.mp3,"
In this episode of Syntax, Wes and Scott talk about the new viewport units coming to the web - what are they and when can we use them?

## LogRocket  - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sanity.io - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:14](#t=01:14)** Sponsor: LogRocket
* **[02:24](#t=02:24)** Sponsor: Sanity
* **[04:19](#t=04:19)** What are viewport units?
* [The Large and small and dynamic viewports](https://www.bram.us/2021/07/08/the-large-small-and-dynamic-viewports/)
* **[05:22](#t=05:22)** What are the new viewport units?
* [Large small and dyanmic viewports](https://css-tricks.com/the-large-small-and-dynamic-viewports/)
* **[07:57](#t=07:57)** What's small and large?
* **[11:52](#t=11:52)** How do viewport units help developers?
* **[12:39](#t=12:39)** What about the keyboard on mobile?
* [Keycode.info](https://keycode.info)
* **[16:37](#t=16:37)** When can we start using new viewport units?

## Tweet us your tasty treats!

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cbfb3df3a2a4f329fba772f3bed7fc5b269c68a161e691825a970f486b0924da,new-viewport-units,/shows/473 - New Viewport Units.md,2023-10-16 20:07:50.015,2023-10-27 15:58:07.195,HASTY
syntax_podcast_show_00474,474,Home Automation - A Look Ahead,2022-06-22 12:00:00.696,https://traffic.libsyn.com/syntax/Syntax_-_474.mp3,"
In this Tasty Treat, Scott and Wes talk about the current state of home automation, and the kinds of software and hardware they're using in their homes to automate their lives.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:11](#t=00:11)** Welcome
* [Syntax Ep181 Automating Stuff](https://syntax.fm/show/181/hasty-treat-automating-stuff)
* **[02:18](#t=02:18)** Protocols
* **[07:35](#t=07:35)** Software
* [Homebridge](https://homebridge.io)
* [Hoobs](https://hoobs.com)
* [Home Assistant](https://www.home-assistant.io)
* **[11:28](#t=11:28)** Using Homebridge
* **[16:51](#t=16:51)** Home Assistant vs Homebridge
* **[24:35](#t=24:35)** Home Assistant automations
* **[27:26](#t=27:26)** Wyze cams
* **[33:13](#t=33:13)** Sponsor: Sentry
* **[34:31](#t=34:31)** Hardware
* [Philips Hue](https://www.philips-hue.com/)
* [Leviton](https://store.leviton.com)
* [Synology](https://www.synology.com/)
* [Node-RED](https://nodered.org)
* [Docker Wyze Bridge](https://github.com/mrlt8/docker-wyze-bridge)
* [U-Tec](https://www.u-tec.com)
* **[38:00](#t=38:00)** Bulbs
* **[40:24](#t=40:24)** Buttons
* [Lutron Aurora Smart Bulb Dimmer Switch](https://amzn.to/3HDQSvm)
* [Flic Button](https://flic.io)
* **[42:53](#t=42:53)** IR Blasters
* **[45:57](#t=45:57)** Sensors
* **[47:56](#t=47:56)** Motion sensors
* **[52:05](#t=52:05)** Sponsor: Auth0
* **[53:28](#t=53:28)** Switched switches
* **[57:36](#t=57:36)** Sprinklers
* **[58:54](#t=58:54)** NFC
* [/r/Homeassistant](https://www.reddit.com/r/homeassistant/)
* [Shelly](https://shelly.cloud)
* **[01:04:03](#t=01:04:03)** Sponsor: Freshbooks
* **[01:05:01](#t=01:05:01)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Severence on Apple TV+](https://tv.apple.com/ca/show/severance/umc.cmc.1srk2goyh2q2zdxcx605w8vtx)
* Wes: [INKZALL](https://www.milwaukeetool.com/Products/Power-Utility/48-22-3100)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Beginner JavaScript](https://wesbos.com/beginner-javascript)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",22bbbcdfd6f76b943b622ca9c992e2d3e1d05bbd83c83ee927f2f5e4ac9682e9,home-automation-a-look-ahead,/shows/474 - home automation.md,2023-10-16 20:07:50.054,2023-10-27 15:58:07.244,TASTY
syntax_podcast_show_00475,475,Supper Club × Authoring Browser Extensions with Tim Leland,2022-06-24 12:00:00.131,https://traffic.libsyn.com/syntax/Syntax_-_475.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Tim Leland - developer of browser extensions like WeatherExtension and Link Shortener Extension.

## Postlight Podcast - Sponsor

Postlight is a strategy, design, and engineering firm that builds platforms for some of the biggest organizations in the world. The Postlight Podcast is hosted by senior leaders Rich Ziade, Paul Ford, Gina Trapani, and Chris LoSacco.

If you’re looking for answers to tough leadership questions, the Postlight Podcast has you covered.

Listen to new episodes every Tuesday, wherever you get your podcasts.

## SendLayer - Sponsor

SendLayer is a fast growing email delivery platform that lets you easily connect your website or app to send emails with API and SMTP for maximum deliverability, reliability, and scalability.

SendLayer comes with incredible email deliverability, detailed email logs, email engagement tracking, spam filter protection, event-based webhooks, mailing list management, and email relaying through SMTP or API.

When your business and customers rely on email communications, you need to be certain that those emails will be delivered. [Try SendLayer for free today](https://sendlayer.com/syntax/) to send your emails with confidence.

## Show Notes

* **[00:33](#t=00:33)** Welcome
* **[02:21](#t=02:21)** Guest introduction
* [@timleland](https://twitter.com/timleland)
* [TimLeland.com](https://timleland.com)
* [WeatherExtension](https://weatherextension.com)
* [Link Shortener Extension](https://timleland.com/link-shortener-extension/)
* **[03:40](#t=03:40)** Why develop browser extensions?
* **[07:58](#t=07:58)** How did you market your extensions?
* **[09:43](#t=09:43)** Where is a Chrome extension running?
* [Caddy](https://caddyserver.com)
* **[14:29](#t=14:29)** What's your URL shortener extension?
* **[18:50](#t=18:50)** OneLink service
* **[20:30](#t=20:30)** SSL Domains
* **[21:35](#t=21:35)** Sponsor: The Postlight Podcast
* **[23:00](#t=23:00)** Maliciousness with URL shorteners
* **[28:26](#t=28:26)** How do you come up with ideas?
* **[30:03](#t=30:03)** Running Chrome extensions as Firefox extensions
* **[34:03](#t=34:03)** Does blogging still work?
* **[36:38](#t=36:38)** Sponsor: Sendlayer
* **[37:53](#t=37:53)** Supper club questions
* [Tim Leland /uses/](https://timleland.com/uses/)
* **[45:12](#t=45:12)** ××× SIIIIICK ××× PIIIICKS ×××
* [Tchibo Coffee machine](https://shoptchibo.com/pages/machines)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0216cdd12fdfbdac765067692ebb19b5bdddd619656f610248e77f104e6c35c3,supper-club-authoring-browser-extensions-with-tim-leland,/shows/475 - supperclub Tim Leland.md,2023-10-16 20:07:50.092,2023-10-27 15:58:07.297,SUPPER
syntax_podcast_show_00476,476,Browser CSS Page Transitions API aka Shared Element Transitions,2022-06-27 12:00:00.110,https://traffic.libsyn.com/secure/syntax/Syntax_-_476.mp3,"
In this Hasty Treat, Scott and Wes talk about the new Browser CSS Page Transitions API proposal and what features it opens up for developers on the web.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* WICG [Shared Element Transitions](https://github.com/WICG/shared-element-transitions/)

* **[00:21](#t=00:21)** Welcome
* **[01:33](#t=01:33)** Sponsor: Prismic
* **[02:43](#t=02:43)** Sponsor: LogRocket
* **[04:18](#t=04:18)** Browser animations on the web vs native apps
* **[06:15](#t=06:15)** What is the targeted use case for it?
* **[06:56](#t=06:56)** Shared Element to Root Transitions
* **[11:14](#t=11:14)** Entry and Exit
* **[17:33](#t=17:33)** How to enable this in Chrome
* [Example Code](https://github.com/WICG/shared-element-transitions/tree/main/sample-code)
* [Shared Element Transition history](https://css-tricks.com/shared-element-transitions/#aa-weird-history)
* [Sarah Drasner’s demo](https://twitter.com/sarah_edo/status/988414671232339970)

```
async function doTransition() {
  let transition = document.createDocumentTransition();
  
  // Specify offered elements. The tag below is used to refer
  // to the generated pseudo elemends in script/CSS.
  document.querySelector("".old-message"").style.pageTransitionTag = ""message"";
  
  // The start() call triggers an async operation to capture
  // snapshots for the offered elements,
  await transition.start(async () => {
    // This callback is invoked by the browser when the capture
    // finishes and the DOM can be switched to the new state.
    // No frames are rendered until this callback returns.
    
    // Asynchronously load the new page.
    await coolFramework.changeTheDOMToPageB();
    
    // Clear the old message if that element is still in the page
    document.querySelector("".old-message"").style.pageTransitionTag = """";
    // Set new message as the shared element 'message'
    document.querySelector("".new-message"").style.pageTransitionTag = ""message"";
    
    // Set up animations using WA-API on the next frame.
    requestAnimationFrame(() => {
      document.documentElement.animate(keyframes, {
      ...animationOptions,
      pseudoElement: ""::page-transition-container(message)"",
      });
    });
    
    // Note that when this callback finishes, the animations will start with the tagged elements.
  });
}
```

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ed0df4217f961e418554ef017cc9be3385fdd8c9668387f278b88191bb2487cb,browser-css-page-transitions-api-aka-shared-element-transitions,/shows/476 - Hasty browser.md,2023-10-16 20:07:50.200,2023-10-27 15:58:07.400,HASTY
syntax_podcast_show_00477,477,Tips for Communicating,2022-06-29 12:00:00.336,https://traffic.libsyn.com/syntax/Syntax_-_477.mp3,"
In this episode of Syntax, Wes and Scott talk about their tips for better communication in email, Zoom calls, code reviews, or asking for help.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:39](#t=01:39)** Furnace wiring fun
* [Ecobee](https://www.ecobee.com/)
* [Tweet asking for communication tips](https://twitter.com/wesbos/status/1536358748855336960?s=21&t=QK1Xs4rTgWPyblLzeOw5-g)
* **[05:37](#t=05:37)** Email communication
* [SavvyCal](https://savvycal.com)
* [Calendly](https://calendly.com)
* **[15:07](#t=15:07)** Recognizing a big ask
* [Simeon Griggs - How to ask for things](https://www.simeongriggs.dev/how-to-ask-for-things)
* **[24:01](#t=24:01)** Sponsor: Sentry
* **[25:52](#t=25:52)** Code review communication
* **[30:39](#t=30:39)** Sponsor: Sanity
* **[32:22](#t=32:22)** Sharing information with a video
* **[35:42](#t=35:42)** In person or one on ones
* **[39:36](#t=39:36)** Video calls
* [Storyboard.fm](https://new.trystoryboard.com)
* **[40:54](#t=40:54)** Realize it's ok to stop talking
* **[42:27](#t=42:27)** Sponsor: Auth0
* **[44:13](#t=44:13)** Tips from Twitter
* **[53:08](#t=53:08)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Drachinifel](https://www.youtube.com/c/Drachinifel)
* Wes: [Lepy LP-2020A Hi-Fi Stereo Audio](https://amzn.to/3mHaF3q)

## Shameless Plugs

* Scott: [LevelUp Tutorials on YouTube](https://www.youtube.com/channel/UCyU5wkjgQYGRB0hIHMwm2Sg)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3c8cdba5246cddbd87f44889a53abe7e64842109578621ace7bbe4e6257ab220,tips-for-communicating,/shows/477 - Communication.md,2023-10-16 20:07:50.234,2023-10-27 15:58:07.452,TASTY
syntax_podcast_show_00478,478,Supper Club × Developer Experience with Shawn Wang,2022-07-01 12:00:00.529,https://traffic.libsyn.com/syntax/Syntax_-_478.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Shawn Wang about his thoughts on developer experience, why DX is important, and the importance of learning in public.

## Hasura - Sponsor

Hasura gives you instant GraphQL API on all your data sources to help you build modern apps faster. With built-in support for authorization and federation, Hasura makes it easy to declaratively configure permission rules and join data across multiple sources without writing any extra code. [Try out Hasura](https://hasura.io/?utm_campaign=syntaxfm-2022&utm_campaign-type=podcast&utm_medium=social) for free in 30 seconds. Hasura also features the most extensive list of open-source tutorials to get you up to speed with GraphQL, Hasura and Databases. Check it out at [hasura.io/learn](https://hasura.io/learn/?utm_campaign=syntaxfm-2022&utm_campaign-type=podcast&utm_medium=social)


## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:32](#t=00:32)** Welcome
* **[01:56](#t=01:56)** Guest introduction
* [swyx.io](https://www.swyx.io)
* [Why Temporal?](https://www.swyx.io/why-temporal)
* **[06:09](#t=06:09)** What is Developer Experience?
* [Sarah Drasner](https://sarahdrasnerdesign.com)
* **[08:35](#t=08:35)** Is VS Code considered DX?
* **[09:28](#t=09:28)** Why is internal DX important?
* [Vercel](https://vercel.com)
* [NextJS](https://nextjs.org)
* **[11:44](#t=11:44)** Is DX helpful to small organizations as well?
* **[15:27](#t=15:27)** Parsimony
* [Parsimony](https://www.lexico.com/en/definition/parsimony)
* **[16:43](#t=16:43)** Is productivity the main focus?
* **[21:09](#t=21:09)** Sponsor: Hasura
* **[22:48](#t=22:48)** What are your thoughts on React?
* **[27:31](#t=27:31)** Designing for API success
* **[30:44](#t=30:44)** Sponsor: LogRocket
* **[32:07](#t=32:07)** What is external developer experience?
* **[36:05](#t=36:05)** Learning in public
* **[40:46](#t=40:46)** Supper Club questions
* [dx.tips](https://dx.tips/)
* [Retreon VS Code Theme](https://marketplace.visualstudio.com/items?itemName=kgscott.retreon)
* [Agnoster ZSH Theme](https://github.com/agnoster/agnoster-zsh-theme)
* [freeCodeCamp](https://www.freecodecamp.org)
* [Frontend Masters](https://frontendmasters.com)
* [QConf](https://qconsf.com)
* [Learn in Public](https://www.learninpublic.org)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Stormlight Archive](https://www.brandonsanderson.com/the-stormlight-archive-series/)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",33fe5cc489c2d7bd63268aea742768d4480fba5f1e2ed11c81f561bbfca7ed14,supper-club-developer-experience-with-shawn-wang,/shows/478 - Supperclub DX with Shawn.md,2023-10-16 20:07:50.266,2023-10-27 15:58:07.502,SUPPER
syntax_podcast_show_00479,479,CSS5 Color Functions,2022-07-04 12:00:00.868,https://traffic.libsyn.com/syntax/Syntax_-_479.mp3,"
In this Hasty Treat, Scott and Wes talk about new CSS color functions, and tips for viewing the different options and ways of presenting color that are coming.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:35](#t=01:35)** Sponsor: Linode
* **[02:22](#t=02:22)** Where the CSS spec for Color functions are at the moment
* **[05:13](#t=05:13)** New CSS Color mix function
* **[10:29](#t=10:29)** Color for the color challenged
* **[12:53](#t=12:53)** Color contrast function
* **[15:06](#t=15:06)** Programatically alter colors

* [Anyone have a really great CSS Variables color system strategy?](https://twitter.com/stolinski/status/1516877461539143680)
* [Color for the color challenged](https://ferdychristant.com/color-for-the-color-challenged-884c7aa04a56)
* [Better color tools](https://github.com/drwpow/better-color-tools)
* [the color-contrast() function](https://css-tricks.com/exploring-color-contrast-for-the-first-time/)
* [Benjamin Moore Paints as CSS Colours](https://bm.wesbos.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",95abbf9b7cdbd517b0fa8018db9d029175552fc016e3ef6db1f247fa39847b1f,css5-color-functions,/shows/479 - CSS5.md,2023-10-16 20:07:50.401,2023-10-27 15:58:07.644,HASTY
syntax_podcast_show_00480,480,10 years of Speaking + Conferences,2022-07-06 12:00:00.351,https://traffic.libsyn.com/syntax/Syntax_-_480.mp3,"
In this episode of Syntax, Wes and Scott talk about their experiences speaking at conferences, why they've done it, how they prepare talks, and tips for anyone interested in wanting to give talks.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:02](#t=00:02)** Welcome
* **[01:38](#t=01:38)** Stanley Cup update
* **[03:13](#t=03:13)** Legoland update
* **[04:09](#t=04:09)** Topic introduction
* [Nicole Sullivan](https://github.com/stubbornella)
* [Tweet looking for questions](https://twitter.com/wesbos/status/1541424269556649984?s=21&t=Ml3wQgMqJBcXM7yYW6Tc6w)
* **[05:03](#t=05:03)** Why speak at conferences?
* **[08:56](#t=08:56)** Travelling for free
* **[09:50](#t=09:50)** Getting paid to speak at conferences
* **[12:23](#t=12:23)** Doing in person workshops
* **[14:55](#t=14:55)** How do you get into speaking?
* **[19:25](#t=19:25)** Meetups
* **[20:30](#t=20:30)** Sponsor: Linode
* **[21:15](#t=21:15)** What should you speak about?
* **[26:27](#t=26:27)** Something you did a deep dive on
* **[29:21](#t=29:21)** Sponsor: Freshbooks
* **[30:04](#t=30:04)** Flight protection and travel insurance
* **[32:59](#t=32:59)** Idea: update to a library
* **[33:28](#t=33:28)** How to get conferences to invite you to speak?
* **[36:03](#t=36:03)** How do you prepare for a talk?
* **[42:40](#t=42:40)** How to find conferences looking for speakers
* **[44:09](#t=44:09)** How to create a topic that will get picked
* **[46:59](#t=46:59)** Sponsor: Sentry
* **[48:06](#t=48:06)** Software for your slides
* [Slides.js](https://slides.js.org)
* [Slides.com](https://slides.com)
* [MDX Deck](https://github.com/jxnblk/mdx-deck)
* [Notion](https://www.notion.so)
* [Figma](https://www.figma.com)
* [Google Slides](https://www.google.com/slides/about/)
* [Lydia Hallie](https://twitter.com/lydiahallie)
* [Keynote](https://www.apple.com/keynote/)
* **[56:28](#t=56:28)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Risk for iOS](https://apps.apple.com/us/app/risk-global-domination/id1051334048)
* Wes: [Barrina LED T5 Integrated Single Fixture](https://amzn.to/3nhlGsC)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a37a5df75a85a300f57d035c09d1a88e689da42cb9426ae75945d2b20285d0e4,10-years-of-speaking-conferences,/shows/480 - Speaking at conferences.md,2023-10-16 20:07:50.443,2023-10-27 15:58:07.691,TASTY
syntax_podcast_show_00481,481,Supper Club × Voice Coding with Pokey Rule,2022-07-08 12:00:00.941,https://traffic.libsyn.com/syntax/Syntax_-_481.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Pokey Rule about using his voice to code, and the current state of voice coding software.

## Stackoverflow Podcast - Sponsor

For over a dozen years, the Stack Overflow Podcast has been exploring what it means to be a developer, and how the art and practice of software programming is changing our world. Hosted by Ben Popper, Cassidy Williams, and Ceora Ford, the Stack Overflow Podcast is your home for all things code.

Listen to new episodes twice a week, wherever you get your podcasts.

## directus - Sponsor

Directus is an open-source data platform that instantly layers on top of any SQL database. Our Data Engine empowers engineers with dynamic REST+GraphQL APIs, workflow automation, built-in auth, caching, and asset transformations. And the included Data Studio democratizes your database, allowing even non-technical users to browse, manage, and visualize database content through a no-code data collaboration app.

[Get started in minutes with a free Directus Community Cloud project](https://directus.cloud).

## Show Notes

* **[00:33](#t=00:33)** Welcome
* **[01:35](#t=01:35)** Guest introduction
* [Con 2021 - Cursorless: keyboards and mice are sooo last year!! by Pokey Rule](https://www.youtube.com/watch?v=Py9xjeIhxOg)
* [Emily Shea](https://www.youtube.com/watch?v=YKuRkGkf5HU)
* **[05:12](#t=05:12)** How does coding with your voice work?
* [Talon Voice](https://talonvoice.com/)
* [Cursorless](https://cursorless.org/)
* **[09:45](#t=09:45)** How do you handle triggering wrong words?
* **[11:41](#t=11:41)** Sponsor: The Stack Overflow Podcast
* **[12:26](#t=12:26)** Example of voice coding
* [Parrot](https://github.com/chaosparrot/parrot.py)
* **[14:21](#t=14:21)** What are the noises you make for?
* **[24:29](#t=24:29)** Working on multiple lines at the same time
* **[27:37](#t=27:37)** How do you decide where the hats go?
* **[31:18](#t=31:18)** Sponsor: directus
* **[32:59](#t=32:59)** What is the community of users like for this?
* [Tree Sitter](https://tree-sitter.github.io/tree-sitter/)
* [""Incremental, zero-config Code Nav using stack graphs"" by Douglas Creager](https://www.youtube.com/watch?v=l2R1PTGcwrE)
* **[35:20](#t=35:20)** Does eye tracking work?
* **[36:48](#t=36:48)** What kind of mic do you use?
* [DPA Microphone](https://www.sweetwater.com/store/detail/4288HSBg--dpa-dfine-core-4288-omnidirectional-flex-headset-microphone-with-microdot-connector-long-length-b)
* [The Voice Book](https://www.amazon.com/Voice-Book-Caring-Protecting-Improving-dp-1641603305/dp/1641603305/)
* **[39:25](#t=39:25)** Supper Club questions
* [Abyss VS Code built-in theme](https://code.visualstudio.com/docs/getstarted/themes)
* [Kinesis Freestyle 2](https://kinesis-ergo.com/keyboards/freestyle2-keyboard/)
* [Charybdis Nano keyboard](https://bastardkb.com/charybdis-nano/)
* [Nexstand](http://www.nexstand.com)
* [Arxiv Sanity](https://arxiv-sanity-lite.com/)
* [Subvocal Recognition](https://en.wikipedia.org/wiki/Subvocal_recognition)
* [Imagen Research](https://imagen.research.google/)
* [Midjourney](https://www.midjourney.com/)
* **[54:11](#t=54:11)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Git Imerge](https://github.com/mhagger/git-imerge)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)
* Pokey: [YouTube channel](https://www.youtube.com/channel/UCML02pamUSxtbwAcrUdVmXg), [Sponsor Pokey on GitHub](https://github.com/sponsors/pokey)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ff6ddff858941a7a12221c8450c5a1602eb3f6c14323522b5f3dbe0239a2c5a9,supper-club-voice-coding-with-pokey-rule,/shows/481 - Supperclub Voice coding.md,2023-10-16 20:07:50.480,2023-10-27 15:58:07.754,SUPPER
syntax_podcast_show_00482,482,Clamp & Interpolate,2022-07-11 12:00:00.012,https://traffic.libsyn.com/syntax/Syntax_-_482.mp3,"
In this Hasty Treat, Scott and Wes talk about clamp and interpolate and how you might want to use them in your next project.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## NAME - Sponsor

There are hundreds of payments processing companies out there. Hit up [developer.paymentshub.com/syntax](https://developer.paymentshub.com/syntax) to learn more about how Payments Hub Developers not only processes ecommerce and in-person payments, but also boards and underwrites your merchants in as little as 90 minutes. We are currently offering Syntax listeners who become new partners 6 months free data through our Business Reporting API!

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[00:52](#t=00:52)** Sponsor: Sentry
* **[01:31](#t=01:31)** Sponsor: Payments Hub
* **[02:40](#t=02:40)** Topic introduction
* **[05:05](#t=05:05)** What is Clamp?

CSS clamp:
`font-size: clamp(1rem, 10vw, 2rem);`

JavaScript Clamp:
`const clamp = (num, min, max) => Math.min(Math.max(num, min), max)`

* **[09:12](#t=09:12)** What is Interpolate?
* [D3 Interpolate](https://observablehq.com/collection/@d3/d3-interpolate)
* **[12:56](#t=12:56)** Interpolate in colors
* **[14:37](#t=14:37)** Quantize
* [D3 Quantize](https://observablehq.com/@d3/d3-quantize)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",594e830c040a7a9a39d7dc24e294d769fe87347addf848efcf1a1db6882e2235,clamp-and-interpolate,/shows/482 - clamping.md,2023-10-16 20:07:50.605,2023-10-27 15:58:07.993,HASTY
syntax_podcast_show_00483,483,Potluck - Peer Dependencies × Vitest × NVM and PNPM × Sprites,2022-07-13 12:00:00.856,https://traffic.libsyn.com/syntax/Syntax_-_483.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about peer dependencies, Vitest, NVM and PNPM, using sprites for images, common MongoDB operations, and more!

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:03](#t=00:03)** Welcome
* **[01:53](#t=01:53)** Configuring home internet routers
* **[04:42](#t=04:42)** Scott's Home Assistant update
* [Mushroom Theme](https://community.home-assistant.io/t/mushroom-cards-build-a-beautiful-dashboard-easily/388590)
* **[07:52](#t=07:52)** Could you explain to me peer-dependencies and how does it work?
* **[13:24](#t=13:24)** Using Vitest do you still have to transpile code?
* **[16:14](#t=16:14)** Can you talk about helpful and common MongoDB operations, beyond just CRUD.
* **[18:49](#t=18:49)** How can I update the ""updatedAt"" field of the document on every save automatically?
* **[20:40](#t=20:40)** What is aggregation, and when do you use it?
* **[25:33](#t=25:33)** Sponsor: Prismic
* **[27:27](#t=27:27)** How does NVM relate to PNPM?
* [pnpm](https://pnpm.io)
* [nvm](https://github.com/nvm-sh/nvm#intro)
* **[30:45](#t=30:45)** I'm looking to upskill from front-end JavaScript?
* **[33:53](#t=33:53)** Is it possible to have a private NPM repo I can ""npm install"" from, or do I put my components up on NPM publicly?
* [Creating a private npm package](https://docs.npmjs.com/creating-and-publishing-private-packages)
* **[37:51](#t=37:51)** Sponsor: LogRocket
* **[39:14](#t=39:14)** Should a majority of lodash functions be considered deprecated?
* [angus c just](https://github.com/angus-c/just)
* **[42:36](#t=42:36)** Please do an episode on programming/learning with ADHD.
* **[44:04](#t=44:04)** Should I still be putting images in sprites?
* **[49:20](#t=49:20)** Does Mux have a simple mechanism for adding auth to each video or group of videos?
* [Mux Create playback restriction](https://docs.mux.com/api-reference/video#operation/create-playback-restriction)
* **[53:48](#t=53:48)** Sponsor: Sanity.io
* **[55:02](#t=55:02)** Is there copyright issues with using public APIs?
* [Moneypuck](https://moneypuck.com)
* **[59:38](#t=59:38)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Toto Bidet](https://amzn.to/3utuIqz)
* Wes: [Sodastream](https://sodastream.ca/)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",40fa2f96f4b1ee966b727d119f4a504c211bb8935a6a6695b5a53ae2046732ae,potluck-peer-dependencies-vitest-nvm-and-pnpm-sprites,/shows/483 - Potluck Peer Dependencies Vitest.md,2023-10-16 20:07:50.638,2023-10-27 15:58:08.099,TASTY
syntax_podcast_show_00484,484,"Supper Club × 70,000 Serverless Functions with Kristi Perreault of Liberty Mutual",2022-07-15 12:00:00.091,https://traffic.libsyn.com/syntax/Syntax_-_484.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Kristi Perreault of Liberty Mutual about why they're using serverless functions, what languages they write in, managing security and montoring, and Kristi's journey into tech as a career.

## Hasura - Sponsor

Hasura gives you instant GraphQL API on all your data sources to help you build modern apps faster. With built-in support for authorization and federation, Hasura makes it easy to declaratively configure permission rules and join data across multiple sources without writing any extra code. [Try out Hasura](https://hasura.io/?utm_campaign=syntaxfm-2022&utm_campaign-type=podcast&utm_medium=social) for free in 30 seconds. Hasura also features the most extensive list of open-source tutorials to get you up to speed with GraphQL, Hasura and Databases. Check it out at [hasura.io/learn](https://hasura.io/learn/?utm_campaign=syntaxfm-2022&utm_campaign-type=podcast&utm_medium=social)



## Stack Overflow Podcast - Sponsor

For over a dozen years, the Stack Overflow Podcast has been exploring what it means to be a developer, and how the art and practice of software programming is changing our world. Hosted by Ben Popper, Cassidy Williams, and Ceora Ford, the Stack Overflow Podcast is your home for all things code.

Listen to new episodes twice a week, wherever you get your podcasts.

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](https://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](https://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Show Notes

* **[00:33](#t=00:33)** Welcome
* **[03:24](#t=03:24)** Guest introduction
* [@kperreault95](https://twitter.com/kperreault95)
* [Kristi Perreault on Dev.to](https://dev.to/kristiperreault)
* [Kristi Perreault AWS Hero](https://aws.amazon.com/developer/community/heroes/kristi-perreault/?did=dh_card&trk=dh_card)
* [Liberty Mutual](https://www.libertymutual.com)
* **[04:55](#t=04:55)** Developers at Liberty Mutual
* **[07:05](#t=07:05)** What did you do before serverless functions?
* **[08:36](#t=08:36)** Why are you using serverless functions?
* **[12:39](#t=12:39)** What languages are you writing for serverless functions?
* **[15:53](#t=15:53)** Sponsor: Hasura
* **[17:22](#t=17:22)** Where does all the code live?
* **[20:58](#t=20:58)** AWS CDK
* [AWS CDK](https://aws.amazon.com/cdk/)
* [CDK Workshop](https://cdkworkshop.com)
* **[25:55](#t=25:55)** Sponsor: Lightstep Incident Response
* **[27:07](#t=27:07)** How did you get into tech?
* **[31:44](#t=31:44)** How do you organize all the functions?
* **[33:51](#t=33:51)** How important is security?
* **[35:23](#t=35:23)** What are IM roles?
* **[36:16](#t=36:16)** How do you deal with spiking and monitoring?
* [Datadog](https://www.datadoghq.com)
* [Splunk](https://www.splunk.com)
* **[41:20](#t=41:20)** Sponsor: Stackoverflow Podcast
* **[42:02](#t=42:02)** Have you used Edge functions?
* **[42:50](#t=42:50)** Supper Club Questions
[Off by None newsletter](https://offbynone.io/)
[Ready Set Cloud](https://www.readysetcloud.io/newsletter/7/)

## ××× SIIIIICK ××× PIIIICKS ×××

* [Loki on Disney+](https://www.disneyplus.com/series/loki/6pARMvILBGzF)

## Shameless Plugs

* [Real World Serverless Podcast](https://www.realworldserverless.com)
* [Serverless Denver Group](https://www.meetup.com/meetup-group-jncsuhfj/)
* [AWS Summits](https://aws.amazon.com/events/summits/)
* [@ServerlessCO](https://twitter.com/ServerlessCO)
[Kristi Perreault on Medium](https://kristiperreault.medium.com/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",913a5a46e6725542bcccc8a835cc22204e0bd6fefa580796343f5ad926d5fa9c,supper-club-70-000-serverless-functions-with-kristi-perreault-of-liberty-mutual,/shows/484 - Supperclub .md,2023-10-16 20:07:50.676,2023-10-27 15:58:08.175,SUPPER
syntax_podcast_show_00485,485,STUMP’D Interview Coding Questions,2022-07-18 12:00:00.053,https://traffic.libsyn.com/syntax/Syntax_-_485.mp3,"
In this Hasty Treat, Scott and Wes try to stump each other with coding interview questions like what is a higher order component? What is functional programming? And more!

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:47](#t=01:47)** Sponsor: Lightstep Incident Response
* **[03:00](#t=03:00)** Sponsor: Sentry
* **[04:10](#t=04:10)** What is a higher order component?
* **[05:34](#t=05:34)** What is functional programming?
* **[09:00](#t=09:00)** What's the purpose of cache busting and how do you achieve it?
* [Wes’ course for Beginner JavaScript](https://beginnerjavascript.com)
* **[10:37](#t=10:37)** What is short circuit evaluation?
* **[13:19](#t=13:19)** What is a closure?
* **[15:49](#t=15:49)** What is the reason for wrapping the contents of a JavaScript source file in a function that is then invoked?
* **[17:30](#t=17:30)** Can you describe how CSS specificity works?
* **[20:15](#t=20:15)** How does prototypal inheritance differ from classical inheritance?
* **[23:56](#t=23:56)** What is the difference between a parameter and an argument?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",174ea6fcbadcdfecf519444673f1bc16629f660b7440cba9fb2cdfb762139922,stump-d-interview-coding-questions,/shows/485 - stumpd.md,2023-10-16 20:07:50.764,2023-10-27 15:58:08.340,HASTY
syntax_podcast_show_00486,486,Our Code Styles,2022-07-20 12:00:00.138,https://traffic.libsyn.com/syntax/Syntax_-_486_v2.mp3,"
In this episode of Syntax, Wes and Scott talk about their coding styles - functional vs object oriented, interfaces vs types, tabs vs spaces, should comments exist? And a whole lot more.

## Freshbooks  - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:07](#t=00:07)** Welcome
* **[01:56](#t=01:56)** Functional vs object oriented
* **[03:49](#t=03:49)** Interfaces vs types
* **[05:38](#t=05:38)** Tabs vs spaces
* **[07:02](#t=07:02)** Semicolons vs no semicolons
* **[08:10](#t=08:10)** Let vs const
* **[09:33](#t=09:33)** Do you explicitly type or allow TypeScript do it's magic?
* **[11:26](#t=11:26)** Naming variables
* [Naming convention for programming](https://en.wikipedia.org/wiki/Naming_convention_(programming))
* **[15:13](#t=15:13)** Methods of looping
* **[18:03](#t=18:03)** if statement curlys
* **[20:57](#t=20:57)** Naming files
* **[24:46](#t=24:46)** Inline testing vs running test as a process
* **[25:31](#t=25:31)** Sponsor: Freshbooks
* **[26:37](#t=26:37)** CSS property:val; or property: val;
* **[27:40](#t=27:40)** CSS nesting?
* **[29:49](#t=29:49)** Alphabetizing CSS properties
* **[31:11](#t=31:11)** Rems, Ems, PX, Etc…
* **[33:37](#t=33:37)** How do you center something in CSS?
* **[35:22](#t=35:22)** How do you make something 100% height?
* **[36:52](#t=36:52)** Sponsor: Sentry
* **[37:30](#t=37:30)** Should comments exist?
* [Better Comments](https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments)
* [Wes’ custom parser for VS Code](https://twitter.com/wesbos/status/1384916003444961282?s=21&t=Iz9mOT6bctSccV4pw8xjOA)
* [Todo Tree](https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree)
* **[42:31](#t=42:31)** Creating HTML
* **[45:28](#t=45:28)** Components in app or in isolation?
* **[47:41](#t=47:41)** Sponsor: Sanity
* **[48:45](#t=48:45)** Single component per file vs multiple
* [Storybook](https://storybook.js.org)
* **[50:22](#t=50:22)** Naming components
* **[51:19](#t=51:19)** General stuff
* **[53:55](#t=53:55)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Scott's iPad case for kids](https://www.amazon.com/dp/B07DBZW49H?th=1&linkCode=sl1&tag=leveluptuts01-20&linkId=920f70555b9377dadede744ec2447748&language=en_US&ref_=as_li_ss_tl)
* Wes: Garbage can with custom bags.

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ad088c5a0ef113f6be98d789ee313a5d1ac9cf99404b864721a3ba585588244f,our-code-styles,/shows/486 - Code styles.md,2023-10-16 20:07:50.797,2023-10-27 15:58:08.422,TASTY
syntax_podcast_show_00487,487,Supper Club × Adam Cowley and Neo4j Database,2022-07-22 12:00:00.074,https://traffic.libsyn.com/syntax/Syntax_-_487.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Adam Cowley about how Neo4j Database can help when working with data for your next app.

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [gatsby.dev/syntax](https://gatsby.dev/syntaxfm) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Show Notes

* **[00:15](#t=00:15)** Welcome
* **[01:17](#t=01:17)** Guest introduction
* **[03:08](#t=03:08)** Browser innovation and testing
* **[04:54](#t=04:54)** What is a graph database?
* [Neo4j Cypher](https://neo4j.com/developer/cypher/)
* [Sanity Groq](https://www.sanity.io/docs/overview-groq)
* **[08:04](#t=08:04)** Is there a specific type of data that works best in a graph database?
* **[11:50](#t=11:50)** Sponsor: Lightstep Incident Response
* **[13:07](#t=13:07)** What's AuraDB vs Neo4js?
* **[14:54](#t=14:54)** Whiteboard friendly data model
* **[19:45](#t=19:45)** How are GraphQL and graph related?
* **[23:01](#t=23:01)** Can you sync with MongoDB?
* **[24:34](#t=24:34)** How do you pull data into a div on the web?
* **[29:12](#t=29:12)** Why are you used for data science a lot?
* [Neo4j Desktop](https://neo4j.com/download/)
* [Neo4j Cloud](https://neo4j.com/cloud/)
* **[30:35](#t=30:35)** Sponsor: Gatsby
* **[31:44](#t=31:44)** Is visualization an important part of Neo4js?
* [Neo4j Bloom](https://neo4j.com/product/bloom/)
* **[35:54](#t=35:54)** Do you have to think about indexing with graph databases?
* **[39:36](#t=39:36)** Are there uses Neo4j isn't as good for?
* **[40:15](#t=40:15)** Do you have to cache queries?
* **[41:19](#t=41:19)** Dessert questions
* [Intellijet Idea](https://www.jetbrains.com/idea/)
* [Cobalt 2 Theme](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2)
* **[50:29](#t=50:29)** Shameless Plug
* **[54:38](#t=54:38)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Hue Lights](https://www.philips-hue.com/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",63bbc89ca71e6a826bfe886f65ae474066902cfd7be741e5675297688a4a9c4f,supper-club-adam-cowley-and-neo4j-database,/shows/487 - Supper Club neo4js.md,2023-10-16 20:07:50.841,2023-10-27 15:58:08.526,SUPPER
syntax_podcast_show_00488,488,What is Bun? The New JS Runtime,2022-07-25 12:00:00.141,https://traffic.libsyn.com/syntax/Syntax_-_488.mp3,"
In this Hasty Treat, Scott and Wes talk about Bun, a new all-in-one JavaScript runtime. What makes Bun so fast? What's on Bun's roadmap? And why do we need another JavaScript runtime?

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](https://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[01:21](#t=01:21)** Sponsor: Freshbooks
* **[02:07](#t=02:07)** Sponsor: Lightstep Incident Response
* **[03:20](#t=03:20)** What is Bun?
* [Bun](https://Bun.sh)
* [Deno](https://deno.land)
* **[08:20](#t=08:20)** Why is Bun so fast?
* [Zig](https://ziglang.org)
* **[12:32](#t=12:32)** Module support
* **[15:11](#t=15:11)** What's not implemented yet in Bun?
* [What’s not implemented in Bun yet](https://github.com/oven-sh/Bun#not-implemented-yet)
* **[17:01](#t=17:01)** Config file in toml
* **[18:08](#t=18:08)** Bun roadmap
* [Bun roadmap](https://github.com/oven-sh/Bun/issues/159)
* **[20:27](#t=20:27)** Why do we need another JavaScript environment?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",35300ae452fa066c733ac7a404adccf2bdfcb9eeed11d8407a7631908aa75b41,what-is-bun-the-new-js-runtime,/shows/488 - hasty.md,2023-10-16 20:07:50.980,2023-10-27 15:58:08.642,HASTY
syntax_podcast_show_00489,489,"Potluck! Node Versions, Old Man Internet, Responsive Design + MORE",2022-07-27 12:00:00.457,https://traffic.libsyn.com/syntax/Syntax_-_489.mp3,"
In this Potluck episode of Syntax, Wes and Scott answer your questions about resolving node version errors, using social media, bundler for building React component, and how does Syntax get made?

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* [OhMyPosh](https://ohmyposh.dev)
* [OhMyZ.sh](https://ohmyz.sh)
* [Warp](https://www.warp.dev)
* **[02:34](#t=02:34)** How do you resolve errors when starting up a project with npm that you haven't touched in awhile?
* **[07:50](#t=07:50)** Any advice for using social media to network?
* **[16:44](#t=16:44)** What bundler are you reaching for when building a React component library?
* [tsdx](https://tsdx.io/)
* [Vite](https://vitejs.dev)
* **[18:37](#t=18:37)** Do you have experience with optimizing third party scripts like Google Analytics?
* [Partytown](https://partytown.builder.io)
* **[21:37](#t=21:37)** What's your opinion on a ""offline-first"" mentality?
* [PouchDB](https://pouchdb.com)
* [CouchDB](https://couchdb.apache.org)
* [Supabase](https://supabase.com)
* [MongoDB Realm](https://www.mongodb.com/developer/products/realm/)
* **[25:09](#t=25:09)** Sponsor: Prismic
* **[26:48](#t=26:48)** How do you make web components with Svelte?
* [Build web components in Svelte](https://blog.logrocket.com/build-web-components-svelte/)
* [Using custom elements in Svelte](https://css-tricks.com/using-custom-elements-in-svelte/)
* **[30:35](#t=30:35)** When talking about ""responsive"" web design do people generally mean using flexbox or grid?
* [Responsive Design at 10](https://ethanmarcotte.com/wrote/responsive-design-at-10/)
* [Responsive Web Design](https://alistapart.com/article/responsive-web-design/)
* [A Book Apart - Responsive Web Design](https://abookapart.com/products/responsive-web-design)
* **[35:24](#t=35:24)** Sponsor: Sentry
* **[36:53](#t=36:53)** Do you have any tips for staying in React-land for just spinning up a fresh site quickly?
* **[40:47](#t=40:47)** Who or what helps you produce and distribute the podcast?
* [Lemon Productions](https://www.lemonproductions.ca/)
* [Chris Enns on Twitter](https://twitter.com/ichris)
* **[46:08](#t=46:08)** Should a majority of _lodash functions be considered deprecated follow up
* **[48:18](#t=48:18)** Sponsor: Freshbooks
* **[48:52](#t=48:52)** Do you have any tips or tricks to deal with backend data date issues?
* **[52:23](#t=52:23)** Is the “col” system the peak of how we handle CSS, or should we start using more built-in functions?
* **[55:25](#t=55:25)** Why you you need CSS Color Functions at runtime instead of just pre-calculating these values once as a build step using LESS or SASS?
* **[58:58](#t=58:58)** SIIIIICK ××× PIIIICKS ×××
* **[03:12](#t=03:12)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Can tumbler glasses](https://amzn.to/3o8ya6i)
* Wes: [Car Sound Deadener](https://amzn.to/3RBurvo)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",087236ecb299b7331fb2bae12d1950da33216673ebc00d1eb09f8417cefb15eb,potluck-node-versions-old-man-internet-responsive-design-more,/shows/489 - Potluck Node.md,2023-10-16 20:07:51.015,2023-10-27 15:58:08.690,TASTY
syntax_podcast_show_00490,490,Supper Club × Syed Balkhi and WordPress,2022-07-29 12:00:00.768,https://traffic.libsyn.com/syntax/Syntax_-_490.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Syed Balkhi about his experiences blogging and developing plugins in the WordPress ecosytem.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Sponsorname - Sponsor

## Show Notes

* **[00:32](#t=00:32)** Welcome
* **[01:52](#t=01:52)** Guest introduction
* [WPBeginner](https://www.wpbeginner.com)
* [WP Beginner YouTube](https://www.youtube.com/channel/UChA624rCabHAmd6lpkLOw7A)
* [CSS Tricks](https://css-tricks.com)
* [Smashing Magazine](https://www.smashingmagazine.com)
* **[04:33](#t=04:33)** What tips do you have for blogging and audience building?
* [AnswerthePublic](https://answerthepublic.com)
* **[09:09](#t=09:09)** How do you manage so many people?
* **[13:07](#t=13:07)** What was your background before this all got big?
* **[13:43](#t=13:43)** Sponsor: Hasura
* **[15:01](#t=15:01)** How do you design your products?
* **[18:40](#t=18:40)** YouTube, TikTok, and video
* **[25:12](#t=25:12)** Why the WordPress hate?
* **[29:03](#t=29:03)** What types of websites are being created in WordPress?
* [Easy Digital Downloads](https://easydigitaldownloads.com)
* [WooCommerce](https://woocommerce.com)
* [MemberPress](https://memberpress.com)
* **[34:13](#t=34:13)** Sponsor: Lightstep Incident Response
* **[35:26](#t=35:26)** What schools are you building?
* [Balkhi Foundation](https://balkhifoundation.com)
* [Pencils of Promise](https://pencilsofpromise.org)
* **[40:51](#t=40:51)** Supper Club questions
* [Copyhackers](https://copyhackers.com)
* [Swiped](https://swiped.co)
* [Uncanny Automator](https://automatorplugin.com)
* **[53:07](#t=53:07)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Streaks App](http://streaksapp.com)
* [Ready Player Two](https://www.audible.ca/pd/Ready-Player-Two-Audiobook/B08C6XN1BF)
* [WP Forms](https://wpforms.com)
* [AwesomeMotive](https://awesomemotive.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d527d427eccfb86a14c0cb81aac7dba42366d9455a0eedd1099d9c1ea4def23c,supper-club-syed-balkhi-and-wordpress,/shows/490 - Supper club Syed Balkhi.md,2023-10-16 20:07:51.051,2023-10-27 15:58:08.740,SUPPER
syntax_podcast_show_00491,491,How to Spark your Imagination and Get Excited about Coding,2022-08-01 12:00:00.077,https://traffic.libsyn.com/syntax/Syntax_-_491.mp3,"
In this Hasty Treat, Scott and Wes talk the appreciation of coding projects that supposedly serve no purpose, but can be great ways to learn something new.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Show Notes

* **[00:39](#t=00:39)** I am excited about coding
* **[02:40](#t=02:40)** Sponsor: LogRocket
* **[03:58](#t=03:58)** Sponsor: Linode
* **[04:24](#t=04:24)** Projects that serve no purpose
* [Bookit](https://github.com/leveluptuts/bookit)
* **[05:46](#t=05:46)** Scratching your own itch
* **[10:06](#t=10:06)** Discount finder
* **[11:20](#t=11:20)** Webcam or audio manipulation
* **[12:43](#t=12:43)** TTFS
* [Parcel](https://parceljs.org)
* [Vite](https://vitejs.dev)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",62049efc1723f79d5dd12b029f191df8bf6d8864442b597f236bcc2fa05e7f11,how-to-spark-your-imagination-and-get-excited-about-coding,/shows/491 - Hasty Spark coding.md,2023-10-16 20:07:51.192,2023-10-27 15:58:08.851,HASTY
syntax_podcast_show_00492,492,Our Web Dev Wish List,2022-08-03 12:00:00.245,https://traffic.libsyn.com/syntax/Syntax_-_492.mp3,"
In this episode of Syntax, Wes and Scott talk through their web dev wish list of things they want to just work already!

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[02:20](#t=02:20)** Write Custom animation transitions
* **[03:32](#t=03:32)** date input translate to JavaScript date
* **[06:48](#t=06:48)** Smooth and animated drag and drop
* **[08:35](#t=08:35)** TypeScript Interfaces are faster than Types
* **[10:35](#t=10:35)** Request animation frame
* **[12:52](#t=12:52)** Custom Elements / Web Components
* **[13:52](#t=13:52)** Authentication
* [Web Authentication API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API)
* **[16:12](#t=16:12)** Sponsor: Linode
* **[17:48](#t=17:48)** useIsomporphic vs useLayoutEffect
* **[19:48](#t=19:48)** useEffect dependency array
* **[21:27](#t=21:27)** fragments without fragments
* **[24:46](#t=24:46)** Overflow hidden without hiding shadows
* **[27:11](#t=27:11)** Fluid text
* **[28:52](#t=28:52)** Sponsor: Sentry
* **[29:34](#t=29:34)** translate3d vs translate
* **[30:59](#t=30:59)** Gradient borders
* **[33:33](#t=33:33)** Independent transforms
* **[36:16](#t=36:16)** animate height auto
* **[38:40](#t=38:40)** Sponsor: Freshbooks
* **[39:02](#t=39:02)** Auto synced deps when changing package file
* **[40:36](#t=40:36)** Peer dependencies
* **[42:32](#t=42:32)** VS Code Reload after plugins install is kinda annoying
* **[43:04](#t=43:04)** Safari updates
* **[44:20](#t=44:20)** Apps checking for passwords
* **[45:02](#t=45:02)** File name casing as changes
* **[45:56](#t=45:56)** Better sounding commit names
* **[46:33](#t=46:33)** Test runner that is the same and just works
* **[47:32](#t=47:32)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Arc browser](https://thebrowser.company/) / [Video](https://www.youtube.com/watch?v=YJjsY2e5pAY&feature=youtu.be)
* Wes: [Battery powered glue gun](https://www.ryobitools.com/products/details/33287177172)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",8507afcbdf6e4f7f80a91cb8c4eae8b1dfe5c458f84e0c35ee523a5416d88929,our-web-dev-wish-list,/shows/492 - Our Web Dev Wish List.md,2023-10-16 20:07:51.234,2023-10-27 15:58:08.899,TASTY
syntax_podcast_show_00493,493,"Supper Club × Lee Robinson on React Suspense, Server Components",2022-08-05 12:00:00.535,https://traffic.libsyn.com/syntax/Syntax_-_493.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Lee Robinson from Vercel about React Suspense, server components, the edge, and more!

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [gatsby.dev/syntax](https://gatsby.dev/syntaxfm) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Show Notes

* **[00:35](#t=00:35)** Welcome
* **[01:34](#t=01:34)** Guest introduction
* [LeeRob.io](https://leerob.io)
* [Vercel](https://vercel.com)
* **[02:25](#t=02:25)** Syntax hosted on Vercel
* **[04:08](#t=04:08)** What is suspense?
* **[06:50](#t=06:50)** Benefits of selective hydration
* **[13:15](#t=13:15)** Sponsor: Lightstep Incident Response
* **[14:24](#t=14:24)** How does suspense know you're doing something inside of it?
* **[18:02](#t=18:02)** How does this connect to server components in React?
* **[22:00](#t=22:00)** How do we use this in NextJS?
* **[24:32](#t=24:32)** NextJS routing future
* [Layouts RFC](https://nextjs.org/blog/layouts-rfc)
* **[33:11](#t=33:11)** Will I ever be able to use web components inside NextJS?
* **[36:12](#t=36:12)** Sponsor: Gatsby
* **[37:14](#t=37:14)** What's happening with the Edge?
* [Edge Runtime](https://edge-runtime.vercel.app)
* **[47:37](#t=47:37)** What should we use for databases?
* **[50:39](#t=50:39)** Supper Club dessert questions
* [OhMyPosh](https://ohmyposh.dev)
* [Hyper](https://hyper.is)
* [Warp](https://www.warp.dev)
* [Svelte](https://svelte.dev)
* [Hackernews](https://news.ycombinator.com)
* [Reddit](https://www.reddit.com)
* **[58:57](#t=58:57)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [AirPods](https://www.apple.com/airpods/)

## Shameless Plugs

* [Careers at Vercel](https://vercel.com/careers)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ae6f0862908986e40d330941908324ebdcedc416e6afadf62759b79be9591747,supper-club-lee-robinson-on-react-suspense-server-components,/shows/493 - Supper Club.md,2023-10-16 20:07:51.269,2023-10-27 15:58:08.945,SUPPER
syntax_podcast_show_00494,494,"Browsers, Engines, Support and the Other Guys",2022-08-08 12:00:00.726,https://traffic.libsyn.com/syntax/Syntax_-_494.mp3,"
In this Hasty Treat, Scott and Wes talk about the various web browers that might show up in your analytics and whether you need to worry about supporting them or not.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## MagicBell - Sponsor

[MagicBell](https://www.magicbell.com) is the The notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:19](#t=01:19)** Sponsor: Sentry
* **[02:29](#t=02:29)** Sponsor: MagicBell
* **[03:51](#t=03:51)** Big browsers and their engines
* **[05:29](#t=05:29)** Cloaked browsers
* **[08:16](#t=08:16)** What's so great about Arc?
* [Arc](https://thebrowser.company)
* **[11:33](#t=11:33)** JavaScript engines
* **[13:30](#t=13:30)** iOS Browsers
* [Open Web Advocacy](https://open-web-advocacy.org/)
* **[15:07](#t=15:07)** Android browsers
* **[18:04](#t=18:04)** The rest of the browsers
* **[19:24](#t=19:24)** Tor browser
* **[20:20](#t=20:20)** Opera mini
* **[22:48](#t=22:48)** UC browser
* **[23:42](#t=23:42)** Opera mobile
* **[24:57](#t=24:57)** KaiOS
* **[26:26](#t=26:26)** Ringtone memories

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",66b6cf8ae404da728246cd2445f5e18767b9d408bcaf69500067d7c6851136d2,browsers-engines-support-and-the-other-guys,/shows/494 - Hasty Browsers and engines.md,2023-10-16 20:07:51.377,2023-10-27 15:58:09.031,HASTY
syntax_podcast_show_00495,495,Potluck - API Fetching × PDF Creation × tRPC × Stripe vs PayPal,2022-08-10 12:00:00.533,https://traffic.libsyn.com/syntax/Syntax_-_495.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about middleman for API fetching, when to introduce SvelteKit, generating PDFs server side, trade offs of being an entrepreneur vs employee, and more!

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:18](#t=00:18)** Welcome
* **[02:50](#t=02:50)** Is there a way to create a ""middleman"" to fetch data from an API once a day?
* [Redis](https://redis.io)
* **[06:53](#t=06:53)** Should I wait before introducing team members to SvelteKit?
* [SvelteKit V1 issues](https://github.com/sveltejs/kit/discussions/5748)
* **[10:28](#t=10:28)** What options do we have for generating PDFs serverside?
* [WKHTML to PDF](https://wkhtmltopdf.org)
* [Puppeteer](https://pptr.dev)
* [PhantomJS](https://phantomjs.org)
* [html2canvas](https://www.npmjs.com/package/html2canvas)
* [Generate Invoice Workers](https://github.com/adamschwartz/generate.invoice.workers.dev/blob/master/index.js)
* **[15:47](#t=15:47)** Sponsor: Prismic
* **[17:08](#t=17:08)** How do you say thank you to sponsors?
* **[18:32](#t=18:32)** How would you compare the tradeoffs of working at a tech company vs. an agency vs. freelancing vs. entrepreneurship?
* **[20:47](#t=20:47)** What's the best way for an oldie like me to catch up?
* [CSS Grid.io](https://cssgrid.io)
* [Modern CSS Layouts](https://leveluptutorials.com/tutorials/modern-css-layouts/about-modern-css-layouts)
* **[26:08](#t=26:08)** I'm wondering what do you think about tRPC?
* [trpc.io](https://trpc.io)
* [Create t3 app](https://github.com/t3-oss/create-t3-app)
* **[29:00](#t=29:00)** Sponsor: LogRocket
* **[30:03](#t=30:03)** PDF creator Cloudflare worker
* **[32:50](#t=32:50)** How do you feel about keeping separate accounts for things like Twitter?
* **[37:28](#t=37:28)** Does using prototypes mean you are not doing functional programming?
* **[42:09](#t=42:09)** PHP vs JavaScript based CMS
* [Ghost](https://ghost.org)
* [Keystone](https://keystonejs.com)
* [Strapi](https://strapi.io)
* **[45:15](#t=45:15)** Sponsor: Auth0
* **[46:21](#t=46:21)** Why do you think this mindset that with age comes an inability to learn?
* [Syntax 44 How to Learn New Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)
* **[51:32](#t=51:32)** Are there other payment providers you guys recommend or should I stick with Stripe and hope for the best?
* [Stripe](https://stripe.com)
* [Paypal](https://www.paypal.com)
* **[56:10](#t=56:10)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Literature and History](https://literatureandhistory.com/)
* Wes: [Kitchen faucet](https://amzn.to/3OKAeMJ)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3cd4a461440eba891fce725c684538d5c9e9aed6dd736f7f050079e8cd04e181,potluck-api-fetching-pdf-creation-trpc-stripe-vs-paypal,/shows/495 - Potluck.md,2023-10-16 20:07:51.416,2023-10-27 15:58:09.078,TASTY
syntax_podcast_show_00496,496,Supper Club × Headless Ecommerce with Shopify’s Josh Larson,2022-08-12 12:00:00.626,https://traffic.libsyn.com/syntax/Syntax_-_496.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Josh Larson from Shopify about headless ecommerce, including Hydrogen from Shopify, how integrations work with Shopify, and what the tech stack is behind Hydrogen.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Show Notes

* **[00:38](#t=00:38)** Welcome
* **[01:12](#t=01:12)** Guest introduction
* **[03:16](#t=03:16)** What is Hydrogen from Shopify?
* [Hydrogen](https://hydrogen.shopify.dev)
* [Shopify Oxygen](https://shopify.dev/custom-storefronts/oxygen)
* **[11:23](#t=11:23)** Why would you want to go headless?
* **[15:26](#t=15:26)** Sponsor: Hasura
* **[16:56](#t=16:56)** Where does custom logic fit?
* **[18:45](#t=18:45)** What is the stack behind Hydrogen?
* **[24:16](#t=24:16)** Sponsor: Lightstep Incident Response
* **[25:33](#t=25:33)** How much code is JavaScript vs React?
* **[33:43](#t=33:43)** How do integrations work?
* **[38:28](#t=38:28)** Supper Club Questions
* [In Bed By 7pm VS Code Theme](https://marketplace.visualstudio.com/items?itemName=sdras.inbedby7pm)
* [Zsh](https://ohmyz.sh)
* [Hyper](https://hyper.is)
* [Laravel](https://laravel.com)
* [Vite](https://vitejs.dev)
* [Cloudflare Workers](https://workers.cloudflare.com)
* [Rust](https://www.rust-lang.org)
* [Rust for JS](https://rustforjs.dev)
* **[48:10](#t=48:10)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [The Story Of by Vice](https://www.vice.com/en/topic/the-story-of)

## Shameless Plugs

* [@JPLHomer](https://twitter.com/jplhomer)
* [Shopify Editions](https://www.shopify.ca/enterprise/editions)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",6c2bb9af8d914b6efec2043b1edb97f93df988f4c82fd7c6c5f40d0b742d575d,supper-club-headless-ecommerce-with-shopify-s-josh-larson,/shows/496 - Supper Headless Commerce.md,2023-10-16 20:07:51.451,2023-10-27 15:58:09.125,SUPPER
syntax_podcast_show_00497,497,"CSS Proposals @when, CSS Masonry, Carets",2022-08-15 12:00:00.137,https://traffic.libsyn.com/syntax/Syntax_-_497.mp3,"
In this episode of Syntax, Wes and Scott talk about proposals to CSS including @when, CSS Masonry, CSS Caret, ENV Vars, and Media Query Ranges.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[00:58](#t=00:58)** Sponsor: Sentry
* **[02:17](#t=02:17)** Sponsor: Sanity
* **[03:32](#t=03:32)** CSS @when and @else
* [CSS When and Else](https://www.w3.org/TR/css-conditional-5/#when-rule)

```
@when media(width >= 400px) and media(pointer: fine) and supports(display: flex) {
  /* A */
} @else supports(caret-color: pink) and supports(background: double-rainbow()) {
  /* B */
} @else {
  /* C */
}
```

* **[05:42](#t=05:42)** CSS Grid 3 Masonry
* [CSS Grid](https://drafts.csswg.org/css-grid-3/)

```
.grid {
  display: inline-grid;
  grid: masonry / repeat(3, 2ch);
  border: 1px solid;
  masonry-auto-flow: next;
}
```

* [David Desandro](https://desandro.com)
* [Rachel Andrew](https://rachelandrew.co.uk)
* **[09:00](#t=09:00)** CSS Caret
* [CSS Caret](https://www.w3.org/TR/css-ui-4/#insertion-caret)
* **[10:32](#t=10:32)** CSS Nesting
* [CSS Nesting](https://www.w3.org/TR/css-nesting-1/)
* [Syntax 343 CSS Nesting](https://syntax.fm/show/343/hasty-treat-css-nesting-1)
* [Postcss-preset-env](https://github.com/csstools/postcss-preset-env)
* **[13:14](#t=13:14)** ENV Vars
* [ENV Variables](https://drafts.csswg.org/css-env-1/)
* **[14:58](#t=14:58)** Media Query Ranges
* [MDN Media Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries#syntax_improvements_in_level_4)
`@media (width < env(--small_bp));`
`@media (100px < width < 1000px);`

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5997fc5dea486831d2149d5b58c9f9bf41a2723b56db9af0812709aa362f3e87,css-proposals-when-css-masonry-carets,/shows/497 - CSS Proposals.md,2023-10-16 20:07:51.552,2023-10-27 15:58:09.206,HASTY
syntax_podcast_show_00498,498,"Job Types Agency, Tech, Startup, Entrepreneur VS Tech company VS In House",2022-08-17 12:00:00.380,https://traffic.libsyn.com/syntax/Syntax_-_498.mp3,"
In this Hasty Treat, Scott and Wes talk about their thoughts on the different types of tech jobs you can get, and the pros and cons of each style of job in tech.

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:47](#t=01:47)** The types of jobs
* [Wes’ tweet about developer jobs](https://twitter.com/wesbos/status/1556647760379650048?s=21&t=j8S5yG0EUhTCdyun3JEZ4g)
* **[03:02](#t=03:02)** Our experiences
* **[05:58](#t=05:58)** Tech company
* **[09:46](#t=09:46)** Freelancer or Entrepreneur
* **[11:14](#t=11:14)** What are the pros of working at a agency?
* **[18:38](#t=18:38)** Cons to agency life
* **[26:19](#t=26:19)** Sponsor: Lightstep Incident Response
* **[27:49](#t=27:49)** Pros of tech company jobs
* **[30:47](#t=30:47)** Cons of working at tech companies
* **[37:46](#t=37:46)** Sponsor: Freshbooks
* **[38:51](#t=38:51)** Pros of in house tech jobs
* **[46:01](#t=46:01)** Cons of tech work
* **[51:29](#t=51:29)** Sponsor: LogRocket
* **[52:28](#t=52:28)** Pros of freelance or entrepreneur
* **[57:20](#t=57:20)** Cons of entrepreneur life
* **[00:03](#t=00:03)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Wes: [Soap pump](https://amzn.to/3QbrVLd)
* Scott: [Pro breaking tour](https://www.youtube.com/watch?v=Yi7H21E4nys)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ec6d2b943f719d1fbc61bdc50c48b0a2e56e2967194e2629621f25281f6453ee,job-types-agency-tech-startup-entrepreneur-vs-tech-company-vs-in-house,/shows/498 - Agency or solo work.md,2023-10-16 20:07:51.610,2023-10-27 15:58:09.257,TASTY
syntax_podcast_show_00499,499,"Supper Club × Rich Harris, Author of Svelte",2022-08-19 12:00:00.400,https://traffic.libsyn.com/syntax/Syntax_-_499.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with the author of Svelte, Rich Harris, about what influenced the creation of Svelte, his thoughts on web components, the virtual DOM, why companies are switching to Svelte, and what's next for Svelte.

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [gatsby.dev/syntax](https://gatsby.dev/syntax) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Lightstep Incident Response - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Show Notes

* **[00:33](#t=00:33)** Welcome
* **[02:10](#t=02:10)** Who is Rich Harris?
* [Rich Harris on Twitter](https://twitter.com/rich_harris)
* **[02:55](#t=02:55)** What is Svelte?
* [Svelte](https://svelte.dev)
* [Vercel](https://vercel.com)
* [Svelte Kit](https://kit.svelte.dev)
* **[06:52](#t=06:52)** What influenced the template language for Svelte?
* **[10:03](#t=10:03)** What do you use the const tag for?
* **[10:49](#t=10:49)** Sponsor: Gatsby
* **[12:04](#t=12:04)** What about immutability issues?
* **[17:49](#t=17:49)** What about web components?
* **[21:51](#t=21:51)** Why does Svelte not need the virtual DOM?
* **[27:34](#t=27:34)** Sponsor: Lightstep Incident Response
* **[28:45](#t=28:45)** What is your favorite part of working in Svelte?
* **[32:31](#t=32:31)** Why are companies switching to Svelte?
* **[34:35](#t=34:35)** What is the SvelteKit timeline?
* **[38:52](#t=38:52)** What's the next version of Svelte include?
* [Motion](https://motion.dev)
* **[41:36](#t=41:36)** Any thoughts on new backend JavaScript environments?
* [Web Interoperability](https://en.wikipedia.org/wiki/Web_interoperability)
* **[45:39](#t=45:39)** Supperclub Questions
* **[52:40](#t=52:40)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Rich: [Mullvad VPN](https://mullvad.net)

## Shameless Plugs

* [Svelte Origins](https://www.youtube.com/watch?v=kMlkCYL9qo0)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5850d8d410bed61d32cf22bb9f87b196111685e4b2ebe82409a37c1b47472ce8,supper-club-rich-harris-author-of-svelte,/shows/499 - Supper Rich Harris.md,2023-10-16 20:07:51.675,2023-10-27 15:58:09.303,SUPPER
syntax_podcast_show_00500,500,Episode 500!,2022-08-22 12:00:00.221,https://traffic.libsyn.com/syntax/Syntax_-_500.mp3,"
In this Hasty Treat, Scott and Wes talk about the past 499 episodes of Syntax, what have been the most downloaded episodes, their favorite episodes, and the sickest of sick pics.

## Sentry - Sponsor

[Attend Dex](https://bit.ly/syntax-fm)

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Payments Hub - Sponsor

There are hundreds of payments processing companies out there. Hit up [developer.paymentshub.com/syntax](https://developer.paymentshub.com/syntax) to learn more about how Payments Hub Developers not only processes ecommerce and in-person payments, but also boards and underwrites your merchants in as little as 90 minutes. We are currently offering Syntax listeners who become new partners 6 months free data through our Business Reporting API!

## Show Notes

* **[00:28](#t=00:28)** Welcome
* **[01:44](#t=01:44)** Sponsor: Sentry
* **[03:28](#t=03:28)** Sponsor: Payments Hub
* **[04:36](#t=04:36)** 20 million!
* **[05:57](#t=05:57)** Our current recording process
* [Libsyn](https://www.libsyn.com)
* **[09:09](#t=09:09)** Top 10 episodes
* [162 - The Fundementals JS](https://syntax.fm/show/162/the-fundamentals-js)
* [92 - React Hooks](https://syntax.fm/show/092/react-hooks)
* [158 - The Fundamentals HTML + CSS](https://syntax.fm/show/158/the-fundamentals-html-css)
* [66 - The React Episode](https://syntax.fm/show/066/the-react-episode)
* [44 - How to Learn New Things Quickly](https://syntax.fm/show/044/how-to-learn-new-things-quickly)
* [198 - How to Get Better at Problem Solving](https://syntax.fm/show/198/how-to-get-better-at-problem-solving)
* [20 JavaScript Array and Object Methods to make you a better developer](https://syntax.fm/show/043/20-javascript-array-and-object-methods-to-make-you-a-better-developer)
* [188 - The Fundamentals - Server Side](https://syntax.fm/show/188/the-fundamentals-server-side)
* [174 - How to Build an API](https://syntax.fm/show/174/how-to-build-an-api)
* [120 - Gatsby vs Next](https://syntax.fm/show/120/gatsby-vs-next)
* **[18:00](#t=18:00)** Our favorite episodes
* [193 - Spooky Stories](https://syntax.fm/show/193/hasty-treat-spooky-stories)
* [400 - Horror Stories 2021](https://syntax.fm/show/400/horror-web-dev-stories-2021)
* [250 - Scott Teaches Wes Svelte and Sapper](https://syntax.fm/show/250/scott-teaches-wes-svelte-and-sapper)
* [60 - Undocumented Web](https://syntax.fm/show/060/the-undocumented-web-scraping-private-apis-proxies-and-alternative-solutions)
* **[23:00](#t=23:00)** Questions from Twitter
* [Twitter questions](https://twitter.com/wesbos/status/1559195351319543809)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c08569b0548de27bacc2789c1d476919fa3a4a7acdf490b7da3a93d26db520db,episode-500,/shows/500 - Episode 500!.md,2023-10-16 20:07:51.810,2023-10-27 15:58:09.397,HASTY
syntax_podcast_show_00501,501,Fundamentals - Web Workers and Service Workers,2022-08-24 12:00:00.112,https://traffic.libsyn.com/syntax/Syntax_-_501.mp3,"
In this episode of Syntax, Wes and Scott talk through the fundamentals of web workers and service workers - examples, when you should use them, how to debug, local dev, and more.

## LogRocket  - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[04:34](#t=04:34)** What are threads?
* **[06:12](#t=06:12)** Concurrent vs parallel
* **[09:22](#t=09:22)** Green screen web cam example
* **[13:02](#t=13:02)** Examples of what you could use web workers for
* [Party Town](https://partytown.builder.io)
* [Deno](https://deno.land)
* **[19:52](#t=19:52)** Sponsor: LogRocket
* **[20:42](#t=20:42)** Post Message API and Web Workers
* **[25:57](#t=25:57)** What about WASM?
* **[27:28](#t=27:28)** Offline sync
* **[28:14](#t=28:14)** What are service workers?
* **[31:20](#t=31:20)** How do you caching sites for offline use?
* **[32:39](#t=32:39)** Web worker vs service worker
* **[34:12](#t=34:12)** Sponsor: Sanity
* **[35:40](#t=35:40)** What is the lifecycle of a service worker
* **[38:18](#t=38:18)** Possible issues with Service Workers
* **[42:46](#t=42:46)** Debugging service workers
* [Svelte Kit Service workers](https://kit.svelte.dev/docs/service-workers)
* [Workbox](https://developer.chrome.com/docs/workbox/)
* **[43:04](#t=43:04)** Testing and local development
* [Service Workers notes from Wes' Workshop](https://github.com/wesbos/Web-App-Workshop/blob/master/notes/08%20-%20Offline%20Support%20with%20Service%20Workers.md)
* **[46:45](#t=46:45)** Sponsor: Freshbooks
* **[49:59](#t=49:59)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Setex Gecko Grip 1mm Anti Slip Eyeglass Nose Pads](https://amzn.to/3w1LFZB)
* Wes: [Samsung Frame TV](https://amzn.to/3dvLDTw)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",01e3fbeb1f048db8848a033760ba4b244d59d07b2dc32e6b422867e8114d794b,fundamentals-web-workers-and-service-workers,/shows/501 - Fundamentals Web Workers.md,2023-10-16 20:07:51.879,2023-10-27 15:58:09.441,TASTY
syntax_podcast_show_00502,502,Supper Club × Self Hosted Backend-as-a-service with Brandon Roberts,2022-08-26 12:00:00.388,https://traffic.libsyn.com/syntax/Syntax_-_502.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Brandon Roberts about Appwrite, how Appwrite works, who it's for, as well as his thoughts on Angular, Remix, and more.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Lightstep Incident Response  - Sponsor

Streamline on-call, collaboration, incident management, and automation with a free 30-day trial of [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Usage-based pricing on active services promotes collaboration across your entire team to build a culture of service ownership. Listeners of Syntax will also receive a free Lightstep Incident Response T-shirt after firing an alert or incident.

Pay for the services you use, not the number of people on your team with [Lightstep Incident Response](http://lightstep.com/syntax), built on ServiceNow. Streamline on-call, collaboration, incident management, and automation with a free 30-day trial. Fire an alert or incident today and receive a free Lightstep Incident Response t-shirt.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:10](#t=01:10)** Who is Brandon Roberts?
* [@BrandonTRoberts](https://twitter.com/brandontroberts)
* **[02:00](#t=02:00)** What is Appwrite?
* [Appwrite](https://appwrite.io)
* [Getting started with Appwrite](https://appwrite.io/docs/getting-started-for-web)
* **[03:17](#t=03:17)** What database layer does Appwrite use?
* **[08:17](#t=08:17)** Is this working client side or server side?
* **[09:54](#t=09:54)** Great docs and examples
* **[12:55](#t=12:55)** How is deployment handled?
* [Appwrite on Digital Ocean](https://marketplace.digitalocean.com/apps/appwrite)
* **[15:30](#t=15:30)** Sponsor: Lightstep Incident Response
* **[16:36](#t=16:36)** Appwrite's focus on developer experience
* [Appwrite to do with Svelte](https://appwrite-todo-with-svelte.vercel.app/)

* **[19:56](#t=19:56)** Realtime database options with Appwrite
* **[22:40](#t=22:40)** Cloud functions in Appwrite
* **[26:01](#t=26:01)** How does Appwrite scale?
* [Docker Swarm](https://docs.docker.com/engine/swarm/)
* **[27:28](#t=27:28)** Who is Appwrite for?
* [Flutter](https://flutter.dev)
* **[30:03](#t=30:03)** What is Ionic?
* [Ionic](https://ionic.io)
* **[32:12](#t=32:12)** What do you enjoy about working in Angular?
* [Angular](https://angular.io)
* **[35:08](#t=35:08)** Sponsor: Hasura
* **[36:30](#t=36:30)** Supper club questions
* [Night owl](https://marketplace.visualstudio.com/items?itemName=sdras.night-owl)

## Shameless Plugs

* Guest: [React Router](https://reactrouter.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c184aa9bcbc5ce672631a497ca32165ae3369de1a1d36d39d20d77b8cd53bc30,supper-club-self-hosted-backend-as-a-service-with-brandon-roberts,/shows/502 - Supper Club Brandon Roberts.md,2023-10-16 20:07:51.939,2023-10-27 15:58:09.485,SUPPER
syntax_podcast_show_00503,503,Margins,2022-08-29 12:00:00.171,https://traffic.libsyn.com/syntax/Syntax_-_503.mp3,"
In this Hasty Treat, Scott and Wes talk about margins. There are a lot of techniques for dealing with margins - padding instead of margin, only margin or padding bottom, Flexbox for everything, Grid for everything, or a spacing Div.

## Sentry - Sponsor

[Find out about Sentry's Dex Conference](https://bit.ly/syntax-fm).

From controlling chaotic workflows to maintaining stable code, there’s a lot that can drive a developer mad. We’re hosting DEX, the conference for developers by developers, to give us all a chance to come together and sort through that madness.

[This is a free, one-day event](https://bit.ly/syntax-fm) to share best practices, epic fails, and seasoned insights on how to improve productivity. Whether you join us in-person in San Francisco or virtually from your home, you’ll have the opportunity to share your thoughts, engage with other developers, and walk away with your own personal madness sorting algorithm.

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes

* **[00:30](#t=00:30)** Welcome
* **[01:39](#t=01:39)** Sponsor: Sentry
* **[02:50](#t=02:50)** Sponsor: Auth0
* **[04:25](#t=04:25)** Introduction to margins
* **[08:28](#t=08:28)** Margin vs padding
* **[11:46](#t=11:46)** New techniques
* **[14:32](#t=14:32)** The spacer div
* **[17:36](#t=17:36)** Why do it as a component vs a class?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d25c4c8576207fae5b93e89d9a555e7857d89f5618fe36f6cdb9b021e3ff1a7f,margins,/shows/503 - hasty Margins.md,2023-10-16 20:07:52.194,2023-10-27 15:58:09.590,HASTY
syntax_podcast_show_00504,504,Syntax Highlight,2022-08-31 12:00:00.162,https://traffic.libsyn.com/syntax/Syntax_-_504.mp3,"
In this episode of Syntax, Wes and Scott review the websites you've submitted including Ruben Oliveira, Adam Collier, Consolecmnd, Brad Preston, and more!

## Sanity  - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## MagicBell - Sponsor

[MagicBell](https://www.magicbell.com) is the the notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Show Notes

* **[00:16](#t=00:16)** Welcome
* **[02:05](#t=02:05)** Setting up Wes' new office
* **[06:18](#t=06:18)** rubenoliveira.tech
* [Ruben Oliveira](https://rubenoliveira.tech)
* **[17:22](#t=17:22)** adamcollier.co.uk
* [Adam Collier](https://www.adamcollier.co.uk/)
* **[22:56](#t=22:56)** Sponsor: Sanity
* **[24:13](#t=24:13)** Consolecmnd.com
* [ConsoleCMND](https://www.consolecmnd.com/)
* **[32:37](#t=32:37)** sz-development.tech
* [SZ-Development](https://sz-development.tech)
* **[44:07](#t=44:07)** Sponsor: LogRocket
* **[44:57](#t=44:57)** Richardcarrigan.com
* [Richard Carrigan](https://richardcarrigan.com/)
* **[49:52](#t=49:52)** Bradpreston.dev
* [Brad Preston](https://bradpreston.dev/)
* **[54:18](#t=54:18)** Sponsor: MagicBell
* **[55:17](#t=55:17)** Mikemneves.com
* [Mike Mneves](https://www.mikemneves.com/)
* **[01:05](#t=01:05)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Packing Cubes](https://amzn.to/3TajqCc)
* Wes: [Volt 1](https://www.uaudio.com/audio-interfaces/volt-1-usb.html)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4372910f861809f34fbb70a5aaf90a2cc16ac39b926e6a856fb06a97ec4244b0,syntax-highlight,/shows/504 - Syntax highlight.md,2023-10-16 20:07:52.250,2023-10-27 15:58:09.673,TASTY
syntax_podcast_show_00505,505,Supper Club × Steve Ruiz Building a Drawing App,2022-09-02 12:00:00.212,https://traffic.libsyn.com/syntax/Syntax_-_505.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Steve Ruiz about how he built tldraw, how he manages state, what was done to support mobile, and more.

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [gatsby.dev/syntax](https://gatsby.dev/syntaxfm) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Show Notes

* **[00:34](#t=00:34)** Welcome
* **[03:23](#t=03:23)** Who is Steve Ruiz?
* [Steve Ruiz](https://www.steveruiz.me/)
* **[04:45](#t=04:45)** What is tldraw and what was your inspiration for it?
* [tldraw](https://www.tldraw.com)
* [Globs](https://www.globs.design)
* [Excalidraw](https://excalidraw.com)
* [tldraw on GitHub](https://github.com/tldraw/tldraw)
* **[11:04](#t=11:04)** Why didn't you use canvas?
* **[16:15](#t=16:15)** How do you make an algorithm?
* [Perfect Free Hand](https://github.com/steveruizok/perfect-freehand)
* **[19:33](#t=19:33)** Do you use pointer events?
* **[23:44](#t=23:44)** What are you using to manage state?
* **[29:42](#t=29:42)** How do you handle zooming?
* [Creating Zoom UI](https://www.steveruiz.me/posts/zoom-ui)
* **[32:28](#t=32:28)** Where do you store the data for tldraw?
* [Project Fugu](https://developers.google.com/codelabs/project-fugu#0)
* **[37:08](#t=37:08)** Why use indexdb?
* **[38:05](#t=38:05)** Sponsor: Gatsby
* **[39:49](#t=39:49)** How difficult was it to make it work on mobile?
* [React Use Gesture](https://www.npmjs.com/package/react-use-gesture)
* **[41:59](#t=41:59)** Does it work offline?
* **[43:25](#t=43:25)** Supper Club Questions
* [Monokai Pro](https://monokai.pro)
* [Framer Classic](https://classic.framerbook.com)
* [Hacker News](https://news.ycombinator.com)
* [One Lone Coder on YouTube](https://www.youtube.com/c/javidx9)
* [Displaced Gamer](https://www.youtube.com/channel/UCWoSKWs8h6lFdiEDAjuIfpA)
* [Coding Secrets](https://www.youtube.com/c/CodingSecrets)
* **[52:28](#t=52:28)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Last Call BBS](https://store.steampowered.com/app/1511780/Last_Call_BBS/)

## Shameless Plugs

* Steve: [tldraw.dev](https://www.tldraw.dev)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",78a15db61adddf543e5830da406dc3823f6ff4c7d2bb93bc40e82e468c0e17d7,supper-club-steve-ruiz-building-a-drawing-app,/shows/505 - Supper club with Steve Ruiz.md,2023-10-16 20:07:52.286,2023-10-27 15:58:09.723,SUPPER
syntax_podcast_show_00506,506,Big Deno Changes,2022-09-05 12:00:00.044,https://traffic.libsyn.com/syntax/Syntax_-_506.mp3,"
In this Hasty Treat, Scott and Wes talk about the changes announced by Deno and their thoughts on the changes.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:37](#t=01:37)** Sponsor: LogRocket
* **[02:34](#t=02:34)** Sponsor: Linode
* **[03:18](#t=03:18)** Standing and getting mic'd
* **[04:20](#t=04:20)** What is Deno?
* [Deno Changes](https://deno.com/blog/changes)
* **[07:13](#t=07:13)** What were they doing before this?
* [How could we support typescript without vendoring it?](https://github.com/nodejs/node/issues/43818)
* **[21:22](#t=21:22)** Enterprise support and search

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",bad59ee5d0f12aa90c6b46924d4a051980a70db79b64c2380de3d6940325f4ef,big-deno-changes,/shows/506 - Deno.md,2023-10-16 20:07:52.403,2023-10-27 15:58:09.812,HASTY
syntax_podcast_show_00507,507,Potluck - How to Pick a Tech Stack × useEffect × setTimeout × Staying Focused,2022-09-07 12:00:00.991,https://traffic.libsyn.com/syntax/Syntax_-_507.mp3,"
In this episode of Syntax, Wes and Scott answer your questions about picking the right tech stack, whether useEffect is still useful, benefit to use uses setTimeout, and more!

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [a0.to/syntax](https://a0.to/syntax)

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[02:39](#t=02:39)** What's the best way of comparing the efficiency of object literals created from a factory function vs objects created by new'ing a class.
* [Perf.link](https://perf.link/)
* **[06:54](#t=06:54)** How can I always see the full signature in VS Code?
* **[10:40](#t=10:40)** What’s your process for picking a stack when starting a project?
* **[14:41](#t=14:41)** Sponsor: Linode
* **[15:23](#t=15:23)** Is snapshot testing really worth it?
* [TS QuickFixes](https://marketplace.visualstudio.com/items?itemName=tamj0rd2.ts-quickfixes-extension)
* **[20:54](#t=20:54)** What are your thoughts on ISR Incremental Static Regeneration?
* **[25:20](#t=25:20)** Is useEffect public enemy #1?
* [Goodbye, useEffect: David Khourshid](https://www.youtube.com/watch?v=HPoC-k7Rxwo)
* **[29:02](#t=29:02)** Sponsor: LogRocket
* **[30:17](#t=30:17)** Is there any benefit to use uses setTimeout instead of setInterval?
* [MongoDB](https://www.mongodb.com)
* [Prisma](https://www.prisma.io)
* **[37:13](#t=37:13)** HTML to PDF a great solution I use is gotenberg.dev
* [gotenberg.dev](https://gotenberg.dev)
* **[40:12](#t=40:12)** Although async/await might make for code that is easier to grok, I find it worse for chaining functions.
* [Pipeline Operator proposal](https://github.com/tc39/proposal-pipeline-operator)
* **[45:07](#t=45:07)** How do you guys stay focused for meaningful periods of time?
* **[48:36](#t=48:36)** How should code formatters be configured and combined?
* [Prettier](https://prettier.io)
* [ES Lint](https://eslint.org)
* [Editor Config](https://editorconfig.org)
* [No-Sweat™ Eslint and Prettier Setup](https://github.com/wesbos/eslint-config-wesbos)
* **[51:56](#t=51:56)** What's your opinion on the latest Sveltekit changes with load, file based routing, and more?
* [Major Svelte Kit API Change - Fixing `load`, and tightening up SvelteKit's design before 1.0](https://www.youtube.com/watch?v=OUGn7VifUCg&t=134s)
* [Astro](https://astro.build)
* [Nano Store](https://github.com/nanostores/nanostores)
* **[55:53](#t=55:53)** Sponsor: Auth0
* **[56:47](#t=56:47)** SIIIIICK ××× PIIIICKS ×××
















## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Dog poop bags](https://amzn.to/3Kk0zR1)
* Wes: [Ethernet termination kit](https://amzn.to/3QGFEtW)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets

",cb13044a7b40dc1a3423bfc9f760f04e74e5981c4e952207ed948d2fef5d6296,potluck-how-to-pick-a-tech-stack-useeffect-settimeout-staying-focused,/shows/507 - Potluck.md,2023-10-16 20:07:52.449,2023-10-27 15:58:09.857,TASTY
syntax_podcast_show_00508,508,"Supper Club × The Primeagen - Vim, Streaming, Rust, all Around Interesting Guy",2022-09-09 12:00:00.226,https://traffic.libsyn.com/syntax/Syntax_-_508.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with The Primeagen about his streaming set up, how he decides what to stream, why he makes the kind of content he does, and why he loves Vim.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Storyblok - Sponsor

[Storyblok](https://www.storyblok.com/?utm_source=syntaxfm&utm_medium=sponsor&utm_campaign=AWA_SPON_SFM_TRA&utm_content=syntaxfm-podcast) is a headless component-based CMS with a real-time visual editor. It offers the flexibility for developers to craft their perfect tech stack, but it also empowers content creators to make changes independently. The result is that every team has the freedom to quickly and easily create the ideal website with limitless extensibility. Other key features include robust [Storyblok](https://www.storyblok.com/?utm_source=syntaxfm&utm_medium=sponsor&utm_campaign=AWA_SPON_SFM_TRA&utm_content=syntaxfm-podcast) SDKs and APIs, powerful internationalization options, and an eCommerce-ready platform.

## Show Notes

- **[00:35](#t=00:35)** Welcome
- **[01:48](#t=01:48)** Guest introduction
- [ThePrimeagen on YouTube](https://www.youtube.com/channel/UC8ENHE5xdFSwx71u3fDH5Xw)
- [ThePrimeagen on Twitch](https://www.twitch.tv/ThePrimeagen)
- [@ThePrimeagen on Twitter](https://twitter.com/ThePrimeagen)
- [Why I Make Content](https://www.youtube.com/watch?v=7FsyXTMLPBY)
- **[03:53](#t=03:53)** Dropping in on skateboarding
- [Tony Hawk’s Pro Skater](<https://en.wikipedia.org/wiki/Tony_Hawk%27s_Pro_Skater_(video_game)>)
- **[05:43](#t=05:43)** What do you do?
- **[07:17](#t=07:17)** How do you plan your live streams?
- **[10:05](#t=10:05)** Sponsor: Hasura
- **[11:27](#t=11:27)** Do you do interactive content via OBS on stream?
- [OBS](https://obsproject.com)
- **[16:22](#t=16:22)** What languages do you use on stream?
- [Bun](https://bun.sh)
- [Zig](https://ziglang.org)
- **[22:03](#t=22:03)** What do you try to build on stream?
- **[24:53](#t=24:53)** Sponsor: StoryBlok
- **[25:45](#t=25:45)** Why do you use Vim?
- **[38:42](#t=38:42)** Do you ever have to do pair programming with Vim?
- **[40:43](#t=40:43)** What kind of hardware are you playing with?
- [Arduino](https://www.arduino.cc)
- **[42:52](#t=42:52)** Supper club questions
- [Lemur](https://system76.com/laptops/lemur)
- [Pop](https://pop.system76.com)
- [Kinesis Advantage 2](https://kinesis-ergo.com/keyboards/advantage2-keyboard/)
- **[56:20](#t=56:20)** SIIIIICK ××× PIIIICKS ×××

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ff4ee923573dca586e10616168df3ee7d740b67344c7de0acf42a011b18a15f5,supper-club-the-primeagen-vim-streaming-rust-all-around-interesting-guy,/shows/508 - supperclub.md,2023-10-16 20:07:52.499,2023-10-27 15:58:09.902,SUPPER
syntax_podcast_show_00509,509,Use Next-gen CSS Today (Post CSS Configs),2022-09-12 12:00:00.065,https://traffic.libsyn.com/syntax/Syntax_-_509.mp3,"
In this Hasty Treat, Scott and Wes talk about next generation CSS that you can use today with PostCSS including importing, nesting, variables, media query ranges, custom media queries, and more.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:27](#t=00:27)** Welcome
* **[01:30](#t=01:30)** Sponsor: Prismic
* **[02:54](#t=02:54)** Sponsor: Sentry
* **[03:53](#t=03:53)** Do we use Post CSS?
* **[05:22](#t=05:22)** Presets and plugins
* **[06:19](#t=06:19)** Plugins we're using

```
""postcss-import""

@import './elements/headings.css';
```

* **[09:48](#t=09:48)** PostCSS Nested
* **[12:59](#t=12:59)** Variables (Custom Properties)
* **[15:50](#t=15:50)** Media Query Ranges
* [PostCSS Media Minmax](https://github.com/postcss/postcss-media-minmax)
* **[17:16](#t=17:16)** Custom Media Queries

```
""postcss-media-minmax""

@media screen and (width >= 500px) and (width <= 1200px)
```

```
""postcss-custom-media""

@custom-media --below_small (width < env(--small_bp));

@media (--above_small) {}
```

* **[18:35](#t=18:35)** Env Vars

```
""postcss-env-function""

env(--small_bp)
```

* **[20:12](#t=20:12)** Color Function and Color Function Notation

```
/* color-function */
p {
  color: color(display-p3 1 0.5 0);
  color: color(display-p3 1 0.5 0 / .5);
}
```

* [Syntax 479: CSS Color Functions](https://syntax.fm/show/479/css5-color-functions)
* [Post CSS Color Functional Notation](https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-color-functional-notation#readme)
* [Post CSS Preset Env](https://github.com/csstools/postcss-plugins/blob/main/plugin-packs/postcss-preset-env/FEATURES.md )

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ab1a94f34ae9c295d94afd2f977f0f11607fce77bf5186aad0411f18d35360b4,use-next-gen-css-today-post-css-configs,/shows/509 - hasty.md,2023-10-16 20:07:52.634,2023-10-27 15:58:10.016,HASTY
syntax_podcast_show_00510,510,How To Build an API in 2022,2022-09-14 14:00:00.681,https://traffic.libsyn.com/syntax/Syntax_-_510.mp3,"
In this episode of Syntax, Wes and Scott talk about what APIs are, the API standards that exist, and walk through the various layers of what goes into making an API.

## Payments Hub  - Sponsor

There are hundreds of payments processing companies out there. Hit up [developer.paymentshub.com/syntax](https://developer.paymentshub.com/syntax) to learn more about how Payments Hub Developers not only processes ecommerce and in-person payments, but also boards and underwrites your merchants in as little as 90 minutes. We are currently offering Syntax listeners who become new partners 6 months free data through our Business Reporting API!

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[02:40](#t=02:40)** What are APIs?
* **[06:09](#t=06:09)** API Standards
* **[13:56](#t=13:56)** What about GRPC?
* **[15:52](#t=15:52)** What is TRPC?
* **[19:19](#t=19:19)** Sponsor: Payments Hub
* **[20:25](#t=20:25)** API Cake Layers
* [mySQL](https://www.mysql.com)
* [Postgres](https://www.postgresql.org)
* [Mongo DB](https://www.mongodb.com)
* [SQLite](https://www.sqlite.org)
* [SQLizer](https://sqlizer.io)
* **[26:51](#t=26:51)** Server layer
* **[33:28](#t=33:28)** Sponsor: LogRocket
* **[34:36](#t=34:36)** Authentication layer
* **[43:28](#t=43:28)** Caching layer
* **[46:09](#t=46:09)** Sponsor: Freshbooks
* **[46:38](#t=46:38)** Client layer
* [Prisma](https://www.prisma.io): Package, but also a  service
* [keystone](https://keystonejs.com): Package
* [Strapi](https://strapi.io): Package
* [Sanity](https://www.sanity.io): Service
* [Prismic](https://prismic.io): Service
* [Hasura](https://hasura.io): Open Source and Service
* [Contentful](https://www.contentful.com)
* [hygraph](https://hygraph.com)
* **[48:01](#t=48:01)** Should I use x or y?
* **[51:35](#t=51:35)** Tools
* [GraphQL Playground](https://www.apollographql.com/docs/apollo-server/v2/testing/graphql-playground/)
* [Graphiql](https://graphql.org/swapi-graphql)
* [Postman](https://www.postman.com)
* [Insomnia](https://insomnia.rest)
* [TablePlus](https://tableplus.com)
* [Studio3T](https://studio3t.com)
* **[56:27](#t=56:27)** SIIIIICK ××× PIIIICKS ×××
* **[00:20](#t=00:20)** Knife Talk

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Sharp Pebble](https://amzn.to/3RbT9BO)
* Wes: [Laser level](https://amzn.to/3Rkoja4)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a23c39ba47782b896f436cb2a5a0222aa1f94325dcc5ef82a966ef97f280f1f0,how-to-build-an-api-in-2022,/shows/510 - Building an API in 2022.md,2023-10-16 20:07:52.679,2023-10-27 15:58:10.068,TASTY
syntax_podcast_show_00511,511,Supper Club × Raycast with Thomas Mann,2022-09-16 12:00:00.231,https://traffic.libsyn.com/syntax/Syntax_-_511_v2.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Thomas Mann about Raycast - an app that can replace Spotlight on your Mac, and do so much more.

## FireHydrant - Sponsor

Incidents are hard. Managing them shouldn’t be. FireHydrant makes it easy for anyone in your organization to respond to incidents efficiently and consistently. Intuitive, guided workflows provide turn-by-turn navigation for incident response, while thoughtful prompts and powerful integrations capture all of your incident data to drive useful retros and actionable analytics. 

Did we mention that FireHydrant is free? Get started at Firehydrant.com/syntax


## Show Notes

* [@ThomasPaulMann](https://twitter.com/thomaspaulmann)
* **[01:58:02](#t=01:58)** What is Raycast?
* [Raycast](https://www.raycast.com)
* [Raycast Store](https://www.raycast.com/store)
* **[08:22:00](#t=08:22)** Do you have designers on your team to help guide UI?
* **[10:23:21](#t=10:23)** Why build it native instead of HTML and CSS?
* **[13:22:14](#t=13:22)** Why did you choose React?
* **[22:05:03](#t=22:05)** How do you figure out what's possible in system level APIs?
* **[26:50:20](#t=26:50)** Snippets make use of SQLite
* [SQLite](https://www.sqlite.org)
* **[29:15:14](#t=29:15)** Encrypted local storage data
* **[33:21:09](#t=33:21)** Sponsor: FireHydrant
* **[34:29:06](#t=34:29)** Any plans for theming for Raycast?
* **[36:55:16](#t=36:55)** What is the pricing model?
* **[38:42:05](#t=38:42)** What was your Y combinator experience like?
* [Y Combinator](https://www.ycombinator.com)
* [Careers](https://www.raycast.com/careers)
* **[43:44:02](#t=43:44)** Any plans for future features?
* **[45:44:12](#t=45:44)** Supper Club questions
* [Leopold FC660C Black 65% Dye Sub PBT Mechanical Keyboard](https://mechanicalkeyboards.com/shop/index.php?l=product_detail&p=4097)
* [iTerm](https://iterm2.com)
* [Starship](https://starship.rs)
* **[53:01:00](#t=53:01)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Nothing Ear Buds](https://ca-en.nothing.tech/products/ear-1)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7e43cfcf183d6d6835f995ac144a9b65da67603555eb57f64336eac15d47db9a,supper-club-raycast-with-thomas-mann,/shows/511 - Supper club.md,2023-10-16 20:07:52.720,2023-10-27 15:58:10.136,SUPPER
syntax_podcast_show_00512,512,AI and Coding - Is Github Co-Pilot Worth It?,2022-09-19 12:00:00.806,https://traffic.libsyn.com/syntax/Syntax_-_512.mp3,"
In this Hasty Treat, Scott and Wes talk all about GitHub Co-Pilot and whether it's ethical, secure, worth it, gonna make you dumb, just going to get in your way, or the greatest thing for programmers to use.

## Sentry - Sponsor

[Sentry Dex conference](https://sentry.io/events/dex) is a free, one-day event to share best practices, epic fails, and seasoned insights on how to improve productivity.

From controlling chaotic workflows to maintaining stable code, there’s a lot that can drive a developer mad. We’re hosting DEX, the conference for developers by developers, to give us all a chance to come together and sort through that madness.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

[Sentry Dex conference](https://sentry.io/events/dex) is a free, one-day event to share best practices, epic fails, and seasoned insights on how to improve productivity.

From controlling chaotic workflows to maintaining stable code, there’s a lot that can drive a developer mad. We’re hosting DEX, the conference for developers by developers, to give us all a chance to come together and sort through that madness.

## Show Notes

* [GitHub Copilot](https://github.com/features/copilot/)
* [Code Whisperer](https://aws.amazon.com/codewhisperer/)
* **[00:29](#t=00:29)** Welcome
* **[01:12](#t=01:12)** Sponsor: Sentry
* **[02:06](#t=02:06)** Sponsor: Sanity
* **[03:07](#t=03:07)** GitHub Co-Pilot is now paid
* **[05:51](#t=05:51)** Is it ethical?
* **[08:02](#t=08:02)** Is it secure?
* **[10:16](#t=10:16)** Is it going to take our jobs?
* **[13:34](#t=13:34)** Is it worth it?
* **[16:21](#t=16:21)** Does it make you dumb?
* **[17:53](#t=17:53)** Does it get in the way?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b03f4880839d8e98c1dd14faffbee8d3194572280a6062cb048b6d974bfa5c64,ai-and-coding-is-github-co-pilot-worth-it,/shows/512 - AI and coding.md,2023-10-16 20:07:52.832,2023-10-27 15:58:10.236,HASTY
syntax_podcast_show_00513,513,The Productivity Episode,2022-09-21 12:00:00.892,https://traffic.libsyn.com/syntax/Syntax_-_513.mp3,"
In this episode of Syntax, Wes and Scott talk through what they do to get things done - apps for to do list tracking, calendar blocking, and how they determine a productive day.

## StoryBlok  - Sponsor

[Storyblok](https://www.storyblok.com/?utm_source=syntaxfm&utm_medium=sponsor&utm_campaign=AWA_SPON_SFM_TRA&utm_content=syntaxfm-podcast) is a headless component-based CMS with a real-time visual editor. It offers the flexibility for developers to craft their perfect tech stack, but it also empowers content creators to make changes independently. The result is that every team has the freedom to quickly and easily create the ideal website with limitless extensibility. Other key features include robust Storyblok SDKs and APIs, powerful internationalization options, and an eCommerce-ready platform.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[02:49](#t=02:49)** What is a productive day?
* **[04:56](#t=04:56)** What's an unproductive day?
* **[07:43](#t=07:43)** Techniques for work
* [Getting Things Done](https://gettingthingsdone.com)
* [Eat That Frog](https://www.amazon.com/Eat-That-Frog-Great-Procrastinating/dp/162656941X/ref=sr_1_1?crid=2RQ9XLRVKN1VP&keywords=eat+that+frog&qid=1663371437&sprefix=eat+that+frog%2Caps%2C109&sr=8-1)
* [Height](https://height.app)
* **[14:57](#t=14:57)** Weighting tasks
* **[18:29](#t=18:29)** Pomodoro technique
* **[20:53](#t=20:53)** Sponsor: StoryBlok
* **[22:46](#t=22:46)** The hard schedule
* **[29:24](#t=29:24)** Blocking out distractions
* [Focus](https://meaningful-things.com/focus)
* [Self Control](https://selfcontrolapp.com)
* **[32:20](#t=32:20)** Sponsor: LogRocket
* **[33:34](#t=33:34)** Tips We Have
* **[42:55](#t=42:55)** Sponsor: Freshbooks
* **[43:32](#t=43:32)** Software to help get things done.
* [Things](https://culturedcode.com/things/)
* [Todoist](https://todoist.com)
* [Omnifocus](https://www.omnigroup.com/omnifocus)
* [Transmit](https://panic.com/transmit/)
* [Savvycal](https://savvycal.com)
* [Centered](https://www.centered.app)
* [Remarkable](https://remarkable.com)
* **[56:21](#t=56:21)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [USB C Female to USB Male Adapter](https://amzn.to/3Bjfbxl)
* Wes: [Measuring tape](https://www.homedepot.ca/product/dewalt-25-ft-tape-measure-2-pack-/1001071650)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",be2a88b255310adf8b756f186e5a4d02a91063dff6f35af558d35dcf2e5a91c4,the-productivity-episode,/shows/513 - Productivity.md,2023-10-16 20:07:52.863,2023-10-27 15:58:10.285,TASTY
syntax_podcast_show_00514,514,Supper Club × Arc Browser with Hursh Agrawal,2022-09-23 12:00:00.417,https://traffic.libsyn.com/syntax/Syntax_-_514.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Hursh Agrawal of The Browser Company about Scott's favorite browser, Arc. How do you make a browser in 2022? Will there be a Windows version? And who is the target market for Arc?

## FireHydrant - Sponsor

Incidents are hard. Managing them shouldn’t be. [FireHydrant](https://Firehydrant.com/syntax) makes it easy for anyone in your organization to respond to incidents efficiently and consistently. Intuitive, guided workflows provide turn-by-turn navigation for incident response, while thoughtful prompts and powerful integrations capture all of your incident data to drive useful retros and actionable analytics.

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [Gatsby.dev/Syntax](https://gatsby.dev/Syntax) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes

* **[00:34](#t=00:34)** Welcome
* [HurshAgrawal.com](http://www.hurshagrawal.com)
* [@Hursh](https://twitter.com/hursh)
* **[02:53](#t=02:53)** What is Arc and why create another browser?
* [Arc browser](https://arc.net)
* [The browser company](https://thebrowser.company)
* **[05:36](#t=05:36)** What is different about Arc?
* **[08:20](#t=08:20)** Who is the target market for Arc?
* **[09:30](#t=09:30)** Sponsor: Auth0
* **[10:39](#t=10:39)** How do you make a browser?
* **[13:38](#t=13:38)** Will there be a Windows version of Arc?
* **[15:57](#t=15:57)** Where did the CMD-T functionality come from?
* **[19:27](#t=19:27)** Sponsor: FireHydrant
* **[20:39](#t=20:39)** How do you build on top of the Chrome engine?
* **[24:17](#t=24:17)** How does The Browser Company make money?
* **[27:26](#t=27:26)** Do you mess with the user agent?
* **[29:05](#t=29:05)** Why do you require account set up to use Arc?
* **[32:58](#t=32:58)** Sponsor: Gatsby
* **[33:59](#t=33:59)** How did you come up with your theming engine?
* **[36:15](#t=36:15)** Supper Club Questions
* [Warp](https://www.warp.dev)
* [Hacker News](https://news.ycombinator.com)
* [Changelog](https://changelog.com)
* [Every](https://every.to)
* [Ben Thompson Bundling and Unbundling](https://stratechery.com/concept/business-models/bundling-and-unbundling/)
* **[42:59](#t=42:59)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Jabra speakerphone](https://www.jabra.ca/business/speakerphones/jabra-speak-series/jabra-speak-710##7710-409)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",931d83515920de1e748fccb711fa16b5419a54ae1192a93101cfce1fd60e766c,supper-club-arc-browser-with-hursh-agrawal,/shows/514 - supper club.md,2023-10-16 20:07:52.899,2023-10-27 15:58:10.334,SUPPER
syntax_podcast_show_00515,515,WTF Is Enhance Framework?,2022-09-26 12:00:00.742,https://traffic.libsyn.com/syntax/Syntax_-_515.mp3,"
In this Hasty Treat, Scott and Wes talk about a new framework called Enhance. What is Enhance and how does it differ from other new frameworks like Astro?

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:27](#t=00:27)** Welcome
* **[01:12](#t=01:12)** Sponsor: Sentry
* **[02:06](#t=02:06)** Sponsor: Sanity
* **[03:40](#t=03:40)** What is Enhance?
* [Enhance.dev](https://enhance.dev/)
* **[06:17](#t=06:17)** Singe file components

```
export default function HelloWorld({ html, state }) {
  const { attrs } = state
  const { greeting='Hello World' } = attrs
  return html`
    <style scope=""global"">
      body {
        color: #222;
      }
    </style>
    <h1>${greeting}</h1>
  `
}
```

* [Astro](https://astro.build)
* **[09:23](#t=09:23)** State and Props
* **[14:01](#t=14:01)** CSS

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",364453bcb33e6eab499f40293ddb049b4a6289d1de275e3c4276e38a1870eb3d,wtf-is-enhance-framework,/shows/515 - framework.md,2023-10-16 20:07:53.050,2023-10-27 15:58:10.463,HASTY
syntax_podcast_show_00516,516,Wes’ New Soundproof Office,2022-09-28 12:00:00.557,https://traffic.libsyn.com/syntax/Syntax_-_516.mp3,"
In this episode of Syntax, Wes talks through all the gear, renovations, and upgrades he's made to his new home office. Lighting, soundproofing, desk, windows, and more!

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:38](#t=00:38)** Welcome
* **[02:24](#t=02:24)** Scouting a house with an office
* **[03:54](#t=03:54)** Why didn't you hire someone?
* **[08:50](#t=08:50)** Goals for the office
* **[10:30](#t=10:30)** Soundproofing
* **[19:49](#t=19:49)** Decouple the ceiling
* **[25:52](#t=25:52)** Sponsor: LogRocket
* **[26:54](#t=26:54)** The door
* **[33:23](#t=33:23)** Sponsor: Prismic
* **[33:59](#t=33:59)** The desk
* **[40:40](#t=40:40)** Cable management
* **[47:12](#t=47:12)** Lighting
* **[49:03](#t=49:03)** The room and windows
* **[51:22](#t=51:22)** Flooring
* **[55:12](#t=55:12)** Sponsor: Freshbooks
* **[55:47](#t=55:47)** Things yet to be done
* **[01:03:49](#t=01:03:49)** Costs
* **[01:06:10](#t=01:06:10)** SIIIIICK ××× PIIIICKS ×××

* [Desk Haus Apex Pro Max](https://desk.haus/products/apex-pro-max)

* [Alien Tape](https://www.alientape.ca)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Pretend Podcast](https://pretendradio.org)
* Wes: [Nano Tape](https://amzn.to/3SeAgP9)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",775c9b9eb72e6c5c118e61f5552b673d717dd842688ffb1eaabffea2c5a54b6e,wes-new-soundproof-office,/shows/516 - Wes office.md,2023-10-16 20:07:53.099,2023-10-27 15:58:10.522,TASTY
syntax_podcast_show_00517,517,Supper Club × Open Sauced With bdougie,2022-09-30 12:00:00.239,https://traffic.libsyn.com/syntax/Syntax_-_517.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with bdougie about his work on Open Sauced, thoughts on getting into open source development, and his live streaming set up.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## FireHydrant - Sponsor

Incidents are hard. Managing them shouldn’t be. FireHydrant makes it easy for anyone in your organization to respond to incidents efficiently and consistently. Intuitive, guided workflows provide turn-by-turn navigation for incident response, while thoughtful prompts and powerful integrations capture all of your incident data to drive useful retros and actionable analytics.

Get started at [Firehydrant.com/syntax](https://Firehydrant.com/syntax)

## Storyblok - Sponsor

[Storyblok](https://www.storyblok.com/?utm_source=syntaxfm&utm_medium=sponsor&utm_campaign=AWA_SPON_SFM_TRA&utm_content=syntaxfm-podcast) is a headless component-based CMS with a real-time visual editor. It offers the flexibility for developers to craft their perfect tech stack, but it also empowers content creators to make changes independently. The result is that every team has the freedom to quickly and easily create the ideal website with limitless extensibility. Other key features include robust Storyblok SDKs and APIs, powerful internationalization options, and an eCommerce-ready platform.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:52](#t=01:52)** Guest introduction
* [OpenSauced.pizza](https://opensauced.pizza/)
* [@Bdougieyo on TikTok](https://www.tiktok.com/@bdougieyo)
* [bdougie on Twitch](https://www.twitch.tv/bdougieyo)
* [Open Sauced on YouTube](https://www.youtube.com/c/OpenSauced)
* [bdougie on YouTube](https://www.youtube.com/c/bdougie)
* [Jamstack](https://jamstack.org)
* [Netlify](https://www.netlify.com)
* **[03:36](#t=03:36)** What was the inspiration for Open Sauced?
* **[08:23](#t=08:23)** GitHub GraphQL API
* **[13:22](#t=13:22)** What are your thoughts on GraphQL?
* [GraphQL](https://www.graphql.com)
* **[14:36](#t=14:36)** What is the T3 stack?
* **[16:30](#t=16:30)** Sponsor: Hasura
* **[17:53](#t=17:53)** What is the goal for Open Sauced?
* [Open Sauced Beta for Hacktoberfest](https://beta.insights.opensauced.pizza)
* **[20:08](#t=20:08)** What is your focus with live streaming?
* [T3 Stack](https://github.com/topics/t3-stack)
* [Vite](https://vitejs.dev)
* [The Primeagan on Syntax Episode 508](https://syntax.fm/show/508/supper-club-the-primeagan-vim-streaming-rust-all-around-interesting-guy)
* [Octoverse](https://octoverse.github.com)
* [Hot Open Sauced Pizza](https://hot.opensauced.pizza)
* **[21:39](#t=21:39)** What hardware and software do you live stream with?
* [Rode Procaster](https://rode.com/en/microphones/broadcast/procaster)
* [Wave XLR](https://www.elgato.com/en/wave-xlr)
* [GoXLR](https://www.tc-helicon.com/series.html?category=R-TCHELICON-GOXLRSERIES)
* [OBS](https://obsproject.com)
* **[25:26](#t=25:26)** Should adults be on TikTok?
* **[30:31](#t=30:31)** How do you build an algorithm?
* **[32:44](#t=32:44)** Sponsor: Storyblok
* **[34:01](#t=34:01)** Supper club questions
* [Keychron K2](https://www.keychron.com/products/keychron-k2-wireless-mechanical-keyboard)
* [Warp](https://www.warp.dev)
* [Ghostwriter from Replit](https://docs.replit.com/programming-ide/GhostWriter-FAQ#what-is-ghostwriter)
* [A first look at GitHub Copilot](https://www.youtube.com/watch?v=XASH3z3TORo)
* [Stable Diffusion](https://stablediffusionweb.com)
* [Fig](https://fig.io)
* **[43:17](#t=43:17)** Sponsor: FireHydrant
* **[44:36](#t=44:36)** Interviews with open source maintainers
* **[45:55](#t=45:55)** How should maintainers get paid?
* [Patreon](http://patreon.com)
* [GitHub Sponsors](https://github.com/sponsors)
* [Neovim](https://neovim.io)
* [Vim Adventures](https://vim-adventures.com)
* [Lunar Vim](https://www.lunarvim.org)
* **[47:47](#t=47:47)** SIIIIICK ××× PIIIICKS ×××
* **[51:34](#t=51:34)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* bdougie: [Warp](https://www.warp.dev)

## Shameless Plugs

* [bdougie on Twitter](https://twitter.com/bdougieYO)
* [saucedopen on Twitter](https://twitter.com/saucedopen)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a7333e55c2d8873aeaa02ec546a961a347ee8eea685064fbbe68b87cfbf116be,supper-club-open-sauced-with-bdougie,/shows/517 - supper Brian.md,2023-10-16 20:07:53.148,2023-10-27 15:58:10.568,SUPPER
syntax_podcast_show_00518,518,How to Get Past the Blahs and Finish Your Project,2022-10-03 12:00:00.454,https://traffic.libsyn.com/syntax/Syntax_-_518.mp3,"
In this Hasty Treat, Scott and Wes talk about the ways they get unstuck when working on the last bit of a project to help push it over the finish line.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[02:05](#t=02:05)** Sponsor: Linode
* **[02:59](#t=02:59)** Sponsor: LogRocket
* **[03:48](#t=03:48)** The last 10 percent
* **[05:25](#t=05:25)** Break those things into Tasks
* **[08:11](#t=08:11)** Just do it
* **[09:10](#t=09:10)** Rewards
* **[11:25](#t=11:25)** Be ok with good enough
* **[14:21](#t=14:21)** Keep the end in sight
* **[15:00](#t=15:00)** Do it “Quick a minute”

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets

",4898b016248b99f5bd86e1e069f32b0e4330d19b5e01fd578c2345879fd2278e,how-to-get-past-the-blahs-and-finish-your-project,/shows/518 - Blahs.md,2023-10-16 20:07:53.357,2023-10-27 15:58:10.706,HASTY
syntax_podcast_show_00519,519,Potluck - Using Emoji in Naming × Project Estimates × Goal Planning,2022-10-05 12:00:00.073,https://traffic.libsyn.com/syntax/Syntax_-_519.mp3,"
In this episode of Syntax, Wes and Scott answer your questions about whether you should use emoji in naming grid elements, how to estimate project times, responsive design tips, animating gradient backgrounds, and more.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:22](#t=01:22)** Shooting some pucks at the football game
* **[04:06](#t=04:06)** Should we use emoji naming conventions for our grid template areas instead of just words?
* [Screenshot of Grid question](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/52fbeacb-8136-4104-a30d-8fa120077ca5/C55498A0-7B31-45D2-A360-E0892104D61C.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20220928%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220928T221409Z&X-Amz-Expires=86400&X-Amz-Signature=8cf327687e89871816b2b3dc9cdfd0cd2fd50b3c68aa6943c56f2ba97b63a1e9&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22C55498A0-7B31-45D2-A360-E0892104D61C.JPG.jpg%22&x-id=GetObject)
* **[08:38](#t=08:38)** How do you estimate a reliable timeline for a project?
* **[12:18](#t=12:18)** Do you think about sustainable web development?
* **[16:24](#t=16:24)** What kind of tips and tricks around responsive design do you have?
* **[18:22](#t=18:22)** Sponsor: Linode
* **[18:55](#t=18:55)** How would you go about documenting your achievements throughout your career to reflect on during interviews and employee reviews?
* **[23:33](#t=23:33)** How do you plan long term for projects or goals?
* [Forever Jobless Goals worksheet](https://foreverjobless.com/fj-goals-worksheet.pdf)
* **[28:22](#t=28:22)** Can you please make a fundamentals episode that only cares about clarifying the terms everyone assume to be well known to even beginner devs?
* [22 Buzzwords Explained](https://syntax.fm/show/017/22-buzz-words-explained-mutations-pure-functions-serverless-hoisting-mvc-more)
* **[31:01](#t=31:01)** Sponsor: LogRocket
* **[32:20](#t=32:20)** How would one go about animating a gradient background based on mouse movement?
* [JavaScript 30](https://javascript30.com)
* **[38:13](#t=38:13)** Is there any way using the children API to render the close button and menu items in different locations in the menu component?
* [@Luke_lafr come on the show!](https://twitter.com/luke_lafr)
* **[42:04](#t=42:04)** Where should I begin with design systems?
* **[48:10](#t=48:10)** Sponsor: Sanity
* **[49:24](#t=49:24)** Is JSON always safe?
* **[55:01](#t=55:01)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Thorn Razor](https://amzn.to/3dqRqdq), [Rockwell Blade Bank](https://amzn.to/3BvqnWb)
* Wes: [Milwaukee 48-22-1902 Fastback II](https://amzn.to/3BSe73K)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses) / [Beginner JavaScript](https://beginnerjavascript.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",429988cd6fbef6bb65fc2fae06ee5514a7c808d1246afecda3ec05be60a34a58,potluck-using-emoji-in-naming-project-estimates-goal-planning,/shows/519 - Potluck.md,2023-10-16 20:07:53.417,2023-10-27 15:58:10.756,TASTY
syntax_podcast_show_00520,520,Supper Club × ORMs with Nikolas Burk from Prisma,2022-10-07 12:00:00.037,https://traffic.libsyn.com/syntax/Syntax_-_520.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Nikolas Burk from Prisma about the role an ORM plays in a tech stack, how Prisma has changed over the years, ways to query data in Prisma, and how migrations work with Prisma.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Storyblok - Sponsor

Storyblok is a headless component-based CMS with a real-time visual editor. It offers the flexibility for developers to craft their perfect tech stack, but it also empowers content creators to make changes independently. The result is that every team has the freedom to quickly and easily create the ideal website with limitless extensibility. Other key features include robust Storyblok SDKs and APIs, powerful internationalization options, and an eCommerce-ready platform.

## FireHydrant - Sponsor

Incidents are hard. Managing them shouldn’t be. FireHydrant makes it easy for anyone in your organization to respond to incidents efficiently and consistently. Intuitive, guided workflows provide turn-by-turn navigation for incident response, while thoughtful prompts and powerful integrations capture all of your incident data to drive useful retros and actionable analytics.

Did we mention that FireHydrant is free? Get started at [Firehydrant.com/syntax](https://firehydrant.com/syntax).

## Show Notes

* **[00:35](#t=00:35)** Welcome
* **[01:30](#t=01:30)** Guest intro
* [@NikolasBurk on Twitter](https://twitter.com/nikolasburk)
* **[04:56](#t=04:56)** How has Prisma evolved?
* [Prisma](https://www.prisma.io)
* [Keystone](https://keystonejs.com)
* [GraphQL](https://www.graphql.com)
* **[10:44](#t=10:44)** What was Prisma V1?
* **[17:04](#t=17:04)** Is there any GraphQL specific functions in Prismic?
* **[21:26](#t=21:26)** Sponsor: Hasura
* **[22:26](#t=22:26)** What role does an ORM play in a tech stack?
* **[29:54](#t=29:54)** What is Planetscale?
* [Planetscale](https://planetscale.com)
* [The T3 Stack](https://github.com/topics/t3-stack)
* **[32:22](#t=32:22)** Where does TRPC fit?
* [tRPC](https://trpc.io)
* **[33:46](#t=33:46)** Sponsor: Storyblok
* **[35:28](#t=35:28)** What is an ORM?
* [Prisma VS Code plugin](https://marketplace.visualstudio.com/items?itemName=Prisma.prisma)
* **[42:00](#t=42:00)** How do migrations work with Prisma?
* **[45:58](#t=45:58)** Query your data with Prisma client
* **[49:43](#t=49:43)** Have you looked into alternative JavaScript environments?
* **[55:16](#t=55:16)** Sponsor: FireHydrant
* **[57:05](#t=57:05)** Supper Club questions
* **[58:50](#t=58:50)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Lichess](https://lichess.org/)

## Shameless Plugs

* [Prisma blog](https://www.prisma.io/blog/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",1848a497e436bfbf74cef50f41f48aecd5d0ea7b4eee11a05a499e0f9c9616e5,supper-club-orms-with-nikolas-burk-from-prisma,/shows/520 - Supper with Nikolas Burk.md,2023-10-16 20:07:53.460,2023-10-27 15:58:10.808,SUPPER
syntax_podcast_show_00521,521,"Syntactic Sugar, Declarative and First Class Citizens? What does that even mean?",2022-10-10 12:00:00.711,https://traffic.libsyn.com/syntax/Syntax_-_521.mp3,"
In this Hasty Treat, Scott and Wes explain what the jargon you hear in JavaScript means.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax) 

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:06](#t=01:06)** Sponsor: Sentry
* **[01:59](#t=01:59)** Sponsor: Freshbooks
* **[02:27](#t=02:27)** What does that even mean?
* **[02:55](#t=02:55)** Everything in JavaScript is an Object! 
* **[04:43](#t=04:43)** X is just Syntactic Sugar
* **[09:00](#t=09:00)** Functions are first class citizens
* **[10:04](#t=10:04)** Object Literals or Template Literals
* **[11:12](#t=11:12)** Declarative vs Imperative

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets

",dbd2a0d02670a81673706cf29508ccb641266d3c95a493c88ec634444c8cc1cb,syntactic-sugar-declarative-and-first-class-citizens-what-does-that-even-mean,/shows/521 - hasty.md,2023-10-16 20:07:53.576,2023-10-27 15:58:10.899,HASTY
syntax_podcast_show_00522,522,Use The Platform!,2022-10-12 12:00:00.048,https://traffic.libsyn.com/syntax/Syntax_-_522.mp3,"
In this episode of Syntax, Wes and Scott talk about the benefits of sticking to the web platform that is available to you through APIs you may not know about.

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:15](#t=01:15)** Fogging the boats
* **[04:25](#t=04:25)** Use the platform
* **[06:32](#t=06:32)** URLSearchParams
* **[10:04](#t=10:04)** Pushstate and History API
* [Pushstate](https://developer.mozilla.org/en-US/docs/Web/API/History)
* **[13:46](#t=13:46)** Internationalization API
* [Internationalization API](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl)
* [Syntax episode 153](https://syntax.fm/show/153/hasty-treat-new-intl-methods-are-straight-fire)
* **[16:03](#t=16:03)** FormData API
* [MDN Docs](https://developer.mozilla.org/en-US/)
* [Clipboard API tutorial](https://leveluptutorials.com/posts/you-don-t-need-a-dependency-clipboard-api)
* **[20:31](#t=20:31)** Sponsor: Prismic
* **[21:23](#t=21:23)** All of the DOM API
* **[24:12](#t=24:12)** Vanilla JS
* **[26:06](#t=26:06)** Localstorage and IndexDB
* **[29:18](#t=29:18)** Web Animations API
* **[31:10](#t=31:10)** Sponsor: LogRocket
* **[32:39](#t=32:39)** Endless other browser apis
* **[38:22](#t=38:22)** Shadow DOM and Web Components
* [Web Components for beginners](https://leveluptutorials.com/tutorials/web-components-for-beginners/what-are-web-components)
* **[42:57](#t=42:57)** CSS variables
* **[46:05](#t=46:05)** HTML
* **[47:27](#t=47:27)** Sponsor: Sanity
* **[49:19](#t=49:19)** More HTML
* **[54:12](#t=54:12)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Cable sleeve](https://amzn.to/3UE3toy)
* Wes: [Kindling splitter](https://www.princessauto.com/en/wall-mount-kindling-splitter-with-10-in-blade/product/PA0008667727)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets

",c44728f57d109f14f915592aed4e6f348b27e337762fb2e844af6185087d4e4f,use-the-platform,/shows/522 - tasty Use The Platform.md,2023-10-16 20:07:53.609,2023-10-27 15:58:10.950,TASTY
syntax_podcast_show_00523,523,"Supper Club × Neovim, Lua, RPC and Twitch with TJ DeVries",2022-10-14 12:00:00.604,https://traffic.libsyn.com/syntax/Syntax_-_523.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with TJ DeVries about his work on Neovim, programming in Lua, the benefits of RPC, live streaming your work day, and PDE.

## FireHydrant - Sponsor

Incidents are hard. Managing them shouldn’t be. FireHydrant makes it easy for anyone in your organization to respond to incidents efficiently and consistently. Intuitive, guided workflows provide turn-by-turn navigation for incident response, while thoughtful prompts and powerful integrations capture all of your incident data to drive useful retros and actionable analytics.

## Hasura - Sponsor

With Hasura, you can get a fully managed, production-ready GraphQL API as a service to help you build modern apps faster. You can get started for free in 30 seconds, or if you want to try out the Standard tier for zero cost, use the code “TryHasura” at this link: [hasura.info](https://hasura.info/freetrial). We’ve also got an amazing selection of GraphQL tutorials at [hasura.io/learn](https://hasura.io/learn).

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [Gatsby.dev/Syntax](https://gatsby.dev/Syntax) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:13](#t=01:13)** Guest introduction
* [Teej_dv on Twitter](https://twitter.com/teej_dv)
* [TJ Devries](https://github.com/tjdevries/)
* [Teej_DV on Twitch](https://www.twitch.tv/teej_dv)
* [TJ on YouTube](https://www.youtube.com/c/TjDeVries)
* [Telescope on GitHub](https://github.com/nvim-telescope/telescope.nvim)
* [Neovim on GitHub](https://github.com/neovim/neovim)
* [Syntax 508 with The Primeagan](https://syntax.fm/show/508/supper-club-the-primeagan-vim-streaming-rust-all-around-interesting-guy)
* **[03:15](#t=03:15)** The difference between Vim and Neovim
* **[06:14](#t=06:14)** Why did you choose to write in Lua?
* [Lua](https://www.lua.org)
* [Luajit](http://luajit.org/luajit.html)
* **[13:26](#t=13:26)** What is adapative UI in Neovim?
* **[17:38](#t=17:38)** Lunarvim and alternatives
* [Fvim](https://github.com/yatli/fvim)
* [LunarVim](https://www.lunarvim.org)
* **[20:24](#t=20:24)** Personalized development environment PDE
* [PDE](https://www.youtube.com/watch?v=QMVIJhC9Veg)
* [Firenvim](https://github.com/glacambre/firenvim)
* **[22:40](#t=22:40)** Sponsor: FireHydrant
* **[23:21](#t=23:21)** Benefits of RPC
* **[30:34](#t=30:34)** Is working on Neovim your job?
* [Sponsor Neovim](https://github.com/sponsors/neovim)
* [Sourcegraph](https://sourcegraph.com)
* **[31:30](#t=31:30)** What is your approach to streaming?
* **[34:11](#t=34:11)** Did you go to school for computer science?
* **[39:12](#t=39:12)** Sponsor: Gatsby
* **[39:46](#t=39:46)** Supper Club questions
* [System76](https://system76.com)
* [Pop](https://pop.system76.com)
* [Dactyl Manuform Keyboard Kit](https://www.diykeyboards.com/keyboards/keyboard-kits/product/dactyl-manuform-kit)
* [Jetbrains Mono](https://www.jetbrains.com/lp/mono/)
* **[49:52](#t=49:52)** Sponsor: Hasura
* **[50:47](#t=50:47)** SIIIIICK ××× PIIIICKS ×××

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e6cb7627df6d2c822cfa9e571c9d99cc1c5ecbe41b37427eaef293148f85c085,supper-club-neovim-lua-rpc-and-twitch-with-tj-devries,/shows/523 - Supper.md,2023-10-16 20:07:53.675,2023-10-27 15:58:11.007,SUPPER
syntax_podcast_show_00524,524,Bookmarklets,2022-10-17 12:00:00.227,https://traffic.libsyn.com/syntax/Syntax_-_524.mp3,"
In this Hasty Treat, Scott and Wes take Matt Busche's suggestion and talk all about bookmarklets and scripts to modify or manipulate web pages.

## MagicBell - Sponsor

[MagicBell](https://www.magicbell.com) is the the notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[02:02](#t=02:02)** What are bookmarklets?
* [Matt Busche's fav bookmarklets Gist](https://gist.github.com/mrbusche/d197281d654b371a1fadfd9f4888358a)
* [Bookmarklet Maker](https://caiorss.github.io/bookmarklet-maker/)
* [CSS Tricks - Web Development Bookmarklets](https://css-tricks.com/web-development-bookmarklets/)
* **[04:49](#t=04:49)** Using an Immediately invoked function expression
* **[09:22](#t=09:22)** Greasemonkey
* [Greasemonkey](https://www.greasespot.net)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",83b366f3404134a635e3d2830ef4b13534c19df72f6e9006b1bbb6b78786854f,bookmarklets,/shows/524 - Hasty Bookmarklets.md,2023-10-16 20:07:53.826,2023-10-27 15:58:11.122,HASTY
syntax_podcast_show_00525,525,2022 CSS Trends and Usage Web Almanac,2022-10-19 12:00:00.437,https://traffic.libsyn.com/syntax/Syntax_-_525.mp3,"
In this episode of Syntax, Wes and Scott talk about some of the CSS Trends and Usage for 2022 as documented by the Web Almanac - and give some great cleaning tips along the way.

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[02:15](#t=02:15)** Cleaning Sick Pick
* [Bar Keepers Friend](https://barkeepersfriend.com)
* **[04:40](#t=04:40)** Web Almanac
* [Web Almanac](https://almanac.httparchive.org/)
* **[08:23](#t=08:23)** CSS stylesheets size grow
* **[09:49](#t=09:49)** Popular CSS Class names
* **[15:29](#t=15:29)** How many websites use !important?
* **[18:11](#t=18:11)** Popular pseudo classes
* **[20:27](#t=20:27)** Sponsor: Prismic
* **[21:38](#t=21:38)** CSS Attribute Selectors
* **[27:03](#t=27:03)** Most popular units
* **[32:23](#t=32:23)** calc properties
* **[33:13](#t=33:13)** Sponsor: LogRocket
* **[35:15](#t=35:15)** Top operators when using calc
* **[36:21](#t=36:21)** Custom Property Names
* **[37:39](#t=37:39)** Property Value types
* **[38:00](#t=38:00)** Functions
* **[39:27](#t=39:27)** Color names
* **[42:02](#t=42:02)** Format of color
* **[43:50](#t=43:50)** Most popular gardient on the web
* **[47:27](#t=47:27)** Sponsor: Freshbooks
* **[47:57](#t=47:57)** We don't know the web
* **[50:39](#t=50:39)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Dawn](https://amzn.to/3SStChK)
* Wes: [Flat speaker wire](https://amzn.to/3CtIuO8)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4f7c077d96999317d045239db6f434e4dc216778dbcf61fcc3274e8a3882a2a7,2022-css-trends-and-usage-web-almanac,/shows/525 - HTTP Archive.md,2023-10-16 20:07:53.859,2023-10-27 15:58:11.176,TASTY
syntax_podcast_show_00526,526,Supper Club × tRPC With Alex KATT Johansson,2022-10-21 12:00:00.648,https://traffic.libsyn.com/syntax/Syntax_-_526.mp3,"
In this supper club episode of Syntax, Scott talks with Alex Johansson about his work on tRPC, how it compares to other tools like GraphQL, and what's next for tRPC?

## Polypane - Sponsor

If you want to build a great website or web app, there's a million things you need to take care of: responsive design, accessibility, SEO, Meta tags and page structure, to name just a few. Polypane is the browser for developers with tools that help with literally every part of modern web development, helping you save hours (and frustration!) with every project. It shows your site in multiple fully-synced viewports at once, Gives you advice on better accessibility and gives you insight into your performance and quality. Go to [polypane.app/syntax](https://polypane.app/syntax) to start a 14 day free trial and use SYNTAX20 for a 20% discount at checkout.

## FireHydrant - Sponsor

Incidents are hard. Managing them shouldn’t be. FireHydrant makes it easy for anyone in your organization to respond to incidents efficiently and consistently. Intuitive, guided workflows provide turn-by-turn navigation for incident response, while thoughtful prompts and powerful integrations capture all of your incident data to drive useful retros and actionable analytics.

## Kontent by Kentico - Sponsor

Kontent by Kentico is a headless CMS that provides live editing experience to non-technical users and hands you the technical tools to build websites, mobile apps, voice assistants, or anything else where you need content. Use REST API or GraphQL and get your content via the global Fastly CDN. Designed to unify all your content and operations, in compliance with ISO27001 and SOC2Type2 certifications.[Spin up a new project today](kontent.ai/syntax) and discover Kontent.

## Show Notes

* **[00:37](#t=00:37)** Welcome
* **[01:56](#t=01:56)** Guest introduction
* [@Alexdotjs on Twitter](https://twitter.com/alexdotjs)
* [Alex on GitHub](https://github.com/KATT)
* [Katt.dev](https://katt.dev)
* [tRPC.io](https://trpc.io)
* **[02:47](#t=02:47)** What is tRPC?
* **[06:56](#t=06:56)** How does type safety work?
* **[10:38](#t=10:38)** Sponsor: Polypane
* **[13:20](#t=13:20)** What is Zod?
* **[17:39](#t=17:39)** How does tRPC relate to GraphQL?
* **[23:47](#t=23:47)** Sponsor: FireHydrant
* **[25:25](#t=25:25)** What about a data loader?
* **[29:04](#t=29:04)** React or NextJS adapters
* **[30:41](#t=30:41)** How does it feel when people start building off your project?
* **[33:58](#t=33:58)** Sponsor: Kontent by Kentico
* **[37:34](#t=37:34)** What's next for tRPC?
* **[42:42](#t=42:42)** How is error handling done?
* **[48:43](#t=48:43)** Supper Club questions
* **[54:42](#t=54:42)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Kysely](https://github.com/koskimas/kysely)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c72716ff85746423f6166a87862fb6317d6d9d2a04992cd2607a5f6eeb43992f,supper-club-trpc-with-alex-katt-johansson,/shows/526 - supper Alex.md,2023-10-16 20:07:53.906,2023-10-27 15:58:11.237,SUPPER
syntax_podcast_show_00527,527,Hydration & New Frameworks Like Qwik,2022-10-24 12:00:00.935,https://traffic.libsyn.com/syntax/Syntax_-_527.mp3,"
In this Hasty Treat, Scott and Wes talk about Qwik, a new framework designed for the edge. How are things like hydration, lazy loading, rendering, and optimization handled by Qwik?

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:18](#t=00:18)** Welcome
* **[01:25](#t=01:25)** Sponsor: Sentry
* **[02:47](#t=02:47)** Sponsor: Sanity
* **[04:50](#t=04:50)** What is Qwik?
* [Qwik](https://qwik.builder.io)
* **[08:05](#t=08:05)** What is SSR?
* **[09:25](#t=09:25)** Working with hydration
* **[15:31](#t=15:31)** Lazy loading, reduced rendering, and Qwik optimizer
* **[17:30](#t=17:30)** Edge first
* **[18:55](#t=18:55)** Data loading or data actions issues
* **[20:49](#t=20:49)** Qwik City
* [Qwik City](https://qwik.builder.io/qwikcity/overview/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",77263f1ccebda5672c2ce53144cc06f47e9902c74422e5d1019cda5dfda1b825,hydration-and-new-frameworks-like-qwik,/shows/527 - Hasty Qwik.md,2023-10-16 20:07:54.058,2023-10-27 15:58:11.369,HASTY
syntax_podcast_show_00528,528,Spooky Web Dev Stories 2022,2022-10-26 12:00:00.184,https://traffic.libsyn.com/syntax/Syntax_-_528.mp3,"
In this episode of Syntax, Wes and Scott tell your spookiest scary web dev stories including spooky render times, push notification hell, dark Friday, and more!

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:15](#t=00:15)** Welcome
* **[03:00](#t=03:00)** Spooky Render Times
* [React Virtualized](https://www.npmjs.com/package/react-virtualized)
* [React Window](https://www.npmjs.com/package/react-window)
* **[09:19](#t=09:19)** Push Notification Hell
* **[13:11](#t=13:11)** Dark Friday
* **[14:19](#t=14:19)** Tiny Ints with Big Problems
* **[16:57](#t=16:57)** A/B Testing
* **[18:47](#t=18:47)** Confirm Purchase button mistake
* **[21:21](#t=21:21)** Sponsor: Sentry
* **[22:34](#t=22:34)** Dike Leak
* **[25:14](#t=25:14)** A Steep Grade
* **[32:41](#t=32:41)** Falkland Islands mixup
* **[33:40](#t=33:40)** Conference mixup
* **[36:34](#t=36:34)** Sponsor: Prismic
* **[37:58](#t=37:58)** Doctor Who Ipsum
* **[43:55](#t=43:55)** Marketplace payouts
* **[46:38](#t=46:38)** Sponsor: Freshbooks
* **[47:42](#t=47:42)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [PopSocket Wallet](https://amzn.to/3SXyimF)
* Wes: [Water flosser](https://amzn.to/3T10epT)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",72c2e1bdb4a4795e4c9d0df26e4228dc5d7107c38e0e335f41e3e3f7ec8cff05,spooky-web-dev-stories-2022,/shows/528 - Tasty.md,2023-10-16 20:07:54.097,2023-10-27 15:58:11.421,TASTY
syntax_podcast_show_00529,529,Supper Club × GraphQL as an Aggregation Layer with Filipe Ferreira of Sky TV,2022-10-28 12:00:00.729,https://traffic.libsyn.com/syntax/Syntax_-_529.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Filipe Ferreira of Sky TV about the tech stack used to deliver streaming TV content, build Apple TV apps, host media, and more.

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [Gatsby.dev/Syntax](https://gatsby.dev/Syntax) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Retool - Sponsor

Retool is the fast way to build internal tools. Visually design apps that interface with any database or API. Switch to code nearly anywhere to customize how your apps look and work. With Retool, you ship more apps and move your business forward—all in less time.

[retool.com/syntax](http://retool.com/syntax)

## Storyblok - Sponsor

[Storyblok](https://www.storyblok.com/?utm_source=syntaxfm&utm_medium=sponsor&utm_campaign=AWA_SPON_SFM_TRA&utm_content=syntaxfm-podcast) is a headless component-based CMS with a real-time visual editor. It offers the flexibility for developers to craft their perfect tech stack, but it also empowers content creators to make changes independently. The result is that every team has the freedom to quickly and easily create the ideal website with limitless extensibility. Other key features include robust Storyblok SDKs and APIs, powerful internationalization options, and an eCommerce-ready platform.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[02:15](#t=02:15)** Guest introduction
* [fbritoferreira.com](https://fbritoferreira.com)
* [@fbritoferreira](https://twitter.com/fbritoferreira)
* [@SkyShowtime](https://mobile.twitter.com/SkyShowtime)
* [Peacock](https://mobile.twitter.com/peacock)
* **[04:13](#t=04:13)** What do the systems look like inside of Sky?
* [GraphQL](https://www.graphql.com)
* [Redis](https://redis.io)
* [Apollo GraphQL](https://www.apollographql.com)
* **[06:26](#t=06:26)** Do you use federation?
* **[07:50](#t=07:50)** How do you handle caching?
* **[11:24](#t=11:24)** What's the tech stack for the front end?
* **[13:30](#t=13:30)** Do you cache on client side?
* **[15:27](#t=15:27)** How long has Sky been serverless?
* **[16:55](#t=16:55)** Sponsor: Gatsby
* **[18:05](#t=18:05)** How was Sky's Apple TV app built?
* **[21:17](#t=21:17)** Where did you host media?
* [AWS Streaming](https://aws.amazon.com/media/direct-to-consumer-d2c-streaming/)
* [Mux](https://www.mux.com)
* **[24:37](#t=24:37)** Supporting live events
* **[28:03](#t=28:03)** Sponsor: Storyblok
* **[30:05](#t=30:05)** What language are you writing the GraphQL layer?
* [The Guild](https://www.the-guild.dev)
* **[32:22](#t=32:22)** How do you define your types?
* **[36:40](#t=36:40)** Supper Club questions
* [Apple Magic Keyboard with Touch ID](https://www.apple.com/shop/product/MK293LL/A/magic-keyboard-with-touch-id-for-mac-models-with-apple-silicon-us-english?fnode=882ee89d5200bd42d9dfdb18ea688d2284453eef35a10d6d1154de2d917c59e1edbd4796140e0decd50ffa8f8c4257d359a9c5370dd91b4fd7ff1ca816e69c2101a97e0e452c1844b6387e49a9dd84f9fd4a36eb78f0f95e050323fa7fd48182)
* [Magic Keyboard with Touch ID and Numeric Keypad](https://www.apple.com/shop/product/MMMR3LL/A/magic-keyboard-with-touch-id-and-numeric-keypad-for-mac-models-with-apple-silicon-us-english-black-keys?fnode=4c07059c2c01bc9ba2a54f0652c4be0b2d1ba2671c434806d779030bf9e5528ae9e36e718a6ebb1887cb752fbad06477606b200b4eefc2a66c894a24cc214c6c36485aae46d6632518a80da22efd54cbc2ed617c7fa8c6737af423fe6f3208d05f33e8df5aa6fbf8da0267b2be277c39)
* **[44:28](#t=44:28)** Sponsor: ReTool
* **[45:22](#t=45:22)** AppWrite
* [AppWrite](https://appwrite.io)
* **[48:42](#t=48:42)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Anker 733 Power Bank (GaNPrime PowerCore 65W)](https://www.anker.com/products/a1651?ref=ganprime_top_itemlist&variant=41974350250134)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5eea16cd7d5f4031269ea817ef4f17a44551b1cb9c987ffdc7586fa1e1aab4de,supper-club-graphql-as-an-aggregation-layer-with-filipe-ferreira-of-sky-tv,/shows/529 - Supper.md,2023-10-16 20:07:54.153,2023-10-27 15:58:11.469,SUPPER
syntax_podcast_show_00530,530,Explained - Buzz Words and Concepts,2022-10-31 12:00:00.415,https://traffic.libsyn.com/syntax/Syntax_-_530.mp3,"
In this Hasty Treat, Scott and Wes explain more buzz words like schema, promises, async, sync, dom vs shadow dom vs page HTML, props, and more.

## Appwrite - Sponsor

Appwrite is a self-hosted backend-as-a-service platform that provides developers with all the core APIs required to build any application. Get free cloud credits by signing up for early access to the [Appwrite Cloud launch](https://appwrite.io/cloud).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:21](#t=00:21)** Welcome
* **[01:17](#t=01:17)** Sponsor: Appwrite
* **[03:16](#t=03:16)** Sponsor: Sanity
* **[04:08](#t=04:08)** Schema
* [Zod](https://zod.dev)
* [Apollo GraphQL](https://www.apollographql.com)
* **[07:25](#t=07:25)** Promises
* **[08:47](#t=08:47)** Async, Sync, Parallel and Concurrent
* **[13:15](#t=13:15)** Dom vs Shadow Dom VS Page HTML
* **[16:21](#t=16:21)** Methods vs Functions
* **[18:18](#t=18:18)** Props
* **[20:27](#t=20:27)** HTTP Requests are Stateless

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f18e1c6de8d873f8c19658d915929767cc106cb46aaf20f7188346f3aa1ed246,explained-buzz-words-and-concepts,/shows/530 - Hasty.md,2023-10-16 20:07:54.253,2023-10-27 15:58:11.567,HASTY
syntax_podcast_show_00531,531,Spooky Web Dev Stories Part 2,2022-11-02 12:00:00.415,https://traffic.libsyn.com/syntax/Syntax_-_531.mp3,"
In this episode of Syntax, Wes and Scott tell more of your scary web dev stories including lorem ipsum mistakes, naming something Skynet, blackouts, Twitch streaming, and more!

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:12](#t=00:12)** Weeeeeelcome
* **[02:11](#t=02:11)** Slipsum mistake
* [Slipsum](http://slipsum.com/)
* **[03:40](#t=03:40)** Brotli scaling explosion
* [When JavaScript Bytes](https://www.youtube.com/watch?v=JvJ0v5OohNg&t=766s)
* **[05:14](#t=05:14)** Email loop
* [Breaking Production with 56,000 emails](https://davidtruxall.com/breaking-production/)
* **[05:36](#t=05:36)** DevOops Magento store
* [Example.com](http://example.com)
* **[08:26](#t=08:26)** Scary animal stories
* **[11:09](#t=11:09)** Naming something Skynet
* **[11:58](#t=11:58)** 2003 Blackout
* **[13:16](#t=13:16)** ExtJS error binding
* **[17:09](#t=17:09)** Sponsor: Linode
* **[17:55](#t=17:55)** Lead gen forms and captcha
* [Issue Renaming upper-case 'Sirupsen' to 'sirupsen'](https://github.com/sirupsen/logrus/pull/384)
* [Follow up](https://github.com/sirupsen/logrus/issues/451)
* **[19:51](#t=19:51)** Scarlet Letter
* **[21:51](#t=21:51)** MongoDB achievement story
* [Adam Coster](https://twitter.com/costerad)
* **[26:14](#t=26:14)** Sponsor: Auth0
* **[28:11](#t=28:11)** Drupal and mysql database fun
* **[30:10](#t=30:10)** Nervous Twitch
* **[34:03](#t=34:03)** FTP access story
* **[37:24](#t=37:24)** Sponsor: LogRocket
* **[38:53](#t=38:53)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Ear foam tips](https://amzn.to/3CTYyc8)
* Wes: [Stepped drill bit](https://amzn.to/3CVndNG) / [Aliexpress link](https://www.aliexpress.com/item/1005002784042553.html?spm=a2g0o.productlist.main.17.14cb5924qXSj0Z&algo_pvid=c4935816-ccfa-456f-9b92-27d3baea64c4&algo_exp_id=c4935816-ccfa-456f-9b92-27d3baea64c4-8&pdp_ext_f=%7B%22sku_id%22%3A%2212000022168731182%22%7D&pdp_npi=2%40dis%21CAD%219.81%216.87%21%21%21%21%21%402102111816656825317085834d0747%2112000022168731182%21sea&curPageLogUid=u2YOvotleaFP)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ff8b414b1c4a40d7de21720a2c76e9c42d92052e7da88d450a50f3354b6a5490,spooky-web-dev-stories-part-2,/shows/531 - Tasty Scary part 2.md,2023-10-16 20:07:54.288,2023-10-27 15:58:11.622,TASTY
syntax_podcast_show_00532,532,Supper Club × Coding with ADHD with Dr. Courtney Tolinski,2022-11-04 12:00:00.585,https://traffic.libsyn.com/syntax/Syntax_-_532.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Dr. Courtney Tolinski about ADHD, how to tell if you have ADHD, issues related to ADHD for computer workers, anxiety vs ADHD, and more.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Appwrite - Sponsor

Appwrite is a self-hosted backend-as-a-service platform that provides developers with all the core APIs required to build any application. Get free cloud credits by [signing up for early access to the Appwrite Cloud launch](https://appwrite.io/cloud)!

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[02:11](#t=02:11)** Guest introduction
* **[03:00](#t=03:00)** Do I have ADHD?
* [CHADD](https://chadd.org)
* **[09:12](#t=09:12)** What is the threshold for diagnosis?
* **[11:43](#t=11:43)** Are there other issues for computer workers?
* [Arc Browser](https://arc.net)
* [Syntax 513 - The Productivity Episode](https://syntax.fm/show/513/the-productivity-episode)
* **[15:27](#t=15:27)** Avoiding difficult or boring things
* **[17:04](#t=17:04)** Structuring your day
* **[18:41](#t=18:41)** Sponsor: LogRocket
* **[20:12](#t=20:12)** Any tips for working in a distracting environment?
* [MyNoise.net](https://mynoise.net)
* [Headspace](https://www.headspace.com)
* **[23:40](#t=23:40)** Can I learn to deal with things?
* **[27:28](#t=27:28)** How can I support a team member with ADHD?
* [Missive](https://missiveapp.com)
* **[31:51](#t=31:51)** Sponsor: Appwrite
* **[32:47](#t=32:47)** Any lifestyle changes to help with ADHD?
* **[38:26](#t=38:26)** How do you find medical help?
* **[42:39](#t=42:39)** How do you tell the difference between discipline vs ADHD?
* **[47:05](#t=47:05)** Anxiety vs ADHD?
* **[48:36](#t=48:36)** Dyslexia and ADHD
* **[53:31](#t=53:31)** Inheritable or genetic
* **[54:50](#t=54:50)** Don't rely on self-diagnoses
* [Psychology Today](https://www.psychologytoday.com/ca)
* **[55:48](#t=55:48)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Taking Charge of Adult ADHD](https://amzn.to/3eB7lq3)
* [Bird feeder](https://amzn.to/3ez95An)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2cb40ba9a78a7a98473a4ea9faf386ae699c60c1d8bc6fca9b0ee5a8d330ab12,supper-club-coding-with-adhd-with-dr-courtney-tolinski,/shows/532 - Supper club.md,2023-10-16 20:07:54.326,2023-10-27 15:58:11.700,SUPPER
syntax_podcast_show_00533,533,Zod Schema Validation and Type Generation,2022-11-07 12:00:00.794,https://traffic.libsyn.com/syntax/Syntax_-_533.mp3,"
In this Hasty Treat, Scott and Wes talk about Zod, a TypeScript-first schema validation with static type inference. How are we using Zod? What do we like? And our thoughts on the Zod ecosystem.

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:48](#t=01:48)** Sponsor: LogRocket
* **[02:54](#t=02:54)** Sponsor: Linode
* **[04:07](#t=04:07)** Minecraft thoughts
* [Minecraft](https://www.minecraft.net)
* **[06:25](#t=06:25)** Scratch
* [Scratch](https://scratch.mit.edu)
* **[07:19](#t=07:19)** What is Zod?
* [Zod](https://zod.dev)
* [Zod comparison](https://zod.dev/?id=comparison)
* **[10:05](#t=10:05)** Features of Zod
* **[13:24](#t=13:24)** How we're using Zod
* **[14:40](#t=14:40)** How Zod works with MongoDB
* **[15:51](#t=15:51)** 3rd party plugins
* **[19:35](#t=19:35)** Zod ecosystem
* [Zod Ecosystem](https://github.com/colinhacks/zod#ecosystem)
* **[22:22](#t=22:22)** Asynchronous validation

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",d8c39880efd7fd47ccbfdf5b669c8d74e5ca1dc4f7b3691fc2e8e9cb66a1ce17,zod-schema-validation-and-type-generation,/shows/533 - Zod.md,2023-10-16 20:07:54.539,2023-10-27 15:58:11.851,HASTY
syntax_podcast_show_00534,534,Potluck × Meeting IRL × SSG vs SSR × Domain Privacy,2022-11-09 18:59:41.201,https://traffic.libsyn.com/syntax/Syntax_-_534.mp3,"
In this Potluck episode of Syntax, Wes and Scott answer your questions about meeting IRL, bookmarks, SSG vs SSR, domain privacy, deploying monorepos, and more.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:08](#t=00:08)** Welcome
* **[01:20](#t=01:20)** Weather updates
* **[02:21](#t=02:21)** How often have you gotten together in real life?
* [Jamstack Conf](https://jamstack.org/conf/)
* [Reactathon](https://www.reactathon.com)
* **[05:33](#t=05:33)** What are people using to bookmark sites?
* [Arc Browser](https://arc.net)
* **[09:03](#t=09:03)** When not to use Static Site Generation (SSG), and when to use Server-side Rendering (SSR)?
* [Svelte Kit](https://kit.svelte.dev)
* **[13:53](#t=13:53)** How do you do correct error handling to catch everything?
* [Sentry.io](https://sentry.io)
* **[21:13](#t=21:13)** Sponsor: Sentry
* **[22:50](#t=22:50)** Is there any benefit to using getters and setters in classes set them over plain methods?
* **[27:47](#t=27:47)** Will there ever be a js framework that can SSR on a non-JS backend?
* [Render](https://render.com)
* [pnpm](https://pnpm.io)
* **[32:40](#t=32:40)** Have either of you thought about learning and teaching Python or Django?
* **[34:56](#t=34:56)** What is your opinion on purchasing ""Domain Privacy"" with each domain?
* **[37:49](#t=37:49)** Sponsor: Sanity
* **[38:44](#t=38:44)** Domain privacy continued
* **[39:22](#t=39:22)** How you deploy monorepo packages?
* [Tanstack](https://tanstack.com)
* [Vite](https://vitejs.dev)
* **[43:48](#t=43:48)** As a member of a non margin group should I avoid applying for jobs when they say they welcome applicants who are of a marginalized group to support diversity?
* **[46:12](#t=46:12)** When would you, if ever, choose good-old React over something like Next JS?
* **[53:24](#t=53:24)** Sponsor: Freshbooks
* **[54:16](#t=54:16)** Is it preferred to import via absolute reference or relative reference?
* **[00:23](#t=00:23)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Air Compressor](https://amzn.to/3TxLUFx)
* Wes: [Blue Flush Cutter Mini Diagonal Cutting Pliers Side Cutter Nippers Wire Cutter](https://amzn.to/3VVnXK0)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/tutorials/keystone-js/introduction)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",fd9cc299d50dc8b0c960d1ee24d5e2ee53a036397c9ba4a26f69b5c9093e8994,potluck-meeting-irl-ssg-vs-ssr-domain-privacy,/shows/534 - Potluck.md,2023-10-16 20:07:54.581,2023-10-27 15:58:11.900,TASTY
syntax_podcast_show_00535,535,Supper Club × Open Table LIVE SHOW,2022-11-11 12:00:00.919,https://traffic.libsyn.com/syntax/Syntax_-_535.mp3,"
In this supper club episode of Syntax, Wes and Scott recorded a live open table episode with guests calling in to talk about Wasm, building Riverside.fm, home networking, getting a job at Microsoft, Svelte and Sveltekit, htmx, and more!

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Appwrite - Sponsor

Appwrite is a self-hosted backend-as-a-service platform that provides developers with all the core APIs required to build any application. Get free cloud credits by [signing up for early access to the Appwrite Cloud launch](https://appwrite.io/cloud)!

## Show Notes

* **[00:30](#t=00:30)** Welcome
* **[01:49](#t=01:49)** Safari aspect ratio bug
* **[04:17](#t=04:17)** Thoughts on Vercel announcements?
* [NextJS Conf](https://nextjs.org/conf)
* **[10:07](#t=10:07)** Gideon Riverside CTO
* [Riverside.fm Careers](https://riverside.fm/careers)
* **[14:44](#t=14:44)** Do JS devs need to branch out?
* **[16:52](#t=16:52)** Wasm
* [Web Assembly (WASM)](https://webassembly.org)
* [Rustlings](https://github.com/rust-lang/rustlings)
* **[19:46](#t=19:46)** Sponsor: Auth0
* **[21:03](#t=21:03)** Which company will Vercel aquire next?
* [Guillermo Rauch](https://twitter.com/rauchg)
* [Akamai Acquires Linode](https://www.akamai.com/newsroom/press-release/akamai-to-acquire-linode)
* **[27:12](#t=27:12)** Svelte Kit and Vercel
* **[30:20](#t=30:20)** Why don't you terminate your own ethernet cables?
* **[30:58](#t=30:58)** How does Fly.io compare to Vercel?
* [Fly.io](https://fly.io)
* **[31:36](#t=31:36)** Did Wes learn Vue?
* **[32:10](#t=32:10)** Brad jumping on the Remix train
* [Remix](https://remix.run)
* **[34:18](#t=34:18)** Layout shift caused by images in Markdown
* **[38:30](#t=38:30)** Maintaining home networking
* [Ubiquiti](https://www.ui.com)
* **[44:44](#t=44:44)** Taking a course lead to a job with Microsoft
* [Soumya's YouTube - Geekysrm](https://www.youtube.com/geekysrm) / [website]( https://soumya.dev) / [Twitter](https://twitter.com/geekysrm)
* **[47:38](#t=47:38)** Sponsor: Appwrite
* **[48:39](#t=48:39)** Are you still using your Synology NAS?
* [Synology](https://www.synology.com/)
* **[53:53](#t=53:53)** Is Svelte ready for smaller team projects?
* [Svelte Kit](https://kit.svelte.dev)
* [Wyze](https://www.wyze.com)
* **[56:03](#t=56:03)** HTMX
* [htmx](https://htmx.org)
* [Alpine.js](https://alpinejs.dev)
* **[01:49](#t=01:49)** Docker Wasm preview
* [Introducing the Docker+Wasm Technical Preview](https://www.docker.com/blog/docker-wasm-technical-preview/)
* [WebAssembly System Interface](https://wasi.dev)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c3bf7b9f5f54c2c849a7ce8a173c1b976bde6795f3af737c89798f254b683131,supper-club-open-table-live-show,/shows/535 - Supper club.md,2023-10-16 20:07:54.623,2023-10-27 15:58:11.958,SUPPER
syntax_podcast_show_00536,536,"Short Form Content with Tiktok, Reels, Shorts, Tweets",2022-11-14 12:00:00.409,https://traffic.libsyn.com/syntax/Syntax_-_536.mp3,"
In this Hasty Treat, Scott and Wes talk about creating short form content for TikTok, Reels, Shorts, and tweets. What are some of the benefits and limitations of creating for vertical video, and what tools are they using to create videos.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[01:39](#t=01:39)** Sponsor: Sentry
* **[02:40](#t=02:40)** Sponsor: Freshbooks
* **[04:05](#t=04:05)** Short form content intro
* [WesBos.com/tips](https://wesbos.com/tips)
* [Wes on TikTok](https://www.tiktok.com/@wesbos)
* [LevelUp Tutorials on TikTok](https://www.tiktok.com/@leveluptuts)
* [Scott Stolinski on TikTok](https://www.tiktok.com/@stolinski)
* **[07:16](#t=07:16)** The good and the bad of short form content
* **[17:13](#t=17:13)** Repurposing content
* **[18:36](#t=18:36)** Content that works
* **[21:12](#t=21:12)** Tips for making short form content
* **[24:19](#t=24:19)** Limitations of short form content
* **[31:49](#t=31:49)** Tools for editing
* [Screenflow](https://www.telestream.net/screenflow/overview.htm)
* [Descript](https://www.descript.com)
* [Detail.co](https://detail.co)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",63dba48baf40802e7afe67f1c75b32b70b2aeed8ac4dd450115f9f0e5b7f29f9,short-form-content-with-tiktok-reels-shorts-tweets,/shows/536 - Hasty Short video.md,2023-10-16 20:07:54.655,2023-10-27 15:58:12.016,HASTY
syntax_podcast_show_00537,537,CSS Trends Almanac for 2022 Part 2,2022-11-16 12:00:00.985,https://traffic.libsyn.com/syntax/Syntax_-_537_v2.mp3,"
In this episode of Syntax, it's part 2 of Wes and Scott's journey through the CSS Trends Almanac for 2022 talking through the rest of the popular CSS properties on the web.

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:06](#t=00:06)** Welcome
* [Syntax 525 - 2022 CSS Trends and Usage Web Almanac Part 1](https://syntax.fm/show/525/2022-css-trends-and-usage-web-almanac)
* **[01:22](#t=01:22)** Smart home updates
* **[04:05](#t=04:05)** Box sizing: border box
* **[06:57](#t=06:57)** CSS Columns
* **[09:20](#t=09:20)** Aspect Ratio
* [Can I Use CSS Properties Rotate](https://caniuse.com/mdn-css_properties_rotate)
* **[09:53](#t=09:53)** Transitions and animations
* **[13:36](#t=13:36)** Transition time
* **[17:05](#t=17:05)** Steps as a timing function
* **[19:01](#t=19:01)** Sponsor: Prismic
* **[19:43](#t=19:43)** Blend modes
* **[23:57](#t=23:57)** Responsive web design
* **[26:31](#t=26:31)** Prefers Color Scheme
* **[27:48](#t=27:48)** Popular breakpoints
* **[30:57](#t=30:57)** Sponsor: LogRocket
* **[32:06](#t=32:06)** Feature queries and @ supports
* **[34:59](#t=34:59)** Logical and physical properties
* **[37:59](#t=37:59)** css-in-js
* [Sam Magura - Why We're Breaking Up with CSS-in-JS](https://dev.to/srmagura/why-were-breaking-up-wiht-css-in-js-4g9b)
* [Brad Frost - Why We’re Breaking Up with CSS in JS](https://bradfrost.com/blog/link/why-were-breaking-up-with-css-in-js/)
* **[42:28](#t=42:28)** Sass
* **[43:20](#t=43:20)** Print styles
* **[45:38](#t=45:38)** Sponsor: Sanity
* **[46:38](#t=46:38)** Longhand properities
* **[48:21](#t=48:21)** Non-existant properties
* **[52:06](#t=52:06)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Front Bumper Drillless Plate Holder](https://amzn.to/3zwGhj6)
* Wes: [1U Server Rack](https://amzn.to/3h0xvmT)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",420f7ee69d8bed2d07834123ad138b9692bbaa9c4614d75bdc7cca26185a77fe,css-trends-almanac-for-2022-part-2,/shows/537 - Hasty CSS.md,2023-10-16 20:07:54.686,2023-10-27 15:58:12.067,TASTY
syntax_podcast_show_00538,538,Supper Club × Ryan Dahl and Deno,2022-11-18 12:00:00.611,https://traffic.libsyn.com/syntax/Syntax_-_538_v2.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Ryan Dahl about Deno. Why was Deno created? What is Deno written in? How is Deno so much faster? And what's the future of Deno?

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [Gatsby.dev/Syntax](https://gatsby.dev/Syntax) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:36](#t=00:36)** Welcome
* [Tinyclouds.org](https://tinyclouds.org)
* [Ry on GitHub](https://github.com/ry)
* [Deno](https://deno.land)
* [Deno Discord](https://discord.com/invite/deno)
* **[01:18](#t=01:18)** The introduction of Node
* **[02:51](#t=02:51)** Why are you still betting on JavaScript for the web?
* **[05:34](#t=05:34)** Why did you make Deno?
* **[09:04](#t=09:04)** How does TypeScript fit into the landscape?
* **[11:40](#t=11:40)** How is Deno so much faster?
* **[13:28](#t=13:28)** Sponsor: Sanity
* **[14:17](#t=14:17)** What is Deno written in?
* **[15:56](#t=15:56)** Should developers be learning Rust?
* **[18:27](#t=18:27)** Will libraries that work on npm eventually work in Deno?
* **[21:52](#t=21:52)** Are we going to use Node API's or web spec?
* **[24:31](#t=24:31)** Sponsor: Sentry
* **[25:31](#t=25:31)** What is tooling like for Deno?
* [WinterCG](https://wintercg.org/)
* [Deno VS Code Extension](https://marketplace.visualstudio.com/items?itemName=denoland.vscode-deno)
* **[29:27](#t=29:27)** What is Deno deploy?
* [Deno Deploy](https://deno.com/deploy)
* **[34:01](#t=34:01)** Deno's framework Fresh
* **[38:56](#t=38:56)** Client side vs server side rendering
* **[41:27](#t=41:27)** Sponsor: Gatsby
* **[42:28](#t=42:28)** What's the future of Deno?
* **[43:39](#t=43:39)** Supper club questions
* **[53:30](#t=53:30)** SIIIIICK ××× PIIIICKS ×××

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f80eb1db31372a38cf3414d51e7c43e77d8aab32fae66a3092058ce7a1dc466e,supper-club-ryan-dahl-and-deno,/shows/538 - Supper Deno.md,2023-10-16 20:07:54.720,2023-10-27 15:58:12.125,SUPPER
syntax_podcast_show_00539,539,React use() hook and Async Server Components Proposal,2022-11-21 12:00:00.626,https://traffic.libsyn.com/syntax/Syntax_-_539.mp3,"
In this Hasty Treat, Scott and Wes talk about the new proposal for React, what the basics of it are, why it's being proposed, and some benefits and issues it brings up.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes

* **[00:13](#t=00:13)** Welcome
* **[01:39](#t=01:39)** Sponsor: Sentry
* **[02:41](#t=02:41)** Auth0
* **[03:57](#t=03:57)** A bit more auth
* **[05:24](#t=05:24)** New RFC
* [RFC: First class support for promises and async/await](https://github.com/reactjs/rfcs/pull/229)
* **[08:30](#t=08:30)** What are the basics of this proposal?
* **[10:12](#t=10:12)** Scott gets a little Svelte-y
* **[11:44](#t=11:44)** Why is this being proposed?
* **[17:14](#t=17:14)** Infinite loop possibility
* **[18:44](#t=18:44)** Why is Svelte API better in this use case?
* [Tanstack](https://tanstack.com)
* [Smooshgate](https://developer.chrome.com/blog/smooshgate/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4b73cb334fed2e7164b3c569a2bec8829a0c1a4c3a8f2eff67147f3cbe824853,react-use-hook-and-async-server-components-proposal,/shows/539 - Hasty.md,2023-10-16 20:07:54.814,2023-10-27 15:58:12.224,HASTY
syntax_podcast_show_00540,540,Responsive Design Techniques,2022-11-23 12:00:00.589,https://traffic.libsyn.com/syntax/Syntax_-_540.mp3,"
In this episode of Syntax, Wes and Scott talk through some modern responsive design techniques that you may not have heard of, or haven't had a chance to use yet.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:47](#t=00:47)** Clean Talk
* **[03:55](#t=03:55)** The menu of responsive design
* [Syntax 154 with Sara Soueidan](https://syntax.fm/show/154/svgs-with-sara-soueidan)
* **[06:52](#t=06:52)** Responsive design basics
* **[11:54](#t=11:54)** What should you build for first in 2022?
* **[16:15](#t=16:15)** Shrink and grow until it looks bad
* **[21:36](#t=21:36)** Menus in responsive
* **[23:43](#t=23:43)** Sponsor: Linode
* **[24:13](#t=24:13)** Grid systems
* **[28:08](#t=28:08)** Grid and Flexbox
* [CSS Grid Course](https://cssgrid.io)
* [Flexbox Course](https://flexbox.io)
* [Can I Use](https://caniuse.com)
* **[35:02](#t=35:02)** Sponsor: LogRocket
* **[36:00](#t=36:00)** Container queries
* **[45:56](#t=45:56)** FitText
* **[49:12](#t=49:12)** How do you test these types of things?
* **[51:15](#t=51:15)** Future techniques coming
* **[53:28](#t=53:28)** Sponsor: Freshbooks
* **[53:56](#t=53:56)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Lutron Light switches](https://amzn.to/3Te5juj)
* Wes: [Sunco Lighting BR30](https://amzn.to/3UeDV0t)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",97a1317f7b1bf4b49fba7439184c3611bfd74a1ffaffe8cb1a6caf6eb6ad6899,responsive-design-techniques,/shows/540 - Tasty.md,2023-10-16 20:07:54.846,2023-10-27 15:58:12.285,TASTY
syntax_podcast_show_00541,541,Supper Club × Anything But Coding with Wes and Scott,2022-11-25 13:00:00.200,https://traffic.libsyn.com/syntax/Syntax_-_541.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Scott and Wes! Talking about BBQ, electric cars, workout equipment, home renos - but they do sneak in a bit of coding talk!

## Kontent by Kentico - Sponsor

Kontent by Kentico is a headless CMS that provides live editing experience to non-technical users and hands you the technical tools to build websites, mobile apps, voice assistants, or anything else where you need content. Use REST API or GraphQL and get your content via the global Fastly CDN. Designed to unify all your content and operations, in compliance with ISO27001 and SOC2Type2 certifications.[Spin up a new project today](kontent.ai/syntax) and discover Kontent.

## Tuple - Sponsor

This week’s sponsor is Tuple, an app built specifically for remote pair programming. The app is written in C++ and tuned for high-resolution screen sharing and low-latency remote control. Because developers deserve better than Zoom or Meet for pairing. <https://tuple.app/syntax>

## Show Notes

* **[00:37:11](#t=00:37:11)** Welcome
* **[03:18:10](#t=03:18:10)** Saskatchewan and Saskatoon Berries
* [Saskatoon Berry Barn](https://www.berrybarn.ca)
* **[05:02:14](#t=05:02:14)** TV shows we're watching
* [Amazing Race Canada](https://en.wikipedia.org/wiki/The_Amazing_Race_Canada)
* [America’s Dance Crew](https://en.wikipedia.org/wiki/America%27s_Best_Dance_Crew)
* [Lakefront Luxury](https://tv.cottagelife.com/shows/lakefront-luxury/)
* **[12:49:12](#t=12:49:12)** New house vibe
* **[18:29:06](#t=18:29:06)** Sponsor: Kontent
* **[19:13:20](#t=19:13:20)** Sauna thoughts
* **[22:58:24](#t=22:58:24)** Home gym thoughts
* [Woodupp](https://woodupp.com)
* [Tonal](https://www.tonal.com)
* **[40:22:16](#t=40:22:16)** Sponsor: Tuple
* **[41:17:11](#t=41:17:11)** 3D printer
* **[44:11:09](#t=44:11:09)** How many things can you take on?
* **[48:23:11](#t=48:23:11)** BBQ talk
* [Amazing Ribs](https://amazingribs.com)
* **[55:26:11](#t=55:26:11)** Electric car update
* [Ioniq 5](https://www.caranddriver.com/hyundai/ioniq-5)
* **[57:45:07](#t=57:45:07)** Supper Club questions
* [Level Up Tutorials VS Code Theme](https://marketplace.visualstudio.com/items?itemName=leveluptutorials.theme-levelup)
* [Quokka VS Code Extension](https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode)
* [Quokkajs](https://quokkajs.com)
* [Console-Ninja](https://console-ninja.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5a5b68e8001b80bc0a92a1cd110fc11eecd6d1117147db482a4c5b7480c4b30e,supper-club-anything-but-coding-with-wes-and-scott,/shows/541 - Supper Wes Scott.md,2023-10-16 20:07:54.888,2023-10-27 15:58:12.340,SUPPER
syntax_podcast_show_00542,542,Serverless Limitations,2022-11-28 12:00:00.439,https://traffic.libsyn.com/syntax/Syntax_-_542.mp3,"
In this episode of Syntax, Wes and Scott talk through some of the limitations of using serverless in your project.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## MagicBell - Sponsor

[MagicBell](https://www.magicbell.com) is the the notification inbox for your product. Add a MagicBell to your product for announcements, billing, workflow, and other notifications. The free plan supports up to 100 Monthly Active Users - use the coupon code SYNTAXFM for 10% off the first 12 months.

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[01:08](#t=01:08)** Sponsor: Sentry
* **[01:59](#t=01:59)** Sponsor: MagicBell
* **[03:11](#t=03:11)** Topic introduction
* **[04:44](#t=04:44)** Function limit
* [Puppeteer](https://pptr.dev)
* **[08:51](#t=08:51)** Node support
* **[10:00](#t=10:00)** Cron jobs
* **[11:12](#t=11:12)** Local development
* [Miniflare](https://miniflare.dev)
* **[11:45](#t=11:45)** Database access
* [SQLite](https://sqlite.org/index.html)
* **[12:42](#t=12:42)** Sharing code
* **[13:07](#t=13:07)** Environmental variables
* [Netlify environmental variables](https://docs.netlify.com/configure-builds/environment-variables/)
* **[14:37](#t=14:37)** Timeouts
* **[15:47](#t=15:47)** Sass is expensive
* **[17:26](#t=17:26)** Infastructure as code
* **[19:02](#t=19:02)** Search
* [Algolia](https://www.algolia.com)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://leveluptutorials.com/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",79eba7a3be23e824be01ece5b27890a996a701f8e878cff716750a2283cc381d,serverless-limitations,/shows/542 - Tasty Serverless.md,2023-10-16 20:07:54.921,2023-10-27 15:58:12.394,HASTY
syntax_podcast_show_00543,543,Potluck × Twitter Following × TypeScript × Playwright,2022-11-30 12:00:00.215,https://traffic.libsyn.com/syntax/Syntax_-_543.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about strategies to find good Twitter follows, should we use TypeScript for a company blog, what's Playwright, and more!

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:53](#t=01:53)** TikTok update
* **[02:46](#t=02:46)** What strategies do you use to find the good stuff?
* [Tweetdeck](https://tweetdeck.twitter.com)
* **[11:17](#t=11:17)** What is the clear distinction b/w how the CRUD Ops & the Real time chat protocols (XMPP, Websockets, etc) differ?
* **[15:56](#t=15:56)** Should we use TypeScript for a new blog?
* **[20:45](#t=20:45)** Sponsor: Sanity
* **[21:45](#t=21:45)** Is there any reason to still use string concatenation over template literals?
* **[26:13](#t=26:13)** What should React devs use to get initial scaffolding in place?
* [Create React App](https://create-react-app.dev)
* [Vite](https://vitejs.dev)
* [Turbo Pack](https://turbo.build/pack)
* **[29:38](#t=29:38)** What's the deal with Playwright?
* [Playwright](https://playwright.dev)
* **[34:28](#t=34:28)** Sponsor: LogRocket
* **[35:19](#t=35:19)** What separates a ""scripting"" language from a ""programming"" language?
* **[39:37:14](#t=39:37:14)** Sponsor: Prismic
* **[40:23:02](#t=40:23:02)** Do you have any tips on how to change a defeated programmer mindset?
* [Partydown](https://partytown.builder.io)
* **[47:34:07](#t=47:34:07)** How has your use of and work in the browser changed with Arc?
* [Arc Browser](https://arc.net)
* [Syntax 514 - Supper Club × Arc Browser with Hursh Agrawal](https://syntax.fm/show/514/supper-club-arc-browser-with-hursh-agrawal)
* **[49:18:15](#t=49:18:15)** Why would I attach an event listener with the useCapture argument as true?
* **[51:33:24](#t=51:33:24)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Screwless plates](https://amzn.to/3hbeT3I) / [4 pack of screwless plates](https://amzn.to/3TfUhEW)
* Wes: [Shoe Boxes for Cords](https://www.homedepot.ca/product/tuff-store-5-76l-plastic-storage-utility-tote-box-in-clear/1000705919)

## Shameless Plugs

* Scott: [LevelUp TikTok](https://www.tiktok.com/@leveluptuts)
* Wes: [Wes Bos TikTok](https://www.tiktok.com/@wesbos)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2d7efab6cc46e9ea2c5eb8f351ddc23b6f55d6dba5d2ef225235c89ff1eb8bfb,potluck-twitter-following-typescript-playwright,/shows/543 - Tasty Potluck.md,2023-10-16 20:07:54.955,2023-10-27 15:58:12.461,TASTY
syntax_podcast_show_00544,544,Supper Club × Bun with Jared Sumner,2022-12-02 12:00:00.952,https://traffic.libsyn.com/syntax/Syntax_-_544.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Jared Sumner about why and how he created Bun, what Zig is, and the future of Bun.

## Tuple - Sponsor

This week’s sponsor is [Tuple](https://tuple.app/syntax), an app built specifically for remote pair programming. The app is written in C++ and tuned for high-resolution screen sharing and low-latency remote control. Because developers deserve better than Zoom or Meet for pairing. [Tuple.app](https://tuple.app/syntax).

## Show Notes

* **[00:37](#t=00:37)** Welcome
* **[01:44](#t=01:44)** Who is Jared Sumner?
* [Jarred Sumner on Twitter](https://twitter.com/jarredsumner)
* [Bun](https://bun.sh)
* [Bun Discord](https://discord.com/invite/CXdq2DP29u)
* [Bun on GitHub](https://github.com/oven-sh/bun)
* **[02:31](#t=02:31)** Why did you make Bun?
* **[09:43](#t=09:43)** Using web API vs Node modules?
* **[13:25](#t=13:25)** Do we still use npm?
* **[15:42](#t=15:42)** Support for HTML Rewriter
* **[16:46](#t=16:46)** Where do you see Bun being used?
* **[19:25](#t=19:25)** Do you think someone will write a type checker?
* **[21:18](#t=21:18)** Sponsor: Tuple
* **[22:07](#t=22:07)** What is Zig?
* **[24:57](#t=24:57)** Did you have a history of learning languages?
* **[28:16](#t=28:16)** Have you ever thought of putting Bun on hardware?
* **[29:59](#t=29:59)** Is there a package.json file in Bun projects?
* **[31:34](#t=31:34)** What can't Node just get faster?
* **[32:16](#t=32:16)** What is the future of Bun?
* **[36:27](#t=36:27)** Thoughts on types in JavaScript?
* **[41:16](#t=41:16)** Why did you build an SQLite client into Bun?
* **[42:54](#t=42:54)** Supper Club questions
* [Starship](https://starship.rs)
* [Warp](https://www.warp.dev)
* **[48:52](#t=48:52)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Bun meme](https://twitter.com/jarredsumner/status/1545331803770089474)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c2bf8343e40f953244cc8e7ce5727a0123f4b13ff45fc5eacc706db769fff446,supper-club-bun-with-jared-sumner,/shows/544 - Supper Club bun.md,2023-10-16 20:07:54.987,2023-10-27 15:58:12.528,SUPPER
syntax_podcast_show_00545,545,GitHub Next Projects,2022-12-05 12:00:00.525,https://traffic.libsyn.com/syntax/Syntax_-_545.mp3,"
In this Hasty Treat, Scott and Wes talk about new features coming to GitHub including Hey, GitHub!, GitHub Blocks, GitHub Copilot CLI, and more!

## Linode - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[01:49](#t=01:49)** Responsive web design update
* **[03:12](#t=03:12)** Let's go
* **[05:32](#t=05:32)** Sponsor: Linode
* **[06:01](#t=06:01)** Sponsor: LogRocket
* **[07:23](#t=07:23)** GitHub Next
* [GitHub Next](https://githubnext.com/)
* **[08:17](#t=08:17)** GitHub Copilot for the CLI
* **[11:52](#t=11:52)** Synthesizing results
* [Syntax 540 - Responsive Design Techniques](https://syntax.fm/show/540/responsive-design-techniques)
* **[13:31](#t=13:31)** Hey GitHub
* [Syntax 481 - Supper Club Voice Coding with Pokey Rule](https://syntax.fm/show/481/supper-club-voice-coding-with-pokey-rule)
* **[16:55](#t=16:55)** GitHub Blocks
* **[18:58](#t=18:58)** GitHub Code search
* **[21:36](#t=21:36)** GitHub Collaborative workspaces
* **[23:43](#t=23:43)** GitHub Copilot for your own codebase
* **[25:10](#t=25:10)** GitHub Copilot Radar
* **[29:15](#t=29:15)** GitHub AI Pull Requests

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c891517b6cbb8366c70510c8bf5415c309cc6e23c910252c67e56998b22fe724,github-next-projects,/shows/545 - Hasty GitHub Roadmap.md,2023-10-16 20:07:55.087,2023-10-27 15:58:12.633,HASTY
syntax_podcast_show_00546,546,Code Styles × Readable Rules and Petty Preferences,2022-12-07 12:00:00.676,https://traffic.libsyn.com/syntax/Syntax_-_546.mp3,"
In this episode of Syntax, Wes and Scott talk about their preferred coding styles and preferences they use, and why.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[02:35](#t=02:35)** Function definition
* **[06:43](#t=06:43)** File path aliases
* **[09:36](#t=09:36)** Implicit vs Explicit Return
* **[13:49](#t=13:49)** Array.reduce() VS literally anything else
* **[17:37](#t=17:37)** Loop vs array method
* **[22:55](#t=22:55)** Sponsor: Linode
* **[23:37](#t=23:37)** Updating vs creating a new var
* **[30:36](#t=30:36)** Iterable to Array
* **[34:46](#t=34:46)** Sponsor: LogRocket
* **[36:16](#t=36:16)** Destructuring vs Object.property
* **[39:22](#t=39:22)** Destructuring Arrays vs Reference by index
* **[41:40](#t=41:40)** Number(string) vs +string
* **[43:35](#t=43:35)** Incrementing
* **[45:06](#t=45:06)** Multiple ifs
* **[47:48](#t=47:48)** Multiple ifs vs switch vs Ternary
* **[51:05](#t=51:05)** Promises / Error Catching
* **[53:50](#t=53:50)** if(falsy) block VS return false;
* **[55:51](#t=55:51)** Sponsor: Freshbooks
* **[56:26](#t=56:26)** Spaces vs tabs
* **[58:39](#t=58:39)** Trailing commas
* **[00:40](#t=00:40)** Semicolons
* **[02:49](#t=02:49)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Video Archives Podcast](https://videoarchivespodcast.com)
* Wes: [Ubiquiti Wifi](https://store.ui.com/products/access-point-wifi-6-in-wall)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3cacbc5753839814796a330c219197b248f765087fa7f4d60228a4166b0f16c7,code-styles-readable-rules-and-petty-preferences,/shows/546 - Tasty Preferences.md,2023-10-16 20:07:55.121,2023-10-27 15:58:12.681,TASTY
syntax_podcast_show_00547,547,Supper Club × Coding at Disney with Vu Le,2022-12-09 12:00:00.712,https://traffic.libsyn.com/syntax/Syntax_-_547.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Vu Le about his path to working at Disney. How did he learn to code? How do you get a job at Disney? What's the tech stack inside a Disney team?

## Tuple - Sponsor

This week’s sponsor is [Tuple](https://tuple.app/syntax), an app built specifically for remote pair programming. The app is written in C++ and tuned for high-resolution screen sharing and low-latency remote control. Because developers deserve better than Zoom or Meet for pairing.

## Show Notes

* **[01:40](#t=01:40)** Who is Vu Le?
* **[03:33](#t=03:33)** How did you learn to code?
* **[04:57](#t=04:57)** How do you get a job at Disney?
* **[09:01](#t=09:01)** Internal CMS development at Disney
* **[10:19](#t=10:19)** What types of languages do you use internally?
* **[15:22](#t=15:22)** Do you have a design system?
* **[19:52](#t=19:52)** How do you handle versions and updates?
* **[22:42](#t=22:42)** Sponsor: Tuple
* **[23:37](#t=23:37)** Do you get involved in testing?
* [Vitest](https://vitest.dev)
* **[25:06](#t=25:06)** What are you using for GraphQL?
* [GraphQL](https://www.graphql.com)
* **[25:34](#t=25:34)** How are you handling CSS?
* [Theme UI](https://theme-ui.com)
* **[31:43](#t=31:43)** Does Disney do remote work?
* **[34:38](#t=34:38)** Perks of working at Disney
* **[38:16](#t=38:16)** Supper Club questions
* [GMMK Pro Keyboard](https://www.gloriousgaming.com/products/glorious-gmmk-pro-75-barebone-black)
* [Santa Cruz bicycles](https://www.santacruzbicycles.com/en-US/bikes/cross-country-mountain-bikes)
* [JetBrains Mono](https://www.jetbrains.com/lp/mono/)
* **[45:13](#t=45:13)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Garden hose connectors

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",34f95aa390ce45ba976dc21728908b10d4d019cc086742209c0c96e62dfd8a72,supper-club-coding-at-disney-with-vu-le,/shows/547 - Supper with Vu Le.md,2023-10-16 20:07:55.154,2023-10-27 15:58:12.732,SUPPER
syntax_podcast_show_00548,548,Rendering Methods Explained,2022-12-12 12:00:00.288,https://traffic.libsyn.com/syntax/Syntax_-_548.mp3,"
In this Hasty Treat, Scott and Wes talk through the various rendering methods in use today and the pros / cons of each.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:31](#t=01:31)** What is rendering?
* **[02:41](#t=02:41)** Sponsor: Sentry
* **[03:58](#t=03:58)** Sponsor: Sanity
* **[04:55](#t=04:55)** Rendering methods
* **[05:48](#t=05:48)** Single page application (SPA)
* **[07:36](#t=07:36)** Multi-page Application
* **[09:14](#t=09:14)** Static Site Generation (SSG)
* **[11:10](#t=11:10)** Service Side Rendered (SSR)
* **[13:08](#t=13:08)** Partial hydration
* **[14:03](#t=14:03)** Progressive hydration
* **[15:38](#t=15:38)** Island architecture
* **[16:25](#t=16:25)** Progressive enhancement
* **[18:18](#t=18:18)** Incremental Static Generation
* **[19:12](#t=19:12)** Streaming SSR
* **[19:53](#t=19:53)** Resumability
* **[21:51](#t=21:51)** Edge rendering
* **[23:11](#t=23:11)** Missing from the list

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",aaf03282cb73c2b84f901786276c0d65ead59a6013eff63964518c05f1a89b52,rendering-methods-explained,/shows/548 - Hasty Render Methods.md,2023-10-16 20:07:55.248,2023-10-27 15:58:12.834,HASTY
syntax_podcast_show_00549,549,JavaScript in 2022,2022-12-14 12:00:00.216,https://traffic.libsyn.com/syntax/Syntax_-_549.mp3,"
In this episode of Syntax, Wes and Scott look at the the Web Almanac's report on the role of JavaScript on the web in 2022.

## Auth0  - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:17](#t=01:17)** College football update
* **[04:07](#t=04:07)** Web almanac for 2022
* [JavaScript in the 2022 Web Almanac](https://almanac.httparchive.org/en/2022/javascript)
* **[06:25](#t=06:25)** Unused JavaScript
* **[07:47](#t=07:47)** JavaScript requests per page
* **[09:38](#t=09:38)** Bundlers
* **[14:01](#t=14:01)** Pages using Babel
* **[16:01](#t=16:01)** How JavaScript is requested
* **[19:22](#t=19:22)** Sponsor: Sentry
* **[20:56](#t=20:56)** Loading render blocking tags
* **[22:48](#t=22:48)** Dynamic import, web workers, source maps
* **[24:33](#t=24:33)** Libraries and frameworks
* [Owl Carousel](https://owlcarousel2.github.io/OwlCarousel2/)
* [Lazy Sizes](https://github.com/aFarkas/lazysizes)
* **[29:30](#t=29:30)** Websites using web components
* **[31:35](#t=31:35)** Websites with JavaScript security issues
* **[32:43](#t=32:43)** Sponsor: Auth0
* **[33:58](#t=33:58)** Jamstack
* **[37:09](#t=37:09)** JavaScript used by Jamstack sites
* **[38:03](#t=38:03)** Jamstack hosting
* **[39:46](#t=39:46)** Popular Static site generators
* **[44:49](#t=44:49)** Progressive web apps and service workers
* **[50:29](#t=50:29)** jQuery inside WordPress themes
* [WeCrashed](https://en.wikipedia.org/wiki/WeCrashed)
* **[51:13](#t=51:13)** Project Fugu
* [Project Fugu](https://developers.google.com/learn/pathways/fugu-apis)
* **[52:51](#t=52:51)** Web push notifications
* **[55:49](#t=55:49)** CMSs
* **[00:45](#t=00:45)** Sponsor: Freshbooks
* **[01:40](#t=01:40)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [White Lotus](https://www.hbo.com/the-white-lotus)
* Wes: [Ubiquiti](https://www.ui.com/wi-fi)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2108bdbce60ea892eb82dbb172552793746bdd4fdae4afb253347333d0f01ef0,javascript-in-2022,/shows/549 - Tasty.md,2023-10-16 20:07:55.281,2023-10-27 15:58:12.896,TASTY
syntax_podcast_show_00550,550,Supper Club × Remotion React Video with Jonny Burger,2022-12-16 12:00:00.924,https://traffic.libsyn.com/syntax/Syntax_-_550.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Jonny Burger about why and how he built Remotion, his app that lets you create MP4 videos using React.

## Gatsby - Sponsor

Today’s episode was sponsored by Gatsby, the fastest frontend for the headless web. Gatsby is the framework of choice for content-rich sites backed by a headless CMS as its GraphQL data layer makes it straightforward to source website content from anywhere. Gatsby’s opinionated, React-based framework makes the hardest parts of building a performant website simpler. Visit [Gatsby.dev/Syntax](https://gatsby.dev/Syntax) to get your first Gatsby site up in minutes and experience the speed. ⚡️

## Tuple - Sponsor

This week’s sponsor is [Tuple](https://tuple.app/syntax), an app built specifically for remote pair programming. The app is written in C++ and tuned for high-resolution screen sharing and low-latency remote control. Because developers deserve better than Zoom or Meet for pairing.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:24](#t=01:24)** Who is Jonny Burger?
* [Jonny.io](https://www.jonny.io)
* [Jonny on GitHub](https://github.com/JonnyBurger)
* [Jonny on Twitter](https://twitter.com/JNYBGR)
* **[03:51](#t=03:51)** Why did you create Remotion?
* [Remotion.dev](https://www.remotion.dev)
* **[07:36](#t=07:36)** What types of videos are people making?
* **[10:53](#t=10:53)** What is the tech stack?
* [Puppeteer](http://pptr.dev)
* [Lottie](https://lottiefiles.com/)
* **[18:31](#t=18:31)** What is Idempotence?
* **[19:50](#t=19:50)** What is lottie?
* **[22:56](#t=22:56)** Motion blur trail
* [Motion blur trail demo](https://www.remotion.dev/docs/motion-blur/trail)
* **[25:17](#t=25:17)** Sponsor: Gatsby
* **[26:12](#t=26:12)** Chrome rendering
* **[29:58](#t=29:58)** When would you choose JPG or PNG?
* **[31:43](#t=31:43)** Are you using ffmpeg in the browser?
* [ffmpeg](https://ffmpeg.org)
* **[36:00](#t=36:00)** Sponsor: Tuple
* **[37:43](#t=37:43)** What player do you use for playback?
* **[39:54](#t=39:54)** How did you take this idea to a product?
* **[44:05](#t=44:05)** Supper Club questions
* [LG C9 TV](https://www.rtings.com/tv/reviews/lg/c9-oled)
* [iTerm](https://iterm2.com)
* **[50:12](#t=50:12)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Yoga with Adriene](https://www.youtube.com/@yogawithadriene)
* [Cosmic Kids Yoga](https://www.youtube.com/@CosmicKidsYoga)

## Shameless Plugs

* [Toopo.art](https://toopo.art)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a4ddc99dca30b201f7d23945c379b17d314d0aff90eeec4d22fa44f6ccf4a6e1,supper-club-remotion-react-video-with-jonny-burger,/shows/550 - Supper with Jonny.md,2023-10-16 20:07:55.314,2023-10-27 15:58:12.946,SUPPER
syntax_podcast_show_00551,551,“Serverless” Databases,2022-12-19 12:00:00.552,https://traffic.libsyn.com/syntax/Syntax_-_551.mp3,"
In this episode of Syntax, Wes and Scott talk about your options for database when you're working with serverless.

## Prismic  - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## LogRocket - Sponsor

LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. It's an exception tracker, a session re-player and a performance monitor. Get 14 days free at [logrocket.com/syntax](https://logrocket.com/syntax).

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[00:51](#t=00:51)** Sponsor: LogRocket
* **[01:44](#t=01:44)** Sponsor: Prismic
* **[03:17](#t=03:17)** Why Serverless and related databases?
* **[07:45](#t=07:45)** Deploying on Deno
* [Deno](https://deno.land)
* **[08:44](#t=08:44)** Using a database with serverless functions
* [Syntax 542 - Serverless Limitations](https://syntax.fm/show/542/serverless-limitations)
* **[11:53](#t=11:53)** Using purpose built databases
* [Planetscale](https://planetscale.com)
* [Supabase](https://supabase.com)
* [Cloudflare D1](https://www.cloudflare.com/en-ca/lp/d1/)
* [Cloudflare Key Value Store](https://www.cloudflare.com/en-ca/products/workers-kv/)
* [AWS DynamoDB](https://aws.amazon.com/dynamodb/)
* [AWS Auroa](https://aws.amazon.com/rds/aurora/features/)
* [FaunaDB](https://fauna.com)
* [Neon](https://neon.tech)
* [Railway](https://railway.app)
* [MongoDB Serverless](https://www.mongodb.com/serverless)
* [Redis](https://redis.io)
* [Cassandra](https://cassandra.apache.org/)
* **[15:01](#t=15:01)** The results of the test
* **[17:35](#t=17:35)** Solutions

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b77c653a1221adfd766e5616c1fc2471ae66c1fbf7b5dc3798ff37a7188e6617,serverless-databases,/shows/551 - Tasty Serverless.md,2023-10-16 20:07:55.465,2023-10-27 15:58:13.078,HASTY
syntax_podcast_show_00552,552,Potluck × Twitter Thoughts × Business Models × Senior Developer,2022-12-21 12:00:00.769,https://traffic.libsyn.com/syntax/Syntax_-_552.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about how to give feedback on the podcast, deciding on a business model for courses, what to do about Twitter, and more.

## Linode  - Sponsor

Whether you’re working on a personal project or managing enterprise infrastructure, you deserve simple, affordable, and accessible cloud computing solutions that allow you to take your project to the next level. Simplify your cloud infrastructure with Linode’s Linux virtual machines and develop, deploy, and scale your modern applications faster and easier. Get started on Linode today with a $100 in free credit for listeners of Syntax. You can find all the details at [linode.com/syntax](https://linode.com/syntax). Linode has 11 global data centers and provides 24/7/365 human support with no tiers or hand-offs regardless of your plan size. In addition to shared and dedicated compute instances, you can use your $100 in credit on S3-compatible object storage, Managed Kubernetes, and more. Visit [linode.com/syntax](https://linode.com/syntax) and click on the “Create Free Account” button to get started.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Freshbooks - Sponsor

Get a 30 day free trial of Freshbooks at [freshbooks.com/syntax](https://freshbooks.com/syntax)

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:51](#t=01:51)** Podcast feedback
* **[04:46](#t=04:46)** Can you talk about how you made the decision to re-write LevelUp?
* [Strangler Fig](https://learn.microsoft.com/en-us/azure/architecture/patterns/strangler-fig)
* **[13:54](#t=13:54)** How did you get a score for your website?
* [Google Pagespeed](https://developers.google.com/speed/)
* **[19:30](#t=19:30)** Where will we move to when Twitter implodes?
* [Twitter Blue](https://help.twitter.com/en/using-twitter/twitter-blue)
* **[26:29](#t=26:29)** Sponsor: Linode
* **[27:06](#t=27:06)** How did you arrive at your business model?
* **[33:15](#t=33:15)** Advice for getting into freelancing web dev?
* **[38:49](#t=38:49)** Sponsor: Sentry
* **[40:07](#t=40:07)** How to feel more ""senior"" as a developer
* **[43:30](#t=43:30)** How do you manage notifications between various apps?
* [Hazel](https://www.noodlesoft.com)
* **[50:46](#t=50:46)** Label makers
* [Nimbot label makers](https://niimbotd11.com)
* **[54:14](#t=54:14)** Sponsor: Freshbooks
* **[54:45](#t=54:45)** How are people testing node apps?
* [JestJS](https://jestjs.io)
* [Vitest](https://vitest.dev)
* [Mocha](https://mochajs.org)
* [ChaiJS](https://www.chaijs.com)
* **[56:38](#t=56:38)** What are your thoughts on the TanStack Router?
* [Tanstack](https://tanstack.com/router/v1/docs/overview)
* [Astro](https://astro.build)
* [SvelteKit](https://kit.svelte.dev)
* [Nozzle](https://nozzle.io)
* **[01:09](#t=01:09)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Sensibo Air](https://amzn.to/3VAbZor)
* Wes: [We Crashed](https://en.wikipedia.org/wiki/WeCrashed)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c1c3c7b0199a0a2d7bbf180fdd75c78edf2494410cbe1ec8b38ecb20275cb628,potluck-twitter-thoughts-business-models-senior-developer,/shows/552 - Potluck.md,2023-10-16 20:07:55.507,2023-10-27 15:58:13.128,TASTY
syntax_podcast_show_00553,553,Supper Club × Switching into Coding and climbing the Pommade ladder with Kenneth Lyerly,2022-12-23 12:00:00.550,https://traffic.libsyn.com/syntax/Syntax_-_553.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Kenneth Lyerly about his career path into coding, and how he manages to hold two jobs.

## Show Notes

* **[00:38](#t=00:38)** Welcome
* [Ken.dev](https://ken.dev)
* [Ken on Github](https://github.com/kenput3r)
* **[01:59](#t=01:59)** How do you have two jobs?
* **[09:46](#t=09:46)** When did you start a second job?
* **[16:02](#t=16:02)** Any tips for someone wanting to switch into coding?
* **[24:03](#t=24:03)** Do you have advice for people trying to market themselves?
* **[31:38](#t=31:38)** What is working these days for marketing efforts?
* **[34:47](#t=34:47)** Where can devs learn about marketing?
* **[35:50](#t=35:50)** Barbershop culture
* **[39:47](#t=39:47)** Supper club questions
* [Snazzy Labs custom Touch ID button](https://www.youtube.com/watch?v=hz9Ek6fxX48)
* [Tech Meme Ride Home podcast](https://news.techmeme.com/180306/podcast)
* **[44:10](#t=44:10)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Traeger Grills](https://www.traeger.com)

## Shameless Plugs

* [Suavecito](http://www.suavecito.com)
* [ResortPass](https://www.resortpass.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",8be3279f3ebd47031032061419db46d793baf89eec65a0b35da2ffd38fc089b2,supper-club-switching-into-coding-and-climbing-the-pommade-ladder-with-kenneth-lyerly,/shows/553 - Supper.md,2023-10-16 20:07:55.561,2023-10-27 15:58:13.178,SUPPER
syntax_podcast_show_00554,554,Desktop Apps in JS × Electron and Tauri,2022-12-26 12:00:00.792,https://traffic.libsyn.com/syntax/Syntax_-_554.mp3,"
In this Hasty Treat, Scott and Wes talk about the current state of building desktop apps with Electron or Tauri.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Prismic - Sponsor

Prismic is a Headless CMS that makes it easy to build website pages as a set of components. Break pages into sections of components using React, Vue, or whatever you like. Make corresponding Slices in Prismic. Start building pages dynamically in minutes. Get started at [prismic.io/syntax](https://prismic.io/syntax).

## Show Notes

* **[00:33](#t=00:33)** Welcome
* **[01:18](#t=01:18)** Sponsor: Sentry
* **[02:47](#t=02:47)** Sponsor: Prismic
* **[04:01](#t=04:01)** Our experience with building desktop apps
* [Level Up Tutorials: Level 1 Electron](https://levelup.video/tutorials/level-1-electron)
* [Hair.WesBos.com](https://hair.wesbos.com)
* **[10:04](#t=10:04)** Frameworks for building apps
* **[10:56](#t=10:56)** Tauri vs Electron
* [Tauri](https://tauri.app)
* [Electron](https://www.electronjs.org)
* **[23:38](#t=23:38)** Tooling
* [vite-plugin-electron](https://www.npmjs.com/package/vite-plugin-electron)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",2d9a29eb75a9d8ab42b1da8ab18b4cbc9d58cb9a3bf87235389e2059257c2124,desktop-apps-in-js-electron-and-tauri,/shows/554 - Hasty Apps.md,2023-10-16 20:07:55.690,2023-10-27 15:58:13.300,HASTY
syntax_podcast_show_00555,555,Were We Wrong? 2022 Predictions Revisited,2022-12-28 12:00:00.120,https://traffic.libsyn.com/syntax/Syntax_-_555.mp3,"
In this episode of Syntax, Wes and Scott revisit their 2022 predictions and see which ones they got right, and which they got wrong.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Sanity - Sponsor

Sanity.io is a real-time headless CMS with a fully customizable Content Studio built in React. Get a Sanity powered site up and running in minutes at [sanity.io/create](https://www.sanity.io/create). Get an awesome supercharged free developer plan on [sanity.io/syntax](https://www.sanity.io/syntax).

## Auth0 - Sponsor

Auth0 is the easiest way for developers to add authentication and secure their applications. They provides features like user management, multi-factor authentication, and you can even enable users to login with device biometrics with something like their fingerprint. Not to mention, Auth0 has SDKs for your favorite frameworks like React, Next.js, and Node/Express. Make sure to sign up for a free account and give Auth0 a try with the link below. [https://a0.to/syntax](https://a0.to/syntax)

## Show Notes

* **[00:09](#t=00:09)** Welcome
* [Syntax 420: 2022 Predictions](https://syntax.fm/show/420/2022-predictions)
* **[01:44](#t=01:44)** Svelte popularity
* [Svelte](https://svelte.dev)
* [Svelte Kit](https://kit.svelte.dev)
* **[04:09](#t=04:09)** Next.js data layer
* **[05:06](#t=05:06)** Web components UI
* [Open UI](https://open-ui.org)
* **[06:19](#t=06:19)** Rust popularity
* [Rust](https://www.rust-lang.org)
* **[10:07](#t=10:07)** Serverless and Cloud functions
* **[10:42](#t=10:42)** Tailwind popularity
* **[16:20](#t=16:20)** Sponsor: Sentry
* **[17:59](#t=17:59)** Next gen dev tools
* **[19:46](#t=19:46)** CSS Container queries
* **[21:45](#t=21:45)** GraphQL
* **[26:26](#t=26:26)** Deno
* **[29:44](#t=29:44)** TypeScript
* **[34:28](#t=34:28)** Sponsor: Sanity
* **[35:07](#t=35:07)** Server comeback
* **[36:21](#t=36:21)** Checkouts and payment processers
* [Lemon Squeezy](https://www.lemonsqueezy.com)
* **[43:05](#t=43:05)** Sponsor: Auth0
* **[44:18](#t=44:18)** Temporal API
* **[46:44](#t=46:44)** Remote dev thin client popularity
* **[49:49](#t=49:49)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [JADENS Label Maker Machine with Tape](https://amzn.to/3G3wiWd)
* Wes: [Chipolo One Spot](https://amzn.to/3jjWpiQ)

## Shameless Plugs

* Scott: [LevelUp Svelte Kit Tutorial](https://levelup.video/tutorials/sveltekit)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",17d63dc4007a5062d99b50463db913b05b09c811c670c1c191f8b5c8be2ee48c,were-we-wrong-2022-predictions-revisited,/shows/555 - Tasty.md,2023-10-16 20:07:55.748,2023-10-27 15:58:13.352,TASTY
syntax_podcast_show_00556,556,Supper Club × Polypane with Kilian Valkhof,2022-12-30 12:00:00.689,https://traffic.libsyn.com/syntax/Syntax_-_556.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Kilian Valkhof about his work on Polypane, a browser for developers. How is Polypane built? Why does he have a focus on accessibility in Polypane?

## Show Notes

* **[00:39](#t=00:39)** Welcome
* **[01:48](#t=01:48)** Who is Kilian Valkhof?
* [kilianvalkhof.com](https://kilianvalkhof.com)
* [@kilianvalkhof on Twitter](https://twitter.com/kilianvalkhof)
* **[04:50](#t=04:50)** What is Polypane?
* [Polypane](https://polypane.app/)
* [@Polypane on Twitter](https://twitter.com/Polypane)
* [FromScratch](https://fromscratch.rocks)
* **[09:31](#t=09:31)** How is Polypane built?
* **[14:18](#t=14:18)** What about the Dev tools tab?
* **[20:15](#t=20:15)** Outline tab
* **[23:23](#t=23:23)** Color picker
* **[27:33](#t=27:33)** Canvas rules and guides
* **[32:16](#t=32:16)** Accessibility background and tools
* **[40:28](#t=40:28)** How do you parse the CSS?
* **[42:51](#t=42:51)** What else do you want people to know about Polypane?
* **[44:42](#t=44:42)** Supper Club questions
* **[53:59](#t=53:59)** SIIIIICK ××× PIIIICKS ×××

## Shameless Plugs

* [Fix Contrast](https://fixa11y.com)
* [Superposition](https://superposition.design)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0c2ee298cff92078ea10a439959d32db20f886b49a458909af056d078515e695,supper-club-polypane-with-kilian-valkhof,/shows/556 - Supper Kilian Valkhof.md,2023-10-16 20:07:55.783,2023-10-27 15:58:13.405,SUPPER
syntax_podcast_show_00557,557,"TypeScript Fundamentals × Type Narrowing, Guards, and Predicates",2023-01-02 12:00:00.521,https://traffic.libsyn.com/syntax/Syntax_-_557.mp3,"
In this episode of Syntax, Wes and Scott talk through some TypeScript Fundamentals around type narrowing, type guards, and type predicates.

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:40](#t=01:40)** Rocking predicates
* **[02:54](#t=02:54)** What is a type in TypeScript?
* **[04:11](#t=04:11)** Type Narrowing
* **[08:18](#t=08:18)** Type Guard
* **[16:19](#t=16:19)** Type Predicates

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f4a190bce84a8e4ca106b11f3ed4a04de00bc235ed4be8403a8e6523ce4f0a53,typescript-fundamentals-type-narrowing-guards-and-predicates,/shows/557 - Tasty TypeScript.md,2023-10-16 20:07:55.922,2023-10-27 15:58:13.550,HASTY
syntax_podcast_show_00558,558,Our Predictions for 2023,2023-01-04 12:00:00.241,https://traffic.libsyn.com/syntax/Syntax_-_558.mp3,"
In this episode of Syntax, Wes and Scott talk about their predictions in web development for 2023.

## Show Notes

* **[00:07](#t=00:07)** Welcome
* **[01:25](#t=01:25)** SSR JS sites more the norm
* **[03:32](#t=03:32)** React doing forms
* **[05:39](#t=05:39)** TypeScript Inferred becomes hot
* **[08:11](#t=08:11)** Deno gets hotter
* **[12:51](#t=12:51)** JS Runtimes Mature
* [HTMX](https://htmx.org/)
* **[15:00](#t=15:00)** We will see a new TS Type Checker written in Rust
* **[19:20](#t=19:20)** New JS APIs
* **[23:37](#t=23:37)** Writing towards Winter CG Spec Popular. “Worker Ready” script
* [STC](https://github.com/dudykr/stc)
* **[27:05](#t=27:05)** A new JS framework
* [SolidJS](https://www.solidjs.com/)
* [Qwik](https://qwik.builder.io/)
* **[29:44](#t=29:44)** Page Transitions API
* **[32:40](#t=32:40)** Scott was right / Scotts gonna be right
* **[34:06](#t=34:06)** Rust becomes more Popular
* **[36:00](#t=36:00)** React Beta Docs launch after 5 year dev cycle
* **[37:45](#t=37:45)** CSS Container Queries in Production
* **[41:07](#t=41:07)** Svelte and Sveltekit Glow Up
* **[43:38](#t=43:38)** CSS Subgrid
* **[49:19](#t=49:19)** WASM
* **[51:51](#t=51:51)** AI
* [Open AI](https://openai.com)
* **[53:16](#t=53:16)** Houdini
* **[54:30](#t=54:30)** People souring on React, Eslint
* **[57:47](#t=57:47)** Machine learning
* **[01:08](#t=01:08)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Cron](https://cron.com/)
* Wes: [Wyze Headphones](https://www.amazon.com/Noise-Cancelling-Headphones-Cancellation-High-fidelity-Transparency/dp/B08KHTJL1F/ref=sr_1_3?crid=2PDA69WRWMFXJ&keywords=wyze+headphones&qid=1671480346&sprefix=wyze+headphones%2Caps%2C102&sr=8-3)

## Shameless Plugs

* Scott: [LevelUp SvelteKit Tutorial](https://levelup.video/tutorials/sveltekit)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",4ce0698f1e63c6c20899cc50d214fba8c9dad0e8afdd682a55e4f5c1437541cd,our-predictions-for-2023,/shows/558 - Tasty 2023 Predictions.md,2023-10-16 20:07:55.964,2023-10-27 15:58:13.601,TASTY
syntax_podcast_show_00559,559,Supper Club × Sarah Drasner on Engineering Management,2023-01-06 12:00:00.241,https://traffic.libsyn.com/syntax/Syntax_-_559_.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Sarah Drasner about her new book, Engineering Management for the Rest of Us, what it's like moving from management to coding and back, the book writing process, and her Fortnite VS Code theme.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:59](#t=01:59)** Who is Sarah Drasner?
* [@Sarah_Edo on Twitter](https://twitter.com/sarah_edo)
* [@Sarah_Edo on Mastodon](https://hachyderm.io/@sarah_edo)
* [@Sdras on CodePen](https://codepen.io/sdras/)
* [@SDras on GitHub](https://github.com/sdras)
* [SarahDrasnerDesign.com](https://sarahdrasnerdesign.com)
* [Google](https://www.google.com/)
* [Engineering Management for the Rest of Us](https://www.engmanagement.dev)
* [Amazon: Engineering Management for the Rest of Us](https://www.amazon.com/Engineering-Management-Rest-Sarah-Drasner/dp/B0BHX8BQ9C/)
* [Netlify](https://www.netlify.com)
* **[05:25](#t=05:25)** How did you figure out what to do in management?
* **[07:20](#t=07:20)** How do you get out of engineer's way?
* [The Engineer Manager pendulum](https://charity.wtf/2017/05/11/the-engineer-manager-pendulum/)
* **[09:39](#t=09:39)** Do you spend time on making the person happy in the job?
* **[15:51](#t=15:51)** Should managers code?
* **[19:16](#t=19:16)** Was it difficult to step out of coding?
* **[21:07](#t=21:07)** Why do people leave jobs?
* **[24:04](#t=24:04)** Dealing with conflict and reorgs
* **[28:36](#t=28:36)** What makes a good retro?
* **[31:25](#t=31:25)** What was your process for writing a book?
* [SVG Animations: From Common UX Implementations to Complex Responsive Animation](https://www.amazon.com/SVG-Animations-Implementations-Responsive-Animation/dp/1491939702)
* [Scrivener](https://www.literatureandlatte.com/scrivener/overview)
* [Egghead](https://egghead.io)
* [Mayfly Design](https://mayflydesign.com)
* [Sarah Drasner's articles on CSS Tricks](https://css-tricks.com/author/sdrasner/)
* [Sarah Drasner's articles on Smashing Magazine](https://www.smashingmagazine.com/author/sarahdrasner/)
* **[43:44](#t=43:44)** Supper Club questions
* [Sarah Drasner's VS Code snippets and themes](https://marketplace.visualstudio.com/publishers/sdras)
* [Creating a VS Code theme](https://css-tricks.com/creating-a-vs-code-theme/)
* [Wes Bos Cobalt 2 VS Code theme](https://marketplace.visualstudio.com/items?itemName=wesbos.theme-cobalt2)
* [Partytown beta](https://partytown.builder.io)
* **[53:10](#t=53:10)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Paper Koi Lantern: a DIY Kit](https://www.kickstarter.com/projects/yuumei/paper-koi-lantern-a-diy-kit)

## Shameless Plugs

* [Engineering Management for the Rest of Us](https://www.engmanagement.dev)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3ac02ec8416e4bced31e9c1d7816c60d9f39b159576a0a5df77d5461a2a57080,supper-club-sarah-drasner-on-engineering-management,/shows/559 - Supper with Sarah.md,2023-10-16 20:07:56.002,2023-10-27 15:58:13.679,SUPPER
syntax_podcast_show_00560,560,TypeScript Fundamentals × Satisfies and as const,2023-01-09 12:00:00.317,https://traffic.libsyn.com/syntax/Syntax_-_560.mp3,"
In this Hasty Treat, Scott and Wes talk about Satisfies and as const.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[02:04](#t=02:04)** Xmas recap
* [Peloton](https://www.onepeloton.com)
* **[04:09](#t=04:09)** Satisfies and as const
* **[06:16](#t=06:16)** What is const?
* **[10:30](#t=10:30)** Helping with currency
* **[12:44](#t=12:44)** Bos monster server update
* **[14:13](#t=14:13)** Satisfies

```
export const currencies = {
USD: 'US Dollars',
CAD: 'Canadian Dollar',
EUR: 'Euro',
} as const;

export type Currency = typeof currencies;
export type CurrencyCode = keyof Currency;
```

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c096ee464427e5452c779e000bb73293b6868999b3e87716225e557b8ec67215,typescript-fundamentals-satisfies-and-as-const,/shows/560 - Hasty errors.md,2023-10-16 20:07:56.119,2023-10-27 15:58:13.809,HASTY
syntax_podcast_show_00561,561,2023 Goals × Learning and Doing,2023-01-11 12:00:00.093,https://traffic.libsyn.com/syntax/Syntax_-_561.mp3,"
In this episode of Syntax, Wes and Scott talk through their goals for 2023 including coding, tooling, courses and platforms, social media, and fitness.

## Show Notes

* **[00:17](#t=00:17)** Welcome
* **[02:38](#t=02:38)** What's a cantina?
* **[06:33](#t=06:33)** Scott's coding goals
* [Animated grid layouts](https://web.dev/css-animated-grid-layouts/)
* [Tauri](https://tauri.app)
* **[14:39](#t=14:39)** Wes' code goals
* [Uses](https://uses.tech)
* [Stripe](https://stripe.com)
* [Stripe Elements](https://stripe.com/payments/elements)
* [Shoelace](https://shoelace.style)
* **[23:17](#t=23:17)** Tooling
* [Vite Plugin List Directory Contents](https://www.npmjs.com/package/vite-plugin-list-directory-contents)
* **[26:39](#t=26:39)** Scott's courses and platform
* [LevelUp.video](https://levelup.video)
* **[29:36](#t=29:36)** Wes' courses
* [Wes Bos Tutorials](https://wesbos.com/courses)
* **[31:11](#t=31:11)** Scott's fitness goals
* **[35:55](#t=35:55)** Wes' fitness goals
* **[39:44](#t=39:44)** Apple Watch for fitness
* **[41:54](#t=41:54)** Syntax podcast goals
* **[50:13](#t=50:13)** Scott's social media goals
* [Scott on TikTok](https://www.tiktok.com/@leveluptuts)
* [LevelUp Newsletter](https://levelup.video/newsletter)
* **[52:35](#t=52:35)** Wes' social media goals
* [Wes on TikTok](https://www.tiktok.com/@wesbos)
* **[58:02](#t=58:02)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Menu](https://letterboxd.com/film/the-menu-2022/)
* Wes: [JB Weld Clearweld](https://amzn.to/3GR4c0y), [big version](https://twitter.com/wesbos/status/1612472798689067008)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0e0eb6b9ed67317c063b18fdbdf0df0960a4034a3496d9daf3decb7429b55de6,2023-goals-learning-and-doing,/shows/561 - Tasty Goals.md,2023-10-16 20:07:56.159,2023-10-27 15:58:13.863,TASTY
syntax_podcast_show_00562,562,"Supper Club × Katherine Mello on Liberal Arts → Coding, Bootcamps,  and Sustainability",2023-01-13 12:00:00.466,https://traffic.libsyn.com/syntax/Syntax_-_562.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Katherine Mello about her journey into coding from liberal arts to bootcamp education, data visualization, and coding for a sustainable focused company.

## Show Notes

* **[00:34](#t=00:34)** Welcome
* **[01:10](#t=01:10)** Guest introduction
* [Rolling With Kat](https://www.rolling-with-kat.blog/)
* **[03:05](#t=03:05)** Bag milk?
* **[04:34](#t=04:34)** What is Tangible Materials?
* [Tangible Materials](https://tangiblematerials.com/)
* **[07:27](#t=07:27)** How did you end up at Tangible?
* [Full Stack Academy](https://www.fullstackacademy.com/tech-bootcamp)
* **[10:05](#t=10:05)** Are bootcamps worth it?
* **[14:46](#t=14:46)** How important were in person classes to you?
* [All We Can Save](https://www.allwecansave.earth)
* [Braiding Sweetgrass](https://milkweed.org/book/braiding-sweetgrass)
* **[20:46](#t=20:46)** What do you enjoy about data visualization?
* [D3](https://d3js.org)
* [Data visualization society](https://www.datavisualizationsociety.org/)
* [Three.js](https://threejs.org)
* [Observable](https://observablehq.com)
* [Color Wheel](https://observablehq.com/@shan/oklab-color-wheel)
* **[27:21](#t=27:21)** Working at WeWork
* [WeWork: Or the Making and Breaking of a $47 Billion Unicorn • Official Trailer](https://www.youtube.com/watch?v=HVAESeO7dgc)
* **[34:14](#t=34:14)** What is your tech stack at Tangible?
* **[38:26](#t=38:26)** What backend would Wes use for a project?
* [Svelte Kit](https://kit.svelte.dev)
* [Supabase](https://supabase.com)
* [Super Bass](https://www.youtube.com/watch?v=4JipHEz53sU)
* **[42:10](#t=42:10)** Is there environmental web hosting?
* **[43:47](#t=43:47)** Supper Club Questions
* [Uplift Desks](https://www.upliftdesk.com)
* **[50:22](#t=50:22)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Climavores](https://postscriptmedia.com/climavores/)

## Shameless Plugs

* [Drinking from the Garden Hose](https://www.rolling-with-kat.blog/post/drinking-from-the-garden-hose)
* [Hiring at Tangible Materials](https://tangiblematerials.com/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7f9e33bab352806a88ef8ce2818ce1f6a321d24d66385718dd6f8a95f990438f,supper-club-katherine-mello-on-liberal-arts-coding-bootcamps-and-sustainability,/shows/562 - Supper.md,2023-10-16 20:07:56.191,2023-10-27 15:58:13.913,SUPPER
syntax_podcast_show_00563,563,Buy It or Build It? A Service is Not a Solution,2023-01-16 14:00:00.784,https://traffic.libsyn.com/syntax/Syntax_-_563.mp3,"
In this Hasty Treat, Scott and Wes talk about the differences between building it yourself vs paying for a service to do it for you, such as cron jobs, checkout, hosting, images, video, and more.

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[03:19](#t=03:19)** Buying vs building topic
* **[07:09](#t=07:09)** Strategy
* **[09:50](#t=09:50)** Escapability
* **[14:56](#t=14:56)** Services You Could Use
* [Sentry](https://sentry.io/welcome/)
* [Postmark](https://postmarkapp.com)
* **[16:34](#t=16:34)** Efficiency of using a service
* **[18:08](#t=18:08)** Cron jobs
* **[20:43](#t=20:43)** Checkout
* [Recurly](https://recurly.com)
* [Lemon Squeezy](https://www.lemonsqueezy.com)
* [Stripe](https://stripe.com/)
* [Braintree](https://www.braintreepayments.com)
* **[24:29](#t=24:29)** Hosting
* **[26:00](#t=26:00)** Screenshots and open graph images
* [Cloudinary](https://cloudinary.com)
* [Vercel OG](https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation)
* [Puppeteer](http://pptr.dev)
* **[29:25](#t=29:25)** Search
* [Algolia](https://www.algolia.com)
* [Elastic](https://www.elastic.co)
* [MongoDB](https://www.mongodb.com)
* **[33:32](#t=33:32)** Auth
* [PasswordJS](https://www.npmjs.com/package/passwordjs)
* **[36:55](#t=36:55)** Images
* **[39:46](#t=39:46)** Video Hosting
* [Vimeo](https://vimeo.com)
* [Mux](https://www.mux.com)
* [Amazon Kinesis](https://aws.amazon.com/kinesis/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",202d44a65a9119213746ac287ad58ad10176a1f3f79d0e6f2e3805e1b127fbe2,buy-it-or-build-it-a-service-is-not-a-solution,/shows/563 - Hasty.md,2023-10-16 20:07:56.309,2023-10-27 15:58:14.049,HASTY
syntax_podcast_show_00564,564,Potluck × JS Modules × HTML Tags × Recession × Budgeting,2023-01-18 12:00:00.266,https://traffic.libsyn.com/syntax/Syntax_-_564.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about HTML tags, budgeting, recession proofing your business, software dev vs software engineer, taking payments, and more.

## Show Notes

* **[00:11:11](#t=00:11:11)** Welcome
* **[01:29:11](#t=01:29:11)** When should you use article and section in HTML?
* **[08:03:08](#t=08:03:08)** Does your business suffer from the economic recession?
* **[15:47:18](#t=15:47:18)** How do you manage your money or budget?
* [PlainTextAccounting](https://plaintextaccounting.org)
* [YNAB](https://www.youneedabudget.com)
* [Copilot](https://copilot.money)
* **[20:51:11](#t=20:51:11)** What should I consider using? There's a lot of options. CommonJS, AMD, UMD, es modules?
* **[26:30:09](#t=26:30:09)** What's the difference between a software developer and software engineer?
* **[30:36:11](#t=30:36:11)** How do you handle payment for your course platforms?
* [Braintree](https://www.braintreepayments.com)
* [Gumroad](https://gumroad.com)
* [Paddle](https://www.paddle.com)
* [Stripe](https://stripe.com/)
* **[38:33:23](#t=38:33:23)** Why is this false? ""I'm a string"" instanceof String
* **[40:38:22](#t=40:38:22)** Do you all use Mac spaces for organizing windows?
* [Arc](https://arc.net)
* **[45:55:21](#t=45:55:21)** Do you have any tips that would help my front end team avoid rendering a DOM with invalid element nesting?
* **[48:48:14](#t=48:48:14)** Would you do an episode commenting on the CSS Nesting survey released this week?
* [Help Choose CSS Nesting Syntax](https://webkit.org/blog/13607/help-choose-from-options-for-css-nesting-syntax/)
* **[53:57:01](#t=53:57:01)** How do you guys go about prioritizing your work?
* [Height.app](https://height.app)
* [Things](https://culturedcode.com/things/)
* **[58:50:19](#t=58:50:19)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Bundle of Eucalyptus](https://amzn.to/3iEsYrL)
* Wes: Recycling bin brackets

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",db12ff0b6cb593ebb4750340e5d4b7b661e84845f442938f36df28c3dffb7198,potluck-js-modules-html-tags-recession-budgeting,/shows/564 - Potluck.md,2023-10-16 20:07:56.347,2023-10-27 15:58:14.102,TASTY
syntax_podcast_show_00565,565,Supper Club × Simen Svale Skogsrud and Espen Hovlandsdal from Sanity,2023-01-20 12:00:00.661,https://traffic.libsyn.com/syntax/Syntax_-_565.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Simen & Espen from Sanity about what Sanity is, who uses Sanity, what is a content lake, how Sanity works with React or TypeScript, what GROQ is, how portable text works, and of course, the supper club questions.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:37](#t=01:37)** Who are you and what is Sanity?
* [Simen Svale Skogsrud](https://www.sanity.io/exchange/community/simen)
* [Espen Hovlandsdal](https://www.sanity.io/exchange/community/rexxars)
* [Check out Sanity](https://www.sanity.io/syntax)
* **[04:04](#t=04:04)** What kinds of services use Sanity?
* **[06:18](#t=06:18)** What is a content lake?
* **[07:26](#t=07:26)** Enabling code access to Sanity Studio
* **[13:12](#t=13:12)** Implenting Sanity into a React app
* **[14:49](#t=14:49)** What is GROQ?
* **[21:04](#t=21:04)** Is GraphQL still the best way to query data?
* **[25:32](#t=25:32)** Workflows in Sanity
* **[27:48](#t=27:48)** What is portable text?
* **[35:19](#t=35:19)** How does Sanity work with TypeScript?
* **[38:51](#t=38:51)** Ecommerce options with Sanity
* **[41:29](#t=41:29)** Supper club questions
* **[50:33](#t=50:33)** SIIIIICK ××× PIIIICKS ×××

* [Syntax 533 - Zod Schema](https://syntax.fm/show/533/zod-schema-validation-and-type-generation)

* [Elden Ring](https://en.bandainamcoent.eu/elden-ring/elden-ring)
* [Risk of Rain](https://store.steampowered.com/app/248820/Risk_of_Rain/)
* [Sharp](https://www.npmjs.com/package/sharp)
* [Syntax 526 - Supper Club with on TRPC](https://syntax.fm/show/526/supper-club-trpc-with-alex-katt-johansson)

## ××× SIIIIICK ××× PIIIICKS ×××

* [Espen bread](https://espen.codes/bread)
* [Medium Tall](https://mediumtallclothing.com/)

## Shameless Plugs

* [Sanity Syntax code](https://www.sanity.io/syntax)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",38779d28c6f5435d86c2dd1463405d9226f3e334b782c1a74d5480fa3c3afd26,supper-club-simen-svale-skogsrud-and-espen-hovlandsdal-from-sanity,/shows/565 - Supper.md,2023-10-16 20:07:56.386,2023-10-27 15:58:14.152,SUPPER
syntax_podcast_show_00566,566,Container Queries Explained,2023-01-23 12:00:00.605,https://traffic.libsyn.com/syntax/Syntax_-_566.mp3,"
In this Hasty Treat, Scott and Wes explain what container queries are, use cases for them, new units of measurement, and possible issues with container queries.

## Show Notes

* **[00:28](#t=00:28)** Welcome
* **[01:46](#t=01:46)** What are Container Queries?
* [Tweet about Container Queries](https://twitter.com/wesbos/status/1614016671043276815?s=61&t=sSa4pPY_-9xMO1VD41z0oA)
* **[03:28](#t=03:28)** Use cases for Container Queries
* [Home Assistant](https://www.home-assistant.io)
* [Can I Use?](https://caniuse.com)
* **[06:11](#t=06:11)** The syntax of container queries
* **[13:42](#t=13:42)** New units
* **[22:27](#t=22:27)** Old iOS versions may cause issues

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",18221a74e85be334f76429461969e76bcc91c0c38e09b3be91f74d8089c68176,container-queries-explained,/shows/566 - Hasty Container Queries.md,2023-10-16 20:07:56.496,2023-10-27 15:58:14.261,HASTY
syntax_podcast_show_00567,567,We React to State of JS 2022,2023-01-25 12:00:00.984,https://traffic.libsyn.com/syntax/Syntax_-_567.mp3,"
In this episode of Syntax, Wes and Scott look through the results of the State of JS survey for 2022.

## Show Notes

* [State of JS 2022](https://2022.stateofjs.com/)

* **[00:26](#t=00:26)** Welcome
* **[01:24](#t=01:24)** Thoughts on the survey in general
* **[04:24](#t=04:24)** Country of origin
* **[05:53](#t=05:53)** Salaries
* **[08:14](#t=08:14)** Higher education
* **[08:58](#t=08:58)** JavaScript features
* **[15:41](#t=15:41)** Browser APIs
* **[21:15](#t=21:15)** Library Usage
* **[26:11](#t=26:11)** Interest in frontend frameworks
* **[28:40](#t=28:40)** Framework usage
* **[31:41](#t=31:41)** Rendering frameworks
* **[34:57](#t=34:57)** Build tools usage over time
* **[39:37](#t=39:37)** Monorepo tools
* [Moon](https://moonrepo.dev)
* **[46:41](#t=46:41)** Backend frameworks
* [Civet](https://civet.dev)
* **[47:42](#t=47:42)** JavaScript run times
* **[51:01](#t=51:01)** TypeScript JavaScript balance
* **[52:17](#t=52:17)** JavaScript flavors
* **[57:03](#t=57:03)** Resources
* [Fireship Dev](http://youtube.com/c/Fireship)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",409db0fa21ca7eecba1bc8bb084ecf0a0bdc1d2bbe823d5d89105f63f2833ae2,we-react-to-state-of-js-2022,/shows/567 - Tasty State of js.md,2023-10-16 20:07:56.538,2023-10-27 15:58:14.311,TASTY
syntax_podcast_show_00568,568,Supper Club × Caleb Porzio,2023-01-27 12:00:00.625,https://traffic.libsyn.com/syntax/Syntax_-_568.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Caleb Porzio about Livewire, Alpine.js, what is it with PHP devs making cool stuff, TypeScript thoughts, and more.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:05](#t=01:05)** Buffalo and Canada
* [History of Target in Canada](https://en.wikipedia.org/wiki/Target_Canada)
* **[06:23](#t=06:23)** Who is Caleb Porzio?
* [@CalebPorzio on Twitter](https://twitter.com/calebporzio)
* **[09:26](#t=09:26)** What is Livewire?
* [Livewire](https://laravel-livewire.com/)
* [Alpine.js](https://alpinejs.dev)
* [HotWired](https://hotwired.dev/)
* **[12:58](#t=12:58)** Are these MVC frameworks?
* **[18:11](#t=18:11)** What is the process behind the scenes?
* **[20:36](#t=20:36)** How does Hotwire handle rendering?
* **[25:38](#t=25:38)** What is Alpine.js?
* **[33:19](#t=33:19)** Why are PHP devs making interesting things?
* [Laravel](https://laravel.com)
* [Tailwind](https://tailwindcss.com)
* **[40:32](#t=40:32)** What is a nextTick in JavaScript?
* [Microtask Guide](https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide)
* **[46:20](#t=46:20)** TypeScript thoughts
* **[48:05](#t=48:05)** Server side rendering?
* [Morph](https://alpinejs.dev/plugins/morph)
* **[49:25](#t=49:25)** Supper Club questions
* [Ergodox Keyboards](https://ergodox-ez.com)
* [Glove 80 Keyboards](https://www.moergo.com/collections/glove80-keyboards)
* [Natty Theme](https://marketplace.visualstudio.com/items?itemName=this-fifo.natty)
* [MonoLisa](https://www.monolisa.dev)
* **[59:40](#t=59:40)** ××× SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Ugmonk Analog](https://ugmonk.com/pages/analog)

## Shameless Plugs

* [Make VS Code Awesome](https://makevscodeawesome.com)
* [Alpine.js](https://github.com/alpinejs/alpine)
* [Livewire](https://laravel-livewire.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9a393568b49b954259485d6b5946c254baff87102456751e8bc80913807dd5e5,supper-club-caleb-porzio,/shows/568 - Supper.md,2023-10-16 20:07:56.580,2023-10-27 15:58:14.358,SUPPER
syntax_podcast_show_00569,569,CSS Wishlist,2023-01-30 12:00:00.474,https://traffic.libsyn.com/syntax/Syntax_-_569.mp3,"
In this Hasty Treat, Scott and Wes talk through their wishlist for CSS in 2023 including mixins, range selectors, fit text, robust color functions, overflown, and more.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:09](#t=01:09)** Snow skate update
* **[03:01](#t=03:01)** Mixins
* **[05:06](#t=05:06)** Range selector
* **[09:36](#t=09:36)** :first-of-column :last-of:column / row
* [Ability to target items in nth-row of autofilled, implicit grid](https://github.com/w3c/csswg-drafts/issues/1943)
* **[11:43](#t=11:43)** Fit Text
* **[13:34](#t=13:34)** Overflow-x, overflow-y control
* **[15:36](#t=15:36)** Full support for CSS with Inline Styles
* **[16:24](#t=16:24)** nth-of-found()
* **[18:18](#t=18:18)** Robust Color functions
* **[22:19](#t=22:19)** resize: both but no overflow or scroll
* **[23:39](#t=23:39)** Animate height auto
* **[23:57](#t=23:57)** Full attr() support
* **[25:07](#t=25:07)** CSS References
* [CSS References](https://gist.github.com/threepointone/61e990b450712cfd7dd0bb87ed0c2982)
* **[26:59](#t=26:59)** overflown + :stuck
* **[28:56](#t=28:56)** Multi-line selectors
* **[30:35](#t=30:35)** Container Queries - select the container itself
* **[32:04](#t=32:04)** :is-scrolled - select a container when it’s scrolled

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",382550316f9229c4872cd4dd647f493160946924d63a3f0a3bcfd5d0cf2a654f,css-wishlist,/shows/569 - Hasty CSS Wishlist.md,2023-10-16 20:07:56.677,2023-10-27 15:58:14.461,HASTY
syntax_podcast_show_00570,570,Node.js CJS → ESM,2023-02-01 12:00:00.145,https://traffic.libsyn.com/syntax/Syntax_-_570.mp3,"
In this episode of Syntax, Wes and Scott talk through what ESM is, and why you want to move your projects to ESM.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[00:51](#t=00:51)** Sponsor: Sentry
* **[02:32](#t=02:32)** Our experiences with ESM
* **[06:54](#t=06:54)** Why ESM?
* **[11:42](#t=11:42)** Top Level Await
* **[16:16](#t=16:16)** Assert Import type eventually
* [Scott's Vite chunk import map](https://twitter.com/stolinski/status/1617926896670343192)
* **[21:00](#t=21:00)** Converting code to ESM
* **[27:22](#t=27:22)** .JS on end of files
* **[32:12](#t=32:12)** Imports and exports
* **[37:52](#t=37:52)** TypeScript
* **[40:24](#t=40:24)** Bundling / Transpiling
* [Vite Node](https://github.com/vitest-dev/vitest/tree/main/packages/vite-node)
* **[43:42](#t=43:42)** Dependencies
* [Sindre thread](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c)
* **[45:16](#t=45:16)** Publishing
* **[53:25](#t=53:25)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Egg dispenser](https://amzn.to/3DbeoPx)
* Wes: [Pure Cinema Podcast](https://purecinemapodcast.libsyn.com/)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7691661a62189007ee7d08fa6dbe012694bf6ebcf8cdea1057c160200002ac90,node-js-cjs-esm,/shows/570 - Tasty node.md,2023-10-16 20:07:56.715,2023-10-27 15:58:14.546,TASTY
syntax_podcast_show_00571,571,Supper Club × Rust In Action with Tim McNamara,2023-02-03 12:00:00.592,https://traffic.libsyn.com/syntax/Syntax_-_571.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Tim McNamara, author of Rust in Action about what Rust is, how to get started learning Rust, and ideas of good projects to begin learning Rust with.

## Show Notes

* **[00:37](#t=00:37)** Welcome
* **[01:26](#t=01:26)** Guest introduction
* [Rust in Action](https://www.manning.com/books/rust-in-action)
* [Tim on Twitter](https://twitter.com/timClicks)
* [Tim on YouTube](https://www.youtube.com/c/timClicks)
* **[03:51](#t=03:51)** What was it like to write a book on Rust?
* **[07:52](#t=07:52)** What drew you to Rust?
* **[13:01](#t=13:01)** The approachability of Rust
* **[21:41](#t=21:41)** What's a good introductory project with Rust?
* **[25:15](#t=25:15)** Why would someone learn Rust?
* [It's time to try WASM](https://www.youtube.com/watch?v=EX2lQdA5x0E)
* **[40:23](#t=40:23)** What is a crate and cargo in Rust?
* **[44:17](#t=44:17)** Running Rust in various places
* **[50:53](#t=50:53)** Should the average web developer try Rust?
* **[52:13](#t=52:13)** Supper club questions
* **[54:17](#t=54:17)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [kokako](https://en.wikipedia.org/wiki/K%C5%8Dkako#See_also)

## Shameless Plugs

* [Tim McNamara - How to learn Rust](https://www.youtube.com/watch?v=sDtQaO5_SOw)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b94cdd16b83b12536b04c4518e169cb0bcfd260b34140f17a1cddf594d7ef896,supper-club-rust-in-action-with-tim-mcnamara,/shows/571 - Supper rust.md,2023-10-16 20:07:56.747,2023-10-27 15:58:14.594,SUPPER
syntax_podcast_show_00572,572,Polish and Perf,2023-02-06 12:00:00.291,https://traffic.libsyn.com/syntax/Syntax_-_572.mp3,"
In this Hasty Treat, Scott and Wes talk through quick tips to improve performance of your website, and the tools available to help diagnose and fix perf issues.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[00:50](#t=00:50)** Polish And Perf explained
* **[02:05](#t=02:05)** What kinds of tools are available to improve performance
* [Lighthouse in Chrome](https://developer.chrome.com/docs/lighthouse/overview/)
* [PageSpeed](https://pagespeed.web.dev)
* **[09:32](#t=09:32)** Identify route caching and http caching
* **[14:25](#t=14:25)** Partytown
* [Partytown](https://partytown.builder.io)
* **[15:19](#t=15:19)** Unnecessary network calls

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",79b06326124fac2d044b1ba3010e75b9a0b729a0887934a183671dcac815b5c8,polish-and-perf,/shows/572 - Hasty Polish and perf.md,2023-10-16 20:07:56.871,2023-10-27 15:58:14.745,HASTY
syntax_podcast_show_00573,573,Converting JS to TypeScript,2023-02-08 12:00:00.319,https://traffic.libsyn.com/syntax/Syntax_-_573.mp3,"
In this episode of Syntax, Wes and Scott talk about their respective processes for converting JavaScript to TypeScript in their projects, why you might want to, and tooling for moving to TypeScript.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[00:36](#t=00:36)** Sponsor: Sentry
* **[02:23](#t=02:23)** Electrical updates
* **[08:16](#t=08:16)** Moving to TypeScript
* **[09:34](#t=09:34)** What are you doing with GraphQL?
* [GraphQL Codegen](https://the-guild.dev/graphql/codegen)
* **[11:35](#t=11:35)** Why move to TypeScript?
* **[12:00](#t=12:00)** Refactoring is easier
* **[14:58](#t=14:58)** Better DX
* **[18:42](#t=18:42)** Adding a tsconfig.json file
* **[22:43](#t=22:43)** Figure out your tooling
* **[23:50](#t=23:50)** Type Checker
* **[25:13](#t=25:13)** MongoDB to TypScript Generator
* **[26:44](#t=26:44)** Eslint-Typescript
* **[28:03](#t=28:03)** Deprank - <https://github.com/codemix/deprank>
* **[28:03](#t=28:03)** Typesync - <https://github.com/jeffijoe/typesync>
* [Deprank](https://github.com/codemix/deprank)
* **[29:18](#t=29:18)** Refactor and rename to .ts
* **[32:40](#t=32:40)** Typing your code
* **[43:04](#t=43:04)** Utilities and unions
* **[46:11](#t=46:11)** Where do you put your types?
* **[49:29](#t=49:29)** Typing Dependencies
* [Definitely Typed](https://github.com/DefinitelyTyped/DefinitelyTyped)
* [Raycast Search npm](https://www.raycast.com/mrmartineau/search-npm)
* **[54:26](#t=54:26)** Global types
* **[01:08](#t=01:08)** Now what?
* **[03:58](#t=03:58)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Elegrp USB C Walloutlet](https://amzn.to/3wEbSgL)
* Wes: [Barrina Shop Lights](https://amzn.to/3XMikP1)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f637a59968e92c14d68cd0302c8692fb9ecf8c04ce237dd1a56bdcb3bcfb7bc0,converting-js-to-typescript,/shows/573 - Tasty TypeScript.md,2023-10-16 20:07:56.914,2023-10-27 15:58:14.798,TASTY
syntax_podcast_show_00574,574,"Supper Club × Qwik framework from Miško Hevery, the Creator of Angular",2023-02-10 12:00:00.106,https://traffic.libsyn.com/syntax/Syntax_-_574.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Miško Hevery about why developers should check out Qwik, the benefits of lazy loading, sharing state between components, and other Builder.io projects like Partytown and Mitosis.

## Show Notes

* **[00:35](#t=00:35)** Welcome
* **[01:19](#t=01:19)** Guest intro
* [Miško Hevery](http://misko.hevery.com)
* [@MHevery](https://twitter.com/mhevery)
* **[01:58](#t=01:58)** What is Resumability?
* **[05:06](#t=05:06)** What is Qwik?
* [Qwik](https://qwik.builder.io)
* [Qwik City](https://qwik.builder.io/qwikcity/overview/)
* **[07:03](#t=07:03)** Why would you want to make a component resumable?
* **[12:08](#t=12:08)** Qwik code can be lazy loaded
* **[15:28](#t=15:28)** How is server side rendering handled?
* **[18:12](#t=18:12)** How does Vite help?
* **[22:40](#t=22:40)** A bit more about hydration
* **[31:03](#t=31:03)** How does the server collection information?
* **[32:11](#t=32:11)** How do you share state between components?
* **[34:45](#t=34:45)** How is data fetching handled?
* **[37:47](#t=37:47)** Why are you using JSX?
* **[41:53](#t=41:53)** Dealing with components in other frameworks
* [Mitosis](https://mitosis.builder.io/?outputTab=G4VwpkA%3D)
* **[49:21](#t=49:21)** What is Partytown?
* [Partytown](https://partytown.builder.io)
* **[54:30](#t=54:30)** Supper Club questions

## ××× SIIIIICK ××× PIIIICKS ×××

* [Thinking Fast and Slow](https://amzn.to/3H50dfQ)

## Shameless Plugs

* [Builder.io](https://www.builder.io)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a81c9dc93a2383700346a52c33492fe2040012ac75ad58a20e10aaf607cfe431,supper-club-qwik-framework-from-misko-hevery-the-creator-of-angular,/shows/574 - Supper.md,2023-10-16 20:07:56.950,2023-10-27 15:58:14.855,SUPPER
syntax_podcast_show_00575,575,Save us from Config File Hell,2023-02-13 12:00:00.407,https://traffic.libsyn.com/syntax/Syntax_-_575.mp3,"
In this Hasty Treat, Scott and Wes talk about what you can do to better organize your config files.

## Show Notes

* **[00:21](#t=00:21)** Welcome
* **[02:20](#t=02:20)** Electric car ski tripping
* **[05:01](#t=05:01)** Why config files?
* **[07:47](#t=07:47)** Custom Vite config files
* [Wes' Vite config](https://github.com/wesbos/hot-tips/blob/main/vite.config.ts)

```
define: {
  __VERSION__: JSON.stringify(process.env.npm_package_version),
},
```

* **[11:16](#t=11:16)** Node has failed us
* **[13:30](#t=13:30)** Cosmic config
* [Cosmiconfig](https://github.com/davidtheclark/cosmiconfig)
* **[16:46](#t=16:46)** File nesting
* **[21:01](#t=21:01)** Standardize on a format

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e3e367412dd163400ada56a91bb2c013dd3c3752d72680346fb46d64736a6011,save-us-from-config-file-hell,/shows/575 - Hasty.md,2023-10-16 20:07:57.044,2023-10-27 15:58:14.955,HASTY
syntax_podcast_show_00576,576,Potluck × Native Web Components × JS Class Mixins × Application Secrets,2023-02-15 12:00:00.575,https://traffic.libsyn.com/syntax/Syntax_-_576.mp3,"
In this potluck episode, Scott and Wes talk home electicity, and then answer your questions about native web components, JS class mixins, JavaScript for marketers, managing application secrets, and more!

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:09](#t=01:09)** Sponsor: Sentry
* **[02:18](#t=02:18)** Electrical house update
* [Klien Wirestrippers](https://amzn.to/3wW2HIW)
* **[07:45](#t=07:45)** Custom Syntax podcast browser
* [Custom Syntax browser](https://syntax.bald.design)
* **[09:29](#t=09:29)** When using browser native web components (i.e. extends HTMLElement), should the whole application be wrapped in a component tree similar to how React apps do it?
* [Deno](https://deno.land)
* [Using Web Components with Next or any SSR Framework](https://css-tricks.com/using-web-components-with-next-or-any-ssr-framework/)
* **[16:12](#t=16:12)** Should I avoid JS/TS class mixins?
* **[21:07](#t=21:07)** Is it acceptable to have any string value as a value for a CSS custom property?
* **[26:48](#t=26:48)** Should agencies consider building marketing sites with JS frameworks or is Wordpress still the best option here?
* **[33:56](#t=33:56)** What are the main things to think about when laying the foundations for an app or project that will hopefully grow into something big?
* **[41:24](#t=41:24)** Will Javascript skills give me an edge over other local digital marketers?
* [WordPress](https://wordpress.com)
* [Ghost](https://ghost.org)
* **[46:00](#t=46:00)** What tool, if any, do you use for publishing packages?
* **[50:19](#t=50:19)** Do you have any suggestions on how I can find time to code more?
* [Bit](https://bit.dev)
* **[54:17](#t=54:17)** how do you both manage your application secrets (API keys, database credentials etc) when deploying to Digital Ocean or Linode?
* **[58:52](#t=58:52)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Physical 100](https://www.netflix.com/title/81587446)
* Wes: [Leviton D23LP-2RW Decora Smart Wi-Fi Mini Plug-In Dimmer](https://www.amazon.ca/Leviton-D23LP-2RW-Anywhere-Companions-Required/dp/B08RSP3NKH?th=1)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7ae93f4d519036816b95ed1525e3aa83c1b2f6c106e8ee4aa8d5b1d7ddefdf47,potluck-native-web-components-js-class-mixins-application-secrets,/shows/576 - Tasty.md,2023-10-16 20:07:57.079,2023-10-27 15:58:15.020,TASTY
syntax_podcast_show_00577,577,Supper Club × Solid.js with Ryan Carniato,2023-02-17 12:00:00.341,https://traffic.libsyn.com/syntax/Syntax_-_577.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Ryan Carniato about Solid.JS, SolidStart, how web components work with Solid, why he chose JSX, and what the future of Solid is.

## Show Notes

* **[00:37](#t=00:37)** Welcome
* **[01:38](#t=01:38)** Who is Ryan Carniato?
* [@RyanCarniato on Twitter](https://twitter.com/RyanCarniato)
* [Ryan on Dev.to](https://dev.to/ryansolid)
* [Solid.JS](https://www.solidjs.com)
* **[02:37](#t=02:37)** Why did you build Solid?
* [Knockout.JS](https://knockoutjs.com)
* [Marko JS](https://markojs.com)
* **[09:15](#t=09:15)** What is Solid?
* **[12:55](#t=12:55)** What does it mean to compile to vanilla JavaScript?
* [SolidStart](https://start.solidjs.com)
* [Tanstack Query](https://tanstack.com/query/latest)
* **[19:39](#t=19:39)** What are observables and signals?
* **[27:17](#t=27:17)** How are web components used inside of Solid?
* **[29:38](#t=29:38)** Why aren't we using web components more?
* **[32:37](#t=32:37)** Why would someone pick SolidStart vs Solid?
* **[39:07](#t=39:07)** Why did you choose JSX?
* **[44:45](#t=44:45)** How did you build live code examples into documentation?
* [SolidJS Docs](https://docs.solidjs.com)
* [Solid-Movies.app](https://solid-movies.app)
* **[47:19](#t=47:19)** What is Solid.JS built on?
* **[53:36](#t=53:36)** What is the future of Solid?
* **[00:39](#t=00:39)** Supper club questions
* **[02:57](#t=02:57)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Alice in Borderland](https://www.netflix.com/ca/title/80200575)

## Shameless Plugs

* [Ryan on Twitch](https://www.twitch.tv/ryansolid)
* [Ryan on YouTube](https://www.youtube.com/@ryansolid)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",233cf59d4361eca91d685856677297bc42dc0f6c1012f45afe30156080b3654d,supper-club-solid-js-with-ryan-carniato,/shows/577 - Supper Ryan.md,2023-10-16 20:07:57.116,2023-10-27 15:58:15.070,SUPPER
syntax_podcast_show_00578,578,Logging,2023-02-20 12:00:00.302,https://traffic.libsyn.com/syntax/Syntax_-_578.mp3,"
In this Hasty Treat, Scott and Wes talk about the reasons why you should log errors, how it's not just for debugging, where to save logs, and apps and packages to help with logging.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:37](#t=01:37)** Sponsor: Sentry
* **[02:16](#t=02:16)** What is logging? Why log?
* **[04:59](#t=04:59)** Logging isn't just for debugging
* **[08:22](#t=08:22)** What do we log?
* **[13:34](#t=13:34)** What not to log
* **[14:58](#t=14:58)** Development, staging, and production
* **[17:36](#t=17:36)** Logging bots
* **[19:33](#t=19:33)** Where to put logs
* **[20:59](#t=20:59)** How to log
* [Log Tail](https://betterstack.com/logtail)
* [Paper Trail](https://www.papertrail.com/)
* [Sematext Logs](https://sematext.com/docs/logs/)
* [DataDog](https://www.datadoghq.com/lpg/)
* [Winston](https://www.npmjs.com/package/winston)
* [Pino](https://getpino.io/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",604da16cfc3e4f6bdab909ed1122a631984d204dbb8e1f1d49ba8c5ccc671b3c,logging,/shows/578 - Hasty.md,2023-10-16 20:07:57.266,2023-10-27 15:58:15.189,HASTY
syntax_podcast_show_00579,579,Warp Terminal × Next Gen Terminals,2023-02-22 12:00:00.619,https://traffic.libsyn.com/secure/syntax/Syntax_-_579.mp3,"
In this episode of Syntax, Wes and Scott talk about why they're digging Warp as their terminal app of choice, what the terminal is, and some of their wishlist items for Warp.

## Show Notes

* **[00:09](#t=00:09)** Welcome
* **[02:11](#t=02:11)** Disclaimers
* **[04:17](#t=04:17)** What is the terminal?
* **[06:54](#t=06:54)** What we've used for terminal
* [Get Warp](https://app.warp.dev/referral/2664Z2)
* [Hyper Terminal](https://hyper.is/)
* [iTerm](https://iterm2.com/)
* [Alacritty](https://alacritty.org/)
* **[11:14](#t=11:14)** Terminal terminology
* [CommandLinePowerUser.com](https://commandlinepoweruser.com/)
* [WSL](https://learn.microsoft.com/en-us/windows/wsl/install)
* [OhMyPosh](https://ohmyposh.dev/)
* [OhMyZsh](https://ohmyz.sh/)
* [Starship](https://starship.rs/)
* [Ion](https://github.com/redox-os/ion)
* **[17:35](#t=17:35)** The basic features of Warp
* **[20:45](#t=20:45)** Autocomplete issues
* [Fig](https://www.npmjs.com/package/fig)
* **[25:06](#t=25:06)** Sticky header
* **[26:13](#t=26:13)** Blocks
* **[29:17](#t=29:17)** The prompt
* **[30:38](#t=30:38)** Sharing blocks and live sessions
* **[32:29](#t=32:29)** AI Command Search
* [AI Command search](https://twitter.com/warpdotdev/status/1612509826738966528)
* **[35:51](#t=35:51)** Remote SSH
* **[37:53](#t=37:53)** Window management
* [Launch configurations](https://docs.warp.dev/features/sessions/launch-configurations)
* **[38:42](#t=38:42)** Workflows
* **[40:19](#t=40:19)** The command palette
* **[42:36](#t=42:36)** How does Warp make money?
* **[43:54](#t=43:54)** Warp requires an account
* **[46:09](#t=46:09)** Annoyances and wishlists
* **[58:29](#t=58:29)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [50 Pokemon Cards for $5](https://amzn.to/3XDPek0)
* Wes: [iPad Sorter Station](https://amzn.to/3YwqaN0)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",8d2fc26a32bf9c25aebb86e99d1b9bf2a5901887e115beb40501d84d93c41678,warp-terminal-next-gen-terminals,/shows/579 - Tasty Warp.md,2023-10-16 20:07:57.302,2023-10-27 15:58:15.248,TASTY
syntax_podcast_show_00580,580,Supper Club × Astro 2.0 with Fred Schott,2023-02-24 12:00:00.833,https://traffic.libsyn.com/syntax/Syntax_-_580.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Fred Schott about all things Astro v2.0. What is Astro and why should you use it? How do islands work? Images, edge, AI, error overlays, hybrid rendering, and more!

## Show Notes

* **[00:40](#t=00:40)** Welcome
* **[01:08](#t=01:08)** Guest introduction
* [FredKSchott.com](https://fredkschott.com)
* [@Fredkschott on Twitter](https://twitter.com/fredkschott)
* [Fred on GitHub](https://github.com/fredkschott)
* **[02:17](#t=02:17)** What is Astro and why should someone use it?
* **[04:57](#t=04:57)** What can you build with Astro?
* **[06:11](#t=06:11)** What's an island in content?
* **[09:43](#t=09:43)** How do routes work with Astro?
* **[12:30](#t=12:30)** How is Markdown handled in Astro?
* [mdxjs](https://mdxjs.com)
* **[14:32](#t=14:32)** How does Astro work on the edge?
* **[18:15](#t=18:15)** How does Astro v2 handle data fetching?
* **[23:25](#t=23:25)** Integrations with Astro
* **[26:38](#t=26:38)** Astro AI bot?
* [AI Langchain](https://github.com/hwchase17/langchain/)
* **[30:40](#t=30:40)** Error overlay design
* **[36:10](#t=36:10)** What are some of the most important upgrades in v2?
* **[37:18](#t=37:18)** Hybrid rendering
* **[40:27](#t=40:27)** Astro's image component
* [Squoosh](https://squoosh.app)
* **[44:39](#t=44:39)** What happened to snowpack? Pikapkg?
* **[46:48](#t=46:48)** What is the financial model for Astro?
* **[50:28](#t=50:28)** Supper Club questions
* [Obsidian](https://obsidian.md)

## ××× SIIIIICK ××× PIIIICKS ×××

* [Chat Langchain](https://chat.langchain.dev)

## Shameless Plugs

* [Astro](https://astro.build)
* [Astro Discord](https://astro.build/chat)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",eb363e049c589ca9bec47bc49bcefdd637a93bc0995c6b5e72547328b82d16af,supper-club-astro-2-0-with-fred-schott,/shows/580 - Supper Fred Schott.md,2023-10-16 20:07:57.339,2023-10-27 15:58:15.304,SUPPER
syntax_podcast_show_00581,581,Clean vs Sloppy Code,2023-02-27 12:00:00.598,https://traffic.libsyn.com/syntax/Syntax_-_581.mp3,"
In this Hasty Treat, Scott and Wes talk about the difference between sloppy code and clean code, how to establish rules for your code base, and how to enforce your rules.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[00:46](#t=00:46)** Sponsor: Sentry
* **[01:51](#t=01:51)** Uses performance issues
* [Uses.tech](https://uses.tech)
* **[04:23](#t=04:23)** Understand Sloppy Code
* **[10:17](#t=10:17)** Syntax website timestamp issue
* **[12:56](#t=12:56)** Establish rules to fix sloppy code
* **[16:35](#t=16:35)** Adding a feature, do you refactor an unrelated function?
* **[23:07](#t=23:07)** How do you enforce rules?
* [GitHub Actions](https://docs.github.com/en/actions)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets",c622b59274e49b65d12df6ab72f8aaf485f263672733cc2c0663a485a0b361c9,clean-vs-sloppy-code,/shows/581 - Hasty clean code.md,2023-10-16 20:07:57.465,2023-10-27 15:58:15.406,HASTY
syntax_podcast_show_00582,582,AI and Coding with ChatGPT,2023-03-01 12:00:00.240,https://traffic.libsyn.com/syntax/Syntax_-_582.mp3,"
In this episode of Syntax, Wes and Scott talk about the current landscape of AI, how AI is trained, is AI going to take your job, who's going to train AI, and adding AI to your applications.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:11:10](#t=00:11:10)** Welcome
* **[01:58:01](#t=01:58:01)** Sponsor: Sentry
* **[03:16:05](#t=03:16:05)** What this episode is not going to be
* **[07:36:11](#t=07:36:11)** The current landscape
* [Chat GPT](https://openai.com/blog/chatgpt/)
* [GitHub Copilot](https://github.com/features/copilot)
* [Warp Completions](https://docs.warp.dev/features/completions)
* [Midjourney](https://www.midjourney.com)
* [Bing AI](https://www.bing.com/?/ai)
* [From Bing to Sydney](https://stratechery.com/2023/from-bing-to-sydney-search-as-distraction-sentient-ai/)
* [Why a Chat with Bing Left Me Deeply Unsettled](https://www.nytimes.com/2023/02/16/technology/bing-chatbot-microsoft-chatgpt.html)
* [Tensorflow](https://www.tensorflow.org)
* [Stable Diffusion](https://stablediffusionweb.com)
* [Amazing AI](https://sindresorhus.com/amazing-ai)
* [Dall E](https://openai.com/dall-e-2/)
* **[15:26:11](#t=15:26:11)** Timeline of growth of AI
* [AI Timeline](https://lifearchitect.ai/timeline/)
* **[16:24:11](#t=16:24:11)** What is a model for AI?
* **[24:20:11](#t=24:20:11)** How do you use AI?
* **[33:14:00](#t=33:14:00)** Code brushes
* **[35:57:18](#t=35:57:18)** Midjourney
* [Yandex](https://yandex.com)
* **[40:13:18](#t=40:13:18)** Is it going to take your job?
* [Canva](https://www.canva.com)
* [Cal](https://cal.com)
* **[50:22:19](#t=50:22:19)** Cost prohibitive
* **[52:26:20](#t=52:26:20)** Who's going to train the robots?
* **[57:29:12](#t=57:29:12)** Adding AI to your apps
* **[58:50:11](#t=58:50:11)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Motion sensor](https://amzn.to/41fkKaK)
* Wes: [Apple Watch Ultra](https://www.apple.com/shop/buy-watch/apple-watch-ultra)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",950dd34300dce88990b955d28f904f3ea3f827cc821c05ccbfccd9d7fdb98baa,ai-and-coding-with-chatgpt,/shows/582 - AI Coding.md,2023-10-16 20:07:57.499,2023-10-27 15:58:15.461,TASTY
syntax_podcast_show_00583,583,Supper Club × Visual Coding Languages With Steve Sewell,2023-03-03 12:00:00.026,https://traffic.libsyn.com/syntax/Syntax_-_583.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Steve Sewell about Builder.io, Qwik, Partytown, and the tricks and tips he's learned in building apps for the modern web.

## Show Notes

* **[00:37](#t=00:37)** Welcome
* **[01:14](#t=01:14)** Guest introduction
* [Steve on Twitter](https://twitter.com/Steve8708)
* [Steve on GitHub](https://github.com/steve8708)
* [Builder.io](https://www.builder.io/)
* [Builder.io/demo](https://builder.io/demo)
* **[04:07](#t=04:07)** Builder works with any tech stack?
* **[06:29](#t=06:29)** Where is the structure of the site coming from?
* **[07:28](#t=07:28)** What is Builder.io?
* **[11:34](#t=11:34)** What's the workflow for updating content?
* **[13:03](#t=13:03)** What is Builder built in?
* [Mobx](https://mobx.js.org/README.html)
* **[14:36](#t=14:36)** Moving from Figma to HTML
* **[18:41](#t=18:41)** Is an app like this divs all the way down?
* **[24:55](#t=24:55)** Stories of browser gremlins building?
* **[26:29](#t=26:29)** Advice for anyone building drag and drop
* [Fullstory](https://www.fullstory.com)
* **[29:04](#t=29:04)** Does FPS play a part in development?
* **[33:31](#t=33:31)** Do you use SVG?
* **[36:15](#t=36:15)** Where does Qwik and Partytown fit into all of it?
* [Qwik](https://qwik.builder.io)
* [Partytown](https://partytown.builder.io)
* **[46:45](#t=46:45)** How does accessibility play into Builder?
* **[49:44](#t=49:44)** Supper club questions
* **[54:30](#t=54:30)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Dead Space Remake](https://en.wikipedia.org/wiki/Dead_Space_(2023_video_game))

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",e967e81150126b74e1c45a7ec90785d7f73f8f78247fe3e9a7837373f1995e36,supper-club-visual-coding-languages-with-steve-sewell,/shows/583 - Supper Builder.md,2023-10-16 20:07:57.539,2023-10-27 15:58:15.514,SUPPER
syntax_podcast_show_00584,584,Node in the Browser × WebContainers + NodeBox,2023-03-06 12:00:00.674,https://traffic.libsyn.com/syntax/Syntax_-_584.mp3,"
In this Hasty Treat, Scott and Wes talk about two new services that allow you to run Node in the browser, WebContainers + NodeBox. Why Node in the browser? How does it work? And what are the differences and limitations of the services?

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:14](#t=01:14)** Sponsor: Sentry
* **[02:45](#t=02:45)** Webcontainers and NodeBox
* [Introducing WebContainers](https://blog.stackblitz.com/posts/introducing-webcontainers/)
* [Code Sandbox](https://codesandbox.io)
* [CodePen](https://codepen.io)
* [Replit](https://replit.com)
* [GitHub Codespaces](https://github.com/features/codespaces)
* **[06:42](#t=06:42)** Why Node.js in the browser?
* **[11:08](#t=11:08)** How does it work?
* **[13:10](#t=13:10)** Clientside APIs
* **[14:27](#t=14:27)** Using iFrame to proxy messages
* **[17:39](#t=17:39)** Are these open source?
* **[19:22](#t=19:22)** Differences between the two services
* **[21:10](#t=21:10)** Wes to Figma, Scott to Penpot
* [Figma](https://www.figma.com/)
* [Penpot](https://penpot.app/)
* **[24:51](#t=24:51)** Limitations

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",919a35ba57ad9a5d317e609d722cfa6f3a430b6713cfcf4ae4048d59087c4733,node-in-the-browser-webcontainers-nodebox,/shows/584 - Node in the browser.md,2023-10-16 20:07:57.759,2023-10-27 15:58:15.644,HASTY
syntax_podcast_show_00585,585,Fundamentals × What Makes a Website Slow?,2023-03-08 12:00:00.567,https://traffic.libsyn.com/syntax/Syntax_-_585.mp3,"
In this episode of Syntax, Wes and Scott talk through all the reasons your website might be slow, and how you can troubleshoot a slow website such as issues on the server, large assets, caching, CSS, JavaScript, latency, and more.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* [Glove 80 keyboard](https://www.moergo.com/)
* [Raycast](https://www.raycast.com/)
* **[03:06](#t=03:06)** Sponsor: Sentry
* **[05:15](#t=05:15)** What makes a website slow?
* [Uses.tech](https://uses.tech/)
* **[06:29](#t=06:29)** Server Generation Times
* **[13:33](#t=13:33)** Large payloads
* [Redis](https://redis.io/)
* [Gzip](https://www.gnu.org/software/gzip/)
* [Brotli compression](https://en.wikipedia.org/wiki/Brotli)
* [Cloudflare](https://www.cloudflare.com/)
* [Cloudinary](https://cloudinary.com)
* **[18:13](#t=18:13)** Assets being too large
* **[23:01](#t=23:01)** Caching assets
* **[28:25](#t=28:25)** CDN
* **[30:35](#t=30:35)** Caching 101
* **[37:04](#t=37:04)** Render blocking requests
* **[40:01](#t=40:01)** CSS
* **[42:25](#t=42:25)** JavaScript
* **[44:51](#t=44:51)** Latency
* **[49:17](#t=49:17)** Flash of dark mode or unsigned out
* **[55:00](#t=55:00)** Data uris
* [Content-visibility](https://developer.mozilla.org/en-US/docs/Web/CSS/content-visibility)
* [vite-plugin-singlefile](https://www.npmjs.com/package/vite-plugin-singlefile)
* [Pool in your URL](https://wesbos.com/pool-in-your-url)
* **[58:11](#t=58:11)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [3Blue1Brown](https://www.youtube.com/@3blue1brown)
* Wes: [Suavecito Firme Clay Pomade](https://suavecito.com/products/firme-clay-pomade)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",7c418a64449c8a393b0cb219864c16969c7aaa5874aed70a3955d31242cf5e77,fundamentals-what-makes-a-website-slow,/shows/585 - speed on apps.md,2023-10-16 20:07:57.793,2023-10-27 15:58:15.696,TASTY
syntax_podcast_show_00586,586,Supper Club × Digital Nomad with Eric Sartorius,2023-03-10 12:00:00.813,https://traffic.libsyn.com/syntax/Syntax_-_586.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Eric Sartorius about his life as a digital nomad - including recently climbing Kilimanjaro, his tips for travel deals, crazy experiences while travelling, and what he brings on the road with him.

## Show Notes

- **[01:02](#t=01:02)** Guest introduction
- [EricSartorius.com](https://www.ericsartorius.com/)
- [Eric on GitHub](https://github.com/ericssartorius)
- [PureFunc](https://www.purefunc.io/)
- [Train Surfing](https://www.youtube.com/@shiey)
- [Get Stream](https://getstream.io/)
- **[02:51](#t=02:51)** Where have you travelled?
- **[04:27](#t=04:27)** What are the challenges of being a digital nomad?
- **[09:08](#t=09:08)** How do you research before travel?
- **[13:04](#t=13:04)** How do you approach applying for a job?
- **[21:10](#t=21:10)** Do you travel with other digital nomads?
- [R16 video](https://www.youtube.com/watch?v=44kKLeDKIIc)
- **[22:43](#t=22:43)** What are the best locations you've been?
- **[24:21](#t=24:21)** What about health and insurance?
- [Tiny Toones](https://www.tinytoones.org/)
- [TSA post raw meat on carousel](https://www.travelandleisure.com/travel-news/tsa-posts-raw-meat-on-carousel-seattle-airport)
- **[28:21](#t=28:21)** What motivated you to want to climb Kilimanjaro?
- **[41:14](#t=41:14)** What gear do you travel with for web dev?
- [Osprey Talon 33](https://www.osprey.com/us/en/product/talon-33-TALON33F20.html?sku=10002695&nulsc=true)
- [Packing cubes](https://www.rei.com/product/195445/rei-co-op-expandable-packing-cube-set-smallmediumlarge)
- [Outlier](https://outlier.nyc/)
- [Google Fi](https://fi.google.com/about/?pli=1)
- [Google Flights explore](https://www.google.com/travel/explore)
- **[51:12](#t=51:12)** Using credit card points for flights
- **[54:45](#t=54:45)** How do you handle customs?
- **[00:13](#t=00:13)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- [Comfort 2.0 Czech sock shoes](https://skinners.cc/en/skinners-comfort?10-color=77-sand)

## Shameless Plugs

- [PureFunc](https://www.purefunc.io/)
- [@TheEpicLife on Instagram](https://www.instagram.com/theepiclife/)
- [Pamoja Safaris](https://www.pamojasafaris.com/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",ee3d1058e38c5176d55f62ba22792de4e07a824fd86b4e6488c70e7809e8d742,supper-club-digital-nomad-with-eric-sartorius,/shows/586 - Supper Erc.md,2023-10-16 20:07:57.843,2023-10-27 15:58:15.760,SUPPER
syntax_podcast_show_00587,587,Web Streams Explained,2023-03-13 12:00:00.952,https://traffic.libsyn.com/syntax/Syntax_-_587.mp3,"
In this Hasty Treat, Scott and Wes explain the what, why, and how of web streaming, and some of the jargon you might encounter with web streams.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:26:11](#t=00:26:11)** Welcome
* **[00:59:07](#t=00:59:07)** Sponsor: Sentry
* **[01:39:17](#t=01:39:17)** What are Web Streams?
* **[03:15:11](#t=03:15:11)** Why are web streams picking up steam lately?
* **[04:41:21](#t=04:41:21)** How are web streams streaming?
* **[09:28:11](#t=09:28:11)** Searching a database can use streaming
* **[13:07:11](#t=13:07:11)** Web stream jargon
* **[18:06:11](#t=18:06:11)** FileReader is a Stream
* **[19:31:05](#t=19:31:05)** Other Types of Streams
* [Cloudlfare HTML Rewriter](https://developers.cloudflare.com/workers/runtime-apis/html-rewriter#:~:text=The%20HTMLRewriter%20class%20allows%20developers%20to%20build%20comprehensive,jQuery-like%20experience%20directly%20inside%20of%20your%20Workers%20application.)
* **[21:50:05](#t=21:50:05)** ReadableStream and Writable Stream
* **[27:23:00](#t=27:23:00)** Creating a Writable Stream
* **[28:39:11](#t=28:39:11)** TextDecoderStream

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c28f9cfd6dd7116ddcfa97d3b8b4e8e225025144290994858d346c10d7410331,web-streams-explained,/shows/587 - Hasty Web Streams.md,2023-10-16 20:07:57.945,2023-10-27 15:58:15.856,HASTY
syntax_podcast_show_00588,588,New Syntax Website Brainstorm! IRL!,2023-03-15 12:00:00.619,https://traffic.libsyn.com/syntax/Syntax_-_588.mp3,"
In this episode of Syntax, Wes and Scott are in the same room together brainstorming new ideas for the Syntax.fm website: search, transcripts, video, tags, audio player, podcast hosting, and more!

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[01:08](#t=01:08)** Sponsor: Sentry
* **[01:43](#t=01:43)** Brainstorming for Syntax's new website
* **[02:27](#t=02:27)** Are there good podcast websites out there?
* **[03:26](#t=03:26)** Homepage design
* **[07:33](#t=07:33)** How would you handle login?
* **[09:40](#t=09:40)** Search on the site
* [SvelteKit docs](https://kit.svelte.dev/docs/)
* [Flexsearch](https://github.com/nextapps-de/flexsearch)
* **[13:59](#t=13:59)** Transcripts
* [Open AI Whisper](https://github.com/openai/whisper)
* [Whisper AI for podcasters](https://colab.research.google.com/drive/1-WOkolnSK5xbvf5SCBtvJYa-CJF6l7lO?usp=sharing#scrollTo=Pq7FNz3OU9kZ)
* **[18:25](#t=18:25)** The player
* **[21:11](#t=21:11)** Tagging
* **[23:45](#t=23:45)** Video
* [Linus Tech Tips - WAN Show](https://www.youtube.com/watch?v=boPRXV0VmEk)
* **[27:45](#t=27:45)** Show notes
* **[29:57](#t=29:57)** Surfacing good content on the podcast
* **[35:30](#t=35:30)** Interactions
* **[36:25](#t=36:25)** Deploy to Podcast Host
* [Libsyn](https://libsyn.com)
* [Editor Chris](https://www.lemonproductions.ca/portfolio/syntax-fm/) [on Mastodon](https://mastodon.social/@ichris)
* **[38:43](#t=38:43)** Code base
* [Syntax website on GitHub](https://github.com/wesbos/Syntax)
* **[45:21](#t=45:21)** Listener feedback
* **[46:27](#t=46:27)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Screen door dog](https://amzn.to/3IDV4fK)
* Wes: [Apple Watch bands](https://www.aliexpress.com/w/wholesale-Apple-Watch-band.html)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",187714db0690de1af965cc8935dd0712c68cf7947672e54b829c095486a9d45f,new-syntax-website-brainstorm-irl,/shows/588 - Tasty Syntax web.md,2023-10-16 20:07:57.981,2023-10-27 15:58:15.907,TASTY
syntax_podcast_show_00589,589,Supper Club × Next.js on AWS + Serverless with Dax Raad,2023-03-17 12:00:00.845,https://traffic.libsyn.com/syntax/Syntax_-_589_v2.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Dax Raad about building on serverless infrastructure, Next.js, and SST.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:05](#t=01:05)** Sponsor: Sentry
* **[02:05](#t=02:05)** Who is Dax Raad?
* [Dax on Twitter](https://twitter.com/thdxr)
* [thdxr.com](https://thdxr.com)
* [Tomorrow.fm Podcast](https://tomorrow.fm)
* [SST.dev](https://sst.dev)
* **[04:22](#t=04:22)** Why doesn't AWS have a simple way to build on top of it?
* **[07:46](#t=07:46)** What is Open Next?
* [Vercel](https://vercel.com)
* [Next.js](https://nextjs.org)
* [Open-Next.js](https://open-next.js.org/)
* **[10:25](#t=10:25)** How many people are involved in building Open Next?
* **[11:14](#t=11:14)** Mapping Next.js to Amazon products
* **[14:25](#t=14:25)** What is the edge?
* **[18:56](#t=18:56)** Pricing in serverless
* **[23:33](#t=23:33)** What about image assets?
* **[25:02](#t=25:02)** Is the CDK a layer on top of something Amazon is doing?
* [Amazon CDK](https://aws.amazon.com/cdk/)
* **[27:23](#t=27:23)** What is terraform?
* [Terraform](https://developer.hashicorp.com/terraform/intro)
* **[28:50](#t=28:50)** What is SST and why SST?
* **[30:54](#t=30:54)** Do I build with SST or on top of SST?
* **[32:06](#t=32:06)** How do you do local development with SST?
* **[37:01](#t=37:01)** What about databases with SST?
* **[40:12](#t=40:12)** What about build pipelines?
* **[42:28](#t=42:28)** What is Seed?
* [Seed](https://seed.run)
* **[43:52](#t=43:52)** Any advice for someone learning AWS?
* [SST on YouTube](https://www.youtube.com/@sst-dev)
* **[46:05](#t=46:05)** Supper Club questions
* [Neovim](https://neovim.io)
* [Toyko Night theme](https://github.com/folke/tokyonight.nvim)
* [Nerd Fonts](https://www.nerdfonts.com/font-downloads)
* [Astro](https://astro.build)
* [TypeScript](https://www.typescriptlang.org)
* [Alacritty](https://alacritty.org)
* [i3](https://i3wm.org)
* [Cloudflare](https://www.cloudflare.com/)
* [Inside the Meteoric Rise—and More Epic Flop—of HQ Trivia](https://www.thedailybeast.com/inside-hq-trivias-meteoric-rise-and-more-epic-flop)
* **[52:45](#t=52:45)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Planetscale](https://planetscale.com)

## Shameless Plugs

* [Rebase.tv](https://rebase.tv)
* [@RebaseTV on Twitter](https://twitter.com/rebasetv)
* [Tomorrow.fm episode on Rebase.tv](https://tomorrow.fm/10)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c134c01efa81fb30cae94c4684648e113138bf6588365e9b97c22e82eb7fc4a9,supper-club-next-js-on-aws-serverless-with-dax-raad,/shows/589 - Supper Dax.md,2023-10-16 20:07:58.018,2023-10-27 15:58:15.959,SUPPER
syntax_podcast_show_00590,590,"HTTPS + Tunnel Your Localhost - Cloudflare Tunnels, Ngrok, and more!",2023-03-20 12:00:00.227,https://traffic.libsyn.com/syntax/Syntax_-_590.mp3,"
In this Hasty Treat, Scott and Wes talk about why you might need to tunnel to your local computer, and how to set that up securely.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:09](#t=01:09)** GitHub tarball web streams
* **[05:09](#t=05:09)** Sponsor: Sentry
* **[05:48](#t=05:48)** Why would I need security locally?
* [Caddy Server](https://caddyserver.com/)
* **[11:23](#t=11:23)** Cookie issues
* **[13:04](#t=13:04)** Examples of things that need a secure context
* [MDN Features restricted to secure contexts](https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts)
* **[14:58](#t=14:58)** What is tunneling?
* **[19:22](#t=19:22)** Cloudflare Tunnels
* [Cloudflared](https://github.com/cloudflare/cloudflared)
* [Cloudflare Tunnel](https://twitter.com/wesbos/status/1634310926219333642)
* **[20:50](#t=20:50)** nGrok
* [ngrok](https://ngrok.com/)
* **[23:22](#t=23:22)** Local tunnel
* [Local Tunnel](https://theboroer.github.io/localtunnel-www/)
* **[24:55](#t=24:55)** Tunnel to
* [Tunnel to dev - Expose your local web server to the internet with a public URL](https://tunnelto.dev/)
* **[26:02](#t=26:02)** Cloudflare subdomain

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",b5882bd34c5cd181d901153a9761e139591ade524c1be6897c2156073676aa27,https-tunnel-your-localhost-cloudflare-tunnels-ngrok-and-more,/shows/590 - Hasty tunnels.md,2023-10-16 20:07:58.124,2023-10-27 15:58:16.095,HASTY
syntax_podcast_show_00591,591,Potluck × Learning Web Dev × Video Streaming × Mono Repos,2023-03-22 12:00:00.216,https://traffic.libsyn.com/syntax/Syntax_-_591.mp3,"
In this episode of Syntax, Wes and Scott answer your questions about learning web dev at an older age, making your apps look better, building a video streaming site, mono repo vs regular, and more!

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[00:31](#t=00:31)** Sponsor: Sentry
* **[01:43](#t=01:43)** DST update
* [Tales of Taboo](https://pod.link/1457365096)
* **[03:45](#t=03:45)** Is it too late to learn web dev at an older age?
* **[10:20](#t=10:20)** How do people produce work so quickly?
* **[13:47](#t=13:47)** How can I make my web apps look better visually?
* [Dribbble - Discover the World’s Top Designers & Creative Professionals](https://dribbble.com/)
* [Tailwind UI - Official Tailwind CSS Components & Templates](https://tailwindui.com/)
* [CSS · Bootstrap](https://getbootstrap.com/)
* **[18:41](#t=18:41)** Not losing the niceties with not having to do a full page load
* **[22:23](#t=22:23)** Should I use a script to generate an index JS/TS file?
* **[24:55](#t=24:55)** If you were going to make a video streaming website, what technologies would you use?
* [The API to Video | Mux](https://www.mux.com/)
* [Vimeo – Video Experience Platform](https://vimeo.com/)
* [Live Streaming on AWS | AWS Solutions](https://aws.amazon.com/solutions/implementations/live-streaming-on-aws/)
* [Video on Demand | AWS Solutions](https://aws.amazon.com/solutions/implementations/video-on-demand-on-aws/)
* [Cloudflare Stream | Video streaming made easy and affordable at scale](https://www.cloudflare.com/products/cloudflare-stream/)
* **[29:11](#t=29:11)** What should I do if my boss wants me to move up the business ladder?
* **[31:58](#t=31:58)** I'm confused about hydration in frameworks like SvelteKit.
* **[37:07](#t=37:07)** What're the advantages of a mono repo over a regular one?
* **[39:50](#t=39:50)** Is it better to stay put at a place even if you're unhappy right now?
* **[43:13](#t=43:13)** How should I ingest tv scripts into a database?
* **[46:24](#t=46:24)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Stronger By Science Podcast](https://www.sbspod.com/)
* Wes: [Merten and Storck Carbon Steel](https://mertenandstorck.com/collections/carbon-steel)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",605d19f116bd2ab65c4d8f9e4b7e430bfed8e56b0cd89e03eebd154a77f4fbf5,potluck-learning-web-dev-video-streaming-mono-repos,/shows/591 - Tasty Potluck.md,2023-10-16 20:07:58.161,2023-10-27 15:58:16.170,TASTY
syntax_podcast_show_00592,592,Supper Club × The Role Of UX Designers In Humanizing The Future with Travis Neilson,2023-03-24 12:00:00.559,https://traffic.libsyn.com/syntax/Syntax_-_592.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Travis Neilson about his work at Google, YouTube music, and where AI is at now, and where it's headed in the future.

## Show Notes

* **[00:37](#t=00:37)** Welcome
* **[00:55](#t=00:55)** Guest introduction
* [Travis Neilson (@travisneilson)](https://twitter.com/travisneilson)
* [Travis Neilson dot com](http://travisneilson.com/)
* [Travis Neilson on Skills Gap, Design, Focus and Working at Google — Syntax Podcast 142](https://syntax.fm/show/142/travis-neilson-on-skills-gap-design-focus-and-working-at-google)
* [Awwards Conference talk](https://conference.awwwards.com/talks/ai/ux-the-role-of-ux-designers-in-humanizing-the-future)
* [https://www.youtube.com/LittleMusicBoxes](https://www.youtube.com/LittleMusicBoxes)
* **[06:29](#t=06:29)** Convos about AI
* **[07:49](#t=07:49)** How do we keep humanity with AI?
* **[15:42](#t=15:42)** Is this the printing press or is this putting everyone out of a job?
* **[19:21](#t=19:21)** What is Google using AI for these days?
* **[25:59](#t=25:59)** How do we keep human interface via AI?
* **[31:18](#t=31:18)** What is the evolution of AI chat windows?
* **[34:05](#t=34:05)** How do you nourish your AI with data?
* **[39:59](#t=39:59)** Halluncinations in AI
* **[47:46](#t=47:46)** What models are exciting to you?
* **[52:01](#t=52:01)** We're building the window for the next generation
* **[54:55](#t=54:55)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [The Age of Spiritual Machines](https://amzn.to/3mwehsl)
* [The Singularity is Near](https://amzn.to/3KWfm6R)
* [The Shape of Design](https://amzn.to/3F2oJy6)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",f6bf3ace2463d80ed5fc26c194006563970a49fc6df3477b6b429254674128b4,supper-club-the-role-of-ux-designers-in-humanizing-the-future-with-travis-neilson,/shows/592 - Supper.md,2023-10-16 20:07:58.209,2023-10-27 15:58:16.219,SUPPER
syntax_podcast_show_00593,593,Coding with the Open AI / Chat GPT API,2023-03-27 12:00:00.527,https://traffic.libsyn.com/syntax/Syntax_-_593.mp3,"
In this Hasty Treat, Scott and Wes talk about what can be done with the OpenAI API, how to get started with it, pricing, tuning your model, and gotchas for getting started with the OpenAI API.

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:17](#t=01:17)** Sponsor: Sentry
* **[02:39](#t=02:39)** What is the OpenAI API?
* **[05:11](#t=05:11)** Getting started with the API
* **[07:41](#t=07:41)** How run OpenAI
* [OpenAI API](https://openai.com/blog/openai-api)
* **[14:16](#t=14:16)** GPT4 update
* **[17:58](#t=17:58)** Tune your models
* **[19:46](#t=19:46)** Generating questions with ChatGPT
* **[24:30](#t=24:30)** Speech to text
* [Otter.ai - Voice Meeting Notes & Real-time Transcription](https://otter.ai/)
* [Descript | All-in-one video & podcast editing, easy as a doc.](https://www.descript.com/)
* **[26:12](#t=26:12)** Related API
* **[27:33](#t=27:33)** LangChain
* **[32:12](#t=32:12)** Save your replies

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",433db2c67a6522ff7e6eda0cdf08829e0a124ffa17fde7ef0e7f108b86bb9e64,coding-with-the-open-ai-chat-gpt-api,/shows/593 - Hasty.md,2023-10-16 20:07:58.297,2023-10-27 15:58:16.334,HASTY
syntax_podcast_show_00594,594,Potluck × Testing Animations × Tools for Learning × Coding Related Injuries,2023-03-29 12:00:00.148,https://traffic.libsyn.com/syntax/Syntax_-_594.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about what to do with client projects, testing animations, evaluating front-end frameworks, tools to use when learning, and coding related injuries.

## Sentry  - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[00:25](#t=00:25)** Sponsor: Sentry
* **[01:22](#t=01:22)** Landscaping update
* **[02:27](#t=02:27)** What do you do when you are done a client project?
* **[10:09](#t=10:09)** Should I keep animations in our tests so our tests match prod behavior?
* **[14:05](#t=14:05)** How does ChatGPT fill the responses to the prompt?
* **[17:14](#t=17:14)** What is the best way to evaluate and choose a front-end framework for a project?
* **[21:10](#t=21:10)** Should functions only be used strictly for code that is going to be re-used?
* **[26:03](#t=26:03)** What kind of tools and processes do you use when learning?
* [Obsidian](https://obsidian.md/)
* [Roam Research – A note taking tool for networked thought.](https://roamresearch.com/)
* **[30:19](#t=30:19)** What are your opinions on using ""display: grid"" simply to be able use the gap property on the elements inside?
* **[33:57](#t=33:57)** What do you guys think of being a 1-language dev?
* **[36:38](#t=36:38)** What are some tips you have to push back on requirements from clients?
* **[41:11](#t=41:11)** Have you guys ever had any coding related stress injuries, like back issues or carpal tunnel?
* [MoErgo Glove80 Wireless Split Ergonomic Keyboard](https://www.moergo.com/)
* [GitHub Next | Hey, GitHub!](https://githubnext.com/projects/hey-github/)
* **[48:41](#t=48:41)** What do you think of using ""Feature Flags"" in the codebase to enable / disable features at runtime?
* **[51:19](#t=51:19)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [History for Granite](https://www.youtube.com/@HistoryforGRANITE/)
* Wes: [GreatScott!](https://www.youtube.com/channel/UC6mIxFTvXkWQVEHPsEdflzQ), [bigclivedotcom](https://www.youtube.com/channel/UCtM5z2gkrGRuWd0JQMx76qA)

## Shameless Plugs

* Scott: [LevelUp Discord](https://discord.gg/W5y68HMfZV)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",198eb609a6b6f2009053bd9d7ccc069caf946d7876fa2f8fd715ff4a77326023,potluck-testing-animations-tools-for-learning-coding-related-injuries,/shows/594 - Potluck.md,2023-10-16 20:07:58.344,2023-10-27 15:58:16.396,TASTY
syntax_podcast_show_00595,595,Supper Club × Web Components and Lit with Justin Fagnani of Google,2023-03-31 12:00:00.571,https://traffic.libsyn.com/syntax/Syntax_-_595_wsponsor.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Justin Fagnani about working with web components, using Lit, how routing and state are handled, thoughts on signals, and what is the future of web components?

## Sentry - Sponsor

If you want to know what’s happening with your code, track errors and monitor performance with Sentry. Sentry’s Application Monitoring platform helps developers see performance issues, fix errors faster, and optimize their code health. Cut your time on error resolution from hours to minutes. It works with any language and integrates with dozens of other services. Syntax listeners new to Sentry can get two months for  free by visiting [Sentry.io](https://sentry.io) and using the coupon code TASTYTREAT during sign up.

## Show Notes

* **[00:49:11](#t=00:49:11)** Guest introduction
* **[01:03:00](#t=01:03:00)** Sponsor: Sentry
* **[02:02:11](#t=02:02:11)** Why do people use React when we have web components and lit?
* **[03:57:14](#t=03:57:14)** Who is Justin Fagnani?
* [Justin Fagnani](https://justinfagnani.com/)
* [Justin Fagnani (@justinfagnani)](https://twitter.com/justinfagnani)
* [Justin Fagnani · GitHub](https://github.com/justinfagnani)
* [Justin Fagnani - Fosstodon](https://fosstodon.org/@justinfagnani)
* [Lit (@buildWithLit)](https://twitter.com/buildWithLit)
* [Lit](https://lit.dev/)
* [Google App Maker](https://en.wikipedia.org/wiki/Google_App_Maker)
* **[04:55:02](#t=04:55:02)** What are web components?
* [The Extensible Web Manifesto](https://github.com/extensibleweb/manifesto)
* **[05:59:08](#t=05:59:08)** What is the shadow dom?
* **[08:56:02](#t=08:56:02)** Was there an intention for a layer on top of web components?
* **[13:22:09](#t=13:22:09)** What is Lit?
* **[16:19:23](#t=16:19:23)** What are the benefits of using a library for web components?
* [Custom Elements Everywhere](https://custom-elements-everywhere.com/)
* **[21:20:14](#t=21:20:14)** Why would write in React and not in web components?
* **[24:24:18](#t=24:24:18)** How does CSS work with web components and Lit?
* **[28:00:14](#t=28:00:14)** Using constructable stylesheets
* [::part](https://developer.mozilla.org/en-US/docs/Web/CSS/::part)
* [Constructable stylesheets/](https://web.dev/constructable-stylesheets/)
* **[29:58:18](#t=29:58:18)** Does Lit do anything with CSS?
* **[32:01:01](#t=32:01:01)** Does Lit do routing?
* [Lit Mobx](https://www.npmjs.com/package/@adobe/lit-mobx)
* **[34:06:02](#t=34:06:02)** How does Lit work with state?
* **[34:52:15](#t=34:52:15)** What about signals?
* **[38:49:00](#t=38:49:00)** Is Server Side Rendering possible with web components?
* **[41:03:07](#t=41:03:07)** What websites are using Lit and/or web components?
* **[44:26:08](#t=44:26:08)** What's the difference between Lit and Polymer?
* **[45:44:17](#t=45:44:17)** What is the future of web components?
* **[48:09:14](#t=48:09:14)** Supper club questions
* [GitHub - w3c/csswg-drafts: CSS Working Group Editor Drafts](https://github.com/w3c/csswg-drafts)
* **[56:36:20](#t=56:36:20)** SIIIIICK ××× PIIIICKS ×××

* **[55:27](#t=55:27)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [The Last of Us | Official Website for the HBO Series | HBO.com](https://www.hbo.com/the-last-of-us)

## Shameless Plugs

* [Lit](https://lit.dev/)
* [Lit Discord](https://lit.dev/discord/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",612d473bb95cff0c5cecaaeb7e65f85ee4a11498b638f6e3f41e7b263f15adae,supper-club-web-components-and-lit-with-justin-fagnani-of-google,/shows/595 - Supper.md,2023-10-16 20:07:58.381,2023-10-27 15:58:16.451,SUPPER
syntax_podcast_show_00596,596,The New Import Map Standard,2023-04-03 12:00:00.794,https://traffic.libsyn.com/syntax/Syntax_-_596.mp3,"
In this Hasty Treat, Scott and Wes talk about the fact that import maps are in Safari Technical preview, and what that means for web developers.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[02:16](#t=02:16)** Import maps just dropped
* **[04:09](#t=04:09)** Which browsers support it?
* **[06:01](#t=06:01)** What is a map?
* **[06:40](#t=06:40)** How does the syntax work?
* **[09:35](#t=09:35)** What about dependency resolution?
* **[10:25](#t=10:25)** What about bundlers?
* **[13:17](#t=13:17)** How does this work with Deno?
* [Deno — A modern runtime for JavaScript and TypeScript](https://deno.land/)
* [Import Maps | Manual | Deno](https://deno.land/manual@v1.31.0/basics/import_maps)
* [whatwg/fs · Issue #5 · wintercg/proposal-common-minimum-api](https://github.com/wintercg/proposal-common-minimum-api/issues/5#issuecomment-1470026193)
* **[20:12](#t=20:12)** What about with node?
* [Support import maps and bare import specifiers · Issue #43326 · microsoft/TypeScript](https://github.com/microsoft/TypeScript/issues/43326)
* [Policies | Node.js v17.9.1 Documentation](https://nodejs.org/dist/latest-v17.x/docs/api/policy.html#example-import-maps-emulation)
* **[21:22](#t=21:22)** What about Typescript?
* **[22:43](#t=22:43)** Downsides to import maps

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",10103d1adf450ac2533a245f61bdc3ba06ef602a1e8ce1933879312da5e3c375,the-new-import-map-standard,/shows/596 - Hasty Import maps.md,2023-10-16 20:07:58.509,2023-10-27 15:58:16.578,HASTY
syntax_podcast_show_00597,597,Stump’d Gameshow! Answering Coding Interview Questions from AI,2023-04-05 12:00:00.084,https://traffic.libsyn.com/syntax/Syntax_-_597.mp3,"
In this episode of Syntax, Wes and Scott answer coding questions posed by ChatGPT like what's the difference between rem and em in CSS, the difference between a callback function and a promse in Node, what are Fastify plugins, and more!

## Show Notes

* **[00:19](#t=00:19)** The premise for this Stump'd
* **[05:46](#t=05:46)** Scott's weekend story
* **[09:36](#t=09:36)** What is the difference between a for loop and a while loop in JavaScript?
* **[11:11](#t=11:11)** What is the difference between the ""em"" and ""rem"" units in CSS, and when would you use each of them?
* **[13:15](#t=13:15)** What is the difference between a callback function and a promise in Node.js?
* **[14:57](#t=14:57)** In JavaScript, what is the difference between a function declaration, a function expression, and an arrow function, and how do they affect the concept of hoisting?
* **[18:39](#t=18:39)** How do you define a custom scalar type in GraphQL?
* **[21:30](#t=21:30)** With Deno, can you provide an example of an experimental API that requires the ""--unstable"" flag and explain its purpose?
* **[26:59](#t=26:59)** What's the difference between a div and a span?
* **[28:01](#t=28:01)** What is aspect ratio?
* **[29:07](#t=29:07)** If it's not supported by all browsers, how could you maintain aspect ratio?
* **[30:11](#t=30:11)** Can you explain the purpose of the beforeUpdate lifecycle function in Svelte, and provide a simple use case for it?
* **[32:33](#t=32:33)** What is the difference between  unknown  and  any  in TypeScript, and when should each be used?
* **[34:42](#t=34:42)** In TypeScript, what is a mapped type, and how can you use it to create a new type that makes all properties of an existing type optional?
* **[36:21](#t=36:21)** What are Fastify plugins, and how can they be used to extend the functionality of a Fastify application?
* **[37:57](#t=37:57)** In React, what is the purpose of the React.memo higher-order component, and how does it help improve the performance of a functional component?
* **[39:53](#t=39:53)** How would you create a custom HTML element that is styled with CSS and has dynamic behavior using JavaScript?
* **[41:57](#t=41:57)** What is the Intersection Observer API, and how can you use it to implement infinite scrolling in a web application?
* **[49:00](#t=49:00)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Rodge Tapes](https://podbay.fm/p/the-rodge-tapes)
* Wes: [Shenzhen Rebow Technology - Neon Sign](https://szrebow.en.alibaba.com/)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3deba7e53547f4f7007bcafe8d903e70e80cef7652d41a655261464ad1244166,stump-d-gameshow-answering-coding-interview-questions-from-ai,/shows/597 - Tasty.md,2023-10-16 20:07:58.542,2023-10-27 15:58:16.637,TASTY
syntax_podcast_show_00598,598,"Supper Club × Fabian Kägy - Modern WordPress - Blocks, Page builders, Headless, Custom Fields",2023-04-07 12:00:00.133,https://traffic.libsyn.com/syntax/Syntax_-_598.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Fabian Kägy about modern WordPress development, including what the local dev experience is like, changes to the block editor, how version control is handled, and more!

## Show Notes

* **[00:34](#t=00:34)** Welcome
* **[01:20](#t=01:20)** Who is Fabian Kägy?
* [Fabian Kägy](https://fabian-kaegy.com/)
* [Fabian Kaegy (@fabiankaegy)](https://twitter.com/fabiankaegy)
* [Fabian Kägy (@fabiankaegy) on Instagram](https://www.instagram.com/fabiankaegy/)
* [fabiankaegy on GitHub](https://github.com/fabiankaegy)
* [10up | finely crafted websites and tools](https://10up.com/)
* **[03:32](#t=03:32)** What is the local WordPress development workflow like in 2023?
* [@wordpress/env](https://developer.wordpress.org/block-editor/reference-guides/packages/packages-env/)
* [Free Local WordPress Development](https://wpengine.com/local/)
* **[05:35](#t=05:35)** Why do people still want to use WordPress?
* [Builder.io - Drag & Drop Headless CMS](https://www.builder.io/)
* [Website Builder — Create a Website in Minutes — Squarespace](https://www.squarespace.com/)
* [Website Builder | Wix.com](https://www.wix.com/)
* [Build optimized websites quickly, focus on your content | Docusaurus](https://docusaurus.io/)
* **[09:08](#t=09:08)** Changes because of the block editor
* **[11:50](#t=11:50)** Using a JSON file to configure design styles for your site
* **[13:48](#t=13:48)** What is it like to develop with headless WordPress?
* [10up/10up-toolkit: Official 10up asset building toolkit.](https://github.com/10up/10up-toolkit)
* **[16:59](#t=16:59)** Are people using WordPress for applications besides websites?
* **[19:20](#t=19:20)** What does version control look like in WordPress?
* **[21:57](#t=21:57)** Are plugins using the database or the file system?
* **[23:38](#t=23:38)** Is jQuery still a must have for WordPress?
* **[25:30](#t=25:30)** How do you enqueue JavaScript?
* **[27:56](#t=27:56)** Does WordPress support live reloading?
* **[28:22](#t=28:22)** How can you host WordPress on the web?
* [WordPress Hosting | WP Engine®](https://wpengine.com/)
* [WordPress for the Enterprise | WordPress VIP](https://wpvip.com/)
* **[29:11](#t=29:11)** What is the editing experience like in WordPress in 2023?
* [The Composable Content Cloud - Sanity.io](https://www.sanity.io/)
* [WPML - The WordPress Multilingual Plugin](https://wpml.org/)
* [Polylang – Making WordPress multilingual](https://polylang.pro/)
* **[34:01](#t=34:01)** How is WordPress handling CSS in 2023?
* **[41:44](#t=41:44)** How do you make WordPress fast?
* [Simplenote](https://simplenote.com/)
* [Tumblr](https://www.tumblr.com/)
* [Pocketcasts](https://pocketcasts.com/)
* **[47:23](#t=47:23)** Where can you learn about WordPress development?
* [Learn WordPress - There's always more to learn | Learn WordPress](https://learn.wordpress.org/)
* [10up - Gutenberg Best Practices | 10up - Gutenberg Best Practices](https://gutenberg.10up.com/)
* **[50:12](#t=50:12)** With blocks, do you write less PHP?
* [ACF | Advanced Custom Fields Plugin for WordPress](https://www.advancedcustomfields.com/)
* **[50:59](#t=50:59)** Supper Club Questions
* **[55:09](#t=55:09)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Watch Shrinking | Apple TV+](https://tv.apple.com/us/show/shrinking/umc.cmc.apzybj6eqf6pzccd97kev7bs)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",9498ef8dc3671cdc61ed1f44f65195e58dd41cf0bfa17614717c7b8cf2cbf4c4,supper-club-fabian-kaegy-modern-wordpress-blocks-page-builders-headless-custom-fields,/shows/598 - Supper Fabian.md,2023-10-16 20:07:58.578,2023-10-27 15:58:16.700,SUPPER
syntax_podcast_show_00599,599,oAuth APIs Explained,2023-04-10 12:00:00.216,https://traffic.libsyn.com/syntax/Syntax_-_599.mp3,"
In this Hasty Treat, Scott and Wes talk all things oAuth - what is oAuth? What terms do you need to understand when working with oAuth? And tips for working with oAuth.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* [Office Space](https://en.wikipedia.org/wiki/Office_Space)
* [HTTPS + Tunnel Your Localhost - Cloudflare Tunnels, Ngrok, and more! — Syntax Podcast 590](https://syntax.fm/show/590/https-tunnel-your-localhost-cloudflare-tunnels-ngrok-and-more)
* **[01:56](#t=01:56)** What is oAuth?
* **[05:30](#t=05:30)** Terminology in oAuth
* **[07:52](#t=07:52)** Once you have a client ID
* **[09:41](#t=09:41)** The callback URL
* **[12:11](#t=12:11)** The refresh token
* **[14:09](#t=14:09)** How a token could be stolen
* **[17:43](#t=17:43)** State token

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",12a32cf53a35b783839ab6b53470dd90518eb62b6ace61bbecd98f6f86ee0384,oauth-apis-explained,/shows/599 - Hasty.md,2023-10-16 20:07:58.699,2023-10-27 15:58:16.824,HASTY
syntax_podcast_show_00600,600,600th Episode! Major Announcement and Swag Giveaway!,2023-04-12 12:00:00.887,https://traffic.libsyn.com/syntax/Syntax_-_600-jZ8nX5DfKp.mp3,"
In the 600th episode of Syntax, Wes and Scott talk about the big announcement about Syntax's future, exciting new opportunities coming for the show, and more!

We're giving away 600 t-shirts, 50 skate decks and 50 yeti ramblers. Visit [swag.syntax.fm](https://swag.syntax.fm/) for more info! You'll need a code - so search high and low for one 👀.

## Show Notes

* **[00:11](#t=00:11)** Scott's big announcement
* T64JO
* **[00:58](#t=00:58)** Our big announcement
* **[01:39](#t=01:39)** Guest introduction
* FNWOV
* [David Cramer (@zeeg)](https://twitter.com/zeeg)
* Q5CRU
* [Application Performance Monitoring & Error Tracking Software | Sentry](https://sentry.io/)
* [Sentry (@getsentry)](https://twitter.com/getsentry)
* **[02:28](#t=02:28)** Background on how we got here
* TMTF2
* **[05:53](#t=05:53)** What does this mean for the podcast?
* **[08:58](#t=08:58)** Why did Sentry want to partner with Syntax?
* YTKE6
* **[15:39](#t=15:39)** What does this mean for more + better Syntax?
* **[18:56](#t=18:56)** We want to hear from you
* **[23:17](#t=23:17)** Clarifications
* 2T6WG
* **[23:42](#t=23:42)** What's David Cramer's background?
* **[31:44](#t=31:44)** Helping spread the Syntax vibe
* QTW9R
* [World Famous HOTBOYS](https://worldfamoushotboys.com/)
* **[35:40](#t=35:40)** Silly questions
* 5L87D
* **[37:52](#t=37:52)** What's the ROI on Wes' TikToks?
* **[38:37](#t=38:37)** Is Syntax going to become purple?
* 73TI4
* **[40:46](#t=40:46)** The new Syntax website
* **[47:16](#t=47:16)** Giveaway coming!
* PONHM
* **[51:32](#t=51:32)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* David Cramer: [Vitest | A blazing fast unit test framework powered by Vite](https://vitest.dev/)
* Scott: [Valley Heat Podcast - A Podcast About The Neighborhood](https://valleyheatpodcast.com/)
* IRFGH
* Wes: [CCS - The Premier Online Skate Shop for Skateboards & Skate Gear](https://shop.ccs.com/)

## Shameless Plugs

* Scott: [LevelUp Tutorials](https://levelup.video)
* Q6DPD
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* 193G5
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* PTSNO
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* ULQ7D
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",16006207ee2b0778f92538a65a4eed41ef63e4676bd242badfff0401b5fa2531,600th-episode-major-announcement-and-swag-giveaway,/shows/600 - Six Hundred.md,2023-10-16 20:07:58.740,2023-10-27 15:58:16.891,TASTY
syntax_podcast_show_00601,601,Supper Club × Nate Weinert and Tamagui,2023-04-14 12:00:00.636,https://traffic.libsyn.com/syntax/Syntax_-_601.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Nate Weinert, creator of Tamagui, about what Tamagui is, how styling works in React native, building and designing the Tamagui website, and more.

## Show Notes

* **[00:29](#t=00:29)** Welcome
* **[01:22](#t=01:22)** Who is Nate Weinert?
* [Nate (@natebirdman)](https://twitter.com/natebirdman)
* [natew on GitHub](https://github.com/natew)
* [Tamagui — React Native + Web UI kit](https://tamagui.dev/)
* [tamagui: The worlds fastest React UI kit also happens to work on Native + Web seamlessly 🙏](https://github.com/tamagui/tamagui)
* **[02:34](#t=02:34)** What is Tamagui?
* **[04:02](#t=04:02)** How does styling work in React native?
* **[05:35](#t=05:35)** What is React native web?
* **[08:27](#t=08:27)** What does Tamagui do besides styling?
* **[14:38](#t=14:38)** How did you build and design the Tamagui website?
* [Stitches — CSS-in-JS with near-zero runtime](https://stitches.dev/)
* [Next.js by Vercel - The React Framework](https://nextjs.org/)
* **[16:50](#t=16:50)** What are the docs made with?
* **[20:25](#t=20:25)** What are Atomic Styles?
* **[26:16](#t=26:16)** How is layout handled in react native?
* **[29:26](#t=29:26)** Where are things going in the React world?
* [App.js Conference 2023](https://appjs.co/)
* [react-native-reanimated - npm](https://www.npmjs.com/package/react-native-reanimated)
* **[37:45](#t=37:45)** Supper Club questions
* [iTerm2 - macOS Terminal Replacement](https://iterm2.com/)
* **[47:15](#t=47:15)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [ABEO Footwear - Shop Biomechanical Sandals, Shoes and Orthotics](https://www.abeofootwear.com/)

## Shameless Plugs

* [foobully - Twitch](https://www.twitch.tv/foobully)
* [Tamagui — React Native + Web UI kit](https://tamagui.dev/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",efd6bb33f7d9205a22a7b4b9ad55f4b4b6f2239e3fa38e11fe0204ddc3fe9573,supper-club-nate-weinert-and-tamagui,/shows/601 - Nate supper.md,2023-10-16 20:07:58.781,2023-10-27 15:58:17.079,SUPPER
syntax_podcast_show_00602,602,"Modals, Popups, Popovers, Lightboxes",2023-04-17 12:00:00.237,https://traffic.libsyn.com/syntax/Syntax_-_602.mp3,"
In this Hasty Treat, Scott and Wes talk through the differences between modals, popups, popovers, lightboxes, and dialog boxes.

## Show Notes

* **[00:31](#t=00:31)** Welcome
* **[02:25](#t=02:25)** What's popping up?
* **[02:59](#t=02:59)** What's a modal?
* **[08:33](#t=08:33)** Pop overs and lightboxes
* **[10:41](#t=10:41)** Explicit dismiss and light dismiss
* **[11:30](#t=11:30)** Inert property
* [inert](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inert)
* **[16:30](#t=16:30)** Backdrop pseudo element
* [Dialog with animation](https://codepen.io/geckotang/post/dialog-with-animation)
* **[19:26](#t=19:26)** Dialog
* **[28:12:11](#t=28:12:11)** Making accessibility easier

```
const showButton = document.getElementById('showDialog');
const favDialog = document.getElementById('favDialog');
const outputBox = document.querySelector('output');
const selectEl = favDialog.querySelector('select');
const confirmBtn = favDialog.querySelector('#confirmBtn');

// ""Show the dialog"" button opens the <dialog> modally
showButton.addEventListener('click', () => {
    favDialog.showModal();
});
// ""Favorite animal"" input sets the value of the submit button
selectEl.addEventListener('change', (e) => {
  confirmBtn.value = selectEl.value;
});
// ""Confirm"" button of form triggers ""close"" on dialog because of [method=""dialog""]
favDialog.addEventListener('close', () => {
  outputBox.value = `ReturnValue: ${favDialog.returnValue}.`;
});
```

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",876e88cb55fea817ddf578e2ff56dfb9449e76a72a8f918ea6e1017e55e6cf46,modals-popups-popovers-lightboxes,/shows/602 - Hasty.md,2023-10-16 20:07:58.876,2023-10-27 15:58:17.167,HASTY
syntax_podcast_show_00603,603,Can Vanilla CSS Replace Sass Yet?,2023-04-19 12:00:00.431,https://traffic.libsyn.com/syntax/Syntax_-_603.mp3,"
In this episode of Syntax, Wes and Scott go through all the features of Sass and decide where we are at with Native CSS alternatives, giving each feature a rating of replaceable, plausible, or missing.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:17](#t=01:17)** Easter updates
* **[04:17](#t=04:17)** Getting into Sass
* **[06:03](#t=06:03)** What is PostCSS?
* **[09:52](#t=09:52)** CSS Variables
* **[13:49](#t=13:49)** CSS Nesting
* [CSS Nesting - Chrome Developers](https://developer.chrome.com/articles/css-nesting/)
* [postcss-plugins/plugins/postcss-nesting at main · csstools/postcss-plugins](https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-nesting)
* **[23:13](#t=23:13)** Colors
* [CSS5 Color Functions — Syntax Podcast 479](https://syntax.fm/show/479/css5-color-functions)
* **[29:08](#t=29:08)** CSS Looping
* **[34:20](#t=34:20)** Mixins or extends
* **[39:34](#t=39:34)** CSS Partials
* [Features - PostCSS Preset Env - CSSTools](https://preset-env.cssdb.org/features/#color-mix)
* **[44:29](#t=44:29)** CSS Math
* **[49:40](#t=49:40)** Functions
* [Is Houdini Ready Yet?](https://ishoudinireadyyet.com/)
* **[52:04](#t=52:04)** Firefox and Safari support
* **[55:08](#t=55:08)** Back to Functions
* **[56:21](#t=56:21)** BEM Syntax
* **[58:51](#t=58:51)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Solar Lantern](https://amzn.to/3mpIiuc)
* Wes: [Cotton Candy Machine](https://amzn.to/3MwaMNd)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3ecfab70676058aea14f1d98f900ab4e52448ec82976d18ebc760379072ac6a9,can-vanilla-css-replace-sass-yet,/shows/603 - Tasty.md,2023-10-16 20:07:58.909,2023-10-27 15:58:17.216,TASTY
syntax_podcast_show_00604,604,Supper Club × ESLint with Nicholas Zakas,2023-04-21 12:00:00.507,https://traffic.libsyn.com/syntax/Syntax_-_604.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Nicholas Zakas about his creation of ESLint, what's coming up in ESLint, and his work as a coach and mentor for programmers.

## Show Notes

* **[00:34](#t=00:34)** Welcome
* **[01:20](#t=01:20)** Guest introduction
* [Human Who Codes](https://humanwhocodes.com/blog/)
* [Nicholas C. Zakas (@nzakas@fosstodon.org)](https://fosstodon.org/@nzakas)
* [Twitter @slicknet](https://twitter.com/slicknet/)
* [nzakas on GitHub](https://github.com/nzakas/)
* [@humanwhocodes) on Instagram](https://www.instagram.com/humanwhocodes/)
* [Human Who Codes on YouTube](https://www.youtube.com/channel/UC95Pwj8oPPZN2mJCEtMqOsg)
* **[04:24](#t=04:24)** Why did you want to build ESLint?
* **[09:08](#t=09:08)** How does ESLint work?
* **[13:25](#t=13:25)** How do you work on a project for a decade?
* **[17:12](#t=17:12)** At what point do you pay attention to JavaScript proposed changes?
* **[20:37](#t=20:37)** Config systems in JavaScript
* **[31:18](#t=31:18)** ESLint in Rust?
* **[41:07](#t=41:07)** Are we going to see ESLint for more languages?
* **[47:06](#t=47:06)** What kind of coaching do you do for programmers?
* **[02:46](#t=02:46)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Apollo Neuro](https://apolloneuro.com)

## Shameless Plugs

* [Understanding JavaScript Promises](https://ebooks.humanwhocodes.com/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",c1cbcf18f994895e04b1f7bbb00c347eb87948cb4a8532c46b9300b18286758e,supper-club-eslint-with-nicholas-zakas,/shows/604 - Supper ESLint.md,2023-10-16 20:07:58.946,2023-10-27 15:58:17.268,SUPPER
syntax_podcast_show_00605,605,CSS Color Functions,2023-04-24 12:00:00.125,https://traffic.libsyn.com/syntax/Syntax_-_605.mp3,"
In this Hasty Treat, Scott and Wes talk about CSS Color Functions, the benefits of dynamic css color, relative color syntax, color contrast, and color mix.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[00:49](#t=00:49)** Why we're talking CSS Color Functions
* **[01:57](#t=01:57)** Benefits of dynamic CSS color
* **[03:14](#t=03:14)** Relative color syntax
* **[06:51](#t=06:51)** Color contrast
* **[09:26](#t=09:26)** Color mix

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",314c132808477a2f62318bf22a11f8c2ad8e357beafb58ff43bf3b17115e93e8,css-color-functions,/shows/605 - Hasty CSS Color.md,2023-10-16 20:07:59.038,2023-10-27 15:58:17.361,HASTY
syntax_podcast_show_00606,606,Potluck × Crypto × SEO × Status Pages × Learning Tools,2023-04-26 12:00:00.439,https://traffic.libsyn.com/syntax/Syntax_-_606.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about type guards vs type casting, crypto usage, feedback for Syntax, custom status pages, SEO and metadata, uploading images, home automation, and more!

## Show Notes

* **[00:12](#t=00:12)** Welcome
* **[01:23](#t=01:23)** Scott's new gear
* [MT-48](https://www.neumann.com/en-en/products/audiointerfaces/mt-48)
* [Volt USB Audio Interfaces](https://www.uaudio.com/audio-interfaces/volt.html)
* **[07:36](#t=07:36)** Are type guards safer and superior to type casting?
* **[13:51](#t=13:51)** I know you guys (lightly) rag on Crypto, but do you see any use-case there for proof-of-personhood?
* **[23:34](#t=23:34)** Where do I give feedback outside of Twitter?
* [User Feedback | Sentry Documentation](https://docs.sentry.io/product/user-feedback/)
* **[27:19](#t=27:19)** Do you have custom status pages created for your platforms?
* [UptimeRobot: Free Website Monitoring Service](https://uptimerobot.com/)
* [Privacy Badger](https://privacybadger.org/)
* [Status.io - Hosted Status Pages](https://status.io/)
* [Statuspage | Atlassian](https://www.atlassian.com/software/statuspage)
* [DigitalOcean Status](https://status.digitalocean.com/)
* **[35:12](#t=35:12)** Is metadata only good for SEO? Does SEO matter on pages you can only view if you're logged in?
* **[39:00](#t=39:00)** How do you upload images from authenticated users?
* **[46:30](#t=46:30)** What do you think of Zed?
* [Zed - Code at the speed of thought](https://zed.dev/)
* **[53:21](#t=53:21)** I’ve got ADHD - any tips for focusing and staying on track?
* **[56:54](#t=56:54)** How do I convince my partner to accept more home automation?
* **[02:15](#t=02:15)** What kind of tools and processes do you use and find effective when learning?
* [Obsidian](https://obsidian.md/)
* [Mind Map & Brainstorm Ideas - MindNode](https://www.mindnode.com/)
* **[06:42](#t=06:42)** Would it make any sense to use the Fetch API with a long running stream?
* **[08:31](#t=08:31)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Project Farm](https://www.youtube.com/c/projectfarm)
* Wes: [Splatypus](https://amzn.to/3L6vz92)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",a3ce1c048a525201165ff5a8029d14a2baf08aabb6179f35b05f0ca9d6ef8fcd,potluck-crypto-seo-status-pages-learning-tools,/shows/606 - Tasty Potluck.md,2023-10-16 20:07:59.073,2023-10-27 15:58:17.411,TASTY
syntax_podcast_show_00607,607,"Supper Club × Privacy, Cookie Banners, GDPR with Donata and Hans Skillrud",2023-04-28 12:00:00.985,https://traffic.libsyn.com/syntax/Syntax_-_607.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Donata and Hans Skillrud of Termageddon on GDPR, privacy policies, cookie pop ups, and the various legal and ethical reasons to implement them properly.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:47](#t=01:47)** Who are Donata and Hans?
* [Donata Stroink-Skillrud Esq., CIPP on Twitter](https://twitter.com/DonataSkillrud)
* [Hans Skillrud on Twitter](https://twitter.com/DeepSpaceHans)
* [Termageddon](https://termageddon.com/)
* [Termageddon on Instagram](https://www.instagram.com/termageddon/)
* [Termageddon on LinkedIn](https://www.linkedin.com/company/termageddon/)
* **[03:39](#t=03:39)** What are privacy policies and a terms of service?
* [4 Things to Look for in a Privacy Policy Generator - Termageddon](https://termageddon.com/4-things-to-look-for-in-a-privacy-policy-generator/)
* [Why accessibility is important when it comes to cookie consent - Termageddon](https://termageddon.com/why-accessibility-is-important-when-it-comes-to-cookie-consent/)
* **[09:15](#t=09:15)** Does scrolling to the bottom and pretending to read terms work?
* **[10:49](#t=10:49)** Do people ever read the terms of service?
* **[15:57](#t=15:57)** Do companies ever actually get in trouble for violating privacy?
* **[20:06](#t=20:06)** What is GDPR and the impact on small business owners?
* **[32:30](#t=32:30)** Cookie war and pop ups
* **[35:40](#t=35:40)** Essential cookies
* **[42:42](#t=42:42)** Alternatives to Google Analytics
* [The Google Analytics alternative without compromise - Fathom Analytics](https://usefathom.com/)
* [Self-hosted website analytics | Ackee](https://ackee.electerious.com/)
* **[43:39](#t=43:39)** Denying cookies, but still able to create accounts?
* **[48:57](#t=48:57)** Is there legal concerns with AI?
* [Can ChatGPT (AI) write your Privacy Policy? - Termageddon](https://termageddon.com/can-chatgpt-artificial-intelligence-write-your-privacy-policy/)
* **[56:25](#t=56:25)** What is Termageddon?
* **[58:59](#t=58:59)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [EPIX From TV Series](https://www.epix.com/series/from)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3afa88f11121dc018bcd570564dc3a8fc4ca3ff7053797272a7e413288c3ae50,supper-club-privacy-cookie-banners-gdpr-with-donata-and-hans-skillrud,/shows/607 - Supper Termageddon.md,2023-10-16 20:07:59.118,2023-10-27 15:58:17.463,SUPPER
syntax_podcast_show_00608,608,RPC in JavaScript!,2023-05-01 12:00:00.125,https://traffic.libsyn.com/syntax/Syntax_-_608.mp3,"
In this Hasty Treat, Scott and Wes talk about RPC, what it means, why are we talking about it now, tRPC, and will RPC take off?

## Show Notes

* **[00:22](#t=00:22)** Welcome
* **[01:51](#t=01:51)** What does RPC mean?
* **[04:52](#t=04:52)** Why are we talking RPC now?
* **[10:27](#t=10:27)** Hype around RPC
* [Supper Club × Solid.js with Ryan Carniato — Syntax Podcast 577](https://syntax.fm/show/577/supper-club-solid-js-with-ryan-carniato)
* **[11:05](#t=11:05)** Isn't this just a REST endpoint?
* **[13:23](#t=13:23)** Considerations around RPC
* **[16:11](#t=16:11)** What about tRPC?
* [Supper Club × tRPC With Alex KATT Johansson — Syntax Podcast 526](https://syntax.fm/show/526/supper-club-trpc-with-alex-katt-johansson)
* **[18:08](#t=18:08)** Will RPC take off?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cc10cf9818457efca0a67f29745c2f8609be5cd9ca1aa80b3f5714de7fa1102e,rpc-in-javascript,/shows/608 - Hasty RPC.md,2023-10-16 20:07:59.291,2023-10-27 15:58:17.593,HASTY
syntax_podcast_show_00609,609,"The Syntax Giveaway Site - Codes, Bots, Tech Stack and More!",2023-04-03 12:00:00.345,https://traffic.libsyn.com/syntax/Syntax_-_609.mp3,"
In this episode of Syntax, Wes and Scott talk about the tech stack they used to create the Syntax giveaway site for the Sentry + Syntax announcement week. What were the features of the site, how'd they generate proper codes, and how'd they stop developers from hacking the system?

## Show Notes

* **[00:07](#t=00:07)** How to do a giveaway and distribute it?
* **[04:26](#t=04:26)** Building in the spirit of Syntax
* **[05:44](#t=05:44)** The tech stack
* [SvelteKit • Web development, streamlined](https://kit.svelte.dev/)
* [Prisma | Next-generation ORM for Node.js & TypeScript](https://www.prisma.io/)
* [Syntax × Sentry MMXXIII | Product Blog • Sentry](https://blog.sentry.io/2023/04/12/syntax-sentry-mmxxiii/)
* [PlanetScale: The world’s most advanced database platform](https://planetscale.com/)
* [My Places - Google My Maps](https://www.google.com/maps/d/viewer?mid=1eLqvkQ9wGvMRVrAQsm5g7EdlnSY&hl=en_US&ll=39.04394865349766,-76.85871&z=10)
* [sveltekit-basic-auth/hooks.server.ts at main · ghostdevv/sveltekit-basic-auth](https://github.com/ghostdevv/sveltekit-basic-auth/blob/main/src/hooks.server.ts)
* [Voucherify: Free Random Codes Generator](https://www.voucherify.io/generator)
* **[09:48](#t=09:48)** Hosted on Vercel
* [Vercel](https://vercel.com/)
* **[13:04](#t=13:04)** What are the features of the site?
* **[19:10](#t=19:10)** Generating the codes properly
* **[26:48](#t=26:48)** Releasing locked coupon codes
* **[29:13](#t=29:13)** Client to server side connections
* **[32:56](#t=32:56)** Stopping developers from gaming the giveaway
* **[46:29](#t=46:29)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The Super Mario Bros. Movie (2023) - IMDb](https://www.imdb.com/title/tt6718170/)
* Wes: [The Strong National Museum of Play](https://www.museumofplay.org/)

## Shameless Plugs

* Scott: [Application Performance Monitoring & Error Tracking Software | Sentry](https://sentry.io/welcome/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",5484a7d1d5c410f747da98e7d226d8db80fd7e218a24534494207b7a87bceab4,the-syntax-giveaway-site-codes-bots-tech-stack-and-more,/shows/609 - Tasty Syntax giveaway.md,2023-10-16 20:07:59.330,2023-10-27 15:58:17.644,HASTY
syntax_podcast_show_00610,610,Supper Club × Zach Lloyd from Warp,2023-05-05 12:00:00.317,https://traffic.libsyn.com/syntax/Syntax_-_610.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Zach Lloyd about how Google Sheets works, why Zach wanted to build Warp, why did they use Rust to write Warp in, is Warp going to come to Windows, and more!

## Show Notes

* **[00:20](#t=00:20)** Welcome
* **[01:12](#t=01:12)** Who is Zach Lloyd?
* [Zack on Twitter](https://twitter.com/zachlloydtweets)
* [Zack on LinkedIn](https://www.linkedin.com/in/zachlloyd/)
* [Warp Terminal × Next Gen Terminals — Syntax Podcast 579](https://syntax.fm/show/579/warp-terminal-next-gen-terminals)
* [Warp: The terminal for the 21st century](https://www.warp.dev/)
* **[03:41](#t=03:41)** How does Google Sheets work?
* [GWT](https://www.gwtproject.org/)
* **[13:38](#t=13:38)** What is Warp and why did you build it?
* [Introducing Warp](https://www.warp.dev/blog/introducing-warp)
* **[16:50](#t=16:50)** Why did you build Warp in Rust?
* [Rust Programming Language](https://www.rust-lang.org/)
* [Harfbuzz](https://github.com/harfbuzz/harfbuzz)
* [Adventures in Text Rendering: Kerning and Glyph Atlases](https://www.warp.dev/blog/adventures-text-rendering-kerning-glyph-atlases)
* **[23:20](#t=23:20)** How would you move Warp to Windows?
* **[26:02](#t=26:02)** How would you run Warp on the web?
* **[31:24](#t=31:24)** How are the blocks done inside Warp?
* **[36:23](#t=36:23)** Would Warp ever add a shell?
* **[40:04](#t=40:04)** Is better completion support coming to Warp?
* **[44:42](#t=44:42)** Warp AI features
* **[52:08](#t=52:08)** Supper Club questions
* **[56:52](#t=56:52)** SIIIIICK ××× PIIIICKS ×××

* [Oh My Zsh - a delightful & open source framework for Zsh](https://ohmyz.sh/)

## ××× SIIIIICK ××× PIIIICKS ×××

* [Tonal | The World's Smartest Home Gym Machine For Strength & Fitness](https://www.tonal.com/)

## Shameless Plugs

* [Join Us | Warp](https://www.warp.dev/careers)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",56654da7854ebee80f2a098631b4006e8f5bcebece3ded63c4ba1c7595c46ee7,supper-club-zach-lloyd-from-warp,/shows/610 - Supper.md,2023-10-16 20:07:59.363,2023-10-27 15:58:17.701,SUPPER
syntax_podcast_show_00611,611,Bluesky + AT Protocol,2023-05-08 12:00:00.703,https://traffic.libsyn.com/syntax/Syntax_-_611-new.mp3,"
In this episode of Syntax, Wes and Scott talk all things Bluesky, the AT Protocol it's built in, the terminology of Bluesky, and how the API currently works.

## Show Notes

* **[00:07](#t=00:07)** Welcome
* **[00:53](#t=00:53)** Welcome to the Bluesky
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
* **[03:14](#t=03:14)** What could the new Twitter be?
* **[07:56](#t=07:56)** What is Bluesky?
* [Nostr](https://nostr.com/)
* [Bluesky](https://blueskyweb.xyz/)
* [Twitter Blue](https://help.twitter.com/en/using-twitter/twitter-blue)
* [Bluesky Staging](https://staging.bsky.app/)
* [Bluesky FAQ](https://blueskyweb.xyz/faq)
* **[10:25](#t=10:25)** Why is social media important?
* **[14:01](#t=14:01)** What is AT Protocol?
* **[22:06](#t=22:06)** Lexicon for Bluesky
* **[28:10](#t=28:10)** Small group of devs building Bluesky
* [Cravings: All Together: Recipes to Love: A Cookbook](https://amzn.to/3Nulx34)
* [Cravings: Recipes for All the Food You Want to Eat: A Cookbook](https://amzn.to/4225bn7)
* **[29:54](#t=29:54)** Blocking issues
* **[31:53](#t=31:53)** Bluesky API
* [Samy on Darknet Diaries ep61](https://darknetdiaries.com/episode/61/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io/welcome/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",0d7a91a09ce34e862e7cf55e2feb3b2bcf44e14e4a9b1c16a5ad08ad3b4dd842,bluesky-at-protocol,/shows/611 - bluesky.md,2023-10-16 20:07:59.423,2023-10-27 15:58:17.770,HASTY
syntax_podcast_show_00612,612,"UI Elements - Basics, Best Practice, and Built Ins",2023-05-10 12:00:00.221,https://traffic.libsyn.com/syntax/Syntax_-_612.mp3,"
In this episode of Syntax, Wes and Scott talk about UI elements and best practices with UI elements, as well as UI elements that exist in browsers.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:10](#t=01:10)** Making demos for fun
* **[02:47](#t=02:47)** Why we're talking UI elements
* **[03:48](#t=03:48)** Bad UI elements in the browser
* [Syntax 602: Modals, Popups, Popovers, Lightboxes](https://syntax.fm/show/602/modals-popups-popovers-lightboxes)
* [Progress](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter)
* **[10:47](#t=10:47)** Decent UI elements in browser
* **[19:49](#t=19:49)** Enter Open UI
* [Open UI](https://open-ui.org/)
* **[34:39](#t=34:39)** Accordion hunks
* **[38:15](#t=38:15)** Pop overs
* **[42:15](#t=42:15)** Focus group
* **[46:10](#t=46:10)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Fishskyn](https://fishskyn.com/)
* Wes: [Flavacol](https://amzn.to/3Arvkzg) & [Butter Flavoured Coconut Oil](https://amzn.to/40PNBBn)

## Shameless Plugs

* Scott: [Sentry replays](https://sentry.io/)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",3d1ae104489c49ddfeb06ede2ca75dced5ce319a60db74b9a5f2168322fd0cce,ui-elements-basics-best-practice-and-built-ins,/shows/612 - tasty ui.md,2023-10-16 20:07:59.455,2023-10-27 15:58:17.825,TASTY
syntax_podcast_show_00613,613,Supper Club × Dylan Jhaveri - Video for the Web and MUX,2023-05-12 12:00:00.856,https://traffic.libsyn.com/syntax/Syntax_-_613.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Dylan Jhaveri about his work at Mux, how Mux ingests and spits out video, and where Mux fits in a tech stack for developers working with video and audio.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:27](#t=01:27)** Who is Dylan Jhaveri?
* [Dylan (@dylanjha)](https://twitter.com/dylanjha)
* [The Internet's video infrastructure | Mux](https://www.mux.com/)
* [Mux Player](https://www.mux.com/player)
* **[03:04](#t=03:04)** Why did you build Mux Player?
* [FFmpeg](https://ffmpeg.org/)
* [FFmpeg WASM](https://ffmpegwasm.netlify.app/)
* **[06:19](#t=06:19)** How did you chose to go with web components?
* [CanIUse Mediasource](https://caniuse.com/mediasource)
* **[09:36](#t=09:36)** What is Mux?
* **[15:20](#t=15:20)** Can you stitch or clip video via the API with Mux?
* **[18:07](#t=18:07)** Do you think hls will be supported in Chromium or Firefox?
* **[21:56](#t=21:56)** How does Mux process videos into 5 versions?
* **[26:35](#t=26:35)** Is Web assembly in use for video?
* **[27:55](#t=27:55)** Has Mux researched AI for video?
* **[31:13](#t=31:13)** Building a podcast transcription video
* **[36:49](#t=36:49)** Do you have to use MP4? What about webM?
* **[39:36](#t=39:36)** Media Chrome video player
* [Elements for building media players](https://www.media-chrome.org)
* **[44:58](#t=44:58)** What's Mux Data?
* [Mux Data](https://www.mux.com/data)
* **[49:33](#t=49:33)** Slick Mux website
* [Mux.com](https://www.mux.com)
* **[52:13](#t=52:13)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Cruise](https://getcruise.com)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",edfac829429aba3e18d70742da6ce2fe812a101363d1c8a0bfe91845b3bff0be,supper-club-dylan-jhaveri-video-for-the-web-and-mux,/shows/613 - supper dylan.md,2023-10-16 20:07:59.489,2023-10-27 15:58:17.886,SUPPER
syntax_podcast_show_00614,614,WTF Are Signals And Why Is Everyone So Hot On Them All Of The Sudden?,2023-05-15 12:00:00.868,https://traffic.libsyn.com/syntax/Syntax_-_611.mp3,"
In this Hasty Treat, Scott and Wes talk about Signals - what are signals and why is everyone talking about them suddenly?

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:40](#t=01:40)** Chipping away at projects
* **[03:20](#t=03:20)** WTF are signals?
* [Signals](https://github.com/preactjs/signals)
* [Framework reimagined for the edge! - Qwik](https://qwik.builder.io/)
* [SolidJS · Reactive Javascript Library](https://www.solidjs.com/)
* [Zone](https://github.com/angular/angular/tree/main/packages/zone.js)
* [Vanilla](https://codesandbox.io/s/07ktxc?file=/src/index.js)
* **[09:03](#t=09:03)** What are the boundaries on signals?
* **[10:49](#t=10:49)** Why are signals so popular now?
* **[15:57](#t=15:57)** When wouldn't you use signals?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
",cd3a2b30d078bca335949e04a9b484ee04d156c18cdaf06b1e2b115968673a94,wtf-are-signals-and-why-is-everyone-so-hot-on-them-all-of-the-sudden,/shows/614 - hasty signals.md,2023-10-16 20:07:59.617,2023-10-27 15:58:17.997,HASTY
syntax_podcast_show_00615,615,Where Should You Host Your App? Hosting Providers Compared,2023-05-17 15:00:00.785,https://traffic.libsyn.com/syntax/Syntax_-_615.mp3,"
In this episode of Syntax, Wes and Scott talk about your options for hosting your app including some of the big players, but also others you may not have heard of.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:06](#t=01:06)** Explaining basic concepts in hosting providers
* **[07:55](#t=07:55)** How is hosting priced?
* **[10:09](#t=10:09)** The big names in hosting
* [Amazon Web Services](https://aws.amazon.com/)
* [Google Cloud](https://cloud.google.com/)
* [Microsoft Azure](https://azure.microsoft.com/en-ca)
* [DigitalOcean | The Cloud for Builders](https://www.digitalocean.com/)
* [Sales Cloud](https://www.salesforce.com/ca/products/sales-cloud/overview/)
* [Flightcontrol — AWS Without Pain](https://www.flightcontrol.dev/)
* [Supper Club × Next.js on AWS + Serverless with Dax Raad — Syntax Podcast 589](https://syntax.fm/show/589/supper-club-next-js-on-aws-serverless-with-dax-raad)
* **[16:29](#t=16:29)** Render
* [Render](https://render.com/)
* **[23:50](#t=23:50)** Vercel
* [Vercel: Develop. Preview. Ship. For the best frontend teams](https://vercel.com/)
* **[28:04](#t=28:04)** Heroku
* [Cloud Application Platform | Heroku](https://www.heroku.com/)
* **[31:58](#t=31:58)** Digital Ocean
* **[36:10](#t=36:10)** Linode
* [Create your account - Linode](https://login.linode.com/signup)
* **[38:34](#t=38:34)** Netlify
* [Develop and deploy websites and apps in record time | Netlify](https://www.netlify.com/)
* [The Deno Show — Syntax Podcast 322](https://syntax.fm/show/322/the-deno-show)
* [Decap CMS | Open-Source Content Management System](https://decapcms.org/)
* **[46:30](#t=46:30)** Fly
* [Deploy app servers close to your users · Fly](https://fly.io/)
* [Railway](https://railway.app/)
* **[54:19](#t=54:19)** Cloudflare
* [Cloudflare - The Web Performance & Security Company | Cloudflare](https://www.cloudflare.com/)
* **[00:43](#t=00:43)** Deno deploy
* [Deno Deploy | Deno](https://deno.com/deploy)
* **[03:04](#t=03:04)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Automators - Relay FM](https://www.relay.fm/automators)
* Wes: [Dropbox.com](https://www.dropbox.com/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",2cb270dfd2b6b671be83a45a012ffbf11ff56b3b491382098d27877acf032aec,where-should-you-host-your-app-hosting-providers-compared,/shows/615 - tasty.md,2023-10-16 20:07:59.683,2023-10-27 15:58:18.051,TASTY
syntax_podcast_show_00616,616,"Supper Club × Adam Argyle on What's New in CSS",2023-05-19 12:00:00.422,https://traffic.libsyn.com/syntax/Syntax_-_616.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Adam Argyle about a ton of new CSS features that have arrived or are coming soon, as well as his new site Gradient.style.

## Show Notes

* **[00:34](#t=00:34)** Welcome
* **[01:05](#t=01:05)** Guest introduction
* [Adam on Bluesky](https://bsky.app/profile/nerdy.dev)
* [Adam on Twitter](https://twitter.com/argyleink)
* **[01:48](#t=01:48)** CSS buckets
* [New CSS Relative Units · January 6, 2023](https://nerdy.dev/new-relative-units-ric-rex-rlh-and-rch)
* **[03:16](#t=03:16)** rex rch ric rlh
* **[08:06](#t=08:06)** Gradient.style
* [CSS HD Gradients](https://gradient.style/)
* [Open Props: sub-atomic styles](https://open-props.style/)
* **[13:49](#t=13:49)** What are style queries vs container queries vs state queries?
* [una.im | Style Queries](https://una.im/style-queries/)
* [Getting Started with Style Queries - Chrome Developers](https://developer.chrome.com/blog/style-queries/)
* [CSS Container Style Queries | Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/css-container-queries-style)
* **[18:09](#t=18:09)** Trig functions
* [Trigonometric functions in CSS](https://web.dev/css-trig-functions/#:~:text=The%20core%20three%20%E2%80%9Ctrig%20functions,between%20%E2%88%92%E2%88%9E%20and%20%2B%E2%88%9E%20)
* [CSS Trigonometric Functions: cos() and sin(): dots on a circle](https://codepen.io/web-dot-dev/pen/ExePgOg)
* **[19:57](#t=19:57)** Live transitions
* [Understand Disney's 12 principles of animation | Creative Bloq](https://www.creativebloq.com/advice/understand-the-12-principles-of-animation)
* **[25:08](#t=25:08)** View transitions
* [View Transitions Demo](https://live-transitions.pages.dev/)
* [View Transitions API - Web APIs | MDN](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API)
* **[26:01](#t=26:01)** Text-wrap balance
* [CSS text-wrap: balance - Chrome Developers](https://developer.chrome.com/blog/css-text-wrap-balance/)
* **[26:45](#t=26:45)** Text-wrap pretty
* **[27:44](#t=27:44)** What's the future of the browser landscape?
* **[31:44](#t=31:44)** nth-child(An+B [of S])
* **[33:06](#t=33:06)** Cascade layers
* **[34:40](#t=34:40)** CSS Nesting
* **[38:03](#t=38:03)** Animate discrete properties
* [Feature: Transitions on specified discrete properties](https://chromestatus.com/feature/5071230636392448)
* **[39:42](#t=39:42)** Linear function
* [Linear easing generator](https://linear-easing-generator.netlify.app/)
* **[41:33](#t=41:33)** Media query range syntax
* **[42:04](#t=42:04)** Subgrid everywhere
* **[44:41](#t=44:41)** Media query range and variables?
* [UI Elements - Basics, Best Practice, and Built Ins — Syntax Podcast 612](https://syntax.fm/)
* **[45:32](#t=45:32)** env variables
* [Hasty Treat - CSS Nesting 1 — Syntax Podcast 343](https://syntax.fm/show/343/hasty-treat-css-nesting-1)
* **[46:59](#t=46:59)** Animation composition
* **[49:50](#t=49:50)** Select menu HTML element
* **[52:16](#t=52:16)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

## Shameless Plugs

* [Onewheel // Future Motion](https://onewheel.com/)
* [Adam Argyle](https://nerdy.dev/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",2abb84c9586a6b615a364a019825f7d54f61b4ddd47f5e06ffe6a7e47dcaaed7,supper-club-adam-argyle-on-what-s-new-in-css,/shows/616 - adam CSS.md,2023-10-16 20:07:59.751,2023-10-27 15:58:18.096,SUPPER
syntax_podcast_show_00617,617,Why Is node_modules So Big?,2023-05-22 12:00:00.433,https://traffic.libsyn.com/syntax/Syntax_-_617.mp3,"
In this Hasty Treat, Scott and Wes talk about the reasons your node_modules folder gets so large, and what you can do to help keep the file size down.

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[00:51](#t=00:51)** The punching bag of Javascript
* [DaisyDisk](https://daisydiskapp.com/)
* **[02:03](#t=02:03)** Spoiler alert - it's text
* **[04:49](#t=04:49)** What actually increases the size?
* **[07:29](#t=07:29)** Types
* **[09:27](#t=09:27)** Polyfills
* **[11:09](#t=11:09)** Raycast Snippets and BetterTouchTool
* **[12:44](#t=12:44)** Babel
* **[15:08](#t=15:08)** Markdown
* **[15:52](#t=15:52)** Translations
* **[18:23](#t=18:23)** What is the solution?
* [Raycast](https://www.raycast.com/)
* [Bundlephobia | Size of npm dependencies](https://bundlephobia.com/)
* [Better Touch Tool](https://folivora.ai/)
* [Fast, disk space efficient package manager | pnpm](https://pnpm.io/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",4e10e5e93d3d00dc8110da0cfc6f30cdaa2d88778899976fd07e4759b7d76e5e,why-is-node_modules-so-big,/shows/617 - hasty node.md,2023-10-16 20:07:59.876,2023-10-27 15:58:18.165,HASTY
syntax_podcast_show_00618,618,Potluck × JR Devs & Copilot × CSS Variable Limitations × SvelteKit,2023-05-24 12:00:00.388,https://traffic.libsyn.com/syntax/Syntax_-_618.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about not becoming dependent on Copilot, CSS variable limitations, finding Sick Picks, lodash hate, and more!

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[00:55](#t=00:55)** Ice, ice baby
* **[02:01](#t=02:01)** Reactathon
* [Reactathon returns May 2-3, 2023](https://www.reactathon.com/)
* [The edge cloud platform behind the best of the web | Fastly](https://www.fastly.com/)
* **[04:49](#t=04:49)** Submit your question for our next potluck
* **[05:24](#t=05:24)** How do you suggest adding form / database to Svelte?
* [Svelte • Cybernetically enhanced web apps](https://svelte.dev/)
* [Astro](https://astro.build/)
* **[08:18](#t=08:18)** What can't go into a CSS custom prop?
* **[12:42](#t=12:42)** Are there any really good certifications for Javascript or general full stack development?
* **[16:21](#t=16:21)** What is the most exciting thing about teaching programming for both of you?
* **[19:37](#t=19:37)** What is the most challenging thing you have ever overcome in this field?
* **[21:55](#t=21:55)** How can junior to mid-level devs make the most out of GitHub Copilot while avoiding getting dependent on it and hurting their abilities in the long run?
* **[26:23](#t=26:23)** Any tips on driving a culture of code quality in a team?
* **[30:28](#t=30:28)** How soon should Sentry be brought into a new project being built from scratch?
* **[33:11](#t=33:11)** Is there a place where I can search through all the Sick Picks?
* [Syntax Sick Picks](https://syntax.fm/sickpicks)
* **[34:40](#t=34:40)** Why is box-sizing: border-box; not the default?
* **[37:51](#t=37:51)** Is using lodash in a NextJS web application a terrible idea nowadays?
* **[40:42](#t=40:42)** What is the best practice for storing JWT token?
* **[43:53](#t=43:53)** Any tips on converting ajax requests to use Fetch API?
* [patch-package - npm](https://www.npmjs.com/package/patch-package)
* **[45:11](#t=45:11)** Any suggestions for tips for updating a very dated React Native codebase?
* **[50:56](#t=50:56)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: Tales of Taboo podcast [Spotify](https://open.spotify.com/show/0LdFA4R6OpPAun8MqLa6nF) / [Apple Podcasts](https://podcasts.apple.com/us/podcast/tales-of-taboo/id1457365096)
* Wes: Rubber Flooring

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",8537a1546dabe19aeb8933d07a203c99238d9321bc70a7ae34046359637e0dae,potluck-jr-devs-and-copilot-css-variable-limitations-sveltekit,/shows/618 - potluck.md,2023-10-16 20:07:59.947,2023-10-27 15:58:18.221,TASTY
syntax_podcast_show_00619,619,Supper Club × Bramus Van Damme on CSS,2023-05-26 12:00:00.778,https://traffic.libsyn.com/syntax/Syntax_-_619.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Bramus Van Damme all about CSS, what the CSS Working Group is, how he got good at blogging, setting custom property types in CSS, view transition API, and so much more.

## Show Notes

* **[00:35](#t=00:35)** Welcome Bramus Van Damme
* **[02:29](#t=02:29)** Who is Bramus?
* [Bramus Van Damme - Developer Relations Engineer - LinkedIn](https://www.linkedin.com/in/bramus/)
* [Original Content – Bram.us](https://www.bram.us/category/original-content/)
* [Bramus on Twitter (@bramus)](https://twitter.com/bramus)
* [bramus on GitHub (Bramus!)](https://github.com/bramus/)
* **[03:33](#t=03:33)** What is the CSS Working Group?
* [CSS WG Blog](https://www.w3.org/blog/CSS/)
* [w3c/csswg-drafts: CSS Working Group Editor Drafts](https://github.com/w3c/csswg-drafts)
* **[11:18](#t=11:18)** How did you get so good at blogging?
* [CSS Trig functions](https://web.dev/css-trig-functions/)
* **[14:02](#t=14:02)** Scroll Driven Animations
* [Bram.us: Scroll linked animations with scrolltimeline and viewtimeline/](https://www.bram.us/2022/10/27/scroll-linked-animations-with-scrolltimeline-and-viewtimeline/)
* [Chrome Dev blog: Scroll driven animations/](https://developer.chrome.com/articles/scroll-driven-animations/)
* [MDN Animation timeline](https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timeline)
* [Scroll-driven-animations.style](https://scroll-driven-animations.style/)
* **[25:53](#t=25:53)** What's going on with Houdini?
* [IsHoudiniReadyYet.com](https://ishoudinireadyyet.com/)
* [CSS Props and Vals](https://web.dev/css-props-and-vals/)
* **[27:09](#t=27:09)** Why do you need to set a custom property type in CSS?
* **[29:08](#t=29:08)** How do you debug values in CSS?
* **[30:12](#t=30:12)** What is Scope Styling?
* **[34:50](#t=34:50)** But when can I use it?
* **[36:18](#t=36:18)** What's the status of the view transition API?
* [View Transitions](https://developer.chrome.com/docs/web-platform/view-transitions/)
* **[40:53](#t=40:53)** What are you looking forward to in CSS?
* **[42:19](#t=42:19)** Would CSS ever get a strict mode?
* **[47:05](#t=47:05)** Supper Club Questions
* [ZSH - THE Z SHELL](https://zsh.sourceforge.io/)
* [zsh-users/antigen: The plugin manager for zsh.](https://github.com/zsh-users/antigen)
* [web.dev](https://web.dev/)
* [Blog - Chrome Developers](https://developer.chrome.com/en/blog/)
* [Welcome to Feedly](https://feedly.com/)
* **[52:40](#t=52:40)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Meetups

## Shameless Plugs

* [Scroll-driven-animations.style](https://scroll-driven-animations.style/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",2ebccda1d18ac94d9be97e3039d47a1b8f25ece240b0610538005ec15fe3874c,supper-club-bramus-van-damme-on-css,/shows/619 - supper braum.md,2023-10-16 20:08:00.025,2023-10-27 15:58:18.288,SUPPER
syntax_podcast_show_00620,620,JavaScript.exe - Standalone Executables,2023-05-29 12:00:00.397,https://traffic.libsyn.com/syntax/Syntax_-_620.mp3,"
JavaScript executables: their purpose, benefits, and use cases, such as creating standalone applications with all dependencies and the Node.js runtime bundled into a single executable for portability and easy deployment. We also address the twitter hate on the executable’s size.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:12](#t=01:12)** What are JavaScript executables?
* **[04:39](#t=04:39)** Deploying tooling
* **[06:01](#t=06:01)** Running on a USB stick
* **[07:57](#t=07:57)** The size
* **[12:19](#t=12:19)** Fastly
* [The edge cloud platform behind the best of the web | Fastly](https://www.fastly.com/)
* [Deno — A modern runtime for JavaScript and TypeScript](https://deno.com/runtime)
* [Bun — A fast all-in-one JavaScript runtime](https://bun.sh/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",941682f5cbd0c98561864495792c658fd1eb9fd665f23ab48b387bcc4419054e,javascript-exe-standalone-executables,/shows/620 - hasty Javascript.md,2023-10-16 20:08:00.071,2023-10-27 15:58:18.416,HASTY
syntax_podcast_show_00621,621,"The New Syntax Site × Ingest, Stack, AI and more",2023-05-31 12:00:00.903,https://traffic.libsyn.com/syntax/Syntax_-_621.mp3,"
In this episode of Syntax, Wes and Scott talk through the work in progress on the new Syntax website, how to tackle all the moving parts, what stack they picked, AI, and more.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[00:56](#t=00:56)** Leaky roofs
* **[02:18](#t=02:18)** How we divided the workload for the new Syntax site
* [Issues of Syntax v2](https://github.com/syntaxfm/website/issues)
* [V2 of the website](https://github.com/syntaxfm/website/tree/v2)
* **[02:55](#t=02:55)** Dark mode vs light mode
* **[04:46](#t=04:46)** Our project management stack
* **[06:36](#t=06:36)** High school dances
* **[08:36](#t=08:36)** Tech stack for Syntax v2
* [Prisma | Next-generation ORM for Node.js & TypeScript](https://www.prisma.io/)
* [PlanetScale: The world’s most advanced database platform](https://planetscale.com/)
* **[16:44](#t=16:44)** PostCSS and Sveltekit
* [SvelteKit • Web development, streamlined](https://kit.svelte.dev/)
* [Vercel: Develop. Preview. Ship. For the best frontend teams](https://vercel.com/)
* **[17:57](#t=17:57)** Auth
* [Authorizing OAuth Apps](https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/authorizing-oauth-apps)
* [oAuth APIs Explained — Syntax Podcast 599](https://syntax.fm/show/599/oauth-apis-explained)
* **[23:15](#t=23:15)** Transcription
* [Otter.ai - Voice Meeting Notes & Real-time Transcription](https://otter.ai/)
* [Amazon Transcribe – Speech to Text - AWS](https://aws.amazon.com/transcribe/)
* [Introducing Whisper](https://openai.com/research/whisper)
* [WhisperX: Automatic Speech Recognition with Word-level Timestamps (& Diarization)](https://github.com/m-bain/whisperX)
* [Speech-to-Text: Automatic Speech Recognition Google Cloud](https://cloud.google.com/speech-to-text)
* [Deepgram: World's Most Powerful Speech-to-Text API](https://deepgram.com/)
* **[35:54](#t=35:54)** Theming system
* [CSS Zen Garden: The Beauty of CSS Design](https://www.csszengarden.com/)
* **[43:38](#t=43:38)** AI Shownotes
* **[53:02](#t=53:02)** Ingest process
* **[00:24](#t=00:24)** Markdown as the source of truth
* **[01:50](#t=01:50)** AI Embeddings
* [Vector Database for Vector Search | Pinecone](https://www.pinecone.io/)
* [Introducing Ask Netlify: a new way of engaging with Netlify Docs with AI-Powered interactions](https://www.netlify.com/blog/ask-netlify-ai-powered-docs/)
* **[09:22:24](#t=09:22:24)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Jury Duty](https://www.imdb.com/title/tt22074164/)
* Wes: [Ted Lasso](https://tv.apple.com/us/show/ted-lasso/umc.cmc.vtoh0mn0xn7t3c643xqonfzy)

## Shameless Plugs

* Scott: [Syntax Discord](https://discord.gg/W5y68HMfZV)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",56208a93702a1f54a6b85e867ecee94e59d4b19c958b9f5382a9173c18c6db73,the-new-syntax-site-ingest-stack-ai-and-more,/shows/621 - tasty.md,2023-10-16 20:08:00.109,2023-10-27 15:58:18.465,TASTY
syntax_podcast_show_00622,622,Supper Club × Matt Rothenberg and Idan Gazit on Github Next,2023-06-02 12:00:00.587,https://traffic.libsyn.com/syntax/Syntax_-_622.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Matt Rothenberg and Idan Gazit from GitHub about GitHub Next, Copilot, AI based projects at Github, and what the future is for developers with AI.

## Show Notes

* **[00:38](#t=00:38)** Welcome
* **[01:23](#t=01:23)** Who are Matt and Idan?
* [Matt Rothenberg](https://mattrothenberg.com/)
* [@mattrothenberg](https://twitter.com/mattrothenberg)
* [Matt Rothenberg on CodePen](https://codepen.io/mattrothenberg)
* [Matt Rothenberg on GitHub)](https://github.com/mattrothenberg)
* [Idan Gazit](https://gazit.me/)
* [@idangazit](https://twitter.com/idangazit)
* [Idan Gazit vis.social](https://vis.social/@idan)
* [Idan Gazit on GitHub](https://github.com/idan)
* **[02:22](#t=02:22)** What's the history of GitHub Next?
* [GitHub Copilot · Your AI pair programmer](https://github.com/features/copilot)
* [ChatGPT | OpenAI](https://chat.openai.com/auth/login?next=/)
* **[05:18](#t=05:18)** How do you come up with new ideas?
* **[06:37](#t=06:37)** Did GitHub Copilot blow up fast?
* **[13:18](#t=13:18)** Do we need powerful models for all situations?
* **[16:40](#t=16:40)** How does Copilot know my codebase?
* [Inside GitHub: Working with the LLMs behind GitHub Copilot | The GitHub Blog](https://github.blog/2023-05-17-inside-github-working-with-the-llms-behind-github-copilot/)
* **[21:34](#t=21:34)** What's Copilot X?
* [Introducing GitHub Copilot X](https://github.com/features/preview/copilot-x)
* **[24:57](#t=24:57)** What is it like to have a hit like Copilot?
* **[31:27](#t=31:27)** What is the future for developers due to AI?
* **[35:11](#t=35:11)** What other AI based projects are you working on?
* **[42:10](#t=42:10)** Are there any flops from GitHub Next?
* **[46:59](#t=46:59)** How do you think about Code Brushes?
* [GitHub Next | Code Brushes](https://githubnext.com/projects/code-brushes/)
* **[48:46](#t=48:46)** Supper Club questions
* [Breeze | Afternoon Labs](https://www.afternoonlabs.com/breeze/)
* [Introduction - The Rust on ESP Book](https://esp-rs.github.io/book/)
* [Recursive Sans & Mono](https://www.recursive.design/)
* [Bearded Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=BeardedBear.beardedtheme)
* [Zed - Code at the speed of thought](https://zed.dev/)
* [Warp: The terminal for the 21st century](https://www.warp.dev/)
* **[59:16](#t=59:16)** SIIIIICK ××× PIIIICKS ×××

## Shameless Plugs

* [GitHub Next](https://githubnext.com/)
* [githubnext/githubnext: A public point of contact for GitHub Next](https://github.com/githubnext/githubnext)
* [Ariakit - Toolkit for building accessible UIs](https://ariakit.org/)
* [Liveblocks | Collaborative experiences in days, not months](https://liveblocks.io/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",8861061d2ac39f50a8140d7ba6513f06bd9146e7b4f8b3c302a09120179ac93d,supper-club-matt-rothenberg-and-idan-gazit-on-github-next,/shows/622 - Supper GitHub Next.md,2023-10-16 20:08:00.141,2023-10-27 15:58:18.529,SUPPER
syntax_podcast_show_00623,623,"Nothing in CSS - 0 vs 0px, no, none, hidden, initial and unset",2023-06-05 12:00:00.934,https://traffic.libsyn.com/syntax/Syntax_-_623.mp3,"
In this Hasty Treat, Scott and Wes talk about all the nothing in CSS: 0 vs 0px, no, none, hidden, initial and unset.

## Show Notes

* **[00:22](#t=00:22)** Welcome
* **[01:50](#t=01:50)** The @ property
* **[03:33](#t=03:33)** Hiding Things
* **[10:07](#t=10:07)** Ghost Spaces
* **[17:47](#t=17:47)** Collapsing margins
* **[18:33](#t=18:33)** 0 units vs 0
* **[23:42](#t=23:42)** Unset and initial
* **[27:42](#t=27:42)** HTML Bonus

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/syntax.fm/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",69978687c40c496ee511b04c959571de11484c886d19f3905ba073b6027af558,nothing-in-css-0-vs-0px-no-none-hidden-initial-and-unset,/shows/623 - Hasty.md,2023-10-16 20:08:00.237,2023-10-27 15:58:18.640,HASTY
syntax_podcast_show_00624,624,Is JSDoc Better than TypeScript?,2023-06-07 12:00:00.514,https://traffic.libsyn.com/syntax/Syntax_-_624.mp3,"
In this episode of Syntax, Wes and Scott use the fact that Svelte is being converted from TypeScript to JavaScript with JSDoc to talk about the benefits of working that way, why they are doing it, and what you can do with JSDoc that TypeScript alone doesn't let you do.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:12](#t=01:12)** Roof update
* **[02:15](#t=02:15)** TypeScript haters need not apply
* **[03:17](#t=03:17)** What is JSDoc?
* **[04:27](#t=04:27)** What is our history with JSDoc?
* **[06:37](#t=06:37)** Why is Svelte moving to JSDoc?
* **[08:11](#t=08:11)** Why is JSDoc better than TypeScript?
* **[12:31](#t=12:31)** You can type things you can’t in TypeScript
* **[16:37](#t=16:37)** Param, Function and returns Descriptions
* **[21:32](#t=21:32)** Spoiler - it's still TypeScript
* **[33:23](#t=33:23)** SIIIIICK ××× PIIIICKS ×××

* [Get Started With TypeScript the Easy Way](https://austingil.com/typescript-the-easy-way/)
* [TypeScript without TypeScript -- JSDoc superpowers](https://fettblog.eu/typescript-jsdoc-superpowers/)
* [TypeScript: Documentation - JSDoc Reference](https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html)
* [Dev Vlog: April 2023 - TypeScript vs JSDoc, Transitions API, Dominic Gannaway joins Svelte team](https://www.youtube.com/watch?v=MJHO6FSioPI&t=95s)
* [Svelte repo is finally being converted from Typescript to Javascript with JSDoc](https://twitter.com/puruvjdev/status/1655813548495486977)
* [If you are on a JS project and are missing the TypeScript hinting in your editor, you can still type your code with JSDoc syntax comments and VS Code will detect and use it!](https://twitter.com/wesbos/status/1339217248729305090)
* [Sprinkle in a little JSDoc on top of your TypeScript when needed - helpful to adding descriptions to returned values, or marking things as deprecated](https://twitter.com/wesbos/status/1646601873523200021)
* [TypeScript to JSDoc](https://www.npmjs.com/package/ts-to-jsdoc)

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Watch MerPeople | Netflix Official Site](https://www.netflix.com/ca/title/81439780)
* Wes: [18V ONE+ 45W HYBRID SOLDERING STATION (TOOL ONLY) | RYOBI Tools](https://www.ryobitools.ca/products/details/18v-one-plus-45w-hybrid-soldering-station/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",8c16da1ea89048135a182aff73c17cbb20df79b6d1db10d5774202d38261b229,is-jsdoc-better-than-typescript,/shows/624 - tasty typescript.md,2023-10-16 20:08:00.275,2023-10-27 15:58:18.692,TASTY
syntax_podcast_show_00625,625,"Supper Club × OpenAI, Future of programming, LLMs, and Math with Andrey Mishchenko",2023-06-09 12:00:00.953,https://traffic.libsyn.com/syntax/Syntax_-_625.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Andrey Mishchenko about working at OpenAI, getting started in machine learning, what RLHF is, the impact of plugins on ChatGPT, and what the future holds for developers in a world with ChatGPT tools.

## Show Notes

* **[00:33](#t=00:33)** Welcome
* **[00:59](#t=00:59)** ChatGPT introduction
* **[02:17](#t=02:17)** Who is Andrey Mishchenko?
* **[03:17](#t=03:17)** What is circle packing?
* **[05:04](#t=05:04)** When did you start at OpenAI?
* **[06:21](#t=06:21)** Levels of interaction
* **[08:39](#t=08:39)** How do you train the model to understand?
* **[11:13](#t=11:13)** What's RLHF?
* **[13:56](#t=13:56)** What are plugins for ChatGPT?
* **[16:11](#t=16:11)** What languages are you using to code for AI?
* **[19:15](#t=19:15)** Did you have any idea ChatGPT would be so popular?
* **[21:13](#t=21:13)** Did your math degree help get into language modeling?
* **[28:34](#t=28:34)** Do Wes or Scott worry they're going to lose their job?
* **[33:24](#t=33:24)** How has farming been shaken up by AI?
* **[34:59](#t=34:59)** Do you think the pace of AI will continue?
* **[35:30](#t=35:30)** Will plugins change how people use AI tools?
* **[41:21](#t=41:21)** What does AI do better than anything else?
* **[49:11](#t=49:11)** Supper Club questions
* **[55:04](#t=55:04)** SIIIIICK ××× PIIIICKS ×××

* [Andrey Mishchenko - Member of Technical Staff - OpenAI](https://www.linkedin.com/in/andreymishchenko)
* [Bing Chat (GPT-4) in Google - Chrome Web Store](https://chrome.google.com/webstore/detail/bing-chat-gpt-4-in-google/pcnhobmoglanpljipbomknafhdlcgcng)
* [ChatGPT plugins](https://openai.com/blog/chatgpt-plugins)
* [Introduction - OpenAI API](https://platform.openai.com/docs/plugins/introduction)

## Shameless Plugs

* [ChatGPT plugins](https://openai.com/blog/chatgpt-plugins)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",8de9a98aa514bbc31b27ad0764ecb9aa1de1322f7b8243ac0aa4b14710f7e044,supper-club-openai-future-of-programming-llms-and-math-with-andrey-mishchenko,/shows/625 - supper AI.md,2023-10-16 20:08:00.317,2023-10-27 15:58:18.752,SUPPER
syntax_podcast_show_00626,626,"GitHub Projects, Milestones, Labels, and Actions",2023-06-12 12:00:00.327,https://traffic.libsyn.com/syntax/Syntax_-_626.mp3,"
In this Hasty Treat, Scott and Wes talk about some of the GitHub features you may not have used very much including projects, milestones, labels, and actions.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:53](#t=01:53)** That's sick
* **[04:05](#t=04:05)** What we've used in the past
* [Trello](https://www.trello.com)
* [Jira | Issue & Project Tracking Software | Atlassian](https://www.atlassian.com/software/jira)
* **[06:13](#t=06:13)** Working with Github Projects
* [About Projects](https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects)
* **[11:57](#t=11:57)** Milestones
* [About milestones](https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/about-milestones)
* **[14:35](#t=14:35)** GitHub Labels
* [Managing labels](https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/managing-labels)
* **[19:51](#t=19:51)** GitHub Actions
* [Features • GitHub Actions](https://github.com/features/actions)
* [Level Up Tutorials - Learn modern web development](https://levelup.video/tutorials/code-automation-with-github/introduction)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",e07e4203b00c48765048ea2245787e19dc6881e43981fedf89649414d8383939,github-projects-milestones-labels-and-actions,/shows/626 - hasty planning.md,2023-10-16 20:08:00.486,2023-10-27 15:58:18.873,HASTY
syntax_podcast_show_00627,627,Electronics for Beginners,2023-06-14 12:00:00.805,https://traffic.libsyn.com/syntax/Syntax_-_627.mp3,"
In this episode of Syntax, Wes and Scott talk through an introduction to electronics that you can do in your own home with microcontrollers.

## Show Notes

* **[00:08](#t=00:08)** Welcome
* **[00:52](#t=00:52)** What we're talking about
* [Arduino - Home](https://www.arduino.cc/)
* [ESP32 – The best products with free shipping | only on AliExpress](https://m.aliexpress.com/wholesale/esp32.html)
* **[02:15](#t=02:15)** Airtag Sidebar
* **[04:05](#t=04:05)** Projects We've Worked On
* **[06:34](#t=06:34)** How do you run software on the microcontroller
* **[08:50](#t=08:50)** Microcontrollers are extendable
* **[12:05](#t=12:05)** Fixing a dryer
* **[14:06](#t=14:06)** Sprinkler system
* **[15:48](#t=15:48)** Microcontrollers
* **[20:28](#t=20:28)** AC and DC Voltage
* **[25:45](#t=25:45)** Amperage and watts
* **[28:19](#t=28:19)** Extension cords ideally would have fuses
* **[31:18](#t=31:18)** What's the risk of not having enough power?
* **[32:09](#t=32:09)** GPIO
* **[35:45](#t=35:45)** Resistance
* [How Resistors Work - Unravel the Mysteries of How Resistors Work!](https://www.youtube.com/watch?v=DYcLFHgVCn0)
* **[41:12](#t=41:12)** Capacitors
* **[42:02](#t=42:02)** Sensors
* [5/1pcs HLK LD2410C 24G mmWave FMCW Millimeter Wave 5M Human Presence Status Radar Sensor Motion Detection Modul High Sensitivity](https://www.aliexpress.us/item/1005005087204432.html?gatewayAdapt=4itemAdapt)
* **[46:47](#t=46:47)** Relays
* **[48:33](#t=48:33)** Coding microcontrollers
* [Web Serial API](https://wicg.github.io/serial/)
* [ESPHome — ESPHome](https://esphome.io/)
* [Johnny-Five: The JavaScript Robotics & IoT Platform](https://johnny-five.io/)
* [Espruino - JavaScript for Microcontrollers](https://www.espruino.com/)
* [Introduction - The Rust on ESP Book](https://esp-rs.github.io/book/)
* [Welcome to Quick.js! - quick.js](https://quick.js.org/)
* **[52:32](#t=52:32)** A note on Soldering
* **[53:12](#t=53:12)** Projects for kids
* **[54:31](#t=54:31)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Razor blade](https://amzn.to/3BQD92m)
* Wes: [ESP32 – The best products with free shipping | only on AliExpress](https://m.aliexpress.com/wholesale/esp32.html)

## Shameless Plugs

* Scott: [Syntax Discord](https://discord.gg/ccMC6kB)
* Wes: [Wes' Instagram](https://www.instagram.com/wesbos)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",b29dcdda7ae82b85fae34911af2645fdbb760007f1547cb7bd743702df7f1a98,electronics-for-beginners,/shows/627 - electronics tasty.md,2023-10-16 20:08:00.530,2023-10-27 15:58:18.920,TASTY
syntax_podcast_show_00628,628,"Supper Club × JavaScript on Hardware, Micro Controllers, ESP32 with Nick Hehr",2023-06-16 12:00:00.136,https://traffic.libsyn.com/syntax/Syntax_-_628.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Nick Hehr about the fun ways to get started with micro controllers, writing JavaScript for hardware, and ideas for projects to build involving hardware and software.

## Show Notes

* **[00:36](#t=00:36)** Welcome to Syntax
* **[01:04](#t=01:04)** Introducing Nick Hehr
* [Nick Hehr (@hipsterbrown)](https://twitter.com/hipsterbrown?lang=en)
* [HipsterBrown (@hipsterbrown@toot.cafe) - Toot Café](https://toot.cafe/@hipsterbrown)
* [HipsterBrown](https://www.hipsterbrown.com/)
* [HipsterBrown (Nick Hehr)](https://github.com/HipsterBrown)
* [Nick Hehr on CodePen](https://codepen.io/HipsterBrown/)
* **[03:58](#t=03:58)** Running JavaScript on microcontrollers
* **[06:20](#t=06:20)** What was your first project that got you into this?
* **[12:12](#t=12:12)** Is the ESP32 the most popular controller?
* **[14:12](#t=14:12)** Where do you buy hardware?
* [Arduino - Home](https://www.arduino.cc/)
* [Adafruit Industries, Unique & fun DIY electronics and kits](https://www.adafruit.com/)
* [AliExpress - Online Shopping for Popular Electronics, Fashion, Home & Garden, Toys & Sports, Automobiles and More products - AliExpress](https://www.aliexpress.com/)
* [SparkFun Electronics](https://www.sparkfun.com/)
* [Introduction 🚀 xs-dev Documentation](https://xs-dev.js.org/en/introduction/)
* [Welcome to Robo Wizard | Robo Wizard](https://robo-wizard.js.org/)
* **[16:52](#t=16:52)** What are people building with boards?
* **[18:30](#t=18:30)** What does the JavaScript look like?
* **[22:16](#t=22:16)** Can you make a Fetch request?
* **[25:45](#t=25:45)** What about Arduino?
* **[31:54](#t=31:54)** What's a good starter project?
* [Johnny-Five: The JavaScript Robotics & IoT Platform](https://johnny-five.io/)
* [meganetaaan/stack-chan: A JavaScript-driven M5Stack-embedded super-kawaii robot.](https://github.com/meganetaaan/stack-chan/tree/dev/v1.0)
* [TC53 - Ecma International](https://www.ecma-international.org/technical-committees/tc53/)
* [dtex/j5e: Framework for embedded devices using ECMA-419, the ECMAScript® embedded systems API specification, based on Johnny-Five's API](https://github.com/dtex/j5e)
* [HipsterBrown/on-air-light: An offline-first IoT on-air light for video meetings, using ESP32 & JS](https://github.com/HipsterBrown/on-air-light)
* [ESPHome — ESPHome](https://esphome.io/)
* [Being in the video game with Augmented Climbing | The Kid Should See This](https://thekidshouldseethis.com/post/be-the-video-game-with-augmented-climbing)
* **[36:03](#t=36:03)** Emulation and debugging
* **[39:13](#t=39:13)** What else have you made?
* **[44:31](#t=44:31)** ESP Home
* **[54:35](#t=54:35)** SIIIIICK ××× PIIIICKS ×××
* **[00:32](#t=00:32)** Shameless Plugs

## ××× SIIIIICK ××× PIIIICKS ×××

* [The Opus Intro Kit – Fellow](https://fellowproducts.com/products/the-opus-intro-kit?variant=41516160385124)
* [jdxcode/rtx: Runtime Executor (asdf rust clone)](https://github.com/jdxcode/rtx)
* [Code: The Hidden Language of Computer Hardware and Software: Petzold, Charles: 9780137909100: Books - Amazon.ca](https://www.amazon.ca/dp/0137909101?crid=2QRJ0XCK7OHGB&keywords=Code:+The+Hidden+Language+of+Computer+Hardware+and+Software&sprefix=code+the+hidden+language+of+computer+hardware+and+software+,aps,108&language=en_US&sr=8-1&linkCode=gs2&linkId=ea6a456d08c423866beeb49df1eae111&tag=isi777-20)

## Shameless Plugs

* [Introduction 🚀 xs-dev Documentation](https://xs-dev.js.org/en/introduction/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",57dca592373f8827479b1240cac468048d9332dd9a4d52a7224da1fec450b2ea,supper-club-javascript-on-hardware-micro-controllers-esp32-with-nick-hehr,/shows/628 - supper Nick.md,2023-10-16 20:08:00.573,2023-10-27 15:58:18.973,SUPPER
syntax_podcast_show_00629,629,AsyncLocalStorage + AsyncContext API,2023-06-19 12:00:00.338,https://traffic.libsyn.com/syntax/Syntax_-_629.mp3,"
In this Hasty Treat, Scott and Wes talk about AsyncLocalStorage, why more frameworks aren't using it yet, some examples, as well as some footguns.

## Show Notes

* **[00:22](#t=00:22)** Welcome
* **[01:44](#t=01:44)** What is AsyncLocalStorage?
* **[03:14](#t=03:14)** What is context?
* **[07:49](#t=07:49)** Why aren't more frameworks using AsyncLocalStorage for context for middleware?
* **[10:16](#t=10:16)** Examples of usage
* **[14:20](#t=14:20)** Footguns

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",c1b641c96dcf3d4892971f56c8349a5313b233b71a4dac6999ad5e59e1dfc75c,asynclocalstorage-asynccontext-api,/shows/629 - hasty.md,2023-10-16 20:08:00.781,2023-10-27 15:58:19.114,HASTY
syntax_podcast_show_00630,630,Potluck × Warp × Skeleton UI × Edge Functions × Donut Scoping,2023-06-21 12:00:00.872,https://traffic.libsyn.com/syntax/Syntax_-_630.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about rate-limiting an API, using Wasp, Enums in TypeScript, styling React projects, using Edge functions, and more.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:53](#t=01:53)** Connecting at conferences
* [JSNation – the main JavaScript conference of 2023](https://jsnation.com/)
* [RenderATL 2023 | May 31 - June 2, 2023. | 80+ Speakers](https://www.renderatl.com/)
* **[04:10](#t=04:10)** What technique do you use for consuming a rate-limited API?
* **[07:58](#t=07:58)** Is Wasp-lang.dev ticking all the boxes for an awesome full-stack JavaScript framework?
* [Wasp](https://wasp-lang.dev/)
* **[14:36](#t=14:36)** How do you guys feel about skeleton UIs?
* [Skeleton | Open UI](https://open-ui.org/components/skeleton.research/)
* **[19:10](#t=19:10)** How can i forward my http only auth cookies to my backend API?
* **[22:28](#t=22:28)** What's your opinion on using Enums in TypeScript?
* **[29:46](#t=29:46)** How much off the clock time away from coding related activities do you have in a typical week?
* **[37:10](#t=37:10)** What's the best approach for styling React projects?
* **[42:49](#t=42:49)** Donut scoping
* [Scope donuts | Stubbornella](http://www.stubbornella.org/content/2011/10/08/scope-donuts/)
* **[45:21](#t=45:21)** How do I add user registration and content uploading features to a website?
* [Next.js by Vercel - The React Framework](https://nextjs.org/)
* [Laravel - The PHP Framework For Web Artisans](https://laravel.com/)
* [Image and Video Upload, Storage, Optimization and CDN](https://cloudinary.com/)
* [RedwoodJS: The App Framework for Startups | RedwoodJS.com](https://redwoodjs.com/)
* [SvelteKit • Web development, streamlined](https://kit.svelte.dev/)
* [Learn Node — The best way to learn Node.js, Express, MongoDB, and Friends](https://learnnode.com/)
* [AdonisJS - A fully featured web framework for Node.js](https://adonisjs.com/)
* **[53:25](#t=53:25)** Do you see any benefits in using edge functions if your audience is local?
* **[59:20](#t=59:20)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: * [BOJACK 37 Values 480 Pcs Electronics Component Fun Kit with Power Supply Module, Jumper Wire,Precision Potentiometer,830 tie-Points Breadboard Compatible with STM32,Raspberry Pi,Arduino : Electronics](https://www.amazon.com/dp/B099MQV8ZW?linkCode=sl1&linkId=2e8b74b5184d18661a0bccb5a4f6713a&language=en_US)
* Wes: * [Local and regional eSIMs for travellers - Airalo](https://www.airalo.com/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",a01a052037c16b3329ef17e2cfd0fa9bb5929c697dab66309d209df030ed0d66,potluck-warp-skeleton-ui-edge-functions-donut-scoping,/shows/630 - Potluck tasty.md,2023-10-16 20:08:00.881,2023-10-27 15:58:19.176,TASTY
syntax_podcast_show_00631,631,"Supper Club × Why Netlify bought Gatsby, GraphQL Data Layer, and Headless CMS with Dustin Schau",2023-06-23 12:00:00.710,https://traffic.libsyn.com/syntax/Syntax_-_631.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Dustin Schau about Netlify Connect, Gatsby, GraphQL, and more.

## Show Notes

- **[00:35](#t=00:35)** Welcome
- **[01:20](#t=01:20)** Who is Dustin Schau?
- [Dustin Schau (@SchauDustin)](https://twitter.com/SchauDustin)
- [Develop and deploy websites and apps in record time | Netlify](https://www.netlify.com/)
- **[02:49](#t=02:49)** Is Valhalla from Gatsby?
- [How to Source Content from a Headless CMS | Gatsby](https://www.gatsbyjs.com/docs/how-to/sourcing-data/headless-cms/)
- [Valhalla Content Hub | Gatsby](https://www.gatsbyjs.com/products/valhalla-content-hub/)
- [Netlify Connect Brings All Content Sources & CMS Apps Together](https://www.netlify.com/products/connect/)
- **[05:41](#t=05:41)** Valhalla is now Netlify Connect
- **[09:32](#t=09:32)** How often should you scrape or cache from another API?
- **[10:36](#t=10:36)** What about auth?
- **[13:41](#t=13:41)** Will Netlify Connect be open source or paid?
- **[18:48](#t=18:48)** Is GraphQL it?
- [Overview | urql Documentation](https://formidable.com/open-source/urql/docs/)
- [GQty](https://gqty.dev/)
- **[22:35](#t=22:35)** What odd data sources are you trying to connect?
- **[26:06](#t=26:06)** How does Gatsby send out to APIs?
- **[29:00](#t=29:00)** What CMS should people use?
- [The Markdown CMS | Tina](https://tina.io/)
- [The platform to bring your best ideas to life | Contentful](https://www.contentful.com/)
- [The Composable Content Cloud - Sanity.io](https://www.sanity.io/)
- **[31:22](#t=31:22)** What do you think of component based CMS?
- [SEO Enterprise Rank Tracker - A Keyword Rank Tracking Tool Like No Other | Nozzle.io](https://nozzle.io/)
- **[35:36](#t=35:36)** What are your thoughts on the React ecosystem?
- **[43:33](#t=43:33)** What's the future for Gatsby?
- **[46:14](#t=46:14)** Supper Club questions
- [folivora.ai - Great Tools for your Mac!](https://folivora.ai/)
- [Noodlesoft – Noodlesoft – Simply Useful Software](https://www.noodlesoft.com/)
- [Dank Mono: The coding typeface for aesthetes](https://philpl.gumroad.com/l/dank-mono)
- [DSchau/dotfiles: :wrench: .files, including ~/.macos — sensible defaults for macOS development (catered to Node.js)](https://github.com/DSchau/dotfiles)
- [Deploy app servers close to your users · Fly](https://fly.io/)
- [Hono - Ultrafast web framework for the Edges](https://hono.dev/)
- [Stream Movies & TV Shows | Plex](https://www.plex.tv/)
- [The Free Software Media System | Jellyfin](https://jellyfin.org/)
- **[56:29](#t=56:29)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- [Arc Browser](https://arc.net/)
- [Resend React Email](https://resend.com/)

## Shameless Plugs

- [Netlify](http://Netlify.com)
- [Netlify Connect](https://ntl.fyi/sanity)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",7119948f40409a4cb8ec667d8442b10907cfb80923ba988c0978e31a3841ef79,supper-club-why-netlify-bought-gatsby-graphql-data-layer-and-headless-cms-with-dustin-schau,/shows/631 - Supper Dustin.md,2023-10-16 20:08:01.016,2023-10-27 15:58:19.230,SUPPER
syntax_podcast_show_00632,632,Where to Register a Domain,2023-06-26 12:00:00.943,https://traffic.libsyn.com/syntax/Syntax_-_632.mp3,"
In this Hasty Treat, Scott and Wes talk about where you should register a domain name, explain DNS, and the process for moving a domain from one registrar to another.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[02:04](#t=02:04)** Domain name registration vs DNS
* **[03:58](#t=03:58)** Domain name flattening
* **[05:07](#t=05:07)** Domain name privacy
* **[05:31](#t=05:31)** Proxy registrations
* **[06:44](#t=06:44)** Bait and switch registrars
* **[11:56](#t=11:56)** Domain registrars we found
* **[13:09](#t=13:09)** NameCheap and Spaceship
* [Namecheap](https://www.namecheap.com/)
* [Spaceship](https://www.spaceship.com/)
* **[17:42](#t=17:42)** GoDaddy
* [GoDaddy](https://www.godaddy.com/)
* **[19:26](#t=19:26)** Ghandi
* [Gandi.net](https://www.gandi.net/en-CA)
* **[21:16](#t=21:16)** Porkbun
* [Porkbun](https://www.porkbun.com)
* **[22:18](#t=22:18)** Hover
* [Hover.com](https://www.hover.com/)
* **[24:24](#t=24:24)** Name
* [Name.com](https://www.name.com/)
* **[26:24](#t=26:24)** Cloudflare
* [Cloudflare](https://www.cloudflare.com/products/registrar/)
* **[28:04](#t=28:04)** What's the process for moving d
* [iwantmyname](https://iwantmyname.com/)
* [DNSimple](https://dnsimple.com/)omains to a new registrar?
* **[30:38](#t=30:38)** I Want My Name and DNS Simple
* **[33:05](#t=33:05)** Finding domain names
* **[37:28](#t=37:28)** What would you pick to register a domain today?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",4abf466247f0f97462cd90f433717433dea36ca0c52d03b5d4caecf6bfda4a02,where-to-register-a-domain,/shows/632 - Hasty Domains.md,2023-10-16 20:08:26.879,2023-10-27 15:58:19.332,HASTY
syntax_podcast_show_00633,633,WTF is an ORM,2023-06-28 12:00:00.977,https://traffic.libsyn.com/syntax/Syntax_-_633.mp3,"
In this episode of Syntax, Wes and Scott talk about the benefits and potential drawbacks of using an ORM on your next project, as well as what some of the popular ORMs are.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[00:39](#t=00:39)** Dental cleanings
* **[03:00](#t=03:00)** What's an ORM?
* **[05:51](#t=05:51)** Benefits of using an ORM
* **[12:54](#t=12:54)** Validation in ORM
* **[19:18](#t=19:18)** What about Types?
* **[23:44](#t=23:44)** Popular ORMs
* [Prisma](https://www.prisma.io/)
* [Sequelize](https://sequelize.org/)
* [Objection.js](https://vincit.github.io/objection.js/)
* [Knex.js](https://knexjs.org/)
* [DrizzleORM - next gen TypeScript ORM](https://orm.drizzle.team/)
* [Mongoose ODM v7.3.1](https://mongoosejs.com/)
* [TypeORM](https://typeorm.io/)
* [waterline.js](https://waterlinejs.org/)
* **[42:41](#t=42:41)** Potential downsides to using an ORM
* **[45:53](#t=45:53)** Database schemas
* **[52:30](#t=52:30)** Hooks or events
* **[55:27](#t=55:27)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [I Think You Should Leave with Tim Robinson](https://www.netflix.com/ca/title/80986854)
* Wes: [Wise, Formerly TransferWise: Online Money Transfers](https://wise.com/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",9effa4b58b249e719bbae8ba9a9fae8b6958be5939d72d9bbede982fe3d64fc8,wtf-is-an-orm,/shows/633 - ORM Tasty.md,2023-10-16 20:08:26.962,2023-10-27 15:58:19.382,TASTY
syntax_podcast_show_00634,634,Supper Club × Messaging Queues and Workers with Armin Ronacher,2023-06-30 12:00:00.605,https://traffic.libsyn.com/syntax/Syntax_-_634.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Armin Ronacher about his contributions to open source, queues and messaging in apps, scaling up a queue, and how it all works at Sentry.

## Show Notes

* **[00:35](#t=00:35)** Welcome
* **[01:49](#t=01:49)** Who is Armin Ronacher?
* [Armin Ronacher](https://en.wikipedia.org/wiki/Armin_Ronacher)
* [mitsuhiko (Armin Ronacher)](https://github.com/mitsuhiko)
* [Armin Ronacher (@mitsuhiko)](https://twitter.com/mitsuhiko)
* [Armin Ronacher](http://armin.ronacher.eu/)
* [Armin Ronacher](https://www.linkedin.com/in/arminronacher/?originalSubdomain=at)
* [Apache Kafka](https://kafka.apache.org/)
* **[04:11](#t=04:11)** What are queues and what are they used for?
* **[08:02](#t=08:02)** Do you listen or poll for updates in the queue?
* **[12:49](#t=12:49)** Does this help when a provider goes down?
* **[18:31](#t=18:31)** How do you architect a queue?
* **[20:20](#t=20:20)** How does it scale up?
* **[27:05](#t=27:05)** How does Sentry manage all the data flowing in from events?
* [Redis Message Broker | Redis Enterprise](https://redis.com/solutions/use-cases/messaging/)
* [Messaging that just works — RabbitMQ](https://www.rabbitmq.com/)
* [Using RabbitMQ — Celery 5.3.1 documentation](https://docs.celeryq.dev/en/stable/getting-started/backends-and-brokers/rabbitmq.html)
* **[33:45](#t=33:45)** How do you visualize the data?
* **[37:15](#t=37:15)** Edge case that Sentry had to fix
* **[40:22](#t=40:22)** How are you using Rust?
* [Rust Programming Language](https://www.rust-lang.org/)
* **[43:32](#t=43:32)** Why is Python so popular in the AI space?
* **[45:17](#t=45:17)** What do you think about JavaScript on the server?
* **[48:02](#t=48:02)** Supper Club questions
* **[50:44](#t=50:44)** How do you stay motivated with programming?

## ××× SIIIIICK ××× PIIIICKS ×××

* [Bilderbuch](https://bilderbuch-musik.at/home)
* [Bilderbuch on Spotify](https://open.spotify.com/artist/2ErWLckuGFl84nGmg5fwyG?si=oG2uwmcMTy2b7jHi0CMXVQ)

## Shameless Plugs

* [Rye - An Experimental Package Management Solution for Python](https://github.com/mitsuhiko/rye)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",81bb9a6c94016eb28890b6a40259913d3fbcf5acf6744fc7941b1287c4434d43,supper-club-messaging-queues-and-workers-with-armin-ronacher,/shows/634 - Supper.md,2023-10-16 20:08:27.043,2023-10-27 15:58:19.428,SUPPER
syntax_podcast_show_00635,635,Lightning CSS,2023-07-03 12:00:00.576,https://traffic.libsyn.com/syntax/Syntax_-_635.mp3,"
In this Hasty Treat, Scott and Wes talk about what Lightning CSS is, how it works, and why you should consider using it in your projects.

## Show Notes

* **[00:25:22](#t=00:25:22)** Welcome
* **[01:04:11](#t=01:04:11)** Overview of Lightning CSS
* [Lightning CSS](https://lightningcss.dev/)
* [Devon Govett (@devongovett)](https://twitter.com/devongovett)
* [Parcel](https://parceljs.org/)
* **[04:56:11](#t=04:56:11)** What's in Lightning CSS?
* [OKLCH](https://oklch.com/)
* **[21:39:11](#t=21:39:11)** CSS Layers
* **[24:57:14](#t=24:57:14)** Text decoration

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",1c4e45472c99c5946c3239f13bbce9c0bcf9eb3d7ef3a1dbb1625f9bfc3db499,lightning-css,/shows/635 - Hasty Lightning CSS.md,2023-10-16 20:08:27.225,2023-10-27 15:58:19.538,HASTY
syntax_podcast_show_00636,636,What are Headless Components?,2023-07-05 12:00:00.349,https://traffic.libsyn.com/syntax/Syntax_-_636.mp3,"
In this episode of Syntax, Wes and Scott talk about what headless components are, the why and when to use headless components, and how to best implement them.

## Show Notes

* **[00:07](#t=00:07)** Welcome
* **[02:33](#t=02:33)** Tailwind Connect
* [Tailwind Connect 2023 | Tailwind CSS Live Event](https://connect.tailwindcss.com/)
* **[04:37](#t=04:37)** Headless component overview
* [Downshift](https://www.downshift-js.com/)
* [Headless UI](https://headlessui.com/)
* **[06:57](#t=06:57)** A country dropdown component
* **[12:52](#t=12:52)** Possibly like Svelte actions?
* **[18:46](#t=18:46)** What do headless components provide?
* **[19:13](#t=19:13)** Examples of headless component projects
* [Microsoft Edge Demo](https://microsoftedge.github.io/Demos/selectmenu/)
* **[24:24](#t=24:24)** How does this compare to web components?
* [Tanstack Table](https://tanstack.com/table/)
* [Tanstack Virtual](https://tanstack.com/virtual/)
* **[26:29](#t=26:29)** Checking out Shoelace
* [Shoelace](https://shoelace.style/)
* **[28:42](#t=28:42)** Figma announcements
* [What's New in Figma](https://www.figma.com/whats-new/)
* **[31:21](#t=31:21)** What does headless mean?
* **[36:24](#t=36:24)** SIIIIICK ××× PIIIICKS ×××
* **[41:20](#t=41:20)** AI Voices

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Hacker News Recap](https://hackernewsrecap.buzzsprout.com/) /[Hacker News Recap on Apple Podcasts](https://podcasts.apple.com/us/podcast/hacker-news-recap/id1681571416)
* Wes: [Calipers](https://amzn.to/44ikUz3)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",b875d83c993958b46cb00f72c98dbcd12a3c749db5b6fd09f5933c19b0a932f9,what-are-headless-components,/shows/636 - Tasty.md,2023-10-16 20:08:27.273,2023-10-27 15:58:19.590,TASTY
syntax_podcast_show_00637,637,Supper Club × Cloudinary with Colby Fayock,2023-07-07 12:00:00.993,https://traffic.libsyn.com/syntax/Syntax_-_637.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Colby Fayock about Cloudinary's new AI tools, media flow, removing backgrounds, using AI for video templates, and Colby's stack for creating YouTube content.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:11](#t=01:11)** Who is Colby Fayock?
* [ColbyFayock.com](https://www.colbyfayock.com/)
* [Colby Fayock (@colbyfayock)on Twitter](https://twitter.com/colbyfayock)
* [ColbyFayock - Twitch](https://www.twitch.tv/colbyfayock)
* [colbyfayock on GitHub](https://github.com/colbyfayock)
* [Colby Fayock (@colbyfayock) • Instagram](https://www.instagram.com/colbyfayock/)
* **[01:57](#t=01:57)** What is Cloudinary?
* [Image and Video Upload, Storage, Optimization and CDN](https://cloudinary.com/)
* **[03:03](#t=03:03)** What's with the space jellyfish?
* **[03:52](#t=03:52)** How is Cloudinary using AI for the web?
* [Developer resources for using images and videos in your apps](https://cloudinary.com/developers)
* **[09:54](#t=09:54)** What is media flow?
* **[13:00](#t=13:00)** Who is the target audience for AI tools from Cloudinary?
* **[17:03](#t=17:03)** Removing backgrounds
* [Remove Background from Image for Free – remove.bg](https://www.remove.bg/)
* [iPhone Messages stickers: How to make and use them - 9to5Mac](https://9to5mac.com/2023/06/14/how-to-make-use-iphone-messages-stickers-ios-17/)
* **[21:14](#t=21:14)** Cloudinary's Video API
* [ascorbic/unpic-img: Multi-framework responsive image component](https://github.com/ascorbic/unpic-img)
* **[22:44](#t=22:44)** Function calling in OpenAI
* **[26:22](#t=26:22)** How do you deal with the random generation of AI?
* **[29:00](#t=29:00)** What are the community SDKs for Cloudinary?
* **[37:04](#t=37:04)** What's your process for creating content for YouTube?
* **[42:49](#t=42:49)** Supper Club Questions
* [Open Broadcaster Software | OBS](https://obsproject.com/)
* [Facecam Pro – Elgato](https://www.elgato.com/us/en/p/facecam-pro)
* [Recut — Automatic Video Editor](https://getrecut.com/)
* [Night Owl - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=sdras.night-owl)
* [iTerm2 - macOS Terminal Replacement](https://iterm2.com/)
* [Oh My Zsh - a delightful & open source framework for Zsh](https://ohmyz.sh/)
* **[51:40](#t=51:40)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Ready To Drink Cold Brew Coffee | Trader Joe's](https://www.traderjoes.com/home/products/pdp/ready-to-drink-cold-brew-coffee-062611)

## Shameless Plugs

* [Colby Fayock on YouTube](https://www.youtube.com/colbyfayock)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",6bf33804b048633a766f8fee598ac7c6ca80ac5538ef82e2335907dc2d980b0f,supper-club-cloudinary-with-colby-fayock,/shows/637 - Supper.md,2023-10-16 20:08:27.316,2023-10-27 15:58:19.647,SUPPER
syntax_podcast_show_00638,638,Roundup - Sick AI Tools For Developers,2023-07-10 12:00:00.829,https://traffic.libsyn.com/syntax/Syntax_-_638.mp3,"
In this Hasty Treat, Scott and Wes talk about various AI tools for developers that are available.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:36](#t=01:36)** AI creeping into real life
* **[04:03](#t=04:03)** Cody AI
* [Cody - Business AI Employee Trained on Your Knowledge Base](https://meetcody.ai/)
* [Sourcegraph](https://sourcegraph.com/search)
* **[06:24](#t=06:24)** How AI coding help works
* **[09:57](#t=09:57)** Amazon Code Whisper
* [AI Code Generator - Amazon CodeWhisperer - AWS](https://aws.amazon.com/codewhisperer/)
* [Amazon Code Whisperer VS Github Copilot](https://www.youtube.com/watch?v=p4Sc_-2yJHs)
* **[10:44](#t=10:44)** Copilot Labs
* [GitHub Next](https://githubnext.com/)
* [GitHub Next | GitHub Copilot Labs](https://githubnext.com/projects/copilot-labs/)
* **[14:25](#t=14:25)** LintRule
* [Lintrule](https://www.lintrule.com/)
* **[18:06](#t=18:06)** Open Commit
* [di-sukharev/opencommit: Auto-generate impressive commits with AI in 1 second](https://github.com/di-sukharev/opencommit)
* **[24:03](#t=24:03)** Code Geex
* [CodeGeeX - A Multilingual Code Generation Tool - CodeGeeX](https://codegeex.cn/)
* [Ghostwriter - Code faster with AI - Replit](https://replit.com/site/ghostwriter)
* [Meaningful Code Tests for Busy Devs | CodiumAI](https://www.codium.ai/)
* **[30:20](#t=30:20)** Tab9 and Kite
* [AI assistant for software developers | Tabnine](https://www.tabnine.com/)
* [Potluck - Web components × Gear × Docker × Web Dev Frameworks × Golden Handcuffs × Browser Testing × SSR React × Code Prediction × More! — Syntax Podcast 364](https://syntax.fm/show/364/potluck-web-components-gear-docker-web-dev-frameworks-golden-handcuffs-browser-testing-ssr-react-code-prediction-more)
* **[33:06](#t=33:06)** Sloppy prompt example

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",40dee08fe2846670cc1730b16e293315970d0222a72c1bf6b695b219dd084644,roundup-sick-ai-tools-for-developers,/shows/638 - Hasty.md,2023-10-16 20:08:27.469,2023-10-27 15:58:19.778,HASTY
syntax_podcast_show_00639,639,Stump’d × JavaScript × GraphQL × Memory Safety × Web History,2023-07-12 12:00:00.347,https://traffic.libsyn.com/syntax/Syntax_-_639.mp3,"
In this episode of Syntax, Wes and Scott try to stump each other with questions about JavaScript, HTTP status error codes, memory safety, and a bit of web history thrown in.

## Show Notes

* **[00:11:07](#t=00:11:07)** Welcome
* [Displaced Gamers](https://www.youtube.com/c/DisplacedGamers/)
* **[00:46:00](#t=00:46:00)** In which year was JavaScript introduced?
* **[02:59:16](#t=02:59:16)** What status code is returned by server when a resource isn't found?
* **[03:32:00](#t=03:32:00)** Which http status code indicates the client must authenticate itself?
* **[04:34:17](#t=04:34:17)** What is a pseudo class and give an example?
* **[05:15:11](#t=05:15:11)** What JavaScript function allows you to delay the execution of a function?
* **[06:02:06](#t=06:02:06)** Who first proposed using separate style sheet language for the web?
* **[08:08:14](#t=08:08:14)** Which of the following statements about JavaScript strict are true?
* **[08:50:11](#t=08:50:11)** What is event driven programming in Node.js?
* **[10:26:08](#t=10:26:08)** In GraphQL, how do you mark a field as deprecated?
* **[10:47:24](#t=10:47:24)** How does xHTML differ from HTML?
* **[11:48:21](#t=11:48:21)** Which of the following statements is true about objects in JavaScript?
* **[13:20:19](#t=13:20:19)** What is a type erase in TypeScript?
* **[14:21:23](#t=14:21:23)** In TypeScript which syntax can be used to define a user defined type guard?
* **[16:02:12](#t=16:02:12)** What is a closure in JavaScript?
* **[17:40:00](#t=17:40:00)** Which node.js module provides asynchronus file I/O?
* **[18:54:08](#t=18:54:08)** What does memory safety mean?
* **[21:57:11](#t=21:57:11)** What does http2 introduce to improve speed?
* **[23:58:05](#t=23:58:05)** What are strategies for optimizing HTML5 video?
* **[26:28:11](#t=26:28:11)** Which of the following is not a correct way to create a new object?
* **[28:13:20](#t=28:13:20)** What is the difference between function declaration and function expression?
* **[30:49:11](#t=30:49:11)** What is the value of this inside an arrow function defined in a non-arrow function?
* **[31:22:11](#t=31:22:11)** What is a type guard?
* **[33:03:11](#t=33:03:11)** What is the order of execution in JavaScript?
* **[35:11:01](#t=35:11:01)** Which version of ecmascript was scrapped?
* **[39:41:00](#t=39:41:00)** What is the result of the following comparison in JavaScript?
* **[41:37:21](#t=41:37:21)** What were the major criticisms of CSS in it's early days?
* **[46:48:10](#t=46:48:10)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Projector](https://www.amazon.com/dp/B09R4HYV1X?psc=1&linkCode=sl1&tag=leveluptuts01-20&linkId=de49f8b0a8132a0d5c0fe05154f4c4ee&language=en_US)
* Wes: [USB plug](https://www.amazon.ca/dp/B09R9RMV79?psc=1&linkCode=sl1&tag=isi777-20&linkId=e3fd20e6db40f0279efa3e3696cc3f28&language=en_CA&ref_=as_li_ss_tl)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",0af1735d2f42b968ea2559c2a709875bc6182855ddf079b0ef83fa8769ee3b12,stump-d-javascript-graphql-memory-safety-web-history,/shows/639 - Tasty Stumpd.md,2023-10-16 20:08:27.517,2023-10-27 15:58:19.832,TASTY
syntax_podcast_show_00640,640,Supper Club × val.town with Steve Krouse,2023-07-14 12:00:00.056,https://traffic.libsyn.com/syntax/Syntax_-_640.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Steve Krouse about val.town, what it is, his philosophies on teaching people to code, the tech stack for val.town, and the benefits of inspiring kids to learn to code.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:27](#t=01:27)** Who is Steve Krouse?
* [Steve Krouse](https://stevekrouse.com/)
* [Future of Coding](https://futureofcoding.org/)
* [stevekrouse (Steve Krouse) · GitHub](https://github.com/stevekrouse)
* [Steve Krouse (@stevekrouse) on Twitter](https://twitter.com/stevekrouse)
* [Coding Classes for Kids & Teens | Coding for Kids | The Coding Space](https://www.thecodingspace.com/)
* **[03:06](#t=03:06)** What is Val.town?
* [Val Town](https://www.val.town/pricing)
* **[08:35](#t=08:35)** Where did the inspiration for social dev environments come from?
* **[12:52](#t=12:52)** WYSIWYG code vs being code first
* **[16:30](#t=16:30)** How does val.town inspire people?
* **[20:26](#t=20:26)** How do you prevent people abusing val.town?
* **[24:57](#t=24:57)** What's the UI story for snippets on val.town?
* **[27:31](#t=27:31)** Do you plan to support express?
* **[29:03](#t=29:03)** What's the tech stack behind the front end of val.town?
* **[30:35](#t=30:35)** What's the tech stack for the back end of val.town?
* **[34:37](#t=34:37)** How do you measure for pricing?
* **[37:07](#t=37:07)** Who is using val.town?
* **[42:00](#t=42:00)** What's your methodology for teaching kids to code?
* **[47:44](#t=47:44)** Supper Club questions
* [GitHub - pomdtr/sunbeam: Generate powerful TUIs from simple scripts written in any language.](https://github.com/pomdtr/sunbeam)
* [Deno — A modern runtime for JavaScript and TypeScript](https://deno.land/)
* [A Small Matter of Programming](https://mitpress.mit.edu/9780262140539/a-small-matter-of-programming/)
* [The Unison language](https://www.unison-lang.org/)
* [CodeMirror](https://codemirror.net/)
* [A Small Matter of Programming: Perspectives on End User Computing](https://www.amazon.ca/s?k=A+Small+Matter+of+Programming:+Perspectives+on+End+User+Computing&linkCode=gs3&linkId=a4276584f94c53442569757002ff7fe2&tag=isi777-20)
* [Stripe Press — Ideas for progress](https://press.stripe.com/)
* [pomdtr/sunbeam: Generate powerful TUIs from simple scripts written in any language.](https://github.com/pomdtr/sunbeam)
* [Seymour Papert](https://en.wikipedia.org/wiki/Seymour_Papert)
* [woofjs.com](https://woofjs.com/)
* [Bret Victor](https://en.wikipedia.org/wiki/Bret_Victor)
* [Welcome | Future of Coding](https://futureofcoding.org/)
* [Tom MacWright (@tmcw)](https://twitter.com/tmcw)
* **[55:54](#t=55:54)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [SwitchBot Wi-Fi Smart Lock](https://www.amazon.ca/dp/B0B155T8QM?crid=1QGM6LSDYF8IR&keywords=switchbot+lock&sprefix=switchbot+loc,aps,116&language=en_US&sr=8-4&linkCode=gs2&linkId=9da52a90625d3d2fabe94ba5cfef40bf&tag=isi777-20)

## Shameless Plugs

* [Val Town](https://www.val.town/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",f15d3369ffe12918b77990e2e7cbddb4eb18b6f5d6e460027e04d66a32a3b2b4,supper-club-val-town-with-steve-krouse,/shows/640 - Supper Steve.md,2023-10-16 20:08:27.557,2023-10-27 15:58:19.897,SUPPER
syntax_podcast_show_00641,641,Help Me Help You - How To Ask For Help,2023-07-17 12:00:00.139,https://traffic.libsyn.com/syntax/Syntax_-_641.mp3,"
In this Hasty Treat, Scott and Wes talk about how to get help for a bug or error you're getting in someone else's code.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:54](#t=01:54)** Building a reproduction of the error
* **[03:55](#t=03:55)** Creating a gist
* [Gist](https://gist.github.com/)
* **[04:48](#t=04:48)** Be responsive. Be ready.
* **[08:03](#t=08:03)** Where do you go first for support?
* **[09:44](#t=09:44)** Search for your issue first
* [GitHub Issues](https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues)
* **[10:53](#t=10:53)** Be nice

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",f257523c2aff6074a8f59d8e4a4cc836c897211ae185aaf4973337fc3a17269e,help-me-help-you-how-to-ask-for-help,/shows/641 - Hasty helper.md,2023-10-16 20:08:27.717,2023-10-27 15:58:19.990,HASTY
syntax_podcast_show_00642,642,Potluck × CSS Variables in React × JS Notebooks × Selling a Domain,2023-07-19 12:00:00.829,https://traffic.libsyn.com/syntax/Syntax_-_642.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about Prisma, CSS variables in React components, JS notebooks, transcribing podcasts, keeping up with dev skills, selling a domain, and more.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[00:42](#t=00:42)** Harassed by a big truck
* **[03:20](#t=03:20)** Corrections and omissions
* [Syntax 627 - Electronics for Beginners](https://syntax.fm/show/627/electronics-for-beginners)
* **[05:57](#t=05:57)** Should I be using $executeRawUnsafe with Prisma?
* **[09:48](#t=09:48)** unset and initial
* **[11:54](#t=11:54)** true and false outside ARIA attributes
* **[14:56](#t=14:56)** Is there a way to modify the CSS variables from the React component?
* **[18:58](#t=18:58)** How do you feel about the JS notebooks landscape?
* [Jupyter](https://jupyter.org/)
* [yunabe/tslab: Interactive JavaScript and TypeScript programming with Jupyter](https://github.com/yunabe/tslab)
* [Val Town](https://www.val.town/)
* [The notes app for your working memory - Stashpad](https://www.stashpad.com/)
* [Obsidian - Sharpen your thinking](https://obsidian.md/)
* [Light Table](http://lighttable.com/)
* **[27:39](#t=27:39)** Is it possible to transcribe your podcasts?
* [World's Most Powerful Speech-to-Text API | Deepgram](https://deepgram.com/)
* **[29:05](#t=29:05)** Any tips for keeping my developer skills up without burning out?
* **[36:35](#t=36:35)** Any advice for selling a domain?
* [Escrow.com | Never buy or sell online without using Escrow.com.](https://www.escrow.com/)
* **[42:13](#t=42:13)** How do you update and future-proof project dependencies?
* [Syntax 425 - Updating Project Dependencies](https://syntax.fm/show/425/updating-project-dependencies)
* **[47:14](#t=47:14)** When I write TypeScript code, I always wonder if it's a generally good practice to use Type-Only import when importing types?
* **[53:54](#t=53:54)** How would you go about conditional wrapper tags in Astro, Svelte or React?
* **[56:07](#t=56:07)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Ancient Architects](https://www.youtube.com/@AncientArchitects)
* Wes: [Small Rig](https://amzn.to/3NTviaX)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",9a4ff25154379faaa00b683fd9ee769853c9662d5a0cf0d9671c1cc356288bae,potluck-css-variables-in-react-js-notebooks-selling-a-domain,/shows/642 - Tasty potluck.md,2023-10-16 20:08:27.760,2023-10-27 15:58:20.044,TASTY
syntax_podcast_show_00643,643,"Supper Club × WASM, Fastly Edge, and Polyfill.io with Jake Champion",2023-07-21 12:00:00.938,https://traffic.libsyn.com/syntax/Syntax_-_643.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Jake Champion about his work with Fastly and Polyfill, the difference between WASI and WASM, what Winter CG is, and what makes Fastly different.

## Show Notes

* **[00:35](#t=00:35)** Welcome
* **[02:06](#t=02:06)** Who is Jake Champion?
* [Jake (@JakeDChampion)](https://twitter.com/jakedchampion)
* [JakeChampion on GitHub](https://github.com/JakeChampion)
* **[04:31](#t=04:31)** How long as Polyfill been around?
* **[06:11](#t=06:11)** What is Fastly?
* [Fastly](https://www.fastly.com/)
* [Polyfill](https://Polyfill.io)
* [WASMTime](https://wasmtime.dev/)
* [SpiderMonkey JavaScript/WebAssembly Engine](https://spidermonkey.dev/)
* **[12:09](#t=12:09)** What are people running on the edge with Fastly?
* **[16:29](#t=16:29)** What is Winter CG compliance?
* [Winter CG proposal](https://github.com/wintercg/proposal-common-minimum-api)
* **[17:55](#t=17:55)** What about node API's being in platforms
* **[21:18](#t=21:18)** What is WASI vs WASM?
* **[24:37](#t=24:37)** Who is Web Assembly for?
* **[31:34](#t=31:34)** Is there anything WASM is not good for?
* **[41:39](#t=41:39)** What makes the Fastly runtime different from others
* [Hono](https://hono.dev/)
* [Smashing Mag - Web Workers](https://www.smashingmagazine.com/2021/06/web-workers-2021/)
* [Worker Tools](https://workers.tools)
* **[47:07](#t=47:07)** Supper Club questions
* [iTerm2](https://iterm2.com/)
* [Zsh for Humans](https://github.com/romkatv/zsh4humans)
* **[50:26](#t=50:26)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Luther TV Series](https://www.imdb.com/title/tt1474684/)
* [Forrest Gump](https://www.imdb.com/title/tt0109830/?ref_=nv_sr_srsg_1_tt_5_nm_3_q_Forest%2520Gump)

## Shameless Plugs

* [Fiddle on Fastly](https://fiddle.fastly.dev/)
* [js-compute](https://github.com/fastly/js-compute-runtime)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",3727354221a30197385ee4c31b02fb77b67f8f445ba25d203b95b2c5c23993e7,supper-club-wasm-fastly-edge-and-polyfill-io-with-jake-champion,/shows/643 - Supper with Jake.md,2023-10-16 20:08:27.795,2023-10-27 15:58:20.095,SUPPER
syntax_podcast_show_00644,644,"User Feedback UI - Toasts, Flash, Validation",2023-07-24 12:00:00.959,https://traffic.libsyn.com/syntax/Syntax_-_644.mp3,"
In this Hasty Treat, Scott and Wes talk about toast messages for validation, errors, confirmations, and more.

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[01:04](#t=01:04)** Why use these types of notifications
* **[03:34](#t=03:34)** Old school checking stories
* **[05:35](#t=05:35)** What kinds of toast messages are there?
* **[10:02](#t=10:02)** Why toast?
* **[11:38](#t=11:38)** Best practices for toast messages
* **[17:09](#t=17:09)** Timeouts and manual close auto close
* **[19:38](#t=19:38)** Multiple messages stacking on top of each other
* **[22:56](#t=22:56)** Using a toast library
* [Building a toast component](https://web.dev/building-a-toast-component/)
* [react-hot-toast - The Best React Notifications in Town](https://react-hot-toast.com/)
* [Real-time notification system for products | MagicBell](https://www.magicbell.com/)
* **[28:29](#t=28:29)** Form validation
* [Form validation with HTML5 and JavaScript](https://www.freecodecamp.org/news/form-validation-with-html5-and-javascript/)
* **[33:36](#t=33:36)** HTML inputs

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",bc4244af49a4c1952d838fa4f0f6e366d5e00010433668e9a6f26ff19d12ec8d,user-feedback-ui-toasts-flash-validation,/shows/644 - Hasty Toast.md,2023-10-16 20:08:27.899,2023-10-27 15:58:20.197,HASTY
syntax_podcast_show_00645,645,"Polyfills, Transpiling and Monkey Patching",2023-07-26 12:00:00.235,https://traffic.libsyn.com/syntax/Syntax_-_645_new.mp3,"
In this episode of Syntax, Wes and Scott talk about what polyfills, transpiling, and monkey patching mean, how and when to do it, and libraries that can help you out.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:07](#t=01:07)** Toast follow up
* **[02:45](#t=02:45)** What are transpiling, ponyfill, polyfill, and monkey patching
* [TC39 Proposals](https://github.com/tc39/proposals)
* [Pretty excited about the new JavaScript non-mutating array methods. Currently in stage 3](https://twitter.com/wesbos/status/1593271021557239809)
* **[11:18](#t=11:18)** Transpiling unsupported CSS
* **[15:11](#t=15:11)** Polyfills
* [Popover polyfill](https://github.com/oddbird/popover-polyfill/blob/main/src/popover.ts)
* **[19:22](#t=19:22)** Polyfilling CSS
* **[21:06](#t=21:06)** HTML polyfills
* **[27:47](#t=27:47)** How to transpile and polyfill
* [Babel](https://babeljs.io/)
* [TypeScript: JavaScript With Syntax For Types](https://www.typescriptlang.org/)
* [CoffeeScript](https://coffeescript.org/)
* [Civet](https://civet.dev/)
* [cronn/jsxtransformer: Pipeline for transforming JSX files using Babel.js and Uglify.js](https://github.com/cronn/jsxtransformer)
* [Svelte • Cybernetically enhanced web apps](https://svelte.dev/)
* [Polyfill.io](https://polyfill.io/v3/)
* [core-js - npm](https://www.npmjs.com/package/core-js)
* **[35:46](#t=35:46)** Shiv and shims
* [Shim vs Shiv](https://stackoverflow.com/questions/14429061/html5-shim-vs-shiv)
* **[38:16](#t=38:16)** Monkey patching
* **[49:08](#t=49:08)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Cable sleeve](https://amzn.to/44vKgcW)
* Wes: [Air Purifier](https://www.meross.com/en-gc/smart-air-purifier/homekit-air-purifier/112)
* [AliExpress](https://www.aliexpress.com/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",df06ca69faf417962ab072617dd8c67bf75329da706c56011dde6e1d77c9cb09,polyfills-transpiling-and-monkey-patching,/shows/645 - Tasty.md,2023-10-16 20:08:27.952,2023-10-27 15:58:20.265,TASTY
syntax_podcast_show_00646,646,"Supper Club × Email Sending, Spam, DMARC, SPF, Styling, and more with Andris Reinman",2023-07-28 12:00:00.686,https://traffic.libsyn.com/syntax/Syntax_-_646.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Andris Reinman about his work on all things email - spam, DMARC, SPF, why there's no good CSS in email, and his current project: Email Engine.

## Show Notes

* **[00:36](#t=00:36)** Welcome
* **[01:56](#t=01:56)** Introducing Andris Reinman
* [Andris Reinman on GitHub](https://github.com/andris9)
* [Andris Reinman (@andrisreinman)](https://twitter.com/andrisreinman)
* [Nodemailer :: Nodemailer](https://nodemailer.com/about/)
* **[04:34](#t=04:34)** Why is email so difficult?
* [Free DMARC Monitoring from Postmark](https://dmarc.postmarkapp.com/)
* [ConvertKit: The creator marketing platform](https://convertkit.com/)
* **[09:48](#t=09:48)** What has changed in email?
* **[10:52](#t=10:52)** What are DMARK, SPF and BIMI?
* **[18:48](#t=18:48)** Is Mailtrain an open source alternative to Mailchimp?
* [Mailtrain-org/mailtrain: Self hosted newsletter app](https://github.com/Mailtrain-org/mailtrain)
* **[22:52](#t=22:52)** Why can't we use CSS in email?
* **[29:05](#t=29:05)** Why is email so expensive?
* **[32:39](#t=32:39)** How do you keep your emails out of the spam folder?
* **[35:42](#t=35:42)** What is Email Engine?
* [EmailEngine Email API](https://emailengine.app/)
* **[40:16](#t=40:16)** Is Email Engine self hosted?
* **[41:01](#t=41:01)** How does Ethereal email work?
* [Ethereal Email](https://ethereal.email/)
* **[46:16](#t=46:16)** What email client do you use?
* **[49:44](#t=49:44)** Are any email clients harder to send to?
* **[55:23](#t=55:23)** Supper Club questions
* [iTerm2 - macOS Terminal Replacement](https://iterm2.com/)
* **[59:29](#t=59:29)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Programming Internet Email: Mastering Internet Messaging Systems: Wood, David: 9781565924796: Books - Amazon.ca](https://www.amazon.ca/dp/1565924797?crid=2GCF7943U1NWA&keywords=programming+internet+email&sprefix=programming+internet+email,aps,136&language=en_US&sr=8-2&linkCode=gs2&linkId=37abb4935d4968e684fb8d17ca29e988&tag=isi777-20)

## Shameless Plugs

* [EmailEngine Email](https://emailengine.app/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",fdfd9064ded2ed67f3ee1c1f4776f3a2f2211e77ace4792f3be328d60d7d7fe4,supper-club-email-sending-spam-dmarc-spf-styling-and-more-with-andris-reinman,/shows/646 - Supper.md,2023-10-16 20:08:27.989,2023-10-27 15:58:20.318,SUPPER
syntax_podcast_show_00647,647,Rust for JavaScript Developers - Node vs Rust Concepts,2023-07-31 12:00:00.384,https://traffic.libsyn.com/syntax/Syntax_-_647.mp3,"
In this Hasty Treat, Scott and Wes talk about Rust, and how the concepts might translate for JavaScript developers looking to try writing in Rust.

## Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:08](#t=01:08)** Wes' big beer bottle and Red Green
* [RedGreenTV on YouTube](https://www.youtube.com/@RedGreenTV)
* **[05:03](#t=05:03)** Thrift store finds
* **[06:19](#t=06:19)** Rust in JavaScript
* [TOML: Tom's Obvious Minimal Language](https://toml.io/en/)
* **[11:07](#t=11:07)** Documentation
* [Docs.rs](https://docs.rs/)
* [Practice.rs](https://practice.rs/comments-docs.html)
* **[16:46](#t=16:46)** Memory safety
* **[17:43](#t=17:43)** What about promises in Rust?
* **[19:24](#t=19:24)** Error handling in Rust
* **[27:39](#t=27:39)** What's with the double colon?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",50743f4a60d5feecaa6a5d9f8c5d09cec597ac14a7e05e4611bd449ec844d7af,rust-for-javascript-developers-node-vs-rust-concepts,/shows/647 - Hasty.md,2023-10-16 20:08:28.114,2023-10-27 15:58:20.402,HASTY
syntax_podcast_show_00648,648,"Standard Server JavaScript - Deno, Workers, Bun and More",2023-08-02 12:00:00.908,https://traffic.libsyn.com/syntax/Syntax_-_648.mp3,"
In this episode of Syntax, Wes and Scott talk about JavaScript runtimes available to use, what to consider, and packages to use.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:00](#t=01:00)** Scott's glasses
* **[03:46](#t=03:46)** All the runtimes
* [Bun — A fast all-in-one JavaScript runtime](https://bun.sh/)
* [Edge Functions Supabase Docs](https://supabase.com/docs/guides/functions)
* [Edge Functions Netlify Docs](https://docs.netlify.com/edge-functions/overview/)
* [Deno — A modern runtime for JavaScript and TypeScript](https://deno.land/)
* [Fast and low overhead web framework, for Node.js | Fastify](https://fastify.dev/)
* [What Is Edge Computing? Alibaba](https://www.alibabacloud.com/knowledge/what-is-edge-computing)
* **[05:15](#t=05:15)** A note for anyone new to JavaScript
* **[08:40](#t=08:40)** Winter CG
* [WinterCG](https://wintercg.org/)
* **[11:05](#t=11:05)** Fetch
* [sindresorhus/ky: JavaScript HTTP client based on the browser Fetch API](https://github.com/sindresorhus/ky)
* [website/src/routes/shows/+page.svelte](https://github.com/syntaxfm/website/blob/v2/src/routes/shows/%2Bpage.svelte#L44)
* **[14:53](#t=14:53)** URL
* **[20:02](#t=20:02)** addEVentListener
* [whatwg/fs · Issue #5 · wintercg/proposal-common-minimum-api · GitHub](https://github.com/wintercg/proposal-common-minimum-api/issues/5)
* **[22:53](#t=22:53)** Web streams
* [Web Streams Explained — Syntax Podcast 587](https://syntax.fm/show/587/web-streams-explained)
* **[26:03](#t=26:03)** Structured Clone
* [Structured JSON | Worker Tools](https://workers.tools/structured-json/)
* **[33:43](#t=33:43)** What does JSON 5 do?
* **[34:48](#t=34:48)** Markdown flavors
* **[36:46](#t=36:46)** File
* **[40:32](#t=40:32)** AbortController and AbortSignal
* [DOM Standard](https://dom.spec.whatwg.org/#abortsignal)
* [DOM Standard](https://dom.spec.whatwg.org/#abortcontroller)
* **[42:45](#t=42:45)** Packages for building
* [linkedom - npm](https://www.npmjs.com/package/linkedom)
* **[44:05](#t=44:05)** Honking the Hono.dev
* [Itty Router](https://www.npmjs.com/package/itty-router)
* [Itty Dev](https://itty.dev/)
* [Hono.dev](https://hono.dev/)
* **[55:25](#t=55:25)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Macro Factor](https://macrofactorapp.com/)
* Wes: [CRP Products](https://crpproducts.com/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",5dacce6384603d87bca31a75ab2ac04013e4a6b57e607202436853206defc29d,standard-server-javascript-deno-workers-bun-and-more,/shows/648 - Tasty.md,2023-10-16 20:08:28.151,2023-10-27 15:58:20.446,TASTY
syntax_podcast_show_00649,649,Supper Club × Ryan Florence of Remix,2023-08-04 12:00:00.417,https://traffic.libsyn.com/syntax/Syntax_-_649.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Ryan Florence about Remix, working at Shopify, the history of licensing and pricing, quitting Twitter, the state of React Server components, and more.

## Show Notes

* **[00:35](#t=00:35)** Welcome
* [Ryan Florence](https://ryanflorence.com/)
* [Ryan Florence (@ryanflorence) / X](https://twitter.com/ryanflorence)
* [React Training](https://reacttraining.com/)
* [React Router Docs Moved](https://reacttraining.com/react-router)
* [ryanflorence (Ryan Florence) · GitHub](https://github.com/ryanflorence)
* **[01:42](#t=01:42)** Collarbone update
* **[06:47](#t=06:47)** What is Remix?
* [Remix.run](https://remix.run/)
* **[11:43](#t=11:43)** Server actions
* **[15:33](#t=15:33)** What was the history around licensing?
* **[20:30](#t=20:30)** Open source is weird now
* **[22:21](#t=22:21)** Working with Shopify and Hydrogen
* [Remixing Shopify | Remix](https://remix.run/blog/remixing-shopify)
* [CSS Zen Garden: The Beauty of CSS Design](https://www.csszengarden.com/)
* [The Zen of CSS Design: Visual Enlightenment for the Web: Shea, Dave, Holzschlag, Molly E.: 9780321303479: Amazon.com: Books](https://www.amazon.com/exec/obidos/ASIN/0321303474/mezzoblue-20?&linkCode=sl1&linkId=dfe79f27d8b7dace1e7a26065fcd58c4&language=en_US)
* **[28:04](#t=28:04)** On quitting Twitter
* **[35:33](#t=35:33)** What's coming up with v2 of Remix?
* **[40:30](#t=40:30)** The reality of breaking changes
* **[44:18](#t=44:18)** What's the status of React Server components?
* **[49:46](#t=49:46)** Will Remix ever have React Server components in it?
* **[50:55](#t=50:55)** How should we be fetching our data?
* **[53:04](#t=53:04)** Do you have a wishlist for JSX?
* **[58:45](#t=58:45)** Supper Club questions
* [Strapi - Open source Node.js Headless CMS 🚀](https://strapi.io/)
* [Sidekiq](https://sidekiq.org/)
* [GitHub - i-tu/Hasklig: Hasklig - a code font with monospaced ligatures](https://github.com/i-tu/Hasklig)
* [GitHub - sindresorhus/terminal-snazzy: Elegant Terminal theme with bright colors](https://github.com/sindresorhus/terminal-snazzy)
* **[08:24](#t=08:24)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Minivans

## Shameless Plugs

* [Shopify](https://www.shopify.com/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",3130a2ed18e91b9a3f324512ff1a2dc0f9c2b731a62d0246500097a7ad03983f,supper-club-ryan-florence-of-remix,/shows/649 - Supper.md,2023-10-16 20:08:28.187,2023-10-27 15:58:20.492,SUPPER
syntax_podcast_show_00650,650,Why is Facebook’s HTML + CSS Such a Mess?,2023-08-07 12:00:00.257,https://traffic.libsyn.com/syntax/Syntax_-_650.mp3,"
In this episode of Syntax, Wes and Scott talk about why Threads, Instagram, and all things Facebook have what seems like really messy HTML and CSS?

## Show Notes

* **[00:10](#t=00:10)** Welcome
* [Scott on Threads](https://www.threads.net/@stolinski)
* [Wes on Threads](https://www.threads.net/@wesbos)
* **[00:35](#t=00:35)** Threads has got divs
* **[02:42](#t=02:42)** Tight scoping
* **[09:44](#t=09:44)** Avoids specificity
* **[10:37](#t=10:37)** Dealing with ad blockers and scraping
* **[15:45](#t=15:45)** Divs are free, what's the big deal?
* **[20:19](#t=20:19)** Facebook is tracking everything
* **[27:57](#t=27:57)** React Native

* [Stylex: A Contributor’s Story with Hammad Khalid](https://developers.facebook.com/blog/post/2021/12/14/stylex-contributor-story-hammad-khalid/)
* [Meta Open Source](https://opensource.fb.com/)
* [Tech stack rebuild for a new Facebook.com - Engineering at Meta](https://engineering.fb.com/2020/05/08/web/facebook-redesign/)
* [RF21 – Naman Goel – Rethinking CSS - Introducing Stylex](https://www.youtube.com/watch?v=ur-sGzUWId4)
* [@stylexjs/stylex - npm](https://www.npmjs.com/package/@stylexjs/stylex?activeTab=code)
* [Facebook CSS-in-JS Solution Stylex Introduced at React Finland 2021](https://www.infoq.com/news/2021/10/facebook-css-js-stylex/)
* [Boosts - Arc Boosts](https://arcboosts.com/boosts?page=2)
* [/uses](https://uses.tech/)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",2fa300d48ce0a3a3f0fc3eb613ddfda005dadc4fece62faad0c124aa2b921a28,why-is-facebook-s-html-css-such-a-mess,/shows/650 - Tasty Threads.md,2023-10-16 20:08:28.285,2023-10-27 15:58:20.588,HASTY
syntax_podcast_show_00651,651,Potluck × Is TypeScript Fancy Duct Tape × Back Pain × Cloud Service Rate Limits,2023-08-09 12:00:00.184,https://traffic.libsyn.com/syntax/Syntax_-_651.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about TypeScript just being fancy duct tape, dealing with back pain while coding, rate limits on cloud services, what to use for email provider, is Firebase a legit platform, and more!

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[03:11](#t=03:11)** The Sunday scaries
* **[06:03](#t=06:03)** Is TypeSctipt just a bunch of fancy Duck Tape?
* [Is TypeScript saving us?](https://stackblitz.com/edit/typescript-xddko7?file=index.ts,index.html)
* **[12:29](#t=12:29)** How do you go years into programming without back pain?
* [Hasty Treat - Stretching For Developers with Scott — Syntax Podcast 293](https://syntax.fm/show/293/hasty-treat-stretching-for-developers-with-scott)
* **[23:51](#t=23:51)** Why don’t cloud services provide an option to shut off services when a spending limit is reached?
* [DigitalOcean | Cloud Hosting for Builders](https://www.digitalocean.com/)
* [Vercel: Develop. Preview. Ship. For the best frontend teams](https://vercel.com/)
* **[28:41](#t=28:41)** How do you choose a CSS library for any project?
* [The most advanced responsive front-end framework in the world. | Foundation](https://get.foundation/)
* [960 Grid System](https://960.gs/)
* **[38:26](#t=38:26)** What's happening to Level Up Tuts?
* [Level Up Tutorials - Learn modern web development](https://levelup.video/)
* [Wheels - Skateboard Wheels - 60mm Cali Roll - Shark Wheel](https://sharkwheel.com/wheels/skateboard-wheels/60mm-cali-roll/)
* **[43:43](#t=43:43)** Not a sponsored Yeti spot
* **[45:16](#t=45:16)** What do you do for email hosting?
* [Google Workspace](https://workspace.google.com/lp/business/)
* [TechSoup Canada](https://www.techsoup.ca/more-nonprofit-deals)
* [Proton Mail: Get a private, secure, and encrypted email account](https://proton.me/mail)
* [Outlook](https://outlook.live.com/owa/)
* [Microsoft 365 Plans](https://www.microsoft.com/en-ca/microsoft-365/business/compare-all-microsoft-365-business-products)
* [Scheduling Software Everyone Will Love · SavvyCal](https://savvycal.com/)
* [Synology Photos](https://www.synology.com/en-global/dsm/feature/photos)
* **[50:34](#t=50:34)** Is Firebase ok to run an app long term with?
* [Firebase](https://firebase.google.com/)
* **[58:57](#t=58:57)** Am I wrong to not do productive work intensely?
* **[01:34](#t=01:34)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [MagSafe Charger, Anker 3-in-1 Cube with MagSafe](https://www.amazon.com/dp/B09TT8GZK9?linkCode=sl1&linkId=b868e82b9d8d18e560d2cb96bf83e2d0&language=en_US)
* Wes: [6amLifestyle Headphone Hanger Stand Under Desk](https://www.amazon.ca/dp/B01LL3WG1U?keywords=aluminum+headphone+hook&sprefix=headphone+hook+al,aps,130&language=en_US&sr=8-8&linkCode=gs2&linkId=acb6afc9455dd8a4e8570e525546d42d&tag=isi777-20)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",5f610d62cf15c3484ade79eecd1dc328ce2881439fe1e90a2771f79619027118,potluck-is-typescript-fancy-duct-tape-back-pain-cloud-service-rate-limits,/shows/651 - Tasty Potluck.md,2023-10-16 20:08:28.323,2023-10-27 15:58:20.634,TASTY
syntax_podcast_show_00652,652,Supper Club × Flightcontrol with Brandon Bayer,2023-08-11 12:00:00.455,https://traffic.libsyn.com/syntax/Syntax_-_652.mp3,"
Can you have a Vercel like experience on your own AWS? Scott and Wes talk with Brandon Bayer about Flightcontrol - what it is, how to use it on your app, pricing, and more.

## Show Notes

* **[00:32](#t=00:32)** Welcome
* **[01:28](#t=01:28)** Who is Brandon Bayer?
* [Brandon 🚀 Flightcontrol (@flybayer) / X](https://twitter.com/flybayer?lang=en)
* [Flightcontrol (@Flightcontrolhq) / X](https://twitter.com/flightcontrolhq)
* [Blitz.js - The Missing Fullstack Toolkit for Next.js](https://blitzjs.com/)
* [Flightcontrol — AWS Without Pain](https://www.flightcontrol.dev/)
* [Tailwind Connect 2023 | Tailwind CSS Live Event](https://connect.tailwindcss.com/)
* **[03:00](#t=03:00)** How do you fly?
* **[06:10](#t=06:10)** What is Flightcontrol?
* **[10:00](#t=10:00)** Why doesn't Amazon make it easier?
* **[11:34](#t=11:34)** Which parts of the AWS stack should I use?
* **[15:08](#t=15:08)** Creating the infrastructure
* **[19:01](#t=19:01)** Ongoing deployment
* **[20:05](#t=20:05)** What languages does Flightcontrol support?
* **[23:35](#t=23:35)** How are events or cron handled?
* **[25:24](#t=25:24)** What is Temporal?
* [Open Source Durable Execution Platform | Temporal Technologies](https://temporal.io/)
* **[29:05](#t=29:05)** What are Nixpacks?
* [GitHub - railwayapp/nixpacks: App source + Nix packages + Docker = Image](https://github.com/railwayapp/nixpacks)
* **[35:50](#t=35:50)** How is Flightcontrol priced?
* [How To Get Free AWS Credits - Flightcontrol](https://www.flightcontrol.dev/docs/guides/aws/aws-credits)
* **[44:44](#t=44:44)** How does Flightcontrol help with scaling?
* [Serverless Compute Engine – AWS Fargate – AWS](https://aws.amazon.com/fargate/)
* **[46:11](#t=46:11)** What are your thoughts on ReactJS, Server components?
* **[49:57](#t=49:57)** Supper Club questions
* [Keychron K3 Ultra-slim Wireless Mechanical Keyboard (Version 2)](https://keychron.ca/products/keychron-k3-wireless-mechanical-keyboard)
* [Learn to Code - for Free | Codecademy](https://www.codecademy.com/)
* **[57:20](#t=57:20)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [EAA AirVenture Oshkosh | Oshkosh, Wisconsin | Fly-In & Convention](https://www.eaa.org/airventure)
* [Ko Tao](https://en.wikipedia.org/wiki/Ko_Tao)
* [Ko Lanta Yai](https://en.wikipedia.org/wiki/Ko_Lanta_Yai)

## Shameless Plugs

* [Flightcontrol — AWS Without Pain](https://www.flightcontrol.dev/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",9b6a4dc97fc30cd14d31e5925739bd8e2422d32074d05e7668457458dee5964a,supper-club-flightcontrol-with-brandon-bayer,/shows/652 - Supper.md,2023-10-16 20:08:28.369,2023-10-27 15:58:20.681,SUPPER
syntax_podcast_show_00653,653,JS Fundamentals - Decorators,2023-08-14 12:00:00.681,https://traffic.libsyn.com/syntax/Syntax_-_653.mp3,"
In this Hasty Treat, Scott and Wes talk about whether decorators are finally here, what the uses cases are for decorators, how to define a decorator, and what auto accessor is.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:00](#t=01:00)** Are decorators finally here?
* [TC39 proposal](https://github.com/tc39/proposal-decorators/blob/master/EXTENSIONS.md)
* [How this compares to other versions of decorators](https://github.com/tc39/proposal-decorators#how-does-this-proposal-compare-to-other-versions-of-decorators)
* **[06:47](#t=06:47)** What are use cases for decorators?
* **[10:55](#t=10:55)** How do you define a decorator?
* **[14:20](#t=14:20)** Auto Accessor

on classes

```
@loggged
class C {}
```

on fields

```
class C {
@logged x = 1;
}
```

Auto Accessor

```
class C {
  accessor x = 1;
}
```

sugar for below

```
class C {
  #x = 1; // # means private

  get x() {
    return this.#x;
  }

  set x(val) {
    this.#x = val;
  }
}
```

Can be decorated and decorator can return new get and set and init functions

```
function logged(value, { kind, name }) {
  if (kind === ""accessor"") {
    let { get, set } = value;

    return {
      get() {
        console.log(`getting ${name}`);

        return get.call(this);
      },

      set(val) {
        console.log(`setting ${name} to ${val}`);

        return set.call(this, val);
      },

      init(initialValue) {
        console.log(`initializing ${name} with value ${initialValue}`);
        return initialValue;
      }
    };
  }

  // ...
}
```

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",41751baa4387a28432a219a05377651a8f4de1329516a4b9fead8e19ced412a3,js-fundamentals-decorators,/shows/653 - Decorators.md,2023-10-16 20:08:28.480,2023-10-27 15:58:20.781,HASTY
syntax_podcast_show_00654,654,6 or so New Approved and Proposed JavaScript APIs,2023-08-16 12:00:00.499,https://traffic.libsyn.com/syntax/Syntax_-_654.mp3,"
In this episode of Syntax, Wes and Scott talk about new approved and proposed JavaScript API changes including Promise.withResolvers, .at(), Immutable Array Methods, Array.fromAsync, and more.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[04:55](#t=04:55)** What are we going to cover?
* **[06:10](#t=06:10)** Promise.withResolvers
* **[09:40](#t=09:40)** .at()
* [You probably knew about JavaScript's new .at() method for accessing array items. Did you know it works for strings too?](https://twitter.com/wesbos/status/1684964556542550031)
* [@IAmAndrewLuca](https://twitter.com/iamandrewluca)
* **[15:59](#t=15:59)** Immutable Array Methods
* [Wes Bos: ""🔥 Pretty excited about the new JavaScript non-mutating array methods. Currently in stage 3. .toReversed() .toSorted() .toSpliced() - remove items .with() - replace items](https://twitter.com/wesbos/status/1593271021557239809)
* **[21:48](#t=21:48)** Array.fromAsync
* [Proposal for array.fromAsync](https://github.com/tc39/proposal-array-from-async)
* **[27:15](#t=27:15)** Array Grouping
* [Proposal for Array grouping](https://github.com/tc39/proposal-array-grouping)
* **[31:04](#t=31:04)** Observable Events?
* [Observable Events?](https://github.com/domfarolino/observable)
* **[35:28](#t=35:28)** Import Attributes
* **[39:21](#t=39:21)** v.emplace method
* **[41:15](#t=41:15)** Decorators
* [Proposal for Pattern Matching](https://github.com/tc39/proposal-pattern-matching)
* **[45:42](#t=45:42)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Artifact.news](https://artifact.news/)
* Wes: LED lights for bikes

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",5f75134847f23cd38f530bd1a191ed2fc3885bd5ab7dc26e111e80da841df548,6-or-so-new-approved-and-proposed-javascript-apis,/shows/654 - Tasty.md,2023-10-16 20:08:28.523,2023-10-27 15:58:20.824,TASTY
syntax_podcast_show_00655,655,Supper Club × How Descript Built A Next Gen Video Editor In The Browser With Andrew Lisowski,2023-08-18 12:00:00.942,https://traffic.libsyn.com/syntax/Syntax_-_655.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Andrew Lisowski about working on Descript, web streams vs local storage, using state machines, writing CSS with Radix, monorepos, and more.

## Show Notes

* **[00:35](#t=00:35)** Welcome
* **[01:07](#t=01:07)** What is Descript?
* [Descript | All-in-one video & podcast editing, easy as a doc.](https://www.descript.com/)
* [Work — Sandwich](https://sandwich.co/work/descript-video/)
* **[02:21](#t=02:21)** Who is Andrew Lisowski?
* [Andrew Lisowski (@HipsterSmoothie) / X](https://twitter.com/hipstersmoothie?lang=en)
* [hipstersmoothie.com](https://www.hipstersmoothie.com/)
* [Descript (@DescriptApp) / X](https://twitter.com/DescriptApp)
* [devtools.fm](https://www.devtools.fm/)
* **[04:51](#t=04:51)** How does Descript interact with the webcam?
* **[08:52](#t=08:52)** Web streams vs local first
* [Web Streams Explained — Syntax Podcast 587](https://syntax.fm/show/587/web-streams-explained)
* **[10:06](#t=10:06)** How are you exporting video?
* [GitHub - Yahweasel/libav.js: This is a compilation of the libraries associated with handling audio and video in ffmpeg—libavformat, libavcodec, libavfilter, libavutil, libswresample, and libswscale—for emscripten, and thus the web.](https://github.com/Yahweasel/libav.js/)
* [Riverside.fm - Record Podcasts And Videos From Anywhere](https://riverside.fm/)
* **[14:40](#t=14:40)** How does Descript deal with recording fails?
* **[17:17](#t=17:17)** How does Descript design and build the UI?
* **[19:37](#t=19:37)** What did you like about state machines?
* [XState - JavaScript State Machines and Statecharts](https://xstate.js.org/)
* **[24:12](#t=24:12)** How are you writing your CSS with Radix?
* [Themes – Radix UI](https://www.radix-ui.com/)
* [Home | Open UI](https://open-ui.org/)
* **[30:30](#t=30:30)** How does the marketing site's tech stack compare?
* **[31:44](#t=31:44)** Playwright vs Cypress
* [Fast and reliable end-to-end testing for modern web apps | Playwright](https://playwright.dev/)
* [JavaScript Component Testing and E2E Testing Framework | Cypress](https://www.cypress.io/)
* **[36:26](#t=36:26)** What tech do you use for monorepos?
* **[37:01](#t=37:01)** What's your build tool?
* [Workspaces | Yarn - Package Manager](https://yarnpkg.com/features/workspaces)
* [Turbo](https://turbo.build/)
* [webpack](https://webpack.js.org/)
* **[40:18](#t=40:18)** Moving to the web means moving things to the backend
* **[41:37](#t=41:37)** Descript focuses AI tools on helping creators
* [Eye Contact: AI Video Effect | Descript](https://www.descript.com/eye-contact)
* **[50:50](#t=50:50)** Supper Club questions
* [Topre Switch Mechanical Keyboards](https://mechanicalkeyboards.com/shop/index.php?c=79&l=product_list)
* [REALFORCE | Premium Keyboard, PBT, Capacitive Key Switch](https://www.realforce.co.jp/en/)
* [Iosevka](https://typeof.net/Iosevka/)
* [Github Dark High Contrast - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=hipstersmoothie-public.github-dark-high-contrast)
* **[56:21](#t=56:21)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Lexical](https://lexical.dev/)
* [shadcn/ui](https://ui.shadcn.com/)

## Shameless Plugs

* [devtools.fm](https://www.devtools.fm/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",294fb553ce5832be12d70c05bfec3bf75919002ee694790aa1687fa196806769,supper-club-how-descript-built-a-next-gen-video-editor-in-the-browser-with-andrew-lisowski,/shows/655 - Supper Descript.md,2023-10-16 20:08:28.575,2023-10-27 15:58:20.875,SUPPER
syntax_podcast_show_00656,656,8 Tricks When Using the Fetch() API,2023-08-21 12:00:00.247,https://traffic.libsyn.com/syntax/Syntax_-_656.mp3,"
In this Hasty Treat, Scott and Wes talk about 8 tricks to try when using the Fetch() API.

## Show Notes

* **[00:23](#t=00:23)** Welcome
* **[02:14](#t=02:14)** 1) Stream The Result

```
// Create a new TextDecoder instance
const decoder = new TextDecoder();

// Make the fetch request
fetch('https://api.example.com/streaming-data')
  .then(response => {
    // Check if the response is valid
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }

    // Stream the response data using a TextDecoder
    const reader = response.body.getReader();

    // Function to read the streamed chunks
    function read() {
      return reader.read().then(({ done, value }) => {
        // Check if the streaming is complete
        if (done) {
          console.log('Streaming complete');
          return;
        }

        // Decode and process the streamed data
        const decodedData = decoder.decode(value, { stream: true });
        console.log(decodedData);

        // Continue reading the next chunk
        return read();
      });
    }

    // Start reading the chunks
    return read();
  })
  .catch(error => {
    // Handle errors
    console.log('Error:', error);
  });
  ```

* **[06:05](#t=06:05)** 2) Download Progress
* [Download progress example](https://twitter.com/wesbos/status/1688914467864903684)
* **[09:40](#t=09:40)** 3) Cancel Streams - Abort Controller

```
// Create an AbortController instance
const controller = new AbortController();

// Set a timeout to abort the request after 5 seconds
const timeout = setTimeout(() => {
controller.abort();
}, 5000);

// Fetch request with the AbortController
fetch('https://api.example.com/data', { signal: controller.signal })
```

* **[11:32](#t=11:32)** 4) Testing if JSON is returned
* **[13:18](#t=13:18)** 5) async + await + catch

`const data = await fetch().catch(err => console.log(err));`

* **[14:42](#t=14:42)** 6) to awaited - return error and data at top level

```
const [err, data] = collect(fetch())
if(err) // ....
```

* [await-to-js - npm](https://www.npmjs.com/package/await-to-js)
* **[16:58](#t=16:58)** 7) Dev tools - Copy as fetch
* **[17:54](#t=17:54)** 8) You can programatically create a Request, Response and Headers objects

```
const myRequest = new Request('https://traffic.libsyn.com/syntax/Syntax_-_641.mp3', {
   headers: {
      'Content-Type': 'text/plain',
   }
});

fetch(myRequest)
```

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",8391ff3034cd977ffb7ee91531951e42f32b1de869aeb7217dbb5e4035c9baee,8-tricks-when-using-the-fetch-api,/shows/656 - Hasty Fetch.md,2023-10-16 20:08:28.678,2023-10-27 15:58:20.975,HASTY
syntax_podcast_show_00657,657,Rust for JS Devs — Part 2,2023-08-23 12:00:00.000,https://traffic.libsyn.com/syntax/Syntax_-_657.mp3,"
In this episode of Syntax, Wes and Scott jump into part 2 of their look at Rust for JavaScript developers, including variables in Rust, type systems in Rust, signed and unsigned integers, and more.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[00:43](#t=00:43)** Audio issue bugs
* **[03:17](#t=03:17)** Building decks
* **[06:06](#t=06:06)** Variables in Rust
* [Syntax 647: Rust for JavaScript Developers - Node vs Rust Concepts](https://syntax.fm/show/647/rust-for-javascript-developers-node-vs-rust-concepts)

```
let x = 5;  // x is immutable
let mut x = 5; // x is mutable
const MAX_POINTS: u32 = 100_000; // must be defined at compile time
```

* **[10:42](#t=10:42)** Type System in Rust
* **[15:52](#t=15:52)** Types in Rust
* **[19:06](#t=19:06)** Why does Rust have signed and unsigned integers?
* **[23:35](#t=23:35)** Slicing strings with &str
* **[27:35](#t=27:35)** enum
* **[27:55](#t=27:55)** struct
* **[28:19](#t=28:19)** Vec
* **[29:33](#t=29:33)** HashMap and HashSet
* **[33:00](#t=33:00)** Converting Signed to Unsigned Numbers

```
let unsigned_value: u8 = 200;
let signed_value: i8 = unsigned_value as i8;
```

* **[36:12](#t=36:12)** What’s up with &str?
* **[43:31](#t=43:31)** Rust error messages
* **[45:28](#t=45:28)** What is a Struct?

```
struct User {
   username: String,
    email: String,
    sign_in_count: u64,
    active: bool,
}

// You can create an instance of a struct like this:
let user1 = User {
    email: String::from(""someone@example.com""),
    username: String::from(""someusername123""),
    active: true,
    sign_in_count: 1,
};

impl User {
    fn login(&mut self) {
        self.login_count += 1;
    }
}
```

* **[49:17](#t=49:17)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Thermacell Patio Shield](https://amzn.to/3PZmbXG)
* Wes: [Magnet Phone Mount](https://amzn.to/3OPIHS5)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",317faa734e1f216bbbcbf3cd8c069f38ea004a8d4408ff6127fce544d78a5b8a,rust-for-js-devs-part-2,/shows/657 - Tasty.md,2023-10-16 20:08:28.720,2023-10-27 15:58:21.022,TASTY
syntax_podcast_show_00658,658,Supper Club × Make React 70% Faster! Million.js with 18 Year Old Aiden Bai,2023-08-25 12:28:00.632,https://traffic.libsyn.com/syntax/Syntax_-_658.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Aiden Bai about his work on Million.js that aims to make React a lot faster. How does Million.js make React faster? And most importantly: has Aiden ever used a VCR?

## Show Notes

- **[00:35](#t=00:35)** Welcome
- **[00:57](#t=00:57)** Introducing Aiden Bai
- [Aiden Bai](https://aidenybai.com/)
- [aidenybai on GitHub](https://github.com/aidenybai)
- [@aidenybai on Twitter](https://twitter.com/aidenybai)
- [Aiden Bai on YouTube](https://www.youtube.com/@aidenbai)
- [Million.js](https://million.dev/)
- **[01:57](#t=01:57)** What is Million.js?
- **[03:20](#t=03:20)** How does React do rendering now?
- **[04:31](#t=04:31)** How does Million.js make it faster?
- **[07:37](#t=07:37)** What goes into creating a compiler?
- **[08:24](#t=08:24)** How do you go from learning JavaScript to writing compilers?
- **[11:05](#t=11:05)** Wyze WebRTC stream work
- **[13:13](#t=13:13)** What are you using to benchmark and test?
- [solidjs.com](https://www.solidjs.com/)
- [js-framework-benchmark](https://github.com/krausest/js-framework-benchmark)
- [xkcd: Compiling](https://xkcd.com/303/)
- **[18:19](#t=18:19)** What does a slowly rendering site look like?
- **[23:54](#t=23:54)** How do you handle find on page with large amounts of code?
- **[25:32](#t=25:32)** What does 70% faster with Million.js mean?
- [Hyper™](https://hyper.is/)
- [Warp: Your terminal, reimagined](https://www.warp.dev/)
- **[26:44](#t=26:44)** Why are maps slow?
- [Supper Club × WASM, Fastly Edge, and Polyfill.io with Jake Champion — Syntax Podcast 643](https://syntax.fm/show/643/supper-club-wasm-fastly-edge-and-polyfill-io-with-jake-champion)
- **[28:19](#t=28:19)** Benefits of the Macro API
- **[31:12](#t=31:12)** Does Million.js work across the board?
- **[33:03](#t=33:03)** Does it ever break projects? How do you test Million.js?
- **[35:35](#t=35:35)** How do you keep up on your GitHub issues?
- **[37:40](#t=37:40)** What other areas of tech are you interested in working on?
- [partytown](https://github.com/BuilderIO/partytown)
- **[39:32](#t=39:32)** What was the inspiration for your website?
- **[43:52](#t=43:52)** Supper Club questions
- [Gruvbox with Material Palette](https://github.com/sainnhe/gruvbox-material)
- [iTerm2 - macOS Terminal Replacement](https://iterm2.com/)

## ××× SIIIIICK ××× PIIIICKS ×××

- [Barbie (2023) directed by Greta Gerwig • Reviews, film + cast • Letterboxd](https://letterboxd.com/film/barbie/)
- [Teenage Mutant Ninja Turtles: Mutant Mayhem (2023) directed by Jeff Rowe • Reviews, film + cast • Letterboxd](https://letterboxd.com/film/teenage-mutant-ninja-turtles-mutant-mayhem/)

## Shameless Plugs

- [Million Kitchen Sink](https://sink.million.dev/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",38620752da0739d2f3d9d6796ea70ead671dfc8a961bf8cb3b27eaf08d4caf1f,supper-club-make-react-70-faster-million-js-with-18-year-old-aiden-bai,/shows/658 - supper.md,2023-10-16 20:08:28.766,2023-10-27 15:58:21.067,SUPPER
syntax_podcast_show_00659,659,OG Image Options,2023-08-28 12:00:00.717,https://traffic.libsyn.com/syntax/Syntax_-_659.mp3,"
In this Hasty Treat, Scott and Wes talk about OG images, interesting ways you can work with them, and ways you can work dynamically with them.

## Show Notes

- **[00:11](#t=00:11)** Welcome
- **[02:18](#t=02:18)** What are OG images?
- **[06:19](#t=06:19)** Testing OG images
- [Polypane, The browser for ambitious web developers](https://polypane.app/)
- [Meta Tags — Preview, Edit and Generate](https://metatags.io/)
- [Sharing Debugger - Meta for Developers](https://developers.facebook.com/tools/debug/)
- [Card Validator | Twitter Developers](https://cards-dev.twitter.com/validator)
- **[08:27](#t=08:27)** Creating an OG image
- [vercel/satori: Enlightened library to convert HTML and CSS to SVG](https://github.com/vercel/satori)
- [Open Graph (OG) Image Generation | Vercel Docs](https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation)
- [Introducing OG Image Generation: Fast, dynamic social card images at the Edge – Vercel](https://vercel.com/blog/introducing-vercel-og-image-generation-fast-dynamic-social-card-images)
- **[09:41](#t=09:41)** Dynamically generating OG images
- [wesbos.com/thumbnail/?thumbnail=%2Fstatic%2F0005c028a536c87975eb84ae3d32ae57%2Faeron.jpg&title=Uses&url=https%3A%2F%2Fwesbos.com%2Fuses](https://wesbos.com/thumbnail?thumbnail=/static/0005c028a536c87975eb84ae3d32ae57/aeron.jpg&title=Uses&url=https://wesbos.com/uses)
- **[21:16](#t=21:16)** Using Puppeteer
- [Puppeteer | Puppeteer](https://pptr.dev/)
- [Puppeteer · Browser Rendering docs](https://developers.cloudflare.com/browser-rendering/platform/puppeteer/)
- [Cloudinary - Image and Video Upload, Store ad Monetization](https://cloudinary.com/ip/gr-sea-gg-brand-home-base?campaignid=18164753405&adgroupid=144188713167&keyword=cloudinary&device=c&matchtype=e&adposition=&gad=1)
- [Fast and reliable end-to-end testing for modern web apps | Playwright](https://playwright.dev/)
- **[28:47](#t=28:47)** Canva API
- [Build The Tools Behind Great Design | Canva Developers](https://www.canva.com/developers/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",53d261b7415a238897082df8f799f2736b269b02aef8db7011aa0ad21d5fb1f0,og-image-options,/shows/659 - hasty.md,2023-10-16 20:08:28.933,2023-10-27 15:58:21.223,HASTY
syntax_podcast_show_00660,660,"Anything but Coding - Landscaping, Fitness, and more!",2023-08-30 12:00:00.953,https://traffic.libsyn.com/syntax/Syntax_-_660.mp3,"
In this episode of Syntax, Wes and Scott talk about concerts, getting tired because of being old, landscaping, spinning on your head, gym updates, awful search engines and awful ethics for YouTubers, rewiring old engines, and what's being streamed.

## Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:49](#t=01:49)** Being tired
* [The Strokes & Weyes Blood Tickets | 14th August | Red Rocks Amphitheatre](https://www.theredrocksamphitheater.com/events/the-strokes-weyes-blood/)
* **[05:08](#t=05:08)** Landscaping
* **[10:53](#t=10:53)** Gym updates
* **[23:01](#t=23:01)** House projects
* **[28:39](#t=28:39)** Why are search engines so awful these days?
* **[39:20](#t=39:20)** Internet routing
* **[45:17](#t=45:17)** Linus Tech Tips ethics and issues
* **[48:29](#t=48:29)** Rewiring a kid's ATV
* **[50:49](#t=50:49)** What we're watching
* [The Stronger By Science Podcast](https://sbspod.com/)
* [Watch Full Swing | Netflix Official Site](https://www.netflix.com/ca/title/81483353)
* [Break Point | Official Trailer | Netflix](https://www.youtube.com/watch?v=sWBqn8fdhWs)
* [Watch Formula 1: Drive to Survive | Netflix Official Site](https://www.netflix.com/ca/title/80204890)
* **[58:37](#t=58:37)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [The First Cat in Space Ate Pizza](https://amzn.to/3OtmJ5S)
* Wes: Steam cleaner

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",d416899d1287fa366b45abd5cb308988a7f6a51811fb78c31435f56c0651416c,anything-but-coding-landscaping-fitness-and-more,/shows/660 - Tasty No Coding.md,2023-10-16 20:08:28.967,2023-10-27 15:58:21.273,TASTY
syntax_podcast_show_00661,661,Supper Club × Shipping ESM with Mark Erikson,2023-09-01 12:00:00.565,https://traffic.libsyn.com/syntax/Syntax_-_661.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Mark Erikson about his work in helping others understand shipping ESM, how to deal with permutations, whether default imports are helpful, whether TypeScript has made it easier, and what Mark's tool stack is for building.

## Show Notes

* **[00:36](#t=00:36)** Welcome!
* **[01:45](#t=01:45)** Introducing Shipping ESM with Mark Erikson
* [Mark Erikson (@acemarke)](https://twitter.com/acemarke)
* [Wes Bos on Twitter: ""publishing packages that work in esm and cjs is such a nightmare. I've run into so many issues today and took forever to get the proper package.json exports. I can't wait until we're 100% esm. I think I have every single combo covered.""](https://twitter.com/wesbos/status/1610385221324619780)
* [Mark's Dev Blog](https://blog.isquaredsoftware.com/)
* [Blogged Answers: My Experience Modernizing Packages to ESM](https://blog.isquaredsoftware.com/2023/08/esm-modernization-lessons/)
* [Greatest Hits: The Most Popular and Most Useful Posts I've Written](https://blog.isquaredsoftware.com/2020/08/greatest-hits/)
* [arethetypeswrong.github.io: Tool for analyzing TypeScript types of npm packages](https://github.com/arethetypeswrong/arethetypeswrong.github.io)
* [publint](https://publint.dev/)
* **[07:01](#t=07:01)** How did we get to this space in modules?
* **[16:30](#t=16:30)** How do you deal with permutations?
* **[22:13](#t=22:13)** Do bundlers get in the way or helping?
* **[26:16](#t=26:16)** Are default imports useful?
* **[30:35](#t=30:35)** Are the types wrong errors
* **[33:41](#t=33:41)** Has TypeScript made this easier?
* **[37:56](#t=37:56)** What's your tool stack for building?
* **[39:32](#t=39:32)** How do you test?
* **[41:35](#t=41:35)** Will we ever stop bundling?
* **[48:03](#t=48:03)** What about source maps?
* **[52:32](#t=52:32)** Supper Club Questions
* [What is Windows Subsystem for Linux](https://learn.microsoft.com/en-us/windows/wsl/about)
* [Eagle Oceanic Next](https://marketplace.visualstudio.com/items?itemName=graf009.Eagle-Oceanic-Next)
* [DroidSansMono NF Font](https://eng.m.fontke.com/font/24637914/)
* **[55:18](#t=55:18)** React Types has more downloads than React?
* **[59:42](#t=59:42)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Shirley Wu—Taking up space (Keynote, Outlier 2023)](https://www.youtube.com/watch?v=zF7mSTVwVs0)

## Shameless Plugs

* [Replay (@replayio)](https://twitter.com/replayio)
* [Replay - The time-travel debugger from the future.](https://www.replay.io/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",3983f8a67eec0bc1c90708a99a7fa397bee19e7317a4f94fed2060a53007d6a1,supper-club-shipping-esm-with-mark-erikson,/shows/661 - Mark Supperclub.md,2023-10-16 20:08:29.018,2023-10-27 15:58:21.333,SUPPER
syntax_podcast_show_00662,662,JavaScript Closures & Scope Explained,2023-09-04 12:00:00.811,https://traffic.libsyn.com/syntax/Syntax_-_662.mp3,"
In this Hasty Treat, Scott and Wes explain closures and the different types of scope used, and examples of where a closure is useful.

## Show Notes

* **[00:25](#t=00:25)** Welcome
* **[02:10](#t=02:10)** Scope
* [Beginner JavaScript course](https://beginnerjavascript.com)
* **[04:37](#t=04:37)** Local scope
* **[07:35](#t=07:35)** Enclosing scope
* **[09:39](#t=09:39)** Module scope
* **[10:36](#t=10:36)** JavaScript is lexically scoped
* **[11:50](#t=11:50)** Closures explained
* **[16:06](#t=16:06)** Examples of where a closure is useful
* [Examples of Closures](https://wesbos.com/javascript/03-the-tricky-bits/closures#examples-of-closures)
* [Tricky Bits](https://wesbos.com/javascript/03-the-tricky-bits/scope)
* **[22:56](#t=22:56)** Why don't you just use a class?

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",2edcdcc4187e27dd699d6cb3d103d5aa9008cd40826eecd9244d5f3c5999b7b8,javascript-closures-and-scope-explained,/shows/662 - Hasty.md,2023-10-16 20:08:29.145,2023-10-27 15:58:21.438,HASTY
syntax_podcast_show_00663,663,Potluck × Soft Skills × Release Notes × Headless CMS × Organizing Code × Inet CSS?,2023-09-06 12:00:00.531,https://traffic.libsyn.com/syntax/Syntax_-_663.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about learning soft skills, using release notes, headless CMS, dealing with web components and scripts, what inet is, better ways to use ChatGPT, and more!

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[01:42](#t=01:42)** Scott's butt pincher
* [Affenpinscher](https://en.wikipedia.org/wiki/Affenpinscher)
* **[06:08](#t=06:08)** You keep missing my favorite thing about Civet
* [Civet](https://en.wikipedia.org/wiki/Civet)
* **[07:31](#t=07:31)** What soft skills can I learn to help me in my career?
* [HTML, CSS and JS in an ADD, OCD, Bi-Polar, Dyslexic and Autistic World | CSS-Tricks - CSS-Tricks](https://css-tricks.com/hmtl-css-and-js-in-an-add-ocd-bi-polar-dyslexic-and-autistic-world/)
* **[12:42](#t=12:42)** Have you thought about release notes or a what's new section?
* [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)
* [How to generate Changelog using Conventional Commits | by Riccardo Canella | Jobtome Engineering | Medium](https://medium.com/jobtome-engineering/how-to-generate-changelog-using-conventional-commits-10be40f5826c)
* **[15:57](#t=15:57)** Can you explain headless CMS and what the use-cases/implementations are?
* **[19:24](#t=19:24)** Any suggestions for dealing with web components and the client's tracking scripts
* [How to Read Flamegraphs 🔥](https://www.webperf.tips/tip/understanding-flamegraphs/)
* [Chromium F12 Profiler: The Main Thread Pane](https://www.webperf.tips/tip/main-profiler-pane/)
* [Agent Creation has a large CPU time · Issue #915 · bluesky-social/atproto](https://github.com/bluesky-social/atproto/issues/915#issuecomment-1539112436)
* **[25:27](#t=25:27)** Why do we need .d.ts files in TypeScript?
* **[30:15](#t=30:15)** What is inset in CSS?
* [inset - CSS: Cascading Style Sheets | MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/inset)
* **[35:06](#t=35:06)** Is there a way to use AI/chat gpt to more quickly and easily understand technical documentation?
* [Anthropic \ Home](https://www.anthropic.com/)
* [Getting Started 🚀 Astro Documentation](https://docs.astro.build/en/getting-started/)
* [ChatGPT Plugin - AskTheCode | GPTStore.ai](https://gptstore.ai/plugins/askthecode-dsomok-online)
* [ChatGPT Plugin - Scraper | GPTStore.ai](https://gptstore.ai/plugins/api-gafo-tech)
* [Overview | TanStack Query Docs](https://tanstack.com/query/v4/docs/react/overview)
* [Custom instructions for ChatGPT](https://openai.com/blog/custom-instructions-for-chatgpt)
* **[40:59](#t=40:59)** why is the following true: the string ""undefined"".includes(undefined)?
* **[43:27](#t=43:27)** How do you organize your code directories?
* **[48:50](#t=48:50)** Is there any good reason in 2023 why we should still be loading JS files with all our script tags at the bottom of the body element?
* **[54:32](#t=54:32)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [Surge power bar](https://amzn.to/3YMdzpR)
* Wes: [Little Hippo Alarm](https://amzn.to/3EqvxVH)

## Shameless Plugs

* Scott: [Sentry](https://sentry.io)
* Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",2fdea0ceca488c57c5f951d22ca6bc0b3f94db162a35eb78042629750d0acf1d,potluck-soft-skills-release-notes-headless-cms-organizing-code-inet-css,/shows/663 - Tasty potluck.md,2023-10-16 20:08:29.190,2023-10-27 15:58:21.491,TASTY
syntax_podcast_show_00664,664,"Supper Club × What's New With Astro with Fred Schott",2023-09-08 11:00:00.957,https://traffic.libsyn.com/syntax/Syntax_-_664.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Fred Schott all things Astro with the announcement of Astro version 3, marketing open source projects, Starlight docs, keeping up to date, and making major version numbers less scary.

## Show Notes

* **[00:35](#t=00:35)** Welcome 3x guest Fred Schott!
* [Supper Club × Astro 2.0 with Fred Schott — Syntax Podcast 580](https://syntax.fm/show/580/supper-club-astro-2-0-with-fred-schott)
* [Pika Pkg — Syntax Podcast 212](https://syntax.fm/show/212/pika-pkg)
* **[05:11](#t=05:11)** What is Astro?
* **[07:37](#t=07:37)** What's new in Astro v3?
* [Astro 3.0 | Astro](https://astro.build/blog/astro-3/)
* **[14:18](#t=14:18)** Behind the scenes improvements in Astro v3
* **[18:17](#t=18:17)** HMR Enhancements
* **[20:10](#t=20:10)** What's the hosting partner deal with Vercel?
* [Vercel: Our Official Hosting Partner | Astro](https://astro.build/blog/vercel-official-hosting-partner/)
* **[28:04](#t=28:04)** Docs template Starlight announcement
* [Starlight 🌟 Build documentation sites with Astro](https://starlight.astro.build/)
* **[31:28](#t=31:28)** How often do you release updates?
* **[33:47](#t=33:47)** Marketing open source
* [Time to suit up | Astro Shop](https://shop.astro.build/)
* [SvelteKit • Web development, streamlined](https://kit.svelte.dev/)
* **[36:18](#t=36:18)** Making major version numbers less scary
* **[40:04](#t=40:04)** Does Astro use Vite?
* [Vite | Next Generation Frontend Tooling](https://vitejs.dev/)
* **[42:01](#t=42:01)** Is it different working on a framework than a tool like Snowpack?
* **[43:53](#t=43:53)** Thoughts on cloud text editors
* [Project IDX](https://idx.dev/)
* **[47:02](#t=47:02)** How do you keep up to date?
* **[48:43](#t=48:43)** Do you write in TypeScript?
* **[51:31](#t=51:31)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* [Factorio](https://www.factorio.com/)

## Shameless Plugs

* [Astro (@astrodotbuild)](https://twitter.com/astrodotbuild)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",bada99586e90bac31cec3b3e7350357b56d47b12d46ca76c0ff37c37e20209d4,supper-club-what-s-new-with-astro-with-fred-schott,/shows/664 - Supper Fred.md,2023-10-16 20:08:29.236,2023-10-27 15:58:21.550,SUPPER
syntax_podcast_show_00665,665,CSS Nesting is Here!,2023-09-11 12:00:00.253,https://traffic.libsyn.com/syntax/Syntax_-_665.mp3,"
In this Hasty Treat, Scott and Wes talk about the arrival of CSS nesting. What is CSS nesting? How does CSS nesting work? And does it work in all browsers?

## Show Notes

* **[00:24](#t=00:24)** Welcome
* **[02:31](#t=02:31)** What's up with CSS nesting?
* [""CSS Nesting just landed in Firefox 117 which puts it at 100% browser support! You can start using it today — here are 11 examples on how it works 👇](https://twitter.com/wesbos/status/1696201171587809761)
* **[04:10](#t=04:10)** How does CSS nesting work?
* **[09:23](#t=09:23)** What the ampersand does in nesting
* **[21:05](#t=21:05)** It works with media queries
* **[25:29](#t=25:29)** How does it work on all the browsers?
* **[29:32](#t=29:32)** Lightning CSS
* [Lightning CSS](https://lightningcss.dev/)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",0bfe37047aa15c9bf68f33ef31198a1915db48f11e35b9206fe35515b2bdeeeb,css-nesting-is-here,/shows/665 - Hasty.md,2023-10-16 20:08:29.376,2023-10-27 15:58:21.669,HASTY
syntax_podcast_show_00666,666,Hackweek Projects - Realtime Markdown Editor and a Hardware Recording Button,2023-09-13 12:00:00.945,https://traffic.libsyn.com/syntax/Syntax_-_666.mp3,"
In this episode of Syntax, Wes and Scott review the projects they built during Sentry's Hackweek: a realtime Markdown multiplayer editor, and a hardware recording button.

## Show Notes

* **[00:11](#t=00:11)** Welcome
* **[00:57](#t=00:57)** What is a hack week?
* **[01:55](#t=01:55)** Syntax Brought to you by Sentry
* **[03:42](#t=03:42)** Scott's project: a multiplayer editor
* [Liveblocks | Collaborative experiences in days, not months](https://liveblocks.io/)
* [PartyKit | Everything is better with friends](https://www.partykit.io/)
* [BlockNote - Javascript Block-Based text editor | BlockNote](https://www.blocknotejs.org/)
* [Dev toolkit for building collaborative editors – Tiptap](https://tiptap.dev/)
* [microsoft/monaco-editor: A browser based code editor](https://github.com/microsoft/monaco-editor)
* [syntaxfm/hackweek-md-multiplayer-editor: Sentry.io Hackweek Submisison - A multiplayer editor for .md files that comits directly to GitHub](https://github.com/syntaxfm/hackweek-md-multiplayer-editor)
* [Convex | The fullstack TypeScript development platform](https://www.convex.dev/)
* [The Everything App](https://anytype.io/)
* **[13:57](#t=13:57)** Multiplayer is so much easier
* **[19:56](#t=19:56)** Wes' project: A recording button
* [Oracle VM VirtualBox](https://www.virtualbox.org/)
* [Run Windows on Mac – Parallels Desktop 19 Virtual Machine for Mac](https://www.parallels.com/ca/pd/general/)
* [Karabiner-Elements](https://karabiner-elements.pqrs.org/)
* [folivora.ai - Great Tools for your Mac!](https://folivora.ai/)
* [Home Assistant](https://www.home-assistant.io/)
* [The World’s Leading 2D and 3D Platform | Unity Pro Free Trial](https://unity.com/pages/pro-free-trial?&&&&gad=1)
* [SendCutSend | Online Laser Cutting and Waterjet Cutting](https://sendcutsend.com/)
* [blender.org - Home of the Blender project - Free and Open 3D Creation Software](https://www.blender.org/)
* **[42:31](#t=42:31)** Learning to skateboard
* **[43:59](#t=43:59)** F1 documentary follow up
* **[45:30](#t=45:30)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

* Scott: [BetterDisplay: Unlock your displays on your Mac!](https://github.com/waydabber/BetterDisplay)
* Wes: [LOVIMAG Magnetic Hooks Heavy Duty](https://www.amazon.com/LOVIMAG-Magnetic-Hanging-Magnets-Refrigerator/dp/B0CBTZ78Q4?crid=19L2TLC6SKOWL&keywords=100lb+magnet+hooks&qid=1693326610&sprefix=100lb+magnet+hooks,aps,109&sr=8-4&th=1)

## Shameless Plugs

* Scott: [Syntax on TikTok](https://www.tiktok.com/@syntaxfm)
* Wes: [@WesBos on X.com](https://twitter.com/wesbos)

## Tweet us your tasty treats

* [Scott's Instagram](https://www.instagram.com/stolinski/)
* [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
* [Wes' Instagram](https://www.instagram.com/wesbos/)
* [Wes' Twitter](https://twitter.com/wesbos)
* [Wes' Facebook](https://www.facebook.com/wesbos.developer)
* [Scott's Twitter](https://twitter.com/stolinski)
* Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
* [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
* [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
* [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",41253630cb2da6189b52a27c7a3a46538379fe5d9e2dc51e1faeaddcab769071,hackweek-projects-realtime-markdown-editor-and-a-hardware-recording-button,/shows/666 - tasty.md,2023-10-16 20:08:29.414,2023-10-27 15:58:21.759,TASTY
syntax_podcast_show_00667,667,Supper Club × How To Get Your First Dev Job With Stuart Bloxham,2023-09-15 12:00:00.689,https://traffic.libsyn.com/syntax/Syntax_-_667.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Stuart Bloxham about how he learned to code, what his interview process was like when applying for a job, how he found the time to make it all work, and his thoughts on bootcamps and ways to learn.

## Show Notes

- **[00:36](#t=00:36)** Welcome
- [Stuart Bloxham on GitHub](https://github.com/sbloxy123)
- [Stuart Bloxham on LinkedIn](https://www.linkedin.com/in/stuart-bloxham-a36197121/?originalSubdomain=uk)
- **[02:09](#t=02:09)** How did you decide to be a web developer?
- **[08:22](#t=08:22)** Did you have clarity when your kid was born?
- **[10:20](#t=10:20)** What was the interview process like?
- **[18:25](#t=18:25)** What and how did you learn?
- **[20:28](#t=20:28)** What's the state of bootcamps in 2023?
- **[22:03](#t=22:03)** How important have soft skills been?
- **[25:14](#t=25:14)** How do you know when you're ready to apply for a job?
- **[35:24](#t=35:24)** Do you like coding?
- **[37:49](#t=37:49)** How did you find the time to make it all work?
- **[41:42](#t=41:42)** How did you deal with burnout?
- **[43:06](#t=43:06)** Supper Club questions
- **[45:34](#t=45:34)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- [Flowerhorn cichlid](https://en.wikipedia.org/wiki/Flowerhorn_cichlid)

## Shameless Plugs

- [Stuart Bloxham's Portfolio](https://www.stuartbloxham.tech/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",ed9efd434731ba3c131169ee173523df1006b533810a06577dbba8462d1559e5,supper-club-how-to-get-your-first-dev-job-with-stuart-bloxham,/shows/667 - Supper.md,2023-10-16 20:08:29.451,2023-10-27 15:58:21.814,SUPPER
syntax_podcast_show_00668,668,"Hacking the Tonal - Proxying, Intercepting + Debugging Traffic?",2023-09-18 12:00:00.132,https://traffic.libsyn.com/syntax/Syntax_-_668.mp3,"
In this Hasty Treat, Scott and Wes talk about how you can intercept and debug traffic going out from your computer or other internet connected devices in your home, or your garage!

## Show Notes

- **[00:25](#t=00:25)** Welcome
- **[01:55](#t=01:55)** Syntax Brought to you by Sentry
- **[02:17](#t=02:17)** Scott's story of wanting to intercept data
- [Tonal](https://www.tonal.com/)
- **[06:36](#t=06:36)** Other examples
- **[08:38](#t=08:38)** Different types of traffic
- **[14:52](#t=14:52)** TCP vs UDP
- **[16:07](#t=16:07)** Why would you want to run a proxy?
- **[24:20](#t=24:20)** Applications to use
- [Charles Web Debugging Proxy • HTTP Monitor / HTTP Proxy / HTTPS & SSL Proxy / Reverse Proxy](https://www.charlesproxy.com/)
- [Proxyman · Native, Modern Web Debugging Proxy · Inspect network traffic from Mac, iOS, Android devices with ease](https://proxyman.io/)
- [Intercept, debug & mock HTTP with HTTP Toolkit](https://httptoolkit.com/)
- [mitmproxy - an interactive HTTPS proxy](https://mitmproxy.org/)
- [Wireshark · Go Deep](https://www.wireshark.org/)
- [Little Snitch](https://www.obdev.at/products/littlesnitch/index.html)
- [Capturing Modes - Fiddler Everywhere](https://docs.telerik.com/fiddler-everywhere/capture-traffic/capturing-modes)
- [Hacksore on Twitter](https://twitter.com/Hacksore/status/1661369171534393348)
- [How I Hacked my Car :: Programming With Style](https://programmingwithstyle.com/posts/howihackedmycar/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",912b58b11069aff9c4fa56cf09e1e4d0bde59c0d9900e9105df00f8d1bc08065,hacking-the-tonal-proxying-intercepting-debugging-traffic,/shows/668 - Hasty.md,2023-10-16 20:08:29.602,2023-10-27 15:58:21.943,HASTY
syntax_podcast_show_00669,669,The Svelte + SvelteKit Show,2023-09-20 12:00:00.020,https://traffic.libsyn.com/syntax/Syntax_-_669.mp3,"
In this episode of Syntax, Wes reviews his experience building with Svelte and SvelteKit including templating, data fetching, actions, managing state, request handlers, and more.

## Show Notes

- **[00:10](#t=00:10)** Welcome
- **[01:12](#t=01:12)** Syntax Brought to you by Sentry
- **[02:11](#t=02:11)** What is Svelte vs SvelteKit
- [From React To SvelteKit — Syntax Podcast 390](https://syntax.fm/show/390/from-react-to-sveltekit)
- [Hasty Treat - Wes & Scott Look At Svelte 3 — Syntax Podcast 173](https://syntax.fm/show/173/hasty-treat-wes-and-scott-look-at-svelte-3)
- [Svelte • Cybernetically enhanced web apps](https://svelte.dev/)
- [SvelteKit • Web development, streamlined](https://kit.svelte.dev/)
- **[05:59](#t=05:59)** Templating in Svelte
- **[18:20](#t=18:20)** Data fetching in SvelteKit
- **[25:23](#t=25:23)** Actions
- **[28:58](#t=28:58)** State
- **[32:41](#t=32:41)** Binding values
- **[36:18](#t=36:18)** Hooks
- **[37:25](#t=37:25)** Request handlers
- [Special elements • Docs • Svelte](https://svelte.dev/docs/special-elements#svelte-window)
- [website/src/actions/anchor.ts at v2 · syntaxfm/website](https://github.com/syntaxfm/website/blob/v2/src/actions/anchor.ts)
- [website/src/actions/click_outside.ts at v2 · syntaxfm/website](https://github.com/syntaxfm/website/blob/v2/src/actions/click_outside.ts)
- **[39:23](#t=39:23)** Svelte Actions
- **[42:26](#t=42:26)** Popover API
- **[45:33](#t=45:33)** Routing
- **[47:22](#t=47:22)** Layouts
- **[50:08](#t=50:08)** Styling
- **[57:09](#t=57:09)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [Aqara Smart Lock U100](https://www.amazon.com/dp/B0BZSD2L1W?linkCode=sl1&linkId=3c99452f2f410bd473c91749cfa27a6f&language=en_US)
- Wes: [Headphones Replacement Ear Pads,Compatible for Bose Quietcomfort QC15 QC25 QC35 35 ii-(Black Floral)](https://www.amazon.ca/dp/B07QXKNDSW?crid=23KX82S9DQKYG&keywords=bose+wc35+ear+pads+flower&sprefix=bose+wc35+ear+pads+flower,aps,105&th=1&language=en_US&sr=8-18&linkCode=gs2&linkId=5d4c231bde102d4022499ff9ea813b91&tag=isi777-20)

## Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",9b10e10a697ba06b6d7bd09833d763fc8db15e345faba87d1f96bfd60983fb32,the-svelte-sveltekit-show,/shows/669 - Tasty.md,2023-10-16 20:08:29.643,2023-10-27 15:58:22.008,TASTY
syntax_podcast_show_00670,670,Anxiety and Uncertainty with Dr. Courtney Tolinski,2023-09-22 12:00:00.565,https://traffic.libsyn.com/syntax/Syntax_-_670.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Dr. Courtney Tolinski about signs and symptoms of anxiety, what the long term effects are of anxiety, how to know if you need help, and what kinds of things you can do to deal with anxiety and uncertainty.

## Show Notes

- **[00:35](#t=00:35)** Welcome
- **[01:11](#t=01:11)** Syntax Brought to you by Sentry
- **[02:23](#t=02:23)** Introducing Dr. Courtney Tolinski
- [Mental Health and Dev ft Dr. Courtney Tolinski - Depression, Anxiety, Imposter Syndrome, Focus, Motivation, Burnout — Syntax Podcast 236](https://syntax.fm/show/236/mental-health-and-dev-ft-dr-courtney-tolinski-depression-anxiety-imposter-syndrome-focus-motivation-burnout)
- [Supper Club × Coding with ADHD with Dr. Courtney Tolinski — Syntax Podcast 532](https://syntax.fm/show/532/supper-club-coding-with-adhd-with-dr-courtney-tolinski)
- **[04:13](#t=04:13)** What is anxiety?
- **[06:44](#t=06:44)** Is there a difference between anxiety and just not wanting to do something?
- **[08:58](#t=08:58)** What kinds of physical symptoms are there?
- **[15:43](#t=15:43)** What are the longer term effects of anxiety?
- **[17:34](#t=17:34)** How do you know if you need help with anxiety?
- **[21:05](#t=21:05)** What can I do to solve my anxiety?
- [Psychology Today Canada: Health, Help, Happiness + Find a Therapist](https://www.psychologytoday.com/ca)
- [Obsidian - Sharpen your thinking](https://obsidian.md/)
- [How We Feel](https://howwefeel.org/)
- [Apple Reveals More iOS 17 Features Not Available Until Later This Year - MacRumors](https://www.macrumors.com/2023/09/13/ios-17-features-coming-later-this-year/)
- [Meditation and Sleep Made Simple - Headspace](https://www.headspace.com/)
- [Bearable Symptom Tracker, Mood Journal, & Health App](https://bearable.app/)
- [BreathingApp — Personal breathing trainer for a better health](https://breathingapp.com/)
- **[30:15](#t=30:15)** How can we recognize anxiety triggers?
- **[33:26](#t=33:26)** What advice do you have for dealing with uncertainty?
- **[37:54](#t=37:54)** How can I deal with keeping up with everything and feeling like I'm falling behind?
- **[43:02](#t=43:02)** Navigating big life decisions
- **[51:39](#t=51:39)** Supper Club questions
- [Being Well Podcast with Dr. Rick Hanson and Forrest Hanson](https://www.rickhanson.net/being-well-podcast/)
- [Celebrity Book Club with Steven & Lily on Apple Podcasts](https://podcasts.apple.com/us/podcast/celebrity-book-club-with-steven-lily/id1547360770)
- [Criminality](https://www.criminalityshow.com/)
- **[58:01](#t=58:01)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- [Fullstar Compact Vegetable Chopper - Vegetable Cutter, Food Chopper, Veggie Chopper, Onion Chopper, Vegetable Chopper With Container, Vegetable Slicer, Vegetable Cutter, Mandoline Slicer (6 Inserts): Home & Kitchen](https://www.amazon.com/Fullstar-Mini-Vegetable-Chopper-Container/dp/B0BHSXFTGH?crid=8WWJNGJIIFI4&keywords=fullstar+vegetable+chopper&qid=1694728241&sprefix=fullstar+veg,aps,126&sr=8-6&th=1)

## Shameless Plugs

- [Learning Differently (@learning.differently) • Instagram photos and videos](https://www.instagram.com/learning.differently/)
- [Zarlengo Foundation Learning Evaluation Center| Denver, Colorado](https://learningevaluationcenter.org/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",8e2f9ead69b3a32cba9c9b634d5dc7cd61958b75020e1face252a8ba3e857a2d,anxiety-and-uncertainty-with-dr-courtney-tolinski,/shows/670 - Supper Tolinski.md,2023-10-16 20:08:29.684,2023-10-27 15:58:22.077,SUPPER
syntax_podcast_show_00671,671,Tauri Vs Electron - Desktop Apps with Web Tech,2023-09-25 12:00:00.113,https://traffic.libsyn.com/syntax/Syntax_-_671.mp3,"
In this Hasty Treat, Scott and Wes talk about the building desktop apps using Electron vs Tauri.

## Show Notes

- **[00:26](#t=00:26)** Welcome
- **[00:55](#t=00:55)** Syntax Brought to you by Sentry
- **[01:15](#t=01:15)** Check my hair app
- [Tauri Apps](https://tauri.app/)
- [Electron](https://www.electronjs.org/)
- [Hand Mirror on the Mac App Store](https://apps.apple.com/us/app/hand-mirror/id1502839586?mt=12)
- [SoFriendly/2fhey](https://github.com/SoFriendly/2fhey)
- **[04:19](#t=04:19)** What is Tauri?
- **[08:23](#t=08:23)** The experience of writing apps in Electron vs Tauri
- **[16:17](#t=16:17)** Electron Forge
- **[20:02](#t=20:02)** Building the same app in Electron vs Tauri

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",a5ba35a7f65975bf41c942ecf6ff0042facad2f6fa63d979bf8ad5b78cb920c1,tauri-vs-electron-desktop-apps-with-web-tech,/shows/671 - hasty.md,2023-10-16 20:08:29.824,2023-10-27 15:58:22.248,HASTY
syntax_podcast_show_00672,672,Reacting to State of CSS Survey,2023-09-27 12:00:00.800,https://traffic.libsyn.com/syntax/Syntax_-_672.mp3,"
In this episode of Syntax, Wes and Scott go over some of the results the State of CSS survey for 2023, including drop-shadow, subgrid, logical properties, media range, and more!

## Show Notes

- **[00:25:21](#t=00:25)** Welcome
- **[01:31:22](#t=01:31)** Soccer update
- **[03:52:05](#t=03:52)** Syntax Brought to you by Sentry
- **[04:03:18](#t=04:03)** StateOfCSS.com
- [State of CSS 2023](https://2023.stateofcss.com/en-US)
- **[04:21:11](#t=04:21)** Top 5 Most Used Features
- **[09:13:09](#t=09:13)** Drop-shadow
- **[13:00:11](#t=13:00)** Subgrid
- **[18:31:21](#t=18:31)** Logical properties
- **[20:11:20](#t=20:11)** Media range
- **[20:52:11](#t=20:52)** Object view box
- **[23:10:14](#t=23:10)** Anchor positioning
- **[28:21:09](#t=28:21)** Intrinsic sizing keywords
- **[29:32:00](#t=29:32)** View Transitions API
- [Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/)
- [Astro](https://astro.build/)
- [Supper Club × Astro 2.0 with Fred Schott — Syntax Podcast 580](https://syntax.fm/show/580/supper-club-astro-2-0-with-fred-schott)
- **[31:43:18](#t=31:43)** Updates to colors in CSS
- **[35:07:05](#t=35:07)** Accent color, current color
- **[36:36:11](#t=36:36)** Scroll snap and overscroll behaviour
- **[39:04:22](#t=39:04)** Touch action
- **[40:16:01](#t=40:16)** Line clamp or variable font
- [Variable Fonts](https://v-fonts.com/)
- **[45:28:11](#t=45:28)** Accessibility features
- **[48:33:12](#t=48:33)** :Has has jumped
- **[49:32:11](#t=49:32)** @Property
- **[53:52:13](#t=53:52)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [Kodiak Cakes Strawberries & Cream Oatmeal Packets (Pack of 6)](https://www.amazon.com/dp/B08BR4QV8Z?th=1&linkCode=sl1&linkId=30dd8a123a0b101f6e0e4e2edcc170b4&language=en_US)
- Wes: [Food Storage Containers, Baby Food Storage Containers with Lid, Baby Food and Toddler Snack Containers](<https://www.amazon.ca/s?k=BEABA+Clip+Containers,+Food+Storage+Containers,+Baby+Food+Storage+Containers+with+Lid,+Baby+Food+and+Toddler+Snack+Containers,+Baby+Essentials,+(Small)&linkCode=gs3&linkId=5c63a9bbd7c096ed4e1144ec769d870a&tag=isi777-20>)

## Shameless Plugs

- Scott: [Syntax Podcast (@syntaxfm) | TikTok](https://www.tiktok.com/@sntaxfm)
- Wes: [Web Unleashed 2023 - FITC](https://fitc.ca/event/webu23/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",7e359fe1d7e48a9ca8934140ff0df6a4d2c06044af7e1e243f5c69de38a9b199,reacting-to-state-of-css-survey,/shows/672 - tasty CSS.md,2023-10-16 20:08:29.881,2023-10-27 15:58:22.304,TASTY
syntax_podcast_show_00673,673,"Getting Hired, Interviewing, and Why Recruiters Suck with Taylor Desseyn",2023-09-29 12:00:00.937,https://traffic.libsyn.com/syntax/Syntax_-_673.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Taylor Desseyn about his work as a job recruiter, how hiring has changed over the last few years, what soft and tech skills developers need, what not to do when applying, and how AI is affecting the hiring process.

## Show Notes

- **[00:35](#t=00:35)** Welcome
- **[01:10](#t=01:10)** Syntax Brought to you by Sentry
- **[01:35](#t=01:35)** Who is Taylor Desseyn?
- [taylor desseyn (/tdesseyn)](https://solo.to/tdesseyn)
- [Taylor Desseyn on LinkedIn](https://www.linkedin.com/in/taylordesseyn/)
- [World-class technical talent on tap | Gun.io](https://gun.io/)
- [taylor desseyn (@tdesseyn) / X](https://twitter.com/tdesseyn)
- [Taylor Desseyn](https://www.youtube.com/channel/UCNqJ-P5d9RUCUsQ-grhlUHw)
- **[03:49](#t=03:49)** Why are recruiters just sending emails?
- **[05:26](#t=05:26)** How much does a recruiter make?
- **[06:44](#t=06:44)** How have things changed in the last couple of years?
- **[09:22](#t=09:22)** How can developers stand out when applying?
- **[13:52](#t=13:52)** What do developers do that cost them jobs?
- **[28:46](#t=28:46)** What soft skills are employers looking for?
- **[32:01](#t=32:01)** What tech skills are showing up in job postings?
- **[34:57](#t=34:57)** Are resumes dead?
- **[40:16](#t=40:16)** How does Gun.io vet people?
- [World-class technical talent on tap | Gun.io](https://gun.io/)
- **[43:15](#t=43:15)** How is AI changing hiring?
- **[46:03](#t=46:03)** What's working on social media marketing in hiring?
- **[48:33](#t=48:33)** Supper Club questions
- **[53:39](#t=53:39)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- [Group Chat - Dee Murthy -](https://deemurthy.com/group-chat/)
- [Watch Painkiller | Netflix Official Site](https://www.netflix.com/ca/title/81095069)

## Shameless Plugs

- [Guidance Counselor 2.0 | Podcast on Spotify](https://open.spotify.com/show/2UBzvscEgepXLUKvA5c24x?nd=1)
- [The Unicorn Finders | Podcast on Spotify](https://open.spotify.com/show/5IF9OyWLb7FB78tWRYfuvE?nd=1)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",ab6f806ff3f5f2dbe0072809d62c869697063db5b52907b0db893f4c983f11fb,getting-hired-interviewing-and-why-recruiters-suck-with-taylor-desseyn,/shows/673 - supper taylor.md,2023-10-16 20:08:29.929,2023-10-27 15:58:22.353,SUPPER
syntax_podcast_show_00674,674,A11y Treats - Heading Design,2023-10-02 12:00:00.379,https://traffic.libsyn.com/syntax/Syntax_-_674.mp3,"
In this Hasty Treat, Scott and Wes talk about headings on your website, why you should care, how to structure your headings, and what tooling is there for testing your website?

## Show Notes

- **[00:26](#t=00:26)** Welcome
- **[01:21](#t=01:21)** Syntax Brought to you by Sentry
- **[01:41](#t=01:41)** Why do we care about Headings?
- [How-to: Accessible heading structure - The A11Y Project](https://www.a11yproject.com/posts/how-to-accessible-heading-structure/)
- **[03:12](#t=03:12)** Heading design provides an outline for your website
- **[08:45](#t=08:45)** Using H1 classes?
- **[10:28](#t=10:28)** Is the logo an H1?
- **[13:03](#t=13:03)** Giving an ARIA level
- **[17:14](#t=17:14)** Can headings be visually hidden?
- **[21:00](#t=21:00)** Benefits of good heading design
- **[22:27](#t=22:27)** Tooling
- [Heading outlines - ADG](https://www.accessibility-developer-guide.com/examples/headings/)
- [HTML Standard](https://html.spec.whatwg.org/multipage/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements)
- [Polypane, The browser for ambitious web developers](https://polypane.app/)
- [HeadingsMap - Chrome Web Store](https://chrome.google.com/webstore/detail/headingsmap/flbjommegcjonpdmenkdiocclhjacmbi)
- [HeadingsMap – Get this Extension for 🦊 Firefox (en-US)](https://addons.mozilla.org/en-US/firefox/addon/headingsmap/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",8341de47c7802ef5740969b283072fded14444cb187e4ffb485828038acaf8d5,a11y-treats-heading-design,/shows/674 - hasty.md,2023-10-16 20:08:30.105,2023-10-27 15:58:22.467,HASTY
syntax_podcast_show_00675,675,Potluck × Bun Thoughts × Guesting on Syntax × Why Rust?,2023-10-04 12:00:00.295,https://traffic.libsyn.com/syntax/Syntax675ScottVersion_-_10323_12.46PM.mp3,"
In this episode of Syntax, Wes and Scott answer your questions about Bun, using custom auth headers, the difference between trpc, REST, or GraphQL, documenting your code, why learn Rust, and more!

## Show Notes

- **[00:08](#t=00:08)** Welcome
- **[00:37](#t=00:37)** Scott's macOS bug
- [Tauri Apps](https://tauri.app/)
- **[01:26](#t=01:26)** Syntax Brought to you by Sentry
- **[01:46](#t=01:46)** What are your thoughts on Bun?
- [Bun — A fast all-in-one JavaScript runtime](https://bun.sh/)
- [Zig Programming Language](https://ziglang.org/)
- [Deno, The next-generation JavaScript runtime](https://deno.com/)
- [Cloudflare Workers](https://developers.cloudflare.com/workers/)
- [Netlify Connect](https://www.netlify.com/products/connect/)
- [Storybook](https://storybook.js.org/)
- [Histoire](https://histoire.dev/)
- **[10:32](#t=10:32)** How can I add custom auth header for image requests done by the browser?
- **[16:39](#t=16:39)** What are the differences between trpc, REST, and graphql?
- **[23:55](#t=23:55)** What kind of teams would use trpc, REST, or graphql?
- **[26:19](#t=26:19)** Are there any podcast guest opportunities on Syntax?
- **[31:28](#t=31:28)** With no initial documentation, how do you suggest we document our intricate code, business logic, and integrations?
- **[37:57](#t=37:57)** Rust didn't invent this, they're common paradigms in languages
- **[40:12](#t=40:12)** Why Rust?
- [Rust Programming Language](https://www.rust-lang.org/)
- **[42:59](#t=42:59)** Is Scott still using his Tonal?
- [Tonal](https://www.tonal.com/)
- **[43:49](#t=43:49)** What did I do to make Fetch rebel against me?
- [Proxyman](https://proxyman.io/)
- **[49:47](#t=49:47)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [Glow Up](https://www.netflix.com/ca/title/81075536)
- Wes: [SendCutSend](https://sendcutsend.com/)

## Shameless Plugs

- Scott: [Syntax on TikTok](https://www.tiktok.com/@syntaxfm)
- Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",39b0d693dbeeb2f8324571061a2f744dc59af2fbeb82eb7ad0af5f81659b5d33,potluck-bun-thoughts-guesting-on-syntax-why-rust,/shows/675 - tasty.md,2023-10-16 20:08:30.149,2023-10-27 15:58:22.514,TASTY
syntax_podcast_show_00676,676,Google IDX - VS Code in the Browser with David East,2023-10-06 12:00:00.289,https://traffic.libsyn.com/syntax/Syntax_-_676.mp3,"
In this episode of Syntax, Wes and Scott talk with David East about Google's new cloud based full-stack, multiplatform app development workflow, Project IDX.

## Show Notes

- **[00:22](#t=00:22)** Welcome
- **[01:31](#t=01:31)** Browser in the car
- **[02:16](#t=02:16)** Syntax Brought to you by Sentry
- **[02:24](#t=02:24)** Who is David East?
- [David East](https://www.linkedin.com/in/eastdavid/)
- [David East](https://davidea.st/)
- [David East (@\_davideast) / X](https://twitter.com/_davideast?lang=en)
- [Learn from David East's courses | Frontend Masters](https://frontendmasters.com/teachers/david-east/)
- [Firebase | Google’s Mobile and Web App Development Platform](https://firebase.google.com/)
- **[04:32](#t=04:32)** What is IDX?
- [Project IDX](https://idx.dev/)
- [Flutter - Build apps for any screen](https://flutter.dev/)
- [Welcome to nix.dev — nix.dev documentation](https://nix.dev/)
- **[13:15](#t=13:15)** What's the experience of IDX?
- [Nx: Smart, Fast and Extensible Build System](https://nx.dev/)
- **[16:42](#t=16:42)** IDX isn't just a toy - it's a dev machine
- **[20:29](#t=20:29)** What's the offline mode like?
- **[23:30](#t=23:30)** How are VS Code extensions handled?
- **[27:03](#t=27:03)** Is multiplayer or project sharing on the road map?
- **[28:45](#t=28:45)** How is latency taken care of?
- **[31:43](#t=31:43)** This could be faster than local dev environment
- **[36:18](#t=36:18)** Portability of your projects
- **[42:25](#t=42:25)** What do you think about iPad coding?
- **[44:28](#t=44:28)** Phone testing with IDX
- [Firebase Test Lab](https://firebase.google.com/docs/test-lab)
- **[46:59](#t=46:59)** How is AI being integrated?
- **[50:23](#t=50:23)** Supper Club questions
- [Introducing Operator | Fonts by Hoefler&Co.](https://www.typography.com/blog/introducing-operator)
- [MD IO by Mass-Driver - Future Fonts](https://www.futurefonts.xyz/mass-driver/io)
- **[55:25](#t=55:25)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

CSS

## Shameless Plugs

- [The Bad At Css Podcast](https://nerdy.dev/introducing-the-bad-at-css-podcast)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",aca464c1c0720e9b1f1b60e917a9d088082a9e069434a5219573833554002db7,google-idx-vs-code-in-the-browser-with-david-east,/shows/676 - supper idx.md,2023-10-16 20:08:30.189,2023-10-27 15:58:22.562,SUPPER
syntax_podcast_show_00677,677,Home Office Tips,2023-10-09 12:00:00.558,https://traffic.libsyn.com/syntax/Syntax_-_677.mp3,"
In this Hasty Treat, Scott and Wes talk through tips for upping your home office vibe, including cable management, lighting, ergonomics, and even roller blade wheels.

## Show Notes

- **[00:18](#t=00:18)** Welcome
- **[00:46](#t=00:46)** Syntax Brought to you by Sentry
- **[01:13](#t=01:13)** Creating a great home office
- [Scott’s New Office × The Levelup Lodge — Syntax Podcast 461](https://syntax.fm/show/461/scott-s-new-office-the-levelup-lodge)
- [Wes’ New Soundproof Office — Syntax Podcast 516](https://syntax.fm/show/516/wes-new-soundproof-office)
- **[03:22](#t=03:22)** Lighting
- **[06:08](#t=06:08)** Clutter and cords
- [Alex Tech 25ft - 1/2 inch Cord Protector Wire](https://www.amazon.com/gp/product/B07FXF12HC?th=1&linkCode=sl1&linkId=da2e085408f2747f2dbe50d6a896395e&language=en_US)
- [D-Line CC-1 Light Duty Floor Cord Cover/Cable Protector](https://www.amazon.com/D-Line-CC-1-Protector-Protect-Prevent/dp/B0078NU4C6?crid=LMFO8SSGVXS1&keywords=cable+floor&qid=1695741312&sprefix=cable+floo,aps,118&sr=8-3&linkCode=sl1&linkId=1983d2f473f729984cbd6d96f6ee5845&language=en_US&th=1)
- [Cable Clips](https://www.amazon.com/gp/product/B071FXZBMV?linkCode=sl1&linkId=2bf61b890313d85cc4a6575438fa7d70&language=en_US)
- [WireRun Under Desk Cable Manager 14""](https://www.amazon.com/gp/product/B07BB7N162?th=1&linkCode=sl1&linkId=6bade2a04792398ce711d2936d28a185&language=en_US)
- **[10:33](#t=10:33)** Clean
- **[13:42](#t=13:42)** Sound absorption
- [Bose QuietComfort 35 II review](https://www.soundguys.com/bose-qc35-ii-review-14264/)
- [Wyze Noise-Cancelling Headphones](https://www.wyze.com/products/wyze-headphones)
- **[19:26](#t=19:26)** Ergonomics
- [VIVO Single Monitor Height Adjustable Counterbalance Pneumatic Arm Desk Mount Stand](https://www.amazon.com/VIVO-Adjustable-Articulating-Counterbalance-STAND-V001O/dp/B01NH0HTM5?crid=2R12Y25XLIZ97&keywords=vivo+monitor+arm&qid=1695743662&sprefix=vivo+monitor+arm,aps,118&sr=8-5&linkCode=sl1&linkId=b4792743b241c149fbe862b0cd2069c0&language=en_US&th=1)
- **[23:17](#t=23:17)** Roller blade wheels for your chair
- [Office Owl Caster Wheels](https://www.amazon.ca/dp/B01KET1PUA?crid=346I5T7WPFB50&keywords=roller+blade+wheels+office+chairs&sprefix=roller+bl,aps,111&th=1&language=en_US&sr=8-5&linkCode=gs2&linkId=5eb71e0b6e169b358de273eb58cfed5f&tag=isi777-20)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",a7b2e07572ef1c04492db6b8a85d475c424d636f72b7a2120827d97394439878,home-office-tips,/shows/677 - hasty office.md,2023-10-20 14:29:56.104,2023-10-27 15:58:22.703,HASTY
syntax_podcast_show_00678,678,The 2023 State of CSS Survey Part 2 × CSS Frameworks × Tooling × Browser Usage,2023-10-11 12:00:00.291,https://traffic.libsyn.com/syntax/Syntax_-_678.mp3,"
In this episode of Syntax, it's part 2 of Wes and Scott's reactions to the 2023 State of CSS survey including CSS frameworks, tooling, browser usage, SVG and CSS, and the CSS Awards.

## Show Notes

- **[00:10](#t=00:10)** Welcome
- [Reacting to State of CSS Survey — Syntax Podcast 672](https://syntax.fm/show/672/reacting-to-state-of-css-survey)
- [State of CSS 2023](https://2023.stateofcss.com/en-US)
- **[01:15](#t=01:15)** Syntax Brought to you by Sentry
- **[01:29](#t=01:29)** CSS Frameworks
- [Bootstrap · The most popular HTML, CSS, and JS library in the world.](https://getbootstrap.com/)
- [Open Props: sub-atomic styles](https://open-props.style/)
- [Lightning CSS](https://lightningcss.dev/)
- **[10:57](#t=10:57)** How happy are you with CSS frameworks?
- **[17:21](#t=17:21)** Other tools
- [CSS Analytics - Project Wallace](https://www.projectwallace.com/)
- **[19:34](#t=19:34)** Top utilities in use
- **[24:48](#t=24:48)** Browser usage
- **[29:01](#t=29:01)** CSS usage
- **[33:25](#t=33:25)** Browser incompatibilities
- **[36:42](#t=36:42)** SVG and CSS
- **[44:28](#t=44:28)** Resources for learning CSS
- [Kevin Powell | CSS Evangelist](https://www.kevinpowell.co/)
- [Fireship - Learn to Code Faster](https://fireship.io/)
- [LeveUp Tutorials](https://levelup.video)
- **[46:55](#t=46:55)** Awards
- [Panda CSS - Build modern websites using build time and type-safe CSS-in-JS](https://panda-css.com/)
- **[50:48](#t=50:48)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [A Timeline of the 1970s Heavyweight Boxing Division (Boxing Documentary)](https://www.youtube.com/watch?v=10WIyMo6B94) / [Full Boxing Timelines](https://www.youtube.com/playlist?list=PL40wI-jI7SK7YD5ZLtulDl2HgY6Q5SQhQ)
- Wes: [NEIKO 10181A Step Drill Bit Set](https://www.amazon.ca/dp/B07B4LCWC4?sbo=RZvfv//HxDF+O5021pAnSA&crid=33NN1VW7R08YX&keywords=step+drill+bits&sprefix=step+drill+bits,aps,110&language=en_US&th=1&sr=8-3&linkCode=gs2&linkId=37a38f2588f4e6ce7f01d30fd071f294&tag=isi777-20)

## Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",698ca9026d210c7c3c5b01655511423cfe4857d9de08b6df316a8220c7c08272,the-2023-state-of-css-survey-part-2-css-frameworks-tooling-browser-usage,/shows/678 - tasty.md,2023-10-20 14:29:56.166,2023-10-27 15:58:22.762,TASTY
syntax_podcast_show_00679,679,"Creator of Swift, Tesla Autopilot & Tensorflow. New AI language Mojo with Chris Lattner",2023-10-13 12:00:00.832,https://traffic.libsyn.com/syntax/Syntax_-_679.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Chris Lattner about Mojo, a new programming language for AI developers. Should developers learn Python? Where does Mojo run? What is Chris excited about in AI's future?

## Show Notes

- **[00:31](#t=00:31)** Welcome
- **[01:05](#t=01:05)** Introducing Chris Lattner
- [Chris Lattner's Homepage](https://www.nondot.org/sabre/)
- [Chris Lattner on Wikipedia](https://en.wikipedia.org/wiki/Chris_Lattner)
- [Chris Lattner on GitHub](https://github.com/lattner)
- [Chris Lattner on Twitter](https://twitter.com/clattner_llvm?lang=en)
- [Modular (@Modular_AI) / X](https://twitter.com/Modular_AI)
- [Modular: AI development starts here](https://www.modular.com/)
- [Swift.org - Welcome to Swift.org](https://www.swift.org/)
- **[03:50](#t=03:50)** What's the history behind the hardware?
- **[08:10](#t=08:10)** What's the difference between a compiled language vs an interpreted language?
- **[12:13](#t=12:13)** Is Mojo a programming language?
- [Mojo 🔥: Programming language for all of AI](https://www.modular.com/mojo)
- **[15:12](#t=15:12)** Are Python libraries compatible with Mojo?
- **[15:26](#t=15:26)** Why did you choose Python?
- **[16:49](#t=16:49)** Why is AI so Python focused?
- **[19:19](#t=19:19)** Should web developers learn Python?
- **[21:40](#t=21:40)** Where does Mojo run?
- **[25:05](#t=25:05)** How did you use the flame emoji for the Mojo file extension?
- **[29:05](#t=29:05)** How does machine learning actually work?
- **[37:36](#t=37:36)** Will Mojo be open source in some way?
- **[39:16](#t=39:16)** How do you start developing a new programming language?
- **[43:14](#t=43:14)** What is the future of developer jobs?
- **[45:30](#t=45:30)** What are you excited about with AI in the future?
- **[47:24](#t=47:24)** Supper Club questions
- [Welcome to a World of OCaml](https://ocaml.org/)
- **[52:59](#t=52:59)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Exercise

## Shameless Plugs

- [Mojo 🔥: Programming language for all of AI](https://www.modular.com/mojo)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",04be27954ac186fca3175b9814e2d3075420e399091b34c0e7d21b2612a84fcd,creator-of-swift-tesla-autopilot-and-tensorflow-new-ai-language-mojo-with-chris-lattner,/shows/679 - supper Chris.md,2023-10-20 14:29:56.205,2023-10-27 15:58:22.822,SUPPER
syntax_podcast_show_00680,680,Getting jQuery’d × Honourable Deaths of libraries We Don’t Use Anymore,2023-10-16 12:00:00.465,https://traffic.libsyn.com/syntax/Syntax_-_680.mp3,"
In this Hasty Treat, Scott and Wes talk about all the libraries we don't need to use anymore thanks to their features being built into the browsers now.

## Show Notes

- **[00:24](#t=00:24)** Welcome
- **[01:55](#t=01:55)** Syntax Brought to you by Sentry
- **[02:17](#t=02:17)** Why did people use jQuery?
- [jQuery](https://jquery.com/)
- [lukeed/polka: A micro web server so fast, it'll make you dance!](https://github.com/lukeed/polka)
- **[05:12](#t=05:12)** Writing our own jQuery plugins
- **[07:23](#t=07:23)** AJAX requests
- [jQuery.ajax()](https://api.jquery.com/jquery.ajax/)
- **[08:29](#t=08:29)** Express
- [Migrating to Express 5](https://expressjs.com/en/guide/migrating-5.html)
- **[14:58](#t=14:58)** Underscore.JS
- [Underscore.js](https://underscorejs.org/)
- **[19:27](#t=19:27)** Require.js
- [RequireJS](https://requirejs.org/)
- **[21:06](#t=21:06)** LeftPad
- [Coder unpublished 17 lines of JavaScript and “broke the Internet” | Ars Technica](https://arstechnica.com/information-technology/2016/03/rage-quit-coder-unpublished-17-lines-of-javascript-and-broke-the-internet/)
- **[23:13](#t=23:13)** Grid systems
- [960 Grid System](https://960.gs/)
- [Susy | OddBird](https://www.oddbird.net/susy/)
- **[26:24](#t=26:24)** Sass, Less, etc.
- [Can Vanilla CSS Replace Sass Yet? — Syntax Podcast 603](https://syntax.fm/show/603/can-vanilla-css-replace-sass-yet)
- **[26:58](#t=26:58)** Sockets.io
- [Socket.IO](https://socket.io/)
- **[29:50](#t=29:50)** What else is going to get jQuery'd?

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",de08e12534f4d86c2906d13dd5c1eaee5c0c31222fc4fb6005e2a5549727dcaf,getting-jquery-d-honourable-deaths-of-libraries-we-don-t-use-anymore,/shows/680 - hasty jquery.md,2023-10-20 14:29:56.243,2023-10-27 15:58:22.958,HASTY
syntax_podcast_show_00681,681,"What's New in AI for Web Developers",2023-10-18 12:00:00.351,https://traffic.libsyn.com/syntax/Syntax_-_681.mp3,"
In this episode of Syntax, Wes and Scott talk through recent developments in AI and how they might be useful for developers, whether AI is still worthy of the hype, and whether developer jobs are at risk from AI.

## Show Notes

- **[00:10](#t=00:10)** Welcome
- **[03:10](#t=03:10)** Syntax Brought to you by Sentry
- **[03:49](#t=03:49)** v0.dev
- [v0 by Vercel](https://v0.dev/)
- **[09:28](#t=09:28)** Anthropic and Claude
- [Claude](https://claude.ai/)
- [Syntax Listener Survey](https://wcqk05xik6u.typeform.com/to/gN54Y7kd)
- **[18:02](#t=18:02)** Facebook's Meta AI
- [AI at Meta](https://ai.meta.com/)
- **[18:48](#t=18:48)** Cloudflare AI
- [Large language model (LLM)](https://developers.cloudflare.com/workers-ai/models/llm/)
- [Speech to text](https://developers.cloudflare.com/workers-ai/models/speech-to-text/)
- [Translation](https://developers.cloudflare.com/workers-ai/models/translation/)
- [Sentiment Analysis](https://developers.cloudflare.com/workers-ai/models/sentiment-analysis/)
- [Image classification](https://developers.cloudflare.com/workers-ai/models/image-classification/)
- [Embedding](https://developers.cloudflare.com/workers-ai/models/embedding/)
- **[27:24](#t=27:24)** AI Hardware announced
- [Rewind](https://www.rewind.ai/)
- **[29:39](#t=29:39)** Cloudflare Hugging face
- [Hugging Face – The AI community building the future.](https://huggingface.co/)
- [StarCoder: A State-of-the-Art LLM for Code](https://huggingface.co/blog/starcoder)
- [Vectorize: a vector database for shipping AI-powered applications](https://blog.cloudflare.com/vectorize-vector-database-open-beta/)
- **[36:28](#t=36:28)** OpenAI Function calling
- [Function calling and other API updates](https://openai.com/blog/function-calling-and-other-api-updates)
- **[38:55](#t=38:55)** GPT-4V
- [GPT-4V(ision) system card](https://openai.com/research/gpt-4v-system-card)
- **[42:36](#t=42:36)** GitHub CoPilot
- **[44:03](#t=44:03)** Are we still on the AI hype train?
- **[48:27](#t=48:27)** Are our jobs at risk as developers?
- **[52:24](#t=52:24)** Spotify DJ AI
- [Spotify Debuts a New AI DJ](https://newsroom.spotify.com/2023-02-22/spotify-debuts-a-new-ai-dj-right-in-your-pocket/)
- **[53:29](#t=53:29)** ChatGPT plugins
- [ChatGPT plugins](https://openai.com/blog/chatgpt-plugins)
- **[55:19](#t=55:19)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [Coding App for Kids | codeSpark Academy](https://codespark.com/)
- Wes: [Peter Santenello](https://www.youtube.com/channel/UC3Vuq4Q1bKFtAiKYlwRv3oA), [Roblox](https://www.roblox.com/)

## Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",27bbe9d7595742e94378adaa8f290b142b4102586f2ec63ee9b459f26082cc42,what-s-new-in-ai-for-web-developers,/shows/681 - AI.md,2023-10-20 14:29:56.280,2023-10-27 15:58:23.012,TASTY
syntax_podcast_show_00682,682,Design Systems with Brad Frost,2023-10-20 12:00:00.320,https://traffic.libsyn.com/syntax/Syntax_-_682.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Brad Frost about how to implement design systems in small and large scale projects, best practices around naming things, keeping everything in sync across different codebases, and how design systems help projects.

## Show Notes

- **[00:32](#t=00:32)** Welcome
- **[01:02](#t=01:02)** Syntax Brought to you by Sentry
- **[01:34](#t=01:34)** Introducing Brad Frost
- [Brad Frost.com](https://bradfrost.com/)
- [Atomic Design by Brad Frost](https://atomicdesign.bradfrost.com/)
- [Brad (@brad_frost) on Twitter](https://twitter.com/brad_frost)
- [Brad on LinkedIn](https://www.linkedin.com/in/bradfrost/)
- [Brad on Mastodon](https://mastodon.social/@brad_frost)
- [Brad on YouTube](https://www.youtube.com/@brad_frost)
- [Brad on GitHub](https://github.com/bradfrost)
- [Brad Frost on CodePen](https://codepen.io/bradfrost/)
- [Big Medium | Design for What's Next](https://bigmedium.com/)
- **[06:43](#t=06:43)** What is a design system?
- **[12:12](#t=12:12)** How do you keep design and code in sync?
- [Material Design](https://m3.material.io/)
- [Shopify Polaris](https://polaris.shopify.com/)
- [Carbon Design System](https://carbondesignsystem.com/)
- [The Design System Ecosystem | Brad Frost](https://bradfrost.com/blog/post/the-design-system-ecosystem/)
- **[16:13](#t=16:13)** How do you use Shopify, WordPress, React, etc. through a design system?
- **[19:41](#t=19:41)** How is CSS handled?
- **[25:40](#t=25:40)** What's the benefit of going all in on web components?
- **[29:13](#t=29:13)** Do small startups need to worry about design systems?
- **[33:03](#t=33:03)** How do design tokens work?
- **[38:17](#t=38:17)** How do you deal with pushback on design systems?
- **[41:46](#t=41:46)** How do you go outside the guidelines?
- **[45:24](#t=45:24)** What system do you use for naming things?
- **[49:34](#t=49:34)** How do you best document your language choices?
- **[51:09](#t=51:09)** Supper Club questions
- [Thinking in Systems: International Bestseller: Donella H. Meadows, Diana Wright: 9781603580557: Amazon.com: Books](https://www.amazon.com/Thinking-Systems-Donella-H-Meadows/dp/1603580557)
- [Miriam Eric Suzanne](https://www.miriamsuzanne.com/)
- [Zeldman on Web and Interaction Design - Famous for stating the obvious.](https://www.zeldman.com/)
- **[57:54](#t=57:54)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- [Rubblebucket](https://en.wikipedia.org/wiki/Rubblebucket)

## Shameless Plugs

- [Frostapalooza! | Brad Frost](https://bradfrost.com/blog/post/frostapalooza/)
- [FROSTAPALOOZA - A Concert Party Happening On August 17th 2024](https://40.bradfrost.com/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",e4aefde20096b354224d03150e07b20bf4b4e94de165ee1ef06f1dbc3b08d13c,design-systems-with-brad-frost,/shows/682 - supper Brad.md,2023-10-20 14:29:56.315,2023-10-27 15:58:23.079,SUPPER
syntax_podcast_show_00683,683,Spooky Coding Horror Stories 2023 - Part 1,2023-10-23 12:00:00.366,https://traffic.libsyn.com/syntax/Syntax_-_683_v2.mp3,"
In this Hasty Treat, Scott and Wes relate some spooky listener submitted coding horrors including updates for a large furniture retailer, pull request oversights, disallowing everything in a robots.txt, massive email fail, and more.

## Show Notes

- **[00:21](#t=00:21)** Welcome
- **[01:22](#t=01:22)** Whetting your whistle
- **[01:52](#t=01:52)** Syntax Brought to you by Sentry
- **[02:13](#t=02:13)** Site updates for one of the largest furniture retailers in my country
- **[04:18](#t=04:18)** The Embarrassing Test Page Incident
- **[05:54](#t=05:54)** The Pull Request Oversight
- **[08:02](#t=08:02)** Making changes to a JSON file
- **[13:11](#t=13:11)** Deploying a ""disallow everything"" robots.txt
- **[14:45](#t=14:45)** GDPR Deletion
- **[16:11](#t=16:11)** Dropping the backing disk for the production postgres
- **[17:05](#t=17:05)** Accidentally pushing staging code as an update
- **[18:34](#t=18:34)** Email fail
- **[19:25](#t=19:25)** Hot mobile app prayers
- **[22:28](#t=22:28)** Bogus ACH info
- **[23:51](#t=23:51)** Wiring money error
- **[26:44](#t=26:44)** Payment gateway test not production

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",5d28ad2b19f761e6bffdd20341d420bb4b47bd37af24b626795ede03dc63b1bd,spooky-coding-horror-stories-2023-part-1,/shows/683 - hasty.md,2023-10-20 14:29:56.355,2023-10-27 15:58:23.256,HASTY
syntax_podcast_show_00684,684,Spooky Coding Horror Stories 2023 - Part 2,2023-10-25 12:00:00.009,https://traffic.libsyn.com/syntax/Syntax_-_684.mp3,"
In this episode of Syntax, Wes and Scott relate even more spooky listener submitted coding horrors including crypto copy paste, Big Brother bug, losing $50,000, 2,000 SMS, a $20,000 hour, and more.

## Show Notes

- **[00:09](#t=00:09)** Velcome to Synax
- **[01:09](#t=01:09)** Syntax Brought to you by Sentry
- **[01:36](#t=01:36)** Stories are anonymous!
- **[01:57](#t=01:57)** Crypto copy + paste
- **[03:48](#t=03:48)** Big Brother Bug
- **[07:00](#t=07:00)** One of 6 laptops that can fix npm
- **[07:57](#t=07:57)** Auto-submitting payments
- **[09:42](#t=09:42)** 40,000 orders shipped and refunded
- **[11:16](#t=11:16)** Dropping the analytics database
- **[11:40](#t=11:40)** dev was actually production
- **[12:40](#t=12:40)** Updating the DNS
- **[13:40](#t=13:40)** Losing ~$50,000
- **[15:30](#t=15:30)** Clearing 80 million records
- **[16:21](#t=16:21)** Web chat DDoS
- **[18:00](#t=18:00)** URL Shortener #$@%#
- [Ontario's rejected licence plates for 2022 | CP24.com](https://www.cp24.com/news/these-are-ontario-s-rejected-licence-plates-from-2022-1.6217558)
- [Boonta Vista: A ""political"" podcast for ""smart"" people](https://www.boontavista.com/)
- **[21:12](#t=21:12)** Sending an email to 20,000 users
- **[21:42](#t=21:42)** Moving code to GitHub
- **[23:32](#t=23:32)** ""Lorem sale""
- **[26:08](#t=26:08)** 2,000 SMS messages
- **[27:00](#t=27:00)** International shipment of kiosks
- **[28:19](#t=28:19)** Crashing production
- [Slow DB Queries | Sentry Documentation](https://docs.sentry.io/product/issues/issue-details/performance-issues/slow-db-queries/)
- **[31:01](#t=31:01)** Hitting customers credit card limit
- **[32:01](#t=32:01)** Infinite redirect loop
- **[32:53](#t=32:53)** My first commit
- **[33:23](#t=33:23)** Augmented reality game prize mistakes
- **[35:15](#t=35:15)** A $20,000 hour
- **[35:57](#t=35:57)** Site went down for 3 days
- **[37:42](#t=37:42)** Accidentally truncated the prod database
- **[38:48](#t=38:48)** Off by one error
- **[40:05](#t=40:05)** Exposing database credentials
- **[42:08](#t=42:08)** Delete a temp directory on prod
- **[44:51](#t=44:51)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [Race to the Summit](https://www.netflix.com/browse/genre/34399?jbv=81517219)
- Wes: [100LBS Strong Magnetic Hooks](https://www.amazon.ca/dp/B0CDH1BGS1?crid=PCR6UZRJ5ZTG&keywords=100lb+magnet&sprefix=100lb+magnet,aps,107&th=1&language=en_US&sr=8-5&linkCode=gs2&linkId=49131cd489767398fb3486d6edbe91fd&tag=isi777-20)

## Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",4d4b8648558487ae67b586ecc3b83c1929a36aabed38052898293d1b73f4d980,spooky-coding-horror-stories-2023-part-2,/shows/684 - tasty scary.md,2023-10-20 14:29:56.404,2023-10-27 15:58:23.314,TASTY
syntax_podcast_show_00685,685,"Jason Lengstorf on Live Streaming, Creating Content, and Building a Studio Space",2023-10-27 12:00:00.510,https://traffic.libsyn.com/syntax/Syntax_-_685.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Jason Lengstorf about his journey in video creation, live streaming, and tech education. What's up with Jason's new studio? How does he prep for a live stream? 

### Show Notes

* **[00:32](#t=00:32)** Welcome
* **[02:21](#t=02:21)** Syntax Brought to you by Sentry
* **[02:39](#t=02:39)** Who is Jason Lengstorf?
* **[05:43](#t=05:43)** Why did you decide to go full time on Learn with Jason?
* **[10:04](#t=10:04)** Jason's new YouTube series idea
* **[13:36](#t=13:36)** Jason gets a special delivery
* **[14:30](#t=14:30)** What's in Jason's new studio?
* **[20:14](#t=20:14)** What's the ideal medium for content in 2023?
* **[24:28](#t=24:28)** Treat decisions as forever, for now.
* **[26:01](#t=26:01)** Is live streaming as difficult to get into as it seems?
* **[29:21](#t=29:21)** How do you prepare for a live stream?
* **[32:58](#t=32:58)** How do you decide what to create?
* **[38:23](#t=38:23)** How do you feel about React?
* **[40:21](#t=40:21)** What are your thoughts on AI?
* **[49:08](#t=49:08)** Supper Club questions
* **[56:25](#t=56:25)** Sick Picks

- [Sarah Drasner's Site](https://sarah.dev/)
- [Animation With Svelte (with Scott Tolinski) — Learn With Jason](https://www.youtube.com/watch?v=vxCWZlVLEcY)
- [Gatsby](https://www.gatsbyjs.com/)
- [Netlify](https://www.netlify.com/)
- [Jessica Kobeissi](https://www.youtube.com/jessicakobeissi)
- [ANDREW HUANG](https://www.youtube.com/channel/UCdcemy56JtVTrsFIOoqvV8g)
- [Theo Browne](https://t3.gg/)
- [Cassidy Williams](https://cassidoo.co/)
- [Bytes - The Best JavaScript Newsletter](https://bytes.dev/)
- [ZSA Moonlander:](https://www.zsa.io/moonlander/)
- [ErgoDox EZ](https://ergodox-ez.com/)
- [Operator Fonts](https://www.typography.com/fonts/operator/overview/)
- [Night Owl](https://marketplace.visualstudio.com/items?itemName=sdras.night-owl)
- [SyntaxFM by SyntaxFM](https://vscodethemes.com/e/syntaxfm.syntaxfm/syntax-fm)
- [MD IO](https://mass-driver.com/typefaces/md-io)
- [ILME-FX3 | Interchangeable-lens Cameras](https://www.sony.ca/en/interchangeable-lens-cameras/products/ilme-fx3)
- [FE 24-70 mm F2.8 GM](https://www.sony.ca/en/electronics/camera-lenses/sel2470gm)


### Sick Picks

- [Synergy - Share one mouse & keyboard across computers](https://symless.com/synergy)

### Shameless Plugs

[LearnWithJason.dev: Learn. Build. Grow. Together.](https://www.learnwithjason.dev/)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",082d309c9c79f5fa220605d0d58f55d5584bc222987de0389b630d4feefb9ea5,jason-lengstorf-on-live-streaming-creating-content-and-building-a-studio-space,/shows/685 - supper Jason.md,2023-10-27 15:58:23.386,2023-10-27 15:58:23.386,SUPPER
syntax_podcast_show_00686,686,We Need Your Help With The Secret Sauce,2023-10-30 12:00:00.061,https://traffic.libsyn.com/syntax/Syntax_-_686.mp3,"
In this Hasty Treat, Scott and Wes talk about the secret sauce that's going into the creation of the new Syntax.fm website including the styling, search, tooling, database, hosting, and more.

## Show Notes

- **[00:21:15](#t=00:21:15)** Welcome
- **[01:10:11](#t=01:10:11)** Where did the name ""Secret Sauce"" come from?
- **[03:16:00](#t=03:16:00)** Syntax Brought to you by Sentry
- **[04:32:11](#t=04:32:11)** What Syntax.fm is built in?
- [SvelteKit • Web development, streamlined](https://kit.svelte.dev/)
- [muxinc/media-chrome](https://github.com/muxinc/media-chrome)
- [Media Chrome Docs](https://www.media-chrome.org/)
- **[07:24:01](#t=07:24:01)** How we're doing search
- [flexsearch - npm](https://www.npmjs.com/package/flexsearch)
- **[12:22:20](#t=12:22:20)** Styling
- [Prettier · Opinionated Code Formatter](https://prettier.io/)
- [PostCSS - a tool for transforming CSS with JavaScript](https://postcss.org/)
- **[16:00:05](#t=16:00:05)** Tooling
- [Fast, disk space efficient package manager | pnpm](https://pnpm.io/)
- **[18:55:11](#t=18:55:11)** Database
- [Prisma | Next-generation ORM for Node.js & TypeScript](https://www.prisma.io/)
- **[21:11:11](#t=21:11:11)** Services
- [Deepgram](https://deepgram.com/)
- [OpenAI](https://openai.com/)
- [Anthropic \ Introducing Claude](https://www.anthropic.com/index/introducing-claude)
- **[24:34:11](#t=24:34:11)** Hosting
- [Vercel: Develop. Preview. Ship. For the best frontend teams](https://vercel.com/)
- [PlanetScale: The world’s most advanced database platform — PlanetScale](https://planetscale.com/)
- [Cloudflare - The Web Performance & Security Company | Cloudflare](https://www.cloudflare.com/)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",3d2ff37d053deee448d845570ec5d68d7c05027d9d1a186805f1c6dfed448d87,we-need-your-help-with-the-secret-sauce,/shows/686 - hasty secret.md,2023-10-20 14:29:56.446,2023-10-27 15:58:23.538,HASTY
syntax_podcast_show_00687,687,Hosting NextJS × Spicy Sidedishes × Modern Forms × Abandoning TypeScript,2023-11-01 12:00:00.120,https://traffic.libsyn.com/syntax/Syntax_-_687.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions about hosting NextJS, spicy sidedishes, putting forms in modern websites, why is everyone abandoning TypeScript, CSS Survey follow up, do devs need to be into CSS, and more!

## Show Notes

- **[00:10](#t=00:10)** How to submit a question to Syntax
- [Syntax Potluck Listener Questions](https://docs.google.com/forms/d/e/1FAIpQLSfQlAo1wXHiJMySdU-h8QMtfoz92aMS9eycEHXB6eRCLh8KHA/viewform?pli=1)
- **[00:45](#t=00:45)** Syntax meet up in Toronto
- **[02:11](#t=02:11)** Syntax Brought to you by Sentry
- **[02:36](#t=02:36)** Vendor lock in with NextJS?
- [Next.js by Vercel](https://nextjs.org/)
- [Vercel](https://vercel.com/)
- [SST](https://sst.dev/)
- [Supper Club × Next.js on AWS + Serverless with Dax Raad — Syntax Podcast 589](https://syntax.fm/show/589/supper-club-next-js-on-aws-serverless-with-dax-raad)
- [Cloudflare Pages](https://pages.cloudflare.com/)
- [Netlify](https://www.netlify.com/)
- [Open source Next.js serverless adapter](https://github.com/sst/open-next)
- **[09:48](#t=09:48)** 🌶️ Spicy Sidedish: Stop calling Firefox the new IE
- [Jen Simmons](https://jensimmons.com/)
- **[16:40](#t=16:40)** Can you compare Database as a service and provide your recommendation and suggestions?
- [“Serverless” Databases — Syntax Podcast 551](https://syntax.fm/show/551/serverless-databases)
- [PlanetScale](https://planetscale.com/)
- [Firebase](https://firebase.google.com/)
- **[20:00](#t=20:00)** How do I do native forms outside of CMS like WordPress?
- [Builder.io](https://www.builder.io/)
- **[28:01](#t=28:01)** Why have Svelte and Turbo abandoned Typescript?
- **[32:17](#t=32:17)** Why are companies hesitant to migrate to Next?
- **[33:36](#t=33:36)** Is React Native dead?
- **[38:33](#t=38:33)** Do I use the keyword ""new"" when throwing an Error or not?
- **[41:59](#t=41:59)** `touch-action` use case
- [Announcing Quina](https://joshcollinsworth.com/blog/announcing-quina-my-first-app)
- [Quina - Menu](https://quina.app/)
- [Announcing Hondo](https://joshcollinsworth.com/blog/announcing-hondo)
- [Hondo - a word game in 100 words or less](https://www.playhondo.com/)
- **[42:57](#t=42:57)** Subgrid and the :has selector usage
- **[46:02](#t=46:02)** Is it okay to be a front end developer and not be as interested in CSS?
- [Tool Academy (American TV series)](<https://en.wikipedia.org/wiki/Tool_Academy_(American_TV_series)>)
- **[51:12](#t=51:12)** Could you explain what are workers, processes, jobs, tasks, and deamons?
- **[56:29](#t=56:29)** SIIIIICK ××× PIIIICKS ×××

## ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [Infamous International: The Pink Panthers Story](https://wondery.com/shows/infamous-international-the-pink-panthers-story/#:~:text=The%20Pink%20Panthers%20are%20the,but%20net%20millions.)
- Wes: [PowerBlock Adjustable Dumbbells For Home Gym & Commercial Use](https://powerblock.com/)
- [Syntax episode 3](https://beta.syntax.fm/shows/3/css-preprocessors-and-structuring-css)

## Shameless Plugs

- Scott: [Syntax on TikTok](https://www.tiktok.com/@syntaxfm)
- Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

## Tweet us your tasty treats

- [Scott's Instagram](https://www.instagram.com/stolinski/)
- [LevelUpTutorials Instagram](https://www.instagram.com/LevelUpTutorials/)
- [Wes' Instagram](https://www.instagram.com/wesbos/)
- [Wes' Twitter](https://twitter.com/wesbos)
- [Wes' Facebook](https://www.facebook.com/wesbos.developer)
- [Scott's Twitter](https://twitter.com/stolinski)
- Make sure to include [@SyntaxFM](https://twitter.com/SyntaxFM) in your tweets
- [Wes Bos on Bluesky](https://bsky.app/profile/wesbos.com)
- [Scott on Bluesky](https://bsky.app/profile/tolin.ski)
- [Syntax on Bluesky](https://bsky.app/profile/syntax.fm)
",5cde22325c3a7431d8386462a518220b9c69bd507d8b1dbc3f7b47b9295ee943,hosting-nextjs-spicy-sidedishes-modern-forms-abandoning-typescript,/shows/687 - tasty.md,2023-10-20 14:29:56.492,2023-10-27 15:58:23.583,TASTY
syntax_podcast_show_00688,688,Ex-npm Employee Making a New Package Manager?! Vlt with Darcy Clarke,2023-11-03 12:00:00.605,https://traffic.libsyn.com/syntax/Syntax_-_688.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Darcy Clarke about his career path in tech, working with Wes back in the day, why he decided to build vlt volt, and the biggest sick pick list yet!

### Show Notes

- **[00:32](#t=00:32)** Welcome
- **[01:38](#t=01:38)** Building a tweet wall back in the day
- **[08:54](#t=08:54)** How did you land at npm?
- [npm](https://www.npmjs.com/)
- **[19:40](#t=19:40)** Why do we need another package manager and registry?
- **[22:11](#t=22:11)** What is vlt volt?
- [vlt: a new home for open source](https://www.vlt.sh/)
- [vlt /vōlt/ (@vltpkg) / X](https://twitter.com/vltpkg)
- [Shipping ESM with Mark Erikson](https://syntax.fm/show/661/supper-club-shipping-esm-with-mark-erikson)
- [Bun](https://bun.sh/)
- [Yarn](https://yarnpkg.com/)
- [Nx](https://nx.dev/)
- **[27:18](#t=27:18)** Do you see a future where we don't pre-compile before shipping?
- **[29:32](#t=29:32)** Why would pnpm be faster than npm?
- **[31:14](#t=31:14)** What are the problems with symlinking?
- **[33:08](#t=33:08)** What's happening with Yarn?
- [Verdaccio](https://verdaccio.org/)
- [Cloudsmith](https://cloudsmith.com/)
- [jfrong](https://jfrog.com/)
- [Sonatype](https://www.sonatype.com/products/sonatype-nexus-repository)
- [socket.dev](https://socket.dev/)
- [Snyk.io](https://snyk.io/)
- [Dependency Confusion](https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610)
- **[37:42](#t=37:42)** What do you think about config files?
- [antfu Config of File Nesting for VS Code](https://github.com/antfu/vscode-file-nesting-config)
- [The massive bug at the heart of the npm ecosystem](https://blog.vlt.sh/blog/the-massive-hole-in-the-npm-ecosystem)
- [WebTorrent](https://webtorrent.io/)
- **[41:02](#t=41:02)** VS Code tip - file nesting patterns
- **[41:59](#t=41:59)** How does on-prem registry work?
- **[47:29](#t=47:29)** Where does Socket.dev and Snyk security fit?
- **[52:46](#t=52:46)** Sick Picks
- **[04:41](#t=04:41)** How did you get vlt.sh?
- **[05:30](#t=05:30)** How did you get @Darcy?

### Sick Picks

- [Flat Coat Goldendoodle](https://doodledoods.com/flat-coat-goldendoodle-unfurnished/)
- [Scientific American](https://www.scientificamerican.com/)
- [Nespresso](https://www.nespresso.com/us/en/)
- [BlackBerry (2023) - IMDb](https://www.imdb.com/title/tt21867434/)
- [BlackBerry (2023) Letterboxd](https://letterboxd.com/film/blackberry-2023/)
- [Matthias Wandel](https://www.youtube.com/@Matthiaswandel/search?query=movie)
- [Blink-182 Official Site](https://www.blink182.com/)
- [Moneen](https://en.wikipedia.org/wiki/Moneen)
- [Bring Me The Horizon](https://www.bmthofficial.com/)

### Shameless Plugs

- [vlt: a new home for open source](https://www.vlt.sh/)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",b01ec758c5348d730275cf86c818e1313ae6ac7a97a8e24e0a012e3129515cb2,ex-npm-employee-making-a-new-package-manager-vlt-with-darcy-clarke,/shows/688 - supper Darcy.md,2023-11-03 13:46:53.903,2023-11-03 13:46:53.903,SUPPER
syntax_podcast_show_00689,689,You Should Be Using JavaScript Maps & Sets,2023-11-06 12:00:00.311,https://traffic.libsyn.com/syntax/Syntax_-_689.mp3,"
In this episode of Syntax, Wes and Scott talk about why you should be using JavaScript maps sets, whether you can access them directly, what makes them great, and what weak versions of both are.

### Show Notes

* **[00:26](#t=00:26)** Welcome
* **[01:34](#t=01:34)** Syntax Brought to you by Sentry
* **[01:54](#t=01:54)** What makes Maps a spicy buffalo object?
* **[07:46](#t=07:46)** API of Map
* **[08:51](#t=08:51)** Looping over items in a Map
* **[09:27](#t=09:27)** Can you change the size of a map after it's been created?
* **[10:07](#t=10:07)** Can you access properties directly?
* **[12:13](#t=12:13)** Where have we used a map as a cache?
* **[13:32](#t=13:32)** What makes a set an array honey garlic array?
* **[17:28](#t=17:28)** When should you be using sets instead of an array?
* [Proposed Highlight API is built on Sets](https://developer.mozilla.org/en-US/docs/Web/API/Highlight)
* **[21:47](#t=21:47)** Can you spread sets like an array?
* **[22:40](#t=22:40)** Weak versions of map and set
* [WeakMap and Garbage collection](https://github.com/wesbos/es6-articles/blob/master/66%20-%20WeakMap%20and%20Garbage%20Collection.md)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",d3eecc5defd6f7e3c9949d2fefcb3889fedacb2339f63c4cf935b91454ec0027,you-should-be-using-javascript-maps-and-sets,/shows/689 - hasty.md,2023-11-03 13:46:54.037,2023-11-03 13:46:54.037,HASTY
syntax_podcast_show_00690,690,How To Dark Mode and Beyond,2023-11-08 13:00:00.939,https://traffic.libsyn.com/syntax/Syntax_-_690_v2.mp3,"
In this episode of Syntax, Wes and Scott talk about the process they are using for extending the Syntax website with themes, including a dark mode and secret custom themes. They also talk about issues encountered with theming and CSS, including flashes of un-themed content.

### Show Notes

- **[00:00](#t=00:00)** Syntax + Sentry Announcement!
- **[01:35](#t=01:35)** Welcome
- **[02:23](#t=02:23)** Syntax Brought to you by Sentry
- **[03:16](#t=03:16)** How to implement a theme
- **[10:27](#t=10:27)** Writing the CSS
- **[11:38](#t=11:38)** Glasses wearers protip
- **[13:02](#t=13:02)** Class on the body and server side rendering issue
- **[14:02](#t=14:02)** CSS Variables
- **[15:05](#t=15:05)** Color variables in CSS
- **[21:07](#t=21:07)** Working in half pixel sizes
- **[22:40](#t=22:40)** Variable usage
- **[25:23](#t=25:23)** Naming variables after what they style
- **[30:42](#t=30:42)** Component level variables
- **[33:27](#t=33:27)** Using zones
- **[38:41](#t=38:41)** Themes should be defined as light or dark
- **[39:20](#t=39:20)** Issues: Moving from light to dark
- **[42:29](#t=42:29)** Issues: Drop shadow in dark mode
- **[44:00](#t=44:00)** Issues: Flash of unthemed content
- **[44:40](#t=44:40)** Issues: Opacity values
- **[49:45](#t=49:45)** Issues: SVG need change color
- **[55:56](#t=55:56)** Help is on the way!
- **[59:57](#t=59:57)** SIIIIICK ××× PIIIICKS ×××

* [website/src/styles/themes/level-up.css at v2](https://github.com/syntaxfm/website/blob/v2/src/styles/themes/level-up.css)
* [The 2023 State of CSS Survey Part 2 × CSS Frameworks × Tooling × Browser Usage](https://syntax.fm/show/678/the-2023-state-of-css-survey-part-2-css-frameworks-tooling-browser-usage)
* [""color-contrast"" | Can I use... Support tables for HTML5, CSS3, etc](https://caniuse.com/?search=color-contrast)
* [The Future of CSS: Easy Light-Dark Mode Color Switching with light-dark() – Bram.us](https://www.bram.us/2023/10/09/the-future-of-css-easy-light-dark-mode-color-switching-with-light-dark/)

### ××× SIIIIICK ××× PIIIICKS ×××

- Scott: [Kala (@engineer.everything)](https://www.tiktok.com/@engineer.everything)

### Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Tutorials](https://wesbos.com/courses)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)
",8c2fbc9e48d855314554a971e1bd45950df4c5702e1cf52eb3f320a44c50e7d0,how-to-dark-mode-and-beyond,/shows/690 - Tasty Dark mode.md,2023-10-25 15:22:59.465,2023-11-07 21:00:31.880,TASTY
syntax_podcast_show_00691,691,Cloudflare Workers Are Next Level With Rita Kozlov And Brendan Irvine-Broque,2023-11-10 12:00:00.000,https://traffic.libsyn.com/syntax/Syntax_-_691.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Rita Kozlov And Brendan Irvine-Broque about Cloudflare Workers, Cloudflare AI, browser rendering API, Cloudflare's D1 database, WinterCG, miniflare, and more!

### Show Notes

* **[00:32](#t=00:32)** Welcome
* **[01:53](#t=01:53)** Syntax Brought to you by Sentry
* **[02:20](#t=02:20)** What are Cloudflare Workers?
* [Announcing WinterJS](https://wasmer.io/posts/announcing-winterjs-service-workers)
* [Cloudflare Workers®](https://workers.cloudflare.com/)
* [Puppeteer | Puppeteer](https://pptr.dev/)
* **[06:23](#t=06:23)** How long did Workers take to ship?
* **[07:31](#t=07:31)** Can you run your entire business on Cloudflare Workers?
* **[10:52](#t=10:52)** Interesting use cases for Cloudflare Workers
* **[12:33](#t=12:33)** What makes the edge important?
* **[18:05](#t=18:05)** Managing GDPR compliance
* **[19:02](#t=19:02)** What are the tradeoffs of building with Cloudflare Workers?
* [Cloudflare Queues](https://developers.cloudflare.com/queues/)
* **[20:22](#t=20:22)** How does Workers pricing work?
* **[26:54](#t=26:54)** What are situations where you might need longer times?
* **[28:50](#t=28:50)** Browser rendering API
* [Browser Rendering docs](https://developers.cloudflare.com/browser-rendering/)
* **[29:43](#t=29:43)** What is Cloudflare D1 database product?
* [Cloudflare D1](https://developers.cloudflare.com/d1/)
* **[31:05](#t=31:05)** Cloudflare Hyperdrive
* [Hyperdrive](https://developers.cloudflare.com/hyperdrive/)
* [“Serverless” Databases](https://syntax.fm/show/551/serverless-databases/transcript)
* **[34:27](#t=34:27)** Cloudflare Workers don't use a Node.js runtime
* [Introducing workerd: the Open Source Workers runtime](https://blog.cloudflare.com/workerd-open-source-workers-runtime/)
* **[37:13](#t=37:13)** What is WinterCG?
* [WinterCG](https://wintercg.org/)
* **[45:09](#t=45:09)** Will we ever see a standard for server routing?
* [TCP sockets · Cloudflare Workers docs](https://developers.cloudflare.com/workers/runtime-apis/tcp-sockets/)
* **[49:30](#t=49:30)** What is miniflare?
* [🔥 Miniflare · Miniflare](https://miniflare.dev/)
* **[54:05](#t=54:05)** Can I run Python on Cloudflare?
* **[55:49](#t=55:49)** Cloudflare AI
* [Partnering with Hugging Face to make deploying AI easier](https://blog.cloudflare.com/partnering-with-hugging-face-deploying-ai-easier-affordable/)
* [Cloudflare + AI](https://ai.cloudflare.com/)
* [WebGPU API](https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API)
* [Cache · Cloudflare Workers docs](https://developers.cloudflare.com/workers/runtime-apis/cache/)
* **[57:04](#t=57:04)** Supper Club questions
* **[59:38](#t=59:38)** Sick Picks

### Sick Picks

- [Get a bench scrape](https://www.amazon.com/s?k=bench+scrape&crid=BJM5NCYAM05R&sprefix=bench+scrape,aps,114)

### Shameless Plugs

- [Cloudflare Discord](https://discord.com/invite/cloudflaredev)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)
",9f84f6ac8bb0aefb9c007176560bf08bd6a234387118fe4627c74b604deb6f46,cloudflare-workers-are-next-level-with-rita-kozlov-and-brendan-irvine-broque,/shows/691 - supper.md,2023-11-03 13:46:54.074,2023-11-03 18:00:48.516,SUPPER
syntax_podcast_show_00692,692,You Need Stale While Revalidate,2023-11-13 12:00:00.396,https://traffic.libsyn.com/syntax/Syntax_-_692.mp3,"
In this episode of Syntax, Wes and Scott explain what Stale While Revalidate is, why you should use it, and explore whether you should use it all the time on all the things.

### Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:05](#t=01:05)** Syntax Brought to you by Sentry
* **[01:34](#t=01:34)** What is Stale While Revalidate?
* **[03:13](#t=03:13)** Why is caching important?
* [Max age calculator](https://svelte.dev/repl/a779692677d44146b9118e0008cbb4d0?version=3.48.0)
* [Can I Use](https://caniuse.com/mdn-http_headers_cache-control_stale-while-revalidate)
* **[05:09](#t=05:09)** Where does a cache live?
* **[07:05](#t=07:05)** Limit how often an API is being hit
* **[11:51](#t=11:51)** What about Stale while Revalidate?
* **[18:30](#t=18:30)** Why wouldn't you just use Stale While Invalidate on everything?
* [Syntax 484: Cache Control Headers Explained](https://syntax.fm/show/464/cache-control-headers-explained)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",a8c25953c7cc3421642194e41995148e7de207eddf745179c3cfd1d4ed8184f3,you-need-stale-while-revalidate,/shows/692 - hasty cache.md,2023-11-06 18:00:14.055,2023-11-06 18:00:14.055,HASTY
syntax_podcast_show_00693,693,Lessons Learned & Bugs Fixed from Launching Syntax.fm,2023-11-15 12:00:00.101,https://traffic.libsyn.com/syntax/Syntax_-_693.mp3,"
In this episode of Syntax, Wes and Scott talk about the lessons they learned while launching the new Syntax website including launching now, transcription bugs, error monitoring, black text on black backgrounds, and more.

### Show Notes

* **[00:10](#t=00:10)** Welcome to Syntax
* **[01:41](#t=01:41)** Syntax Brought to you by Sentry
* **[02:43](#t=02:43)** Don't wait. Launch!
* **[04:28](#t=04:28)** Transcript bug
* [Most Powerful Speech-to-Text API | Deepgram](https://deepgram.com/)
* **[09:01](#t=09:01)** Error monitoring is a must
* **[12:36](#t=12:36)** Timestamp error
* **[16:20](#t=16:20)** Black text on black background might hide things
* **[17:33](#t=17:33)** WASM Vercel file system
* **[21:18](#t=21:18)** Things have gotten easier to launch
* [PlanetScale: The world’s most advanced database platform — PlanetScale](https://planetscale.com/)
* **[23:36](#t=23:36)** Switching from OpenAI to Anthropic Claude and AI Responses aren’t always JSON
* **[25:34](#t=25:34)** Local dev is fast
* [Navigation API](https://developer.mozilla.org/en-US/docs/Web/API/Navigation_API)
* **[31:37](#t=31:37)** Mind your payloads
* **[32:41](#t=32:41)** GitHub Milestones
* **[33:57](#t=33:57)** Almost forgot the Robots.txt 
* **[36:17](#t=36:17)** Chron job timeout
* [Inngest](https://www.inngest.com/)
* **[40:06](#t=40:06)** TypeScript errors don’t need to be zero to launch
* **[42:25](#t=42:25)** GitHub Actions pipeline bug
* **[43:23](#t=43:23)** Basic testing will do
* [Playwright](https://playwright.dev/)
* **[44:56](#t=44:56)** Have a designer to work with
* [Airbase](https://www.airbase.com/)
* **[52:07](#t=52:07)** Sick Picks

### Sick Picks

- Scott: [Dog Poop Bags With Dispenser](https://amzn.to/3SbPS9e)
- Wes: Resistance band

### Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Courses](https://wesbos.com/courses)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",2460afece846faed8e1dd663ee13294c504651ef94720651a215e5be6b8ae128,lessons-learned-and-bugs-fixed-from-launching-syntax-fm,/shows/693 - tasty.md,2023-11-06 21:00:35.257,2023-11-06 21:00:35.257,TASTY
syntax_podcast_show_00694,694,"What's Up With Angular with Mark Techson",2023-11-17 12:00:00.247,https://traffic.libsyn.com/syntax/Syntax_-_694.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Mark Techson about the recent Angular announcements and updates. How did Angular implement signals? What's new in Angular 17? How does Angular handle CSS or UI component libraries? 

### Show Notes

* **[00:30](#t=00:30)** Welcome
* **[01:11](#t=01:11)** Syntax Brought to you by Sentry
* **[01:39](#t=01:39)** What's changing with Angular?
* [Special Angular Event](https://www.youtube.com/watch?v=Wq6GpTZ7AX0)
* [Angular](https://angular.dev/)
* **[03:19](#t=03:19)** What happened to Angular.js, and what's happening now?
* [StackBlitz](https://stackblitz.com/)
* [Analog | Analog](https://analogjs.org/)
* [Supper Club × Self Hosted Backend-as-a-service with Brandon Roberts](https://syntax.fm/*how/502/supper-club-self-hosted-backend-as-a-service-with-brandon-roberts)
* **[08:19](#t=08:19)** What makes Angular special?
* **[13:21](#t=13:21)** How did Angular implement signals?
* **[17:17](#t=17:17)** What is a computed value?
* **[18:54](#t=18:54)** What's new in Angular 17?
* **[25:10](#t=25:10)** What's the meta framework story with Angular?
* [Angular Material UI component library](https://material.angular.io/)
* [CDK | Angular Material](https://material.angular.io/cdk/categories)
* [Angular - Angular elements overview](https://angular.io/guide/elements)
* **[27:40](#t=27:40)** Adding close to the metal if statements
* **[31:03](#t=31:03)** View transitions
* **[32:34](#t=32:34)** How does Angular handle CSS?
* **[39:31](#t=39:31)** How does Angular integrate with UI component libraries?
* **[41:07](#t=41:07)** What are headless components?
* **[41:45](#t=41:45)** Does Angular work well with web components?
* **[42:43](#t=42:43)** Supper Club Questions
* [Accessibility in Visual Studio Code](https://code.visualstudio.com/docs/editor/*ccessibility#:~:text=level%20by%2020%25.-,High%20Contrast%20theme,*elect%20the%20High%20Contrast%20theme.)
* [Technology Radar Thoughtworks](https://www.thoughtworks.com/en-ca/radar)
* [RedMonk – The developer-focused analyst firm](https://redmonk.com/)
* [Mermaid | Diagramming and charting tool](https://mermaid.js.org/)
* **[49:38](#t=49:38)** Sick Picks

### Sick Picks

* [Godot Engine - Free and open source 2D and 3D game engine](https://godotengine.org/)

### Shameless Plugs

* [#goodmorningwithmark on Twitter](https://twitter.com/search?q=%23goodmorningwithmark&src=typed_query)
* [#goodmorningwithmark on YouTube](https://www.youtube.com/results?search_query=%23goodmorningwithmark)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",03dbc186dc51fb41974c624d68a8a47066dfc15af3c39982702a1c0636a39cee,what-s-up-with-angular-with-mark-techson,/shows/694 - supper.md,2023-11-10 18:00:13.233,2023-11-10 18:00:13.233,SUPPER
syntax_podcast_show_00695,695,5 New CSS Features You Should Know,2023-11-20 12:00:00.149,https://traffic.libsyn.com/syntax/Syntax_-_695.mp3,"
In this episode of Syntax, Wes and Scott talk about 5 new CSS features :nth-child(4 of .neat), CSS Motion Path, Scroll Snap, Scroll Driven Animations, and Margin Trim.

### Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:10](#t=01:10)** :nth-child(4 of .neat)
* [selector list argument of :nth-child and :nth-last-child CSS pseudo-classes | Can I use](https://caniuse.com/css-nth-child-of)
* **[06:43](#t=06:43)** CSS Motion Path
* **[10:38](#t=10:38)** Scroll Snap
* [Practical CSS Scroll Snapping](https://css-tricks.com/practical-css-scroll-snapping/)
* **[14:36](#t=14:36)** Scroll Driven Animations
* [Scroll-driven Animations](https://scroll-driven-animations.style/)
* [Supper Club × Bramus Van Damme on CSS](https://syntax.fm/show/619/supper-club-bramus-van-damme-on-css)
* **[16:58](#t=16:58)** Margin Trim


### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",3171914555ec0e0423900ddc769fd2776906ac973bed88c0fb6058fe3a758dbc,5-new-css-features-you-should-know,/shows/695 - new CSS.md,2023-11-13 21:00:50.718,2023-11-13 21:00:50.718,HASTY
syntax_podcast_show_00696,696,How to Build a Website or App,2023-11-22 12:00:00.619,https://traffic.libsyn.com/syntax/Syntax_-_696.mp3,"
In this episode of Syntax, Wes and Scott answer a listener's question about their process for building a website in 2023. Do you start with design? With code? How do you decide on which CMS or if you need a CMS? How do you choose a backend framework? And where do you host it?

### Show Notes

* **[00:10](#t=00:10)** Welcome
* **[02:12](#t=02:12)** Syntax Brought to you by Sentry
* **[03:06](#t=03:06)** How do you build a website?
* **[04:57](#t=04:57)** Start with the design
* [Figma](https://www.figma.com/)
* [Design Systems with Brad Frost](https://syntax.fm/show/682/design-systems-with-brad-frost)
* **[11:12](#t=11:12)** Choose a Frontend / Components
* [Pug](https://pugjs.org/api/getting-started.html)
* [EJS ](https://ejs.co/)
* [React](https://react.dev/)
* [Svelte](https://svelte.dev/)
* [Remix](https://remix.run/)
* [Storybook](https://storybook.js.org/)
* **[25:16](#t=25:16)** Real data or fake data?
* [Polypane](https://polypane.app/)
* [DrizzleORM](https://orm.drizzle.team/)
* **[29:34](#t=29:34)** Do you need a CMS or not?
* [Statamic](https://statamic.com/)
* [Syntax 254: Headless CMS Break Down & Roundup](https://syntax.fm/show/254/headless-cms-break-down-and-roundup)
* [WordPress.org](https://wordpress.org/)
* [Astro](https://astro.build/)
* **[35:16](#t=35:16)** Choosing a backend language or framework
* **[39:56](#t=39:56)** Testing
* **[44:50](#t=44:50)** Where do you host your website?
* [Vercel](https://vercel.com)
* [Netlify Drop](https://app.netlify.com/drop)
* [Glitch](https://glitch.com/)
* [CodePen](https://codepen.io/)
* **[50:04](#t=50:04)** Sick Picks


### Sick Picks

- Scott: [Chip clips](https://amzn.to/3SmOAIp)
- Wes: Soft close used toilet seat [Amazon Warehouse Deals](https://www.amazon.ca/b/?ie=UTF8&node=8929975011)

### Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Courses](https://wesbos.com/courses)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",29f3118484d18dc8a28ee2f639834ebf4c031c3c8da7efc3e5266ba48b0f078e,how-to-build-a-website-or-app,/shows/696 - tasty building sites.md,2023-11-09 21:00:24.419,2023-11-09 21:00:24.419,TASTY
syntax_podcast_show_00697,697,What is DevRel with Salma Alam-Naylor,2023-11-24 12:00:00.123,https://traffic.libsyn.com/syntax/Syntax_-_697.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with Salma Alam-Naylor all about her role in DevRel, what's involved in working in DevRel, avoiding burnout, which platforms to focus on, and so much more.

### Show Notes

* **[00:31](#t=00:31)** Welcome
* **[01:07](#t=01:07)** Syntax Brought to you by Sentry
* **[01:52](#t=01:52)** New jobs and onboarding
* **[03:34](#t=03:34)** What is Devrel?
* **[11:34](#t=11:34)** How much of devrel is using your own product? Dogfooding the service?
* **[14:49](#t=14:49)** What are things devrel people do?
* **[20:32](#t=20:32)** Devrel burnout issues
* **[24:53](#t=24:53)** Once you put a number on something, you're measuring that number
* **[29:31](#t=29:31)** Is there any way to know if devrel is working?
* **[33:47](#t=33:47)** How could someone get into devrel?
* **[37:37](#t=37:37)** What platforms should you focus on?
* **[44:12](#t=44:12)** What's something devrel gets wrong?
* **[47:50](#t=47:50)** What do you think about speaking at conferences?
* **[51:58](#t=51:58)** What do you use to stay up on with tech?
* **[53:59](#t=53:59)** Sick picks

### Sick Picks

* [Wikipedia on Hell.com](https://en.wikipedia.org/wiki/Hell.com)
* [Web Archive of Hell.com](https://web.archive.org/web/20041215000000*/hell.com)
* [Fffffound](https://en.wikipedia.org/wiki/FFFFOUND)
* https://twitter.com/webdesignmuseum

### Shameless Plugs

* [Follow Salma on Twitch](https://www.twitch.tv/whitep4nth3r)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",8da293a1fe92eccf27d6f7e697138f38a8b96c4a66621c9b27a96a2bd905aff0,what-is-devrel-with-salma-alam-naylor,/shows/697 - supper Salma.md,2023-11-21 00:00:08.312,2023-11-24 18:00:54.585,SUPPER
syntax_podcast_show_00698,698,Why You Should Be Using CSS @Layers,2023-11-27 12:00:00.123,https://traffic.libsyn.com/syntax/Syntax_-_698.mp3,"
What are @Layers in CSS, when and where should you be using them, how do you write them, and who's using them already?

### Show Notes

* **[00:23](#t=00:23)** Welcome
* **[01:49](#t=01:49)** Syntax Brought to you by Sentry
* **[02:55](#t=02:55)** Where is this supported?
* **[07:21](#t=07:21)** How do we write layers?
* **[10:47](#t=10:47)** How do you write your CSS?
* **[16:20](#t=16:20)** Nesting
* **[20:35](#t=20:35)** Who else is using @Layer?
* [CSS Analytics - Project Wallace](https://www.projectwallace.com/)
* [Tailwind CSS](https://tailwindcss.com/)
* [Netlify](https://www.netlify.com/)
* [Adam Argyle](https://nerdy.dev/)
* [Una Kravets](https://una.im/)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",51bcfbda8daf77892a7348c8507b56afeeee18b5cfed5891cd2893e45467c896,why-you-should-be-using-css-layers,/shows/698 - syn hasty.md,2023-11-21 00:00:08.551,2023-11-21 00:00:08.551,HASTY
syntax_podcast_show_00699,699,"Potluck × TypeScript's Longevity × Canvas-Rendered Apps × Learning Rust × Executing Untrusted JS Code",2023-11-29 12:00:00.604,https://traffic.libsyn.com/syntax/Syntax_-_699.mp3,"
In this potluck episode of Syntax, Wes and Scott answer your questions, including: Will TypeScript ever go away? Should I write canvas-rendered web apps? How can I execute untrusted JS code in node? How can I use continuous integration with WordPress? Any advice for learning Rust?

### Show Notes

- **[00:09](#t=00:09)** Welcome
- **[01:16](#t=01:16)** How to ask questions for potluck episodes
- [Ask a question for Syntax potluck episodes](https://syntax.fm/potluck)
- **[02:19](#t=02:19)** Syntax Brought to you by Sentry
- **[04:34](#t=04:34)** Will TypeScript ever go away?
- [Migrating millions of lines of code to TypeScript](https://stripe.com/blog/migrating-to-typescript)
- **[08:12](#t=08:12)** What is your opinion on entirely canvas-rendered web apps, such as those built with Flutter?
- [Flutter on the Web](https://flutter.dev/multi-platform/web)
- [Flutter Gallery](https://gallery.flutter.dev/#/)
- [html2canvas - Screenshots with JavaScript](https://html2canvas.hertzen.com/)
- **[13:43](#t=13:43)** Tailscale VPN is cool
- [Tailscale · Best VPN Service for Secure Networks](https://tailscale.com/)
- [Tunnel | Zero Trust App Connector | Cloudflare](https://www.cloudflare.com/products/tunnel/)
- **[16:36](#t=16:36)** What is Bandcamp?
- [Bandcamp](https://bandcamp.com/)
- [Stream and listen to music online for free with SoundCloud](https://soundcloud.com/)
- **[18:56](#t=18:56)** How can I execute untrusted JS code with node?
- [WebAssembly](https://webassembly.org/)
- [Cloudflare Workers®](https://workers.cloudflare.com/)
- [Deno, The next-generation JavaScript runtime](https://deno.com/)
- [Fastly](https://www.fastly.com/)
- **[23:46](#t=23:46)** I'd love to get your thoughts on modern devops and continuous integration for building out WordPress websites.
- [Supper Club × Fabian Kägy - Modern WordPress - Blocks, Page builders, Headless, Custom Fields](https://syntax.fm/show/598/supper-club-fabian-kaegy-modern-wordpress-blocks-page-builders-headless-custom-fields)
- [Vite | Next Generation Frontend Tooling](https://vitejs.dev/)
- [Alpine.js](https://alpinejs.dev/)
- **[30:39](#t=30:39)** How do I orchestrate color adapting icons for use inline and in background images?
- [svg.wesbos.com](https://svg.wesbos.com/)
- [svg.wesbos.com/cat.svg](https://svg.wesbos.com/cat.svg)
- **[35:53](#t=35:53)** Are there any publicly available libraries for web components?
- [Shoelace: A forward-thinking library of web components.](https://shoelace.style/)
- [Open UI](https://open-ui.org/)
- **[40:20](#t=40:20)** What's a good project idea for learning Rust?
- [Tauri Apps](https://tauri.app/)
- **[45:17](#t=45:17)** Do you ever plan to do more podcasts with Scott’s wife or another psychologist / psychiatrist?
- **[47:02](#t=47:02)** Have you tried MongoDB vector search for AI embeddings?
- [Atlas Vector Search | MongoDB](https://www.mongodb.com/products/platform/atlas-vector-search?adgroup=155168612071&cq_cmp=20445624173&gad_source=1)
- [Vector Database for Vector Search | Pinecone](https://www.pinecone.io/)
- [Xata](https://xata.io/)
- **[49:44](#t=49:44)** Syntax highlighting in VS Code
- [Comment tagged templates - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=bierner.comment-tagged-templates)
- **[52:38](#t=52:38)** Sick Picks

### Sick Picks

- Scott: [The Spider-Man of Paris (2023) - IMDb](https://www.imdb.com/title/tt29274601/)
- Wes: [Amazon.ca : instant read digital thermometer](https://www.amazon.ca/s?k=instant+read+digital+thermometer&crid=T962EXWZQL5C&sprefix=instant+read+digital+,aps,125)

### Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Courses](https://wesbos.com/courses)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",a1c8905a13e66a7c13a78af3ec69364ce92ee7e6ecb13fbebc0f8539c38d2a54,potluck-typescript-s-longevity-canvas-rendered-apps-learning-rust-executing-untrusted-js-code,/shows/699 - tasty pot.md,2023-11-14 21:00:42.828,2023-11-14 21:00:42.828,TASTY
syntax_podcast_show_00700,700,"Payload is Rails for JS with TypeScript, React and Drizzle (James Mikrut)",2023-12-01 11:00:00.253,https://traffic.libsyn.com/syntax/Syntax_-_700.mp3,"
In this supper club episode of Syntax, Wes and Scott talk with James Mikrut about Payload, how Payload isn't just a CMS, where Payload fits in a tech stack, why they picked Drizzle for an ORM, what Payload Cloud is, and where's the Rails for JavaScript?

### Show Notes

* **[00:31](#t=00:31)** Welcome
* **[02:00](#t=02:00)** Who is James Mikrut and what's the idea behind Payload?
* **[05:22](#t=05:22)** Payload isn't just a CMS
* [Payload](https://payloadcms.com)
* [Payload on GitHub](https://github.com/payloadcms/payload)
* [Payload on Twitter](https://twitter.com/payloadcms)
* [Payload on YouTube](https://www.youtube.com/@payloadcms)
* **[09:08](#t=09:08)** Where does Payload fit in the tech stack?
* [KeystoneJS](https://keystonejs.com/)
* [Supabase](https://supabase.com/)
* [Retool](https://retool.com/)
* **[11:22](#t=11:22)** Is Payload using TypeScript?
* **[13:44](#t=13:44)** Why did you pick Drizzle?
* [Drizzle ORM](https://orm.drizzle.team/)
* **[18:08](#t=18:08)** Do you have to maintain MongoDB and Drizzle?
* [SvelteKit](https://kit.svelte.dev/)
* **[26:31](#t=26:31)** Does Payload have visual editing elements?
* **[30:34](#t=30:34)** Do you build a custom UI for users?
* **[35:10](#t=35:10)** What is Payload Cloud?
* **[38:12](#t=38:12)** Where is the Rails for JavaScript?
* [Next.js by Vercel](https://nextjs.org/)
* [Laravel Spark](https://spark.laravel.com/)
* [Deploy your Laravel PHP application painlessly](https://forge.laravel.com/)
* [RedwoodJS: The App Framework for Startups | RedwoodJS.com](https://redwoodjs.com/)
* **[41:39](#t=41:39)** How do you manage contributions from open source?
* **[43:46](#t=43:46)** GitHub + AI
* **[48:18](#t=48:18)** Syntax Brought to you by Sentry
* [Error Management Magic: Introducing the Sentry Plugin for Payload](https://payloadcms.com/blog/error-management-magic-introducing-the-sentry-plugin-for-payload)
* **[50:26](#t=50:26)** Supper Club questions

### Shameless Plugs

[Payload on GitHub](https://github.com/payloadcms/payload)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",67878508e9ff57ca73ff1eb36d99d9f4548d70f28155795fdb8c6df4f7ddca77,payload-is-rails-for-js-with-typescript-react-and-drizzle-james-mikrut,/shows/700 - supper payload.md,2023-11-23 00:00:47.315,2023-11-23 00:00:47.315,SUPPER
syntax_podcast_show_00701,701,A11y Treats - Labels & Roles,2023-12-04 12:00:00.946,https://traffic.libsyn.com/syntax/Syntax_-_701.mp3,"
In this episode of Syntax, Wes and Scott explain ARIA, aria-label, Roles, and the overall importance of accessibility in your web projects.

### Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:18](#t=01:18)** Syntax Brought to you by Sentry
* **[01:44](#t=01:44)** What is ARIA?
* [WAI-ARIA Roles | MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles)
* [An in-depth guide to ARIA roles - The A11Y Project](https://www.a11yproject.com/posts/an-indepth-guide-to-aria-roles/)
* **[02:48](#t=02:48)** What is aria-label?
```
// A button with an ARIA role and label
<button role=""button"" aria-label=""close"">
  <img src=""close-icon.svg"" alt="""">
</button>
```
* **[06:36](#t=06:36)** What's the difference between a title and aria-label on a button?
* **[08:34](#t=08:34)** Are you really going to get sued if your website isn't accessible?
* **[11:53](#t=11:53)** What are Roles for?
* **[16:33](#t=16:33)** 6 different types of Roles
* **[21:25](#t=21:25)** What is aria-labelledby?
```
<span
  role=""checkbox""
  aria-checked=""false""
  tabindex=""0""
  aria-labelledby=""tac""></span>
<span id=""tac"">I agree to the Terms and Conditions.</span>
```
* **[23:13](#t=23:13)** Checking your code for accessibility
* [eslint-plugin-jsx-a11y - npm](https://www.npmjs.com/package/eslint-plugin-jsx-a11y)
* [WAVE Web Accessibility Evaluation Tools](https://wave.webaim.org/)
* [Polypane](https://polypane.app/)
* **[24:31](#t=24:31)** Feedback and future show ideas

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",10cccf7fa032277abd9c5964ba968acc65288a74b3c875f62d5c79676d0e69e5,a11y-treats-labels-and-roles,/shows/701 - hasty.md,2023-11-24 21:00:50.950,2023-11-24 21:00:50.950,HASTY
syntax_podcast_show_00702,702,New + Proposed JS APIs for 2024,2023-12-06 12:00:00.821,https://traffic.libsyn.com/syntax/Syntax_-_702.mp3,"
In this episode of Syntax, Wes and Scott talk through new and proposed JavaScript APIs including ones related to regex, sourcemaps, structured clone, temporal, JSON modules, and more!

### Show Notes

* **[00:10](#t=00:10)** Welcome
* **[01:26](#t=01:26)** Syntax Brought to you by Sentry
* **[02:55](#t=02:55)** RegExp Escaping Proposal
* [tc39/proposal-regex-escaping: Proposal for investigating RegExp escaping for the ECMAScript standard](https://github.com/tc39/proposal-regex-escaping)
* **[05:25](#t=05:25)** Intl.DurationFormat
* [tc39/proposal-intl-duration-format](https://github.com/tc39/proposal-intl-duration-format)
* **[07:55](#t=07:55)** Standardized Sourcemaps
* [tc39/source-map-rfc: RFCs for the source map debug format.](https://github.com/tc39/source-map-rfc)
* **[10:43](#t=10:43)** Structured Clone
* [structuredClone() global function - Web APIs | MDN](https://developer.mozilla.org/en-US/docs/Web/API/structuredClone)
* **[12:54](#t=12:54)** Temporal
* [Hasty Treat - Temporal Date Objects in JavaScript](https://syntax.fm/show/295/hasty-treat-temporal-date-objects-in-javascript)
* [Tracking issue for syncing with IETF standardization work (req'd before implementers can ship unflagged) · Issue #1450 · tc39/proposal-temporal](https://github.com/tc39/proposal-temporal/issues/1450)
* **[20:59](#t=20:59)** FindLast and findLastIndex
* [tc39/proposal-array-find-from-last: Proposal for Array.prototype.findLast and Array.prototype.findLastIndex.](https://github.com/tc39/proposal-array-find-from-last)
* **[22:27](#t=22:27)** JSON modules
* [tc39/proposal-json-modules: Proposal to import JSON files as modules](https://github.com/tc39/proposal-json-modules)
* **[24:46](#t=24:46)** Regex Modifiers
* [RegExp Modifiers - June 2022.pptx - Microsoft PowerPoint Online](https://onedrive.live.com/view.aspx?resid=934F1675ED4C1638!294749&ithint=file,pptx&wdo=2&authkey=!AGkZ0bMbvAWOTbI)
* **[26:50](#t=26:50)** Array Grouping
* [tc39/proposal-array-grouping: A proposal to make grouping of array items easier](https://github.com/tc39/proposal-array-grouping)
* **[30:48](#t=30:48)** Array Methods
* [tc39/proposal-change-array-by-copy: Provides additional methods on Array.prototype and TypedArray.prototype to enable changes on the array by returning a new copy of it with the change.](https://github.com/tc39/proposal-change-array-by-copy)
* [6 or so New Approved and Proposed JavaScript APIs](https://syntax.fm/show/654/6-or-so-new-approved-and-proposed-javascript-apis)
* **[32:12](#t=32:12)** Promise.withResolvers
* **[35:08](#t=35:08)** Function.prototype.memo
* [tc39/proposal-function-memo: A TC39 proposal for function memoization in the JavaScript language.](https://github.com/tc39/proposal-function-memo)
* **[37:48](#t=37:48)** Node has a Proposed ESM Detection flag
* **[39:54](#t=39:54)** Node has navigator.userAgent
* **[41:29](#t=41:29)** Built in .env support
* **[42:52](#t=42:52)** Permissions model & test runner continues to be worked on
* **[44:06](#t=44:06)** HTML Web charts
* [Proposal: Web Charts · Issue #9295 · whatwg/html](https://github.com/whatwg/html/issues/9295)
* **[45:39](#t=45:39)** autopause
* [Add `autopause` attribute to media elements to allow automatic pausing of media · Issue #9793 · whatwg/html](https://github.com/whatwg/html/issues/9793)
* **[46:30](#t=46:30)** Meta Tag for AI generated content
* [Proposal: Meta Tag for AI Generated Content · Issue #9479 · whatwg/html](https://github.com/whatwg/html/issues/9479)
* [Schema.org - Schema.org](https://schema.org/)
* [Syntax × Sentry Swag Store – Syntax × Sentry Shop](https://sentry.shop/)
* [Syntax - A Tasty Treats Podcast for Web Developers.](https://syntax.fm/snackpack)
* **[50:13](#t=50:13)** Poster frame
* [HTML Video Element: Proposal for adding [srcset] + [posterset] + [sizes] on video element as well [posterset] on source elements · Issue #9812 · whatwg/html](https://github.com/whatwg/html/issues/9812)
* **[50:57](#t=50:57)** Popover invoker
* [Popover does not know what triggered it · Issue #9111 · whatwg/html](https://github.com/whatwg/html/issues/9111)
* **[51:25](#t=51:25)** Autocomplete on 'contenteditable' Elements
* [Autocomplete on 'contenteditable' Elements · Issue #9065 · whatwg/html](https://github.com/whatwg/html/issues/9065)
* **[52:17](#t=52:17)** Sick Picks

### Sick Picks

- Scott: [Escaping Twin Flames cult documentary](https://www.netflix.com/ca/title/81615919)
- Wes: Lao Gan Ma spicy Chili Oil

### Shameless Plugs

- Scott: [Sentry](https://sentry.io)
- Wes: [Wes Bos Courses](https://wesbos.com/courses)

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",80c2b562a6b8811ca04126d28e4261a72a17a353f352917fc1dce6a0419f797b,new-proposed-js-apis-for-2024,/shows/702 - tasty.md,2023-11-22 18:00:52.018,2023-11-22 18:00:52.018,TASTY
syntax_podcast_show_00703,703,The Observer Pattern,2023-12-11 12:00:00.874,https://traffic.libsyn.com/syntax/Syntax_-_703.mp3,"
In this episode of Syntax, Wes and Scott give a high level overview of the observer pattern, what is the observer, what are downsides to too many observers, and more.

### Show Notes

* **[00:25](#t=00:25)** Welcome
* **[01:42](#t=01:42)** Syntax Brought to you by Sentry
* **[02:16](#t=02:16)** High level overview
* [Syntax 694: What's Up With Angular with Mark Techson](https://syntax.fm/show/694/what-s-up-with-angular-with-mark-techson/transcript)
* [Godot Engine](https://godotengine.org/)
* **[03:36](#t=03:36)** What might you observe in game development?
* **[06:50](#t=06:50)** What is the observer?
* **[08:11](#t=08:11)** What are some downsides to too many observers?
* **[10:17](#t=10:17)** IntersectionObserver, MutationObserver, and PerformanceObserver
* **[12:25](#t=12:25)** ResizeObserver
* **[13:04](#t=13:04)** What about addEventListener?
* [@BenLesh on Callbacks being faster than observables](https://twitter.com/BenLesh/status/1498415376283148295)
* **[16:13](#t=16:13)** Signals are becoming a big thing

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",0a6f171edc816ca846528b577aa71f658b4e993c3edbccbdabfb489eca15ad1a,the-observer-pattern,/shows/703 - hasty.md,2023-11-30 00:00:07.528,2023-11-30 00:00:07.528,HASTY
syntax_podcast_show_00705,705,Is Running Random Code From npm Safe? With Feross Aboukhadijeh,2023-12-15 12:00:00.697,https://traffic.libsyn.com/syntax/Syntax_-_705.mp3,"
In this Supper Club episode of Syntax, Wes and Scott talk with Feross Aboukhadijeh about his work on Socket which helps to make sure the code you get from npm is safe and secure. They also touch on his work on Wormhole and Web Torrent.

### Show Notes

* **[00:30](#t=00:30)** Welcome
* **[00:57](#t=00:57)** Who is Feross Aboukhadijeh?
* **[01:33](#t=01:33)** What is Socket?
* [Socket.dev](https://socket.dev)
* [Dominic Tarr on GitHub](https://github.com/dominictarr)
* [pull-stream/pull-stream: minimal streams](https://github.com/pull-stream/pull-stream)
* **[03:59](#t=03:59)** Introducing AI package summaries
* [Example of the AI summaries](https://socket.dev/npm/package/lodash)
* [Introducing AI Package Summaries](https://socket.dev/blog/introducing-ai-package-summaries)
* **[07:04](#t=07:04)** Is Socket's focus on visibility of a open source project?
* **[10:01](#t=10:01)** What was the inspiration for Socket?
* [Introducing ""safe npm"", a Socket npm Wrapper - Socket](https://socket.dev/blog/introducing-safe-npm)
* **[16:22](#t=16:22)** How does Socket detect possible security issues?
* [Removed packages](https://socket.dev/npm/category/removed)
* [event-source-polyfill protestware attack](https://socket.dev/npm/package/event-source-polyfill/diff/1.0.26)
* [john wick spam attack](https://socket.dev/blog/npm-registry-spam-john-wick)
* **[18:55](#t=18:55)** How many projects are you injesting for Socket to scan?
* **[26:00](#t=26:00)** What kinds of things are people trying to inject in code?
* [CS253 Web Security](https://cs253.stanford.edu/)
* **[29:54](#t=29:54)** How do I hook Socket up to my project or GitHub?
* **[32:08](#t=32:08)** Do we still need to use shrink wrap?
* **[36:34](#t=36:34)** How did you implement the torrent spec in JavaScript for WebTorrent?
* [WebTorrent Desktop](https://webtorrent.io/desktop/)
* [WebTorrent FAQ](https://webtorrent.io/faq)
* **[43:11](#t=43:11)** Why did you build Wormhole?
* [Wormhole](https://wormhole.app/)
* **[47:33](#t=47:33)** How expensive is it to maintain Wormhole?
* [Riverside.fm - Record Podcasts And Videos From Anywhere](https://riverside.fm/)
* **[50:37](#t=50:37)** What do you think of decentralized code repos?
* [Radicle](https://radicle.xyz/)
* [Project Fugu](https://www.chromium.org/teams/web-capabilities-fugu/)
* [Fugu Tracker](https://fugu-tracker.web.app/)
* **[54:29](#t=54:29)** Understanding passkeys
* **[56:15](#t=56:15)** Supper Club questions
* [GitHub Theme - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=GitHub.github-vscode-theme)
* [Web Serial API - Web APIs | MDN](https://developer.mozilla.org/en-US/docs/Web/API/Web_Serial_API)
* **[01:03:04](#t=01:03:04)** Sick Picks

### Sick Picks

* [Harry Potter audio books](https://www.audible.com/search?searchNarrator=Jim+Dale&page=1&ref_pageloadid=Y232dKyXJGQwY3D1&ref=a_search_c4_pageBack&pf_rd_p=1d79b443-2f1d-43a3-b1dc-31a2cd242566&pf_rd_r=7R36W9E563TXEW646N1V&pageLoadId=pPGcJ2msQJM8cETD&ref_plink=not_applicable&creativeId=18cc2d83-2aa9-46ca-8a02-1d1cc7052e2a)

### Shameless Plugs

* [ChatGPT](https://chat.openai.com/auth/login) 

### Hit us up on Socials!

Syntax: [X](https://twitter.com/syntaxfm) [Instagram](https://www.instagram.com/syntax_fm/) [Tiktok](https://www.tiktok.com/@syntaxfm) [LinkedIn](https://www.linkedin.com/company/96077407/admin/feed/posts/) [Threads](https://www.threads.net/@syntax_fm)

Wes: [X](https://twitter.com/wesbos) [Instagram](https://www.instagram.com/wesbos/) [Tiktok](https://www.tiktok.com/@wesbos) [LinkedIn](https://www.linkedin.com/in/wesbos/) [Threads](https://www.threads.net/@wesbos)

Scott: [X](https://twitter.com/stolinski) [Instagram](https://www.instagram.com/stolinski/) [Tiktok](https://www.tiktok.com/@stolinski) [LinkedIn](https://www.linkedin.com/in/stolinski/) [Threads](https://www.threads.net/@stolinski)",22aebd6d2bf5391948694c2dd8a225f56e3d02bd8c0ac69b0544abf84cf6a353,is-running-random-code-from-npm-safe-with-feross-aboukhadijeh,/shows/705 - supper.md,2023-11-28 00:00:30.968,2023-11-30 00:00:07.580,SUPPER