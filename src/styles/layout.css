@layer layout {
	.layout {
		column-gap: 10px;
		display: grid;
		grid-template-columns: [start content] auto [content end];

		@media (--above_med) {
			grid-template-columns:
				[start l-margin] 10px [l-margin content main] minmax(0, 812px) [main sidebar] minmax(
					0,
					322px
				)
				[sidebar content-end r-margin] 10px [r-margin end];
		}

		@media (--above_xlarge) {
			column-gap: 48px;
			display: grid;
			grid-template-columns:
				[start l-margin] minmax(144px, auto) [l-margin content main] minmax(0, 812px) [main sidebar] minmax(
					0,
					322px
				)
				[sidebar content-end r-margin] minmax(144px, auto) [r-margin end];
		}
		/* 812 */
		/* 322 */

		> * {
			grid-column: content / content;
		}

		.full {
			width: 100%;
			grid-column: start / end;
		}

		.content {
			width: 100%;
			grid-column: content / content;
		}

		.l-margin {
			width: 100%;
			grid-column: l-margin / l-margin;
		}

		.r-margin {
			width: 100%;
			grid-column: r-margin / r-margin;
		}
		.sidebar {
			width: 100%;
			grid-column: sidebar / sidebar;
		}
		.main {
			width: 100%;
			grid-column: main / main;
		}
	}

	.grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(290px, 1fr));
		grid-gap: 20px;
	}

	.zone {
		color: var(--fg);
		background: var(--bg) var(--bgGrit);
    background-size: 250px;
		border-radius: var(--radius, 0);
	}

	.sticky {
		position: sticky;
		top: 0;
	}

	.flex {
		display: flex;
	}

	/* END @layer layout */
}

/* Debug -> Ignore */

.debug :is(.layout, .grid) {
	outline: solid 1px red;
	&:after {
		content: '';
		background: red;
		position: absolute;
		color: white;
	}
}

.debug .layout {
	&:after {
		content: '.layout';
	}
}
.debug .grid {
	&:after {
		content: '.grid';
	}
}
